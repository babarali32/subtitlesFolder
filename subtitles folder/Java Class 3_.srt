1
00:00:02,920 --> 00:00:03,840
The Guardian.

2
00:00:03,840 --> 00:00:05,400
Thank you, Simon,

3
00:00:05,800 --> 00:00:08,840
for reminding me.

4
00:00:13,240 --> 00:00:16,360
So there are no questions
regarding the contract.

5
00:00:16,640 --> 00:00:19,200
So let's revise the concert.

6
00:00:19,200 --> 00:00:23,400
Revise by submitting the homeworks
in the applet, but does not say received.

7
00:00:24,240 --> 00:00:26,480
So once you submit your homework,

8
00:00:27,360 --> 00:00:30,800
there should be a mark
that you should see with your app.

9
00:00:31,040 --> 00:00:33,600
That means you have some better apples.

10
00:00:33,600 --> 00:00:36,360
Can we please correct the homework
altogether?

11
00:00:36,440 --> 00:00:38,880
Yes, that's what I will be doing today.

12
00:00:38,880 --> 00:00:41,720
It says continue working.

13
00:00:41,720 --> 00:00:44,160
That means that you have not submitted
their tongue.

14
00:00:44,280 --> 00:00:47,880
So let's say, for example

15
00:00:48,760 --> 00:00:51,840
or not, what is your username?

16
00:00:51,840 --> 00:00:54,520
What is your email
that you used to log in to?

17
00:00:54,520 --> 00:01:19,440
And it happened.

18
00:01:19,440 --> 00:01:22,160
If I click on some regions

19
00:01:23,280 --> 00:01:26,840
and if I check.

20
00:01:32,520 --> 00:01:35,520
So you have
you have submitted the homework

21
00:01:36,920 --> 00:01:40,560
on seventh of this month at 8 p.m..

22
00:01:41,800 --> 00:01:42,040
Okay.

23
00:01:42,040 --> 00:01:44,360
I have received it and

24
00:01:45,600 --> 00:01:49,920
okay, so you just, you guys just have to
make sure that you submit your homework.

25
00:01:49,920 --> 00:01:52,680
If I check B submission

26
00:01:52,680 --> 00:01:55,840
or the second triplet.

27
00:02:00,960 --> 00:02:04,400
So you have also submitted
the second homework at age seven.

28
00:02:04,640 --> 00:02:06,360
It was just the first one.

29
00:02:06,360 --> 00:02:09,720
Now you have also submitted
the second one.

30
00:02:09,960 --> 00:02:13,040
This is what I am doing.

31
00:02:13,040 --> 00:02:15,120
And if I click on View
that both are difficult,

32
00:02:15,120 --> 00:02:17,000
but you have submitted

33
00:02:19,640 --> 00:02:22,480
so submitted on 7th of October

34
00:02:22,480 --> 00:02:25,640
and this is what you have submitted.

35
00:02:25,920 --> 00:02:28,200
Math on February 13 was confusing.

36
00:02:28,200 --> 00:02:30,320
Can you go over that one?

37
00:02:30,320 --> 00:02:32,480
About 40 rappers.

38
00:02:32,480 --> 00:02:35,720
I will go over these rappers on

39
00:02:35,800 --> 00:02:38,520
review Glass.

40
00:02:39,240 --> 00:02:42,160
Can you change the
due date for the next one?

41
00:02:43,720 --> 00:02:46,240
Alright, I will change the due dates

42
00:02:46,240 --> 00:02:50,400
for the national assignment or whatever,
but I submitted on Total.

43
00:02:50,440 --> 00:02:51,520
Yes, definitely not.

44
00:02:51,520 --> 00:02:54,680
You have received them
and they are automatically marked.

45
00:02:55,000 --> 00:02:56,320
I can't hear.

46
00:02:56,320 --> 00:02:58,520
Give me.

47
00:02:58,520 --> 00:03:01,080
Maybe because of

48
00:03:01,560 --> 00:03:03,360
the internet audio or my audio.

49
00:03:03,360 --> 00:03:04,560
Speaker on your side.

50
00:03:04,560 --> 00:03:13,320
I think everyone can hear me.

51
00:03:14,040 --> 00:03:18,160
So let's let's let's revive
the concept that we told

52
00:03:18,160 --> 00:03:26,520
you yesterday.

53
00:03:28,920 --> 00:03:31,760
So what did we cover in the last
class length?

54
00:03:31,760 --> 00:03:46,640
What do you guys remember?

55
00:03:46,920 --> 00:03:51,720
So if I ask you, what are

56
00:03:53,280 --> 00:03:56,880
the variables,

57
00:03:56,880 --> 00:04:00,160
what would be your answer?

58
00:04:00,160 --> 00:04:01,360
Grammatical operations.

59
00:04:01,360 --> 00:04:03,160
And that I

60
00:04:13,760 --> 00:04:14,520
So what?

61
00:04:14,520 --> 00:04:16,160
What are variables?

62
00:04:16,520 --> 00:04:18,800
I am doing that right now and nothing

63
00:04:18,800 --> 00:04:21,960
moderate variables are boxes
that hold values.

64
00:04:21,960 --> 00:04:22,240
Right?

65
00:04:22,240 --> 00:04:24,240
This is the simplest definition. So

66
00:04:26,480 --> 00:04:29,560
variables are boxes in the

67
00:04:32,880 --> 00:04:33,440
computer

68
00:04:33,440 --> 00:04:40,080
memory.

69
00:04:40,080 --> 00:04:42,840
The old

70
00:04:43,480 --> 00:04:52,000
values, right.

71
00:04:52,000 --> 00:04:55,840
And what about the data types?

72
00:04:57,480 --> 00:05:00,440
What are the other types?

73
00:05:00,800 --> 00:05:04,080
Variables are a place
where we can assign the value

74
00:05:04,240 --> 00:05:08,520
primitive and non primitive types.

75
00:05:11,160 --> 00:05:14,680
Yes, the other types are primitive
and non primitive.

76
00:05:14,680 --> 00:05:18,560
But by the way,
I was not able to see your note posted.

77
00:05:18,560 --> 00:05:21,280
Only the slides and the video.

78
00:05:21,280 --> 00:05:23,960
So guys, I posted b notes

79
00:05:30,400 --> 00:05:39,440
and let me show you.

80
00:05:40,240 --> 00:05:51,200
So if you guys go to batch 11,

81
00:05:51,200 --> 00:05:52,880
then Java

82
00:05:54,400 --> 00:06:02,200
and then class two.

83
00:06:02,200 --> 00:06:04,160
So here are the notes.

84
00:06:04,160 --> 00:06:07,360
Here is the code from class
and here are the slides

85
00:06:10,880 --> 00:06:11,280
below

86
00:06:13,080 --> 00:06:14,280
and you can check again

87
00:06:14,280 --> 00:06:20,080
why you were unable to get these notes.

88
00:06:24,720 --> 00:06:27,480
So data types are primitive
and non primitive.

89
00:06:27,520 --> 00:06:31,360
Yes, the dead trees are primitive
and non primitive, but what is

90
00:06:31,360 --> 00:06:32,640
the definition of that type?

91
00:06:34,200 --> 00:06:35,520
Again, we're download this slide.

92
00:06:35,520 --> 00:06:38,760
Yes, you guys can download the slides

93
00:07:01,080 --> 00:07:06,720
so I see not all of you can define your
to let me define it.

94
00:07:07,000 --> 00:07:12,600
So if you understand the definition
of anything, it becomes super easy

95
00:07:12,600 --> 00:07:16,280
to understand the related concepts
and it also becomes easier to use back.

96
00:07:16,720 --> 00:07:18,880
So the data type

97
00:07:20,160 --> 00:07:23,680
is a mechanism

98
00:07:30,240 --> 00:07:32,520
that defines

99
00:07:35,160 --> 00:07:37,800
what type

100
00:07:38,880 --> 00:07:41,840
of values

101
00:07:42,360 --> 00:07:45,920
a variable

102
00:07:47,680 --> 00:07:51,400
can store and

103
00:07:56,920 --> 00:08:02,280
what type of operations

104
00:08:03,360 --> 00:08:08,120
we can perform on that back.

105
00:08:08,240 --> 00:08:08,920
Right.

106
00:08:08,960 --> 00:08:11,920
So when we
when we use the string that are tied,

107
00:08:12,200 --> 00:08:16,480
we know that we can only store strings
in that variable, right?

108
00:08:16,960 --> 00:08:19,880
And we know that if we apply, if we use

109
00:08:19,880 --> 00:08:22,800
that plus operator,
it will do the concatenation.

110
00:08:23,160 --> 00:08:25,720
So who is defining all of this?

111
00:08:25,720 --> 00:08:27,920
It is defined by the data type.

112
00:08:27,960 --> 00:08:31,720
What kind of values you will store
in that box, in that variable,

113
00:08:32,240 --> 00:08:37,080
and when you will be doing some kind of
operation, how those operations will work.

114
00:08:37,280 --> 00:08:40,200
All of this is defined in the data type.

115
00:08:41,560 --> 00:08:45,240
So most of us are very new in decoding
some time.

116
00:08:45,280 --> 00:08:46,080
It's very hard

117
00:08:46,080 --> 00:08:50,640
to catch up with the homework needs
when you give us this kind of homework,

118
00:08:50,640 --> 00:08:54,240
give us some extra time
because always we are going back

119
00:08:54,240 --> 00:08:57,960
to the reporting the market
and follow the homework.

120
00:08:57,960 --> 00:08:59,960
Otherwise it's very hard for us.

121
00:09:00,560 --> 00:09:02,640
So basically, regarding the deadline,

122
00:09:03,840 --> 00:09:07,040
the homework that I will be giving you
during the class,

123
00:09:08,480 --> 00:09:10,880
let's say, for example, I give you a whole

124
00:09:10,960 --> 00:09:14,720
I give you some kind of homework maybe
in the yesterday's class or today's class.

125
00:09:15,480 --> 00:09:19,320
So only the homework
that are given on Saturday

126
00:09:19,880 --> 00:09:22,680
during the class are due on Sunday.

127
00:09:23,120 --> 00:09:26,640
The homework that I will be giving to
today, you guys will be having

128
00:09:26,640 --> 00:09:30,480
a complete week for the back directors
you have 14 days for.

129
00:09:30,480 --> 00:09:31,160
Do that.

130
00:09:31,160 --> 00:09:34,440
Okay, so don't rush far back
homework regarding output or something.

131
00:09:35,160 --> 00:09:38,600
Only focus on the homework
that I am giving during the class.

132
00:09:38,640 --> 00:09:39,040
Okay.

133
00:09:39,040 --> 00:09:42,360
And it's only on Saturday
that you will be having one day

134
00:09:42,480 --> 00:09:46,200
for all other type of homework
you guys will be having at least one week.

135
00:09:46,800 --> 00:09:48,280
So don't worry about that.

136
00:09:48,280 --> 00:09:52,160
And even even if you are unable
to complete those homework, it's fine

137
00:09:52,160 --> 00:09:54,400
because again, in the next class,

138
00:09:55,200 --> 00:09:57,880
each next class,
I will be showing you the solutions.

139
00:09:58,360 --> 00:10:01,000
So last year, for some reason
you could not have time on.

140
00:10:01,000 --> 00:10:03,640
Maybe you are unable to solve it,
so it's fine. Okay.

141
00:10:03,840 --> 00:10:06,120
There are no marks deduction.

142
00:10:06,120 --> 00:10:09,280
I will reduce the marks on quizzes,
not on the homeworks.

143
00:10:09,280 --> 00:10:10,920
Okay, it's fine.

144
00:10:10,920 --> 00:10:13,360
Even if you submit them late.

145
00:10:18,360 --> 00:10:19,560
Yes. And

146
00:10:19,560 --> 00:10:23,520
remember, guys, this is a boot camp,
right? So.

147
00:10:23,520 --> 00:10:27,760
And you guys have agreed to spend
at least 10 to 15 hours a week.

148
00:10:27,760 --> 00:10:28,440
Right.

149
00:10:29,720 --> 00:10:33,160
But still, I will not be deducting
any marks just by your best.

150
00:10:33,160 --> 00:10:35,040
Just try your best

151
00:10:36,920 --> 00:10:37,920
for the first two weeks.

152
00:10:37,920 --> 00:10:40,920
I will not put it up
being any marks from homework or

153
00:10:40,920 --> 00:10:46,880
anything.

154
00:10:46,880 --> 00:10:48,760
And those homework that I give.

155
00:10:48,760 --> 00:10:50,800
Yes. No grades here.

156
00:10:50,800 --> 00:10:54,560
It totally depends on how much you learn
from those homeworks.

157
00:10:54,560 --> 00:11:01,080
Okay.

158
00:11:01,080 --> 00:11:01,640
All right.

159
00:11:01,640 --> 00:11:05,560
So the data types are those things
we can define

160
00:11:06,000 --> 00:11:08,520
what kind of data we can put in a variable

161
00:11:09,120 --> 00:11:12,600
and what kind of operations
are allowed on that data.

162
00:11:12,640 --> 00:11:12,960
Right.

163
00:11:12,960 --> 00:11:15,000
So, for example, if I

164
00:11:17,080 --> 00:11:20,400
if I try to multiply those things,

165
00:11:20,400 --> 00:11:27,520
can I multiply to string variables days?

166
00:11:27,520 --> 00:11:28,720
No. Right.

167
00:11:28,720 --> 00:11:30,600
So who who is defining this?

168
00:11:30,600 --> 00:11:31,920
Who is defining this?

169
00:11:31,920 --> 00:11:36,080
Not I cannot multiply
this thing that our type is defining it.

170
00:11:36,120 --> 00:11:36,840
Okay.

171
00:11:36,840 --> 00:11:42,240
It is defined entire back and that I can
I store numbers entire thing?

172
00:11:42,480 --> 00:11:45,360
No, I cannot store who is defining
the data

173
00:11:45,360 --> 00:11:55,040
type is defining this mechanism.

174
00:11:55,040 --> 00:12:00,400
Or so then we discussed of
our the string concatenation

175
00:12:01,680 --> 00:12:02,000
string

176
00:12:02,000 --> 00:12:05,840
can all do calculations
to see of them as characters.

177
00:12:05,960 --> 00:12:07,320
Yes, I'm with you.

178
00:12:07,320 --> 00:12:19,400
All right. So.

179
00:12:19,400 --> 00:12:22,520
So, so.

180
00:12:23,000 --> 00:12:26,040
And then we discuss
about the string concatenation.

181
00:12:26,200 --> 00:12:27,360
So what is shrinking?

182
00:12:27,360 --> 00:12:28,960
Calculation goes

183
00:12:39,520 --> 00:12:42,480
is kind of combining two things, right?

184
00:12:43,200 --> 00:12:47,880
So is it necessity
that if I want to calculate that

185
00:12:48,520 --> 00:12:51,840
both of the variables
that should be of types thing

186
00:12:52,440 --> 00:12:56,080
or if just enough
if I have only one data type,

187
00:12:56,080 --> 00:13:10,000
I have only one variable as distinct.

188
00:13:10,000 --> 00:13:12,200
So using

189
00:13:13,880 --> 00:13:18,080
it having string and generation

190
00:13:22,920 --> 00:13:25,480
or you can from line

191
00:13:28,320 --> 00:13:31,880
or or attach

192
00:13:33,360 --> 00:13:38,080
a value with Spain

193
00:13:39,320 --> 00:13:41,280
or so let's say

194
00:13:41,280 --> 00:13:44,640
if I have a string variable variable one,

195
00:13:44,640 --> 00:13:53,200
I have something in here.

196
00:13:53,200 --> 00:13:55,560
Then if I have an interior,

197
00:13:55,560 --> 00:13:58,960
we cannot compare compared
with other data types as well.

198
00:14:00,000 --> 00:14:00,480
All right.

199
00:14:00,480 --> 00:14:00,760
Yeah.

200
00:14:00,760 --> 00:14:03,040
So concatenation
only happens with the strings.

201
00:14:03,760 --> 00:14:06,240
And so if I have integer

202
00:14:09,760 --> 00:14:11,440
number one

203
00:14:13,200 --> 00:14:17,920
with ten and if I say string

204
00:14:19,120 --> 00:14:20,920
Rizzo

205
00:14:21,600 --> 00:14:24,280
is equal to

206
00:14:24,360 --> 00:14:28,200
or one plus

207
00:14:31,120 --> 00:14:32,760
number one,

208
00:14:33,800 --> 00:14:35,720
then what will be the result
of this operation?

209
00:14:35,720 --> 00:14:46,560
Great.

210
00:14:46,560 --> 00:14:48,760
And and

211
00:14:52,360 --> 00:14:54,360
and open result ten

212
00:15:01,120 --> 00:15:02,800
and or ten

213
00:15:05,160 --> 00:15:07,120
and then ten.

214
00:15:07,120 --> 00:15:09,000
So those who are saying error.

215
00:15:09,000 --> 00:15:09,400
Nice.

216
00:15:09,400 --> 00:15:12,840
Why I will get better.

217
00:15:12,840 --> 00:15:15,360
Why will I get an error

218
00:15:20,960 --> 00:15:23,000
or one number one.

219
00:15:23,000 --> 00:15:26,400
So I like to think
I will be getting larger one number one

220
00:15:26,400 --> 00:15:32,080
as the result.

221
00:15:32,080 --> 00:15:36,120
So those who are saying ETA it,
can you guys tell me why you think

222
00:15:36,720 --> 00:15:49,360
I will be getting an added.

223
00:15:49,360 --> 00:15:52,120
So let me take this call

224
00:15:53,200 --> 00:15:57,360
go to Eclipse.

225
00:15:57,360 --> 00:16:00,040
So let's create a new package
for today's class.

226
00:16:00,040 --> 00:16:00,960
So new

227
00:16:04,000 --> 00:16:05,520
package

228
00:16:05,800 --> 00:16:10,200
and then gone out and

229
00:16:24,880 --> 00:16:27,040
through your main method in here

230
00:16:47,880 --> 00:16:50,560
because you didn't use the system,

231
00:16:50,560 --> 00:16:53,040
not out, not put in

232
00:16:54,480 --> 00:16:56,800
even if I don't use the system not out.

233
00:16:56,800 --> 00:16:59,880
Still I will not be getting errors.

234
00:16:59,880 --> 00:17:02,400
You are not allowed to add
those data type.

235
00:17:02,640 --> 00:17:05,480
So Roman did it.

236
00:17:05,480 --> 00:17:08,480
This is where you need to correct your
your concept.

237
00:17:08,480 --> 00:17:09,240
Okay.

238
00:17:09,640 --> 00:17:13,680
The strength and activation
we can do the concatenation.

239
00:17:13,680 --> 00:17:17,160
We had an integer and double it.

240
00:17:17,240 --> 00:17:18,040
Correct.

241
00:17:18,040 --> 00:17:24,640
A boolean only one that type
only one variable should be off

242
00:17:24,720 --> 00:17:28,920
string that type
the other variable it can be of any type.

243
00:17:28,920 --> 00:17:29,240
Okay.

244
00:17:29,240 --> 00:17:31,600
It can be a string integer
or any other thing.

245
00:17:32,400 --> 00:17:34,520
So it will still work.

246
00:17:34,520 --> 00:17:35,880
No, it's not an error.

247
00:17:35,880 --> 00:17:40,120
If it's like water one number one,
then it will be added. Yes.

248
00:17:40,120 --> 00:17:45,080
So not nice saying that
if we try to do minus

249
00:17:45,280 --> 00:17:48,520
instead of plus,
then we will be getting an added.

250
00:17:48,720 --> 00:17:49,400
Okay.

251
00:17:49,680 --> 00:17:55,000
Then we will we get the name.

252
00:17:55,000 --> 00:17:55,760
All right.

253
00:17:55,760 --> 00:17:56,800
So not now.

254
00:17:56,800 --> 00:18:01,040
I have written a complete
kind of piece of code, so can you guys now

255
00:18:01,040 --> 00:18:05,480
tell me the output,

256
00:18:05,480 --> 00:18:09,000
the line
that I will see on my console And here

257
00:18:10,640 --> 00:18:13,040
some of you are
saying that I will be getting lot of one.

258
00:18:13,040 --> 00:18:23,520
Number one as the output.

259
00:18:23,520 --> 00:18:28,480
So let me execute.

260
00:18:28,480 --> 00:18:31,120
So I see. Hello ten.

261
00:18:31,440 --> 00:18:33,160
Why I am getting this output

262
00:18:33,160 --> 00:18:37,120
because it is happening
because of string concatenation.

263
00:18:37,120 --> 00:18:39,160
String concatenation.

264
00:18:39,160 --> 00:18:43,440
And what I can do, let's say for example,

265
00:18:44,160 --> 00:18:47,160
if I have a

266
00:18:47,160 --> 00:18:49,400
boolean, right, if I have a boolean

267
00:18:51,720 --> 00:18:54,280
is true, is equal to

268
00:18:55,440 --> 00:18:59,280
true, can I also concatenate this is true

269
00:19:00,000 --> 00:19:02,520
with this result variable.

270
00:19:02,560 --> 00:19:05,720
This result variable. And I do that.

271
00:19:05,720 --> 00:19:08,800
So if I say a so

272
00:19:10,160 --> 00:19:13,840
Alex is saying no, Roman is saying no,

273
00:19:14,680 --> 00:19:17,320
no, I saying yes

274
00:19:22,920 --> 00:19:24,120
and you're saying

275
00:19:24,120 --> 00:19:28,560
yes, yes, yes.

276
00:19:29,000 --> 00:19:32,480
So those who are saying, you know guys
why are you think that

277
00:19:32,480 --> 00:19:37,000
I can not concatenate a boolean value
with a B with a string,

278
00:19:37,720 --> 00:19:41,520
while I cannot do that,

279
00:19:41,520 --> 00:19:52,200
you guys mean that
I will be getting some kind of error.

280
00:19:52,200 --> 00:19:55,560
We can write only one that I type

281
00:19:57,120 --> 00:19:58,160
needs.

282
00:19:58,160 --> 00:19:59,680
It will be a string.

283
00:19:59,680 --> 00:20:01,960
The other data type.

284
00:20:02,120 --> 00:20:04,240
It can be anything, right?

285
00:20:04,240 --> 00:20:05,000
It can be anything.

286
00:20:05,000 --> 00:20:08,040
I can combine, I can I can concatenate,

287
00:20:08,040 --> 00:20:11,760
I can attach a boolean
with a string as that.

288
00:20:12,160 --> 00:20:12,640
Okay.

289
00:20:12,640 --> 00:20:14,280
So I can also do this.

290
00:20:14,280 --> 00:20:16,920
I can also put output.

291
00:20:16,920 --> 00:20:18,400
I will always

292
00:20:38,880 --> 00:20:43,920
be getting the first and then hello.

293
00:20:43,920 --> 00:20:45,840
Word back. Okay.

294
00:20:45,840 --> 00:20:51,120
I can do that.

295
00:20:51,120 --> 00:20:53,480
So now let me let me rewrite it.

296
00:20:53,520 --> 00:20:56,760
And you know,
because a lot of you are confusing

297
00:20:56,760 --> 00:21:12,440
with who

298
00:21:14,040 --> 00:21:15,920
or phone

299
00:21:19,680 --> 00:21:25,400
technician, only one

300
00:21:27,640 --> 00:21:30,640
variable needs to be a

301
00:21:32,120 --> 00:21:34,440
thing.

302
00:21:34,440 --> 00:21:40,800
The other variable

303
00:21:42,000 --> 00:21:45,920
can be of any and

304
00:21:47,880 --> 00:21:51,000
size like

305
00:21:51,000 --> 00:21:51,960
Boolean.

306
00:21:51,960 --> 00:21:54,280
And these are

307
00:21:57,120 --> 00:22:00,480
strings.

308
00:22:00,480 --> 00:22:17,480
It can be a finite type.

309
00:22:17,480 --> 00:22:18,000
All right.

310
00:22:18,000 --> 00:22:22,280
So after concatenation,
we discussed about the

311
00:22:23,200 --> 00:22:26,560
what it would discuss about after this
something congratulation guys.

312
00:22:28,080 --> 00:22:30,840
We discussed about some kind of operators.

313
00:22:31,560 --> 00:22:35,480
What kind of operators we discussed

314
00:22:36,680 --> 00:22:38,280
and automatic operators

315
00:22:38,280 --> 00:22:53,280
right.

316
00:22:53,280 --> 00:22:56,920
And in from those other
automatic operators that we discussed

317
00:22:57,200 --> 00:22:59,440
about the plus sign

318
00:23:01,440 --> 00:23:03,960
minus sign multiplication

319
00:23:03,960 --> 00:23:07,240
sign, the dividend sign and more best sign

320
00:23:07,320 --> 00:23:13,200
right.

321
00:23:13,200 --> 00:23:16,320
We use plus

322
00:23:16,320 --> 00:23:19,200
to perform

323
00:23:22,800 --> 00:23:25,480
our nation, our

324
00:23:27,720 --> 00:23:30,600
in continuation, right?

325
00:23:30,600 --> 00:23:35,040
We use minus bool or fault.

326
00:23:36,600 --> 00:23:43,320
So action.

327
00:23:43,320 --> 00:23:46,560
We use this sign for

328
00:23:48,200 --> 00:23:50,600
our multiplication

329
00:23:56,280 --> 00:24:00,320
and we use this forward slash

330
00:24:02,800 --> 00:24:11,600
for division.

331
00:24:11,600 --> 00:24:14,400
And lastly, we discuss about the

332
00:24:15,560 --> 00:24:18,760
modulus operator tool

333
00:24:18,760 --> 00:24:21,960
there to be.

334
00:24:21,960 --> 00:24:35,440
We mean that right?

335
00:24:35,440 --> 00:24:35,800
Okay.

336
00:24:35,800 --> 00:24:36,720
So let's

337
00:24:36,720 --> 00:24:41,640
I saw some of you are confused about
the division and the modulus operator.

338
00:24:41,680 --> 00:24:56,440
So let me go through those again.

339
00:24:56,440 --> 00:25:01,760
So let's say
I have in number number one is equal to

340
00:25:03,480 --> 00:25:08,080
and I have okay, I have to find one

341
00:25:08,760 --> 00:25:11,520
why I am getting an error based on this

342
00:25:11,520 --> 00:25:12,480
number one

343
00:25:21,240 --> 00:25:23,600
already defined, right?

344
00:25:23,600 --> 00:25:27,120
So I have defined this number one in here
already.

345
00:25:27,200 --> 00:25:27,880
Okay.

346
00:25:28,320 --> 00:25:31,440
So I need to change it in here.

347
00:25:32,000 --> 00:25:36,160
So number two, and then I have

348
00:25:36,680 --> 00:25:41,160
three is for three.

349
00:25:41,160 --> 00:25:44,520
If I do

350
00:25:46,760 --> 00:25:49,200
number two by

351
00:25:51,400 --> 00:25:54,320
number three, what answer I advise,

352
00:25:55,800 --> 00:25:58,880
I am dividing number two with number three

353
00:26:12,400 --> 00:26:14,320
one, three,

354
00:26:14,320 --> 00:26:19,520
two, one,

355
00:26:19,520 --> 00:26:21,600
one three and

356
00:26:24,280 --> 00:26:28,360
since it's integer we get three. So

357
00:26:30,280 --> 00:26:34,800
and then we have the target three as well.

358
00:26:34,800 --> 00:26:37,160
So let's try to solve this.

359
00:26:37,480 --> 00:26:41,240
So I am trying to divide ten by three.

360
00:26:41,880 --> 00:26:42,560
Right?

361
00:26:42,960 --> 00:26:45,840
So three threes are nine,

362
00:26:47,240 --> 00:26:49,520
one is the remainder.

363
00:26:49,520 --> 00:26:50,080
Right.

364
00:26:50,080 --> 00:26:53,040
I put a zero in here. It

365
00:26:54,320 --> 00:26:55,520
put a

366
00:26:55,920 --> 00:26:58,880
decimal in here, I put a zero in here,

367
00:26:59,480 --> 00:27:03,840
I said three, these are nine.

368
00:27:03,840 --> 00:27:07,440
Then again is determined
and I keep on doing so.

369
00:27:07,440 --> 00:27:09,120
I will be getting this as the answer.

370
00:27:09,120 --> 00:27:12,120
Three Part three

371
00:27:12,280 --> 00:27:16,240
What is the type of the number of days

372
00:27:17,960 --> 00:27:20,760
integer again Integer.

373
00:27:20,760 --> 00:27:25,440
Hold 31333.

374
00:27:25,440 --> 00:27:29,520
So if I try to store 3.33
inside of the integer,

375
00:27:30,320 --> 00:27:32,920
what what
value will be stored in the integer?

376
00:27:32,920 --> 00:27:39,560
Or I will be getting an error.

377
00:27:39,560 --> 00:27:44,000
So I will only be getting this three
as the answer.

378
00:27:44,840 --> 00:27:47,160
And this part it will be.

379
00:27:47,400 --> 00:27:51,040
You can know why Because my dad types,

380
00:27:52,000 --> 00:27:54,120
they are integers and they are

381
00:27:54,120 --> 00:28:01,360
indeed. Yes.

382
00:28:01,360 --> 00:28:03,880
So I get three as the answer.

383
00:28:04,320 --> 00:28:05,760
Yeah.

384
00:28:05,760 --> 00:28:08,760
So those who are saying

385
00:28:09,200 --> 00:28:10,880
one as the answer, I guess.

386
00:28:10,880 --> 00:28:13,680
I think you guys were confused
about the modulus.

387
00:28:13,680 --> 00:28:17,320
I'll put it up in here.

388
00:28:17,320 --> 00:28:19,400
Well what will be the answer
of this module?

389
00:28:19,440 --> 00:28:26,400
Modulus operation guys.

390
00:28:26,400 --> 00:28:30,280
So here I will be getting one right,
because one is the remainder.

391
00:28:30,320 --> 00:28:32,520
All right, We have two as well.

392
00:28:32,520 --> 00:28:39,640
And delete
those saying two, remainder one.

393
00:28:39,960 --> 00:28:43,160
So Angela and Anita,
we will not be getting two as the answer.

394
00:28:43,160 --> 00:28:45,920
We will be getting one as the answer.

395
00:28:45,920 --> 00:28:49,640
Why one as the answer?

396
00:28:49,640 --> 00:28:59,640
Because in here.

397
00:28:59,640 --> 00:29:02,960
So when we do the mathematical division

398
00:29:03,600 --> 00:29:06,880
or the remainder with integer variables,

399
00:29:07,880 --> 00:29:10,480
this part is

400
00:29:12,040 --> 00:29:14,840
is the result of this operation.

401
00:29:15,640 --> 00:29:16,840
Okay.

402
00:29:16,840 --> 00:29:19,320
And this, this thing in here

403
00:29:20,200 --> 00:29:23,640
is the result of this modulus.

404
00:29:23,640 --> 00:29:24,280
Operator.

405
00:29:24,280 --> 00:29:28,160
Okay, so

406
00:29:28,200 --> 00:29:31,920
let me let me change it to 14.

407
00:29:32,520 --> 00:29:35,880
So guys, tell me what answer
I'm going to get for Division,

408
00:29:35,880 --> 00:29:37,880
what answer I will get for Modulus

409
00:29:52,200 --> 00:29:54,960
or and two.

410
00:29:54,960 --> 00:29:55,560
Right?

411
00:29:55,560 --> 00:29:59,400
So now I have this, I have 14.

412
00:29:59,400 --> 00:30:01,920
I said three, four.

413
00:30:01,920 --> 00:30:03,040
Well,

414
00:30:04,280 --> 00:30:05,800
all is determined.

415
00:30:05,800 --> 00:30:10,920
Remember, we go in here
and the answer will go in here.

416
00:30:10,920 --> 00:30:17,320
Here.

417
00:30:17,320 --> 00:30:18,600
So I get four.

418
00:30:18,600 --> 00:30:21,240
And what if, guys,

419
00:30:21,880 --> 00:30:29,400
what if I change?

420
00:30:29,400 --> 00:30:41,880
What if change it to four

421
00:30:42,280 --> 00:30:45,720
and this one to find out

422
00:30:45,720 --> 00:30:57,600
if I changed it to a double?

423
00:30:57,600 --> 00:31:14,960
What you get now for these two statements?

424
00:31:14,960 --> 00:31:15,840
Are you guys sure

425
00:31:20,880 --> 00:31:24,080
they will still get the same answer?

426
00:31:24,080 --> 00:31:26,160
Because I didn't
change the variables, right?

427
00:31:27,040 --> 00:31:29,320
I didn't change the variable.

428
00:31:29,320 --> 00:31:33,960
So let me first
I need to change the variables

429
00:31:34,640 --> 00:31:35,600
right

430
00:31:38,760 --> 00:31:39,120
either.

431
00:31:39,120 --> 00:31:39,560
Right.

432
00:31:39,560 --> 00:31:42,240
Same answer.

433
00:31:42,240 --> 00:31:45,280
Same answer.

434
00:31:45,280 --> 00:31:48,360
So now, now tell me the answer

435
00:31:53,880 --> 00:31:55,040
so fast.

436
00:31:55,040 --> 00:31:56,520
Answer 4.66.

437
00:31:56,520 --> 00:31:58,560
What about the second one
part of this line

438
00:32:07,160 --> 00:32:14,640
or 2.6 and 2.0?

439
00:32:14,640 --> 00:32:18,600
So I see 4.6 and 2.0.

440
00:32:18,880 --> 00:32:21,600
Okay.

441
00:32:21,600 --> 00:32:22,480
All right.

442
00:32:22,480 --> 00:32:27,040
Because double values,
they can hold the decimal numbers.

443
00:32:27,400 --> 00:32:28,200
Okay.

444
00:32:28,320 --> 00:32:33,680
But this this modulus operation,
it has nothing to do with the data type.

445
00:32:33,720 --> 00:32:37,080
It's it will give
you almost the same reasons

446
00:32:37,520 --> 00:32:40,520
why I am saying almost same
because in here you are getting two.

447
00:32:40,520 --> 00:32:42,280
In here you are getting 2.0.

448
00:32:42,280 --> 00:32:44,680
Okay,
so the only difference is off the decimal.

449
00:32:45,600 --> 00:32:46,560
And then this table

450
00:32:54,000 --> 00:32:59,880
all. So then

451
00:33:00,920 --> 00:33:03,080
we discussed about the

452
00:33:05,280 --> 00:33:10,200
and operate this operation.

453
00:33:10,200 --> 00:33:12,440
What, what kind of shorthand operators

454
00:33:12,440 --> 00:33:19,560
we learned guys,
can we explain the last one, please.

455
00:33:19,560 --> 00:33:21,360
Yes, sure. Question

456
00:33:22,880 --> 00:33:24,480
You mean this one,

457
00:33:24,480 --> 00:33:32,960
the output of this line, I think you mean.

458
00:33:33,160 --> 00:33:34,400
Yes, this line.

459
00:33:34,400 --> 00:33:46,600
So in here.

460
00:33:46,600 --> 00:33:50,040
So number four contains 14,

461
00:33:50,880 --> 00:33:53,280
Number five contains three.

462
00:33:53,280 --> 00:33:55,800
So three, four are well

463
00:33:57,800 --> 00:33:59,960
and two is the remainder.

464
00:34:00,360 --> 00:34:01,080
Okay.

465
00:34:01,280 --> 00:34:06,480
But in here, because we are using double
values, this tool is actually kind

466
00:34:06,480 --> 00:34:11,400
of converted to 2.0 automatically.

467
00:34:11,400 --> 00:34:16,560
That's why we do this on set in here.

468
00:34:16,560 --> 00:34:21,680
But this part
God does not consider this remainder.

469
00:34:21,680 --> 00:34:24,040
Okay, So I will do for this part.

470
00:34:24,200 --> 00:34:27,200
This is what the Java will say.

471
00:34:27,200 --> 00:34:30,840
14 three So three fours are

472
00:34:32,240 --> 00:34:32,560
right

473
00:34:33,760 --> 00:34:35,640
with the remainder

474
00:34:35,640 --> 00:34:38,000
decimal place zero in here.

475
00:34:38,920 --> 00:34:41,040
These things are being

476
00:34:42,840 --> 00:34:43,400
done at the end.

477
00:34:43,400 --> 00:34:45,640
To the end of the end,
it will keep on going.

478
00:34:45,960 --> 00:34:50,280
So you guys know about the unending
sequences in math.

479
00:34:50,880 --> 00:34:53,760
So some operations,
some division operations,

480
00:34:54,240 --> 00:34:57,960
they they have the never ending
decimal place part, right?

481
00:34:58,000 --> 00:35:02,760
They just keep on going so much because
computers, they are limited in memory.

482
00:35:03,080 --> 00:35:07,920
So computers will try and be the best
to support the results.

483
00:35:08,160 --> 00:35:13,080
But once they see that they cannot fit
the mold decimal numbers in their memory,

484
00:35:13,560 --> 00:35:18,000
they will just terminated
and they will just round off it.

485
00:35:18,240 --> 00:35:18,960
Okay.

486
00:35:18,960 --> 00:35:24,000
After a certain number of decimal places.

487
00:35:24,000 --> 00:35:28,200
So that's why we are seeing this six,
seven, etc.

488
00:35:28,200 --> 00:35:30,960
we will learn about this decimal places
and all of this stuff

489
00:35:31,680 --> 00:35:34,920
as well.

490
00:35:34,920 --> 00:35:51,800
Is it clear now?

491
00:35:51,800 --> 00:35:52,160
All right.

492
00:35:52,160 --> 00:35:56,120
So we learned about many different
shorthand operators.

493
00:35:56,160 --> 00:36:02,280
We started with plus plus,
then minus minus

494
00:36:02,720 --> 00:36:05,040
than plus equal to

495
00:36:05,400 --> 00:36:09,360
minus equal to multiply two

496
00:36:12,920 --> 00:36:15,960
you already thought and modulus.

497
00:36:16,600 --> 00:36:18,880
Yeah.

498
00:36:18,880 --> 00:36:23,360
I love this math class.

499
00:36:23,360 --> 00:36:26,040
Math is very closely
related to programing.

500
00:36:26,040 --> 00:36:28,880
By the way.

501
00:36:28,880 --> 00:36:32,800
All right, so what does this
plus plus operator do if I have,

502
00:36:32,800 --> 00:36:35,320
let's say, a variable

503
00:36:35,520 --> 00:36:38,600
in the var line

504
00:36:38,680 --> 00:36:44,440
and if I have the handwriting error,

505
00:36:44,440 --> 00:36:47,440
if I say law one plus plus,

506
00:36:48,920 --> 00:36:51,000
what will be the result
of this calculation?

507
00:36:52,560 --> 00:36:56,560
So it will increment the value by one.

508
00:36:56,560 --> 00:36:59,440
So whatever
we are supporting in that variable,

509
00:36:59,440 --> 00:37:15,520
that value will be implemented by one.

510
00:37:15,520 --> 00:37:18,640
Say if I have indeed

511
00:37:21,360 --> 00:37:24,240
var one is equal to hundreds

512
00:37:25,120 --> 00:37:27,560
and if I say right, one

513
00:37:28,480 --> 00:37:29,800
plus plus

514
00:37:31,520 --> 00:37:34,760
and so I have to do r one already.

515
00:37:34,760 --> 00:37:37,640
So let's say

516
00:37:37,640 --> 00:37:45,520
number six. So

517
00:37:47,160 --> 00:37:49,400
and then if I try to print out

518
00:37:51,480 --> 00:37:53,240
this number six,

519
00:37:53,240 --> 00:37:57,960
so I am using
plus plus shorthand operator in here.

520
00:37:58,280 --> 00:38:01,920
So this value, whatever value
I am storing in this number,

521
00:38:01,920 --> 00:38:05,160
since it will be incremented by one.

522
00:38:05,920 --> 00:38:09,160
So the answer will be

523
00:38:09,360 --> 00:38:11,520
101. What?

524
00:38:11,640 --> 00:38:13,400
What if I put negative number two guys?

525
00:38:13,400 --> 00:38:16,800
Will I get two negative
one zero one or positive

526
00:38:16,800 --> 00:38:20,040
101 or 99 or

527
00:38:21,280 --> 00:38:30,720
or -99.

528
00:38:30,720 --> 00:38:31,240
Okay.

529
00:38:32,240 --> 00:38:34,360
A lot of you add this nice.

530
00:38:34,360 --> 00:38:36,360
If I add one,

531
00:38:37,120 --> 00:38:40,080
if I add one two minus heading back,

532
00:38:40,080 --> 00:38:44,640
what will be the answer?

533
00:38:44,640 --> 00:38:45,920
An integer be negative.

534
00:38:45,920 --> 00:38:51,680
Yes, I'm on integers going to be negative.

535
00:38:51,680 --> 00:38:54,360
So now I see some

536
00:38:54,360 --> 00:38:56,760
correct answers looking

537
00:38:56,880 --> 00:39:01,720
so negative
if I add one, two -100 will be -99.

538
00:39:01,760 --> 00:39:04,880
Not positive, 99 or not

539
00:39:04,960 --> 00:39:09,080
101, but not convert out like that.

540
00:39:09,080 --> 00:39:11,160
Yes. It's just simple math.

541
00:39:13,080 --> 00:39:14,960
Yeah.

542
00:39:14,960 --> 00:39:18,240
All right. So

543
00:39:19,840 --> 00:39:21,600
I mean -99.

544
00:39:21,600 --> 00:39:22,880
So but then why now?

545
00:39:22,880 --> 00:39:26,280
And then they will be asking questions
in your interview.

546
00:39:26,960 --> 00:39:30,840
Give them the wrong answer and then say,
oh, no, this is not what I meant.

547
00:39:30,960 --> 00:39:38,920
I mean, something as finite.

548
00:39:38,920 --> 00:39:41,760
So and then we learned about B

549
00:39:42,800 --> 00:39:45,080
minus, minus operator. Right.

550
00:39:45,080 --> 00:39:48,120
So if I say number

551
00:39:48,440 --> 00:39:50,600
six, minus minus

552
00:39:52,840 --> 00:39:55,680
four to answer, I will write

553
00:39:56,040 --> 00:39:57,280
this out

554
00:40:01,680 --> 00:40:03,280
on the statement

555
00:40:09,880 --> 00:40:12,800
minus under

556
00:40:14,160 --> 00:40:19,360
minus one zero on.

557
00:40:19,360 --> 00:40:23,760
So guys, remember I am first adding one.

558
00:40:24,600 --> 00:40:29,200
So this minus under,
then I am subtracting one.

559
00:40:29,520 --> 00:40:33,360
So if I add and subtract
same amount from a number,

560
00:40:34,280 --> 00:40:36,560
what answer I will get,

561
00:40:36,880 --> 00:40:38,600
I will get the same number again.

562
00:40:38,600 --> 00:40:39,360
Right.

563
00:40:40,320 --> 00:40:44,280
But again.

564
00:40:44,280 --> 00:40:47,120
So it will be

565
00:40:47,120 --> 00:40:50,720
-100 again.

566
00:40:50,720 --> 00:40:51,000
Right.

567
00:40:51,000 --> 00:40:54,680
I added one to that value,
then I subtracted one.

568
00:40:55,200 --> 00:41:01,480
So I get back to same number.

569
00:41:01,480 --> 00:41:01,840
Correct.

570
00:41:01,840 --> 00:41:06,240
So guys, can I do can I do this
number multiply and multiply?

571
00:41:06,240 --> 00:41:07,080
Can I do this

572
00:41:08,920 --> 00:41:09,840
work?

573
00:41:10,240 --> 00:41:12,600
Multiply, multiply.

574
00:41:13,120 --> 00:41:13,680
Right.

575
00:41:13,680 --> 00:41:17,880
And that's why it is not allowed,
why it is not allowed in Java.

576
00:41:18,280 --> 00:41:25,920
Can you guys
tell me why it is not allowed?

577
00:41:25,920 --> 00:41:28,240
Any logic you can think of?

578
00:41:28,240 --> 00:41:30,200
It's not defined.

579
00:41:30,200 --> 00:41:36,000
So the two things that are not defined,
they are also not defined for a reason.

580
00:41:36,720 --> 00:41:37,680
Here we go.

581
00:41:37,680 --> 00:41:38,600
So Alanna.

582
00:41:38,600 --> 00:41:41,400
Yes, you are perfectly right.

583
00:41:41,400 --> 00:41:44,880
That is, if I multiply something with one
what answer

584
00:41:44,880 --> 00:41:45,880
I will get

585
00:41:48,360 --> 00:41:51,160
multiplication
by one does not change anything.

586
00:41:51,160 --> 00:41:51,680
Right?

587
00:41:51,680 --> 00:41:55,280
It is the same number again,
so it does not make sense to have that

588
00:41:56,160 --> 00:41:58,640
number multiply. Multiply it right.

589
00:41:58,640 --> 00:42:00,720
Same reason for the division.

590
00:42:00,720 --> 00:42:05,400
If I divide something by one there
there will not be any difference.

591
00:42:05,400 --> 00:42:05,920
Right.

592
00:42:05,920 --> 00:42:10,560
So I will be getting the same answer.

593
00:42:10,560 --> 00:42:13,880
So the next slide,
Java guys, is going to define

594
00:42:15,000 --> 00:42:17,120
these two operations.

595
00:42:17,120 --> 00:42:20,040
So in Java, if something is not defined

596
00:42:20,040 --> 00:42:23,760
or if something is not allowed,
there can be multiple reasons for that.

597
00:42:23,760 --> 00:42:27,440
Some reasons are because some
things are not possible in programing,

598
00:42:28,080 --> 00:42:31,560
some other things are they
may they may not make sense.

599
00:42:31,960 --> 00:42:34,440
The other things are coming from history
and things like that.

600
00:42:34,440 --> 00:42:37,640
So I will be telling you
the reasons as well.

601
00:42:38,080 --> 00:42:41,320
If something is defined,
it will help you memorize.

602
00:42:41,600 --> 00:42:43,920
Remember that thing for the longer
period of time

603
00:42:45,800 --> 00:42:48,280
are not allowed

604
00:42:50,400 --> 00:42:52,680
because it does not

605
00:42:53,920 --> 00:42:56,040
change anything

606
00:42:56,040 --> 00:43:02,800
right.

607
00:43:02,800 --> 00:43:04,080
It's very logical.

608
00:43:04,080 --> 00:43:10,000
Of course,
programing is very, very logical.

609
00:43:10,000 --> 00:43:15,160
And then we discuss the other shorthand
operators,

610
00:43:15,640 --> 00:43:20,600
other shorthand operators
and the first operators that we discussed.

611
00:43:20,600 --> 00:43:28,520
So let me say, I realize if I do

612
00:43:30,480 --> 00:43:32,120
remember

613
00:43:33,640 --> 00:43:35,960
so the results
are the same for the table as well.

614
00:43:35,960 --> 00:43:36,520
Okay.

615
00:43:36,520 --> 00:43:38,920
I just wanted to show you
so that you guys don't

616
00:43:40,320 --> 00:43:42,280
confuse about this.

617
00:43:42,280 --> 00:43:47,080
So if we have doubles

618
00:43:47,080 --> 00:43:52,840
and if we do, if we do number four

619
00:43:52,840 --> 00:44:03,720
plus plus,

620
00:44:03,720 --> 00:44:06,520
actually let me put it outside of that,

621
00:44:06,840 --> 00:44:11,080
because there is something more
that I want to show you.

622
00:44:11,080 --> 00:44:12,840
Actually, this

623
00:44:15,120 --> 00:44:16,800
I saw it in the review class,

624
00:44:16,800 --> 00:44:18,960
but we can also put

625
00:44:20,120 --> 00:44:22,080
this plus plus

626
00:44:22,920 --> 00:44:24,440
before the variable.

627
00:44:24,440 --> 00:44:24,960
Okay.

628
00:44:24,960 --> 00:44:27,520
And there is a difference

629
00:44:28,840 --> 00:44:30,760
in putting the number first

630
00:44:30,760 --> 00:44:34,040
and then putting this plus before
and after the video.

631
00:44:34,040 --> 00:44:34,880
But okay.

632
00:44:34,960 --> 00:44:37,560
So and if you guys

633
00:44:37,560 --> 00:44:39,880
some of you if you have tried this,

634
00:44:40,840 --> 00:44:44,600
if you put this plus plus,
what would answer

635
00:44:44,640 --> 00:44:58,080
I will get right.

636
00:44:58,080 --> 00:45:03,800
So let me surprise you.

637
00:45:03,800 --> 00:45:07,160
I got ten. Okay.

638
00:45:08,280 --> 00:45:10,640
And I want you to

639
00:45:10,640 --> 00:45:12,880
hold next Saturday,

640
00:45:13,400 --> 00:45:18,120
next and next Thursday.

641
00:45:18,120 --> 00:45:22,640
And then I will explain why you
if you put this inside the print balance,

642
00:45:23,000 --> 00:45:26,680
why you got a ten,
and if you put it outside

643
00:45:26,720 --> 00:45:29,640
the outside of the standard out,
why you get 11.

644
00:45:30,360 --> 00:45:34,960
Okay.

645
00:45:34,960 --> 00:45:42,560
So inside system, again, if if we do,
we get ten outside or we get 11.

646
00:45:42,560 --> 00:45:45,000
Okay.
I will explain the reason in the test.

647
00:45:45,000 --> 00:45:48,480
This class have to come on first.

648
00:45:48,600 --> 00:45:49,440
Okay.

649
00:45:49,440 --> 00:45:52,080
I know.

650
00:45:52,080 --> 00:45:55,360
So it has something
to do with putting this plus plus before

651
00:45:55,360 --> 00:45:57,720
and after this number

652
00:46:00,840 --> 00:46:01,920
so we we can do this

653
00:46:01,920 --> 00:46:04,960
plus plus with the would be

654
00:46:05,840 --> 00:46:07,560
with the doubles as well.

655
00:46:07,560 --> 00:46:10,080
Okay. We could double data

656
00:46:10,200 --> 00:46:11,400
inside your team.

657
00:46:11,400 --> 00:46:14,280
I think this thing.
No, this is not the reason

658
00:46:15,720 --> 00:46:16,200
actually,

659
00:46:16,640 --> 00:46:19,280
I don't want to confuse you, but hold on.

660
00:46:19,280 --> 00:46:21,640
I will explain in greater detail

661
00:46:23,040 --> 00:46:25,160
so you can do plus plus before or not.

662
00:46:25,160 --> 00:46:27,400
Yes, you can do the plus,
but before as that.

663
00:46:28,320 --> 00:46:30,680
Okay.

664
00:46:30,680 --> 00:46:31,720
Like this.

665
00:46:31,720 --> 00:46:34,680
Okay. You can do this as well.

666
00:46:34,840 --> 00:46:35,120
Plus.

667
00:46:35,120 --> 00:46:36,960
Plus means anything inside the bracket.

668
00:46:36,960 --> 00:46:38,400
No, not for what it means.

669
00:46:38,400 --> 00:46:41,760
It means so many things
inside the brackets as well.

670
00:46:41,880 --> 00:46:42,440
Okay.

671
00:46:42,720 --> 00:46:55,920
But what I would explain,

672
00:46:55,920 --> 00:46:58,680
though, we need to add a bracket in here.

673
00:46:59,000 --> 00:47:00,120
Print with print. Hello?

674
00:47:00,120 --> 00:47:03,960
Yes, we need them
if you remove you will be getting an added

675
00:47:07,400 --> 00:47:09,160
no additional.

676
00:47:09,160 --> 00:47:12,440
Yes, you can you can put additional
like this if you want.

677
00:47:13,440 --> 00:47:16,160
But but it doesn't make sense
to put additional brackets

678
00:47:17,240 --> 00:47:20,000
for plus plus in here like this.

679
00:47:20,680 --> 00:47:23,160
Like this. Yes, you can do that

680
00:47:25,000 --> 00:47:26,640
if we can do that.

681
00:47:26,640 --> 00:47:29,360
So if you pull the brackets

682
00:47:29,360 --> 00:47:31,720
and then if you print out p value.

683
00:47:32,840 --> 00:47:33,680
Okay.

684
00:47:34,160 --> 00:47:35,840
So still

685
00:47:36,320 --> 00:47:39,360
you will be getting then

686
00:47:43,720 --> 00:47:45,080
let me remove the brackets.

687
00:47:45,080 --> 00:47:48,720
No. So that must be

688
00:47:48,720 --> 00:47:52,720
you guys can always try different
different things.

689
00:47:52,720 --> 00:47:56,080
We both have the individual
and try to figure it out.

690
00:47:58,080 --> 00:48:00,520
If I put these brackets first,

691
00:48:01,760 --> 00:48:04,720
if I put this plus plus
before then you will be getting 11.

692
00:48:05,200 --> 00:48:05,920
Okay.

693
00:48:06,240 --> 00:48:09,240
11 is the answer.

694
00:48:09,240 --> 00:48:12,720
So you see 11 if you put this plus, plus

695
00:48:14,040 --> 00:48:16,400
this, plus, plus, after the number,

696
00:48:16,480 --> 00:48:20,400
you would be getting ten as the answer.

697
00:48:20,400 --> 00:48:20,800
Yeah.

698
00:48:21,240 --> 00:48:24,240
And if you put this

699
00:48:26,400 --> 00:48:29,080
plus plus before or after,

700
00:48:29,320 --> 00:48:33,040
if you are outside of the println
statement, then it does not matter.

701
00:48:33,040 --> 00:48:35,160
You will always be getting
11 as the answer.

702
00:48:35,280 --> 00:48:36,120
Okay. So 11

703
00:48:38,000 --> 00:48:39,320
and then

704
00:48:40,040 --> 00:48:40,760
11. Okay.

705
00:48:40,760 --> 00:48:44,480
So try to make sense out of it.

706
00:48:44,480 --> 00:48:47,120
Still, I will be getting 11. Okay.

707
00:48:47,120 --> 00:48:50,520
Because inside the bracket
has got to go up plus plus means moving

708
00:48:50,520 --> 00:48:54,640
next up and like this number
plus plus means added value and value.

709
00:48:54,880 --> 00:48:56,040
The number

710
00:48:57,080 --> 00:48:57,840
really?

711
00:48:57,880 --> 00:49:00,600
Well, yes. Wait, what did I miss?

712
00:49:00,600 --> 00:49:08,720
What statistic?

713
00:49:08,720 --> 00:49:12,440
So, guys,
Java is actually something very big.

714
00:49:13,440 --> 00:49:16,320
People have yesterday is in Java.

715
00:49:16,800 --> 00:49:17,280
Okay.

716
00:49:17,280 --> 00:49:20,480
So but we will be learning around

717
00:49:20,480 --> 00:49:23,800
only 0.5% of it during this course.

718
00:49:23,800 --> 00:49:26,040
Okay. So it's huge. Huge.

719
00:49:27,320 --> 00:49:31,040
So number seven, one.

720
00:49:31,040 --> 00:49:33,440
So I was saying

721
00:49:33,600 --> 00:49:35,360
in that

722
00:49:36,240 --> 00:49:38,440
the other shorthand operators

723
00:49:38,440 --> 00:49:41,000
that we large were

724
00:49:43,720 --> 00:49:46,120
the number seven

725
00:49:47,600 --> 00:49:49,040
started eight

726
00:49:49,480 --> 00:49:58,880
and let's see.

727
00:49:58,880 --> 00:50:01,440
Yes, guys tried to Google
it, tried to Google it.

728
00:50:02,880 --> 00:50:05,160
If you know how to use Google,

729
00:50:05,760 --> 00:50:11,080
believe me, your job will be super, super
easy for you in CEUs in computer science,

730
00:50:11,200 --> 00:50:17,640
if you know how to use Google,
your life is easy.

731
00:50:17,640 --> 00:50:22,360
So the other short shorthand operators
that that we learned

732
00:50:22,360 --> 00:50:26,280
were plus equal to operator right.

733
00:50:26,280 --> 00:50:27,480
So number

734
00:50:28,960 --> 00:50:30,160
eight

735
00:50:31,160 --> 00:50:33,640
and then plus equal to

736
00:50:34,720 --> 00:50:36,400
percent.

737
00:50:36,400 --> 00:50:38,560
And if I try,

738
00:50:39,480 --> 00:50:43,280
let me tell you the terminologies
as they are called also to increment

739
00:50:43,280 --> 00:50:47,440
operator and pre increment operators,
if you guys want to use Google,

740
00:50:47,440 --> 00:50:52,360
they are called pre increment
and post increment operators.

741
00:50:52,360 --> 00:50:57,800
So now whatever value is stored
inside this box,

742
00:50:58,320 --> 00:51:02,560
it will be incremented by ten.

743
00:51:02,560 --> 00:51:02,920
Okay.

744
00:51:02,920 --> 00:51:09,120
So I have 20 stored in here.

745
00:51:09,120 --> 00:51:11,760
Quantity plus ten is equal to Typekit.

746
00:51:13,880 --> 00:51:16,040
So I see it kind of thing

747
00:51:16,120 --> 00:51:21,000
and if I do, if I do

748
00:51:22,120 --> 00:51:25,360
minus ten.

749
00:51:25,360 --> 00:51:33,520
So number eight, minus ten.

750
00:51:35,040 --> 00:51:37,280
But answer I will get to

751
00:51:39,200 --> 00:51:42,680
on two divided by zero

752
00:51:44,440 --> 00:51:45,640
I will get

753
00:51:46,080 --> 00:51:47,520
ten. Right.

754
00:51:47,520 --> 00:51:50,880
And if I do 40 guys,

755
00:51:51,120 --> 00:51:55,400
if I do 40 number
eight minus equal to 40, what?

756
00:51:55,400 --> 00:52:11,640
Answer I will get them.

757
00:52:11,640 --> 00:52:15,920
So this was my original value 20.

758
00:52:17,880 --> 00:52:20,560
Then I am adding ten

759
00:52:20,800 --> 00:52:23,040
to this content which makes it 30.

760
00:52:24,160 --> 00:52:26,880
Then I am subtracting -40

761
00:52:27,960 --> 00:52:29,920
from 30.

762
00:52:29,920 --> 00:52:36,200
So I get minus ten,

763
00:52:36,200 --> 00:52:50,640
I get minus ten.

764
00:52:50,640 --> 00:52:51,440
All right.

765
00:52:51,440 --> 00:52:57,360
And Pride is able to follow me
or you are going to stop here

766
00:52:57,360 --> 00:52:59,880
and maybe you are typing some code.

767
00:53:01,440 --> 00:53:02,880
Can we move on?

768
00:53:02,880 --> 00:53:03,360
So I'm one.

769
00:53:03,360 --> 00:53:07,480
What do you mean by ML one?

770
00:53:07,480 --> 00:53:11,160
No, not me.

771
00:53:11,160 --> 00:53:12,600
Today's lesson.

772
00:53:12,600 --> 00:53:14,280
So no, I will not.

773
00:53:14,280 --> 00:53:19,000
And we will not be following this
always in all the classes

774
00:53:19,600 --> 00:53:21,840
First, all of the instructors.

775
00:53:21,960 --> 00:53:25,560
They will be revising what
they have covered in the previous class

776
00:53:26,200 --> 00:53:28,440
and then they will be moving forward.

777
00:53:28,440 --> 00:53:31,760
So if, like you see before any season or,

778
00:53:32,240 --> 00:53:34,760
or something like that, they show you.

779
00:53:35,240 --> 00:53:37,880
Previously on Syntax was Previously

780
00:53:37,880 --> 00:53:41,040
on Syntax.

781
00:53:41,040 --> 00:53:42,600
So previously on

782
00:53:43,880 --> 00:53:44,400
Friends.

783
00:53:44,400 --> 00:53:46,760
So here is the Previously on Syntax

784
00:53:51,160 --> 00:53:51,680
reading.

785
00:53:51,680 --> 00:53:53,920
Yes, it's very important in programing.

786
00:53:53,920 --> 00:53:56,240
You you guys will realize this with time.

787
00:53:56,440 --> 00:54:01,200
How important is this region?

788
00:54:01,200 --> 00:54:05,680
Please tell me when we need
light white, electric, white.

789
00:54:05,680 --> 00:54:13,280
What do you mean by white?

790
00:54:13,280 --> 00:54:15,960
Right. Okay,

791
00:54:15,960 --> 00:54:19,120
so if you want, you can follow me.

792
00:54:19,120 --> 00:54:28,840
If you want, you can follow me right now.

793
00:54:28,840 --> 00:54:33,720
So then we discussed about.

794
00:54:33,720 --> 00:54:38,200
So let me make the calculations easy party
and let me store

795
00:54:40,800 --> 00:54:43,360
Andre in here

796
00:54:43,520 --> 00:54:45,240
and let's make it for.

797
00:54:45,240 --> 00:54:50,760
So I have us I have reassigned hundred.

798
00:54:50,760 --> 00:54:53,880
Can you repeat the last part
if you don't mind?

799
00:54:54,120 --> 00:55:07,320
So know which line,
which line you want me to repeat.

800
00:55:07,320 --> 00:55:12,480
41 to 4341.

801
00:55:12,480 --> 00:55:15,080
So this is 41 and this is 43.

802
00:55:15,360 --> 00:55:18,200
So in here we are doing

803
00:55:20,280 --> 00:55:23,800
whatever value is stored in this number
eight.

804
00:55:24,120 --> 00:55:26,600
We are subtracting 40 out of that.

805
00:55:27,000 --> 00:55:27,960
That's it.

806
00:55:28,920 --> 00:55:31,040
So previously we had 20,

807
00:55:31,040 --> 00:55:33,640
then we added ten subtotal last 30

808
00:55:34,560 --> 00:55:37,880
and then we are subtracting -40 from 30.

809
00:55:38,400 --> 00:55:47,480
Okay, Is it clear now?

810
00:55:47,480 --> 00:55:50,920
So guys, some of you
you might be good at programing.

811
00:55:51,320 --> 00:55:55,400
So what you can do
if you think that the repetition,

812
00:55:55,400 --> 00:55:59,760
this recap is unnecessary,
maybe you can you can join the class late.

813
00:55:59,960 --> 00:56:02,920
So first one are most of the time

814
00:56:02,920 --> 00:56:05,920
plus one out
I will be spending on on TV again.

815
00:56:05,920 --> 00:56:13,200
So you guys
maybe can do something else in that time.

816
00:56:13,200 --> 00:56:14,000
All right.

817
00:56:14,000 --> 00:56:20,880
And then we can do the same.

818
00:56:20,880 --> 00:56:23,920
Or we can do the same

819
00:56:27,000 --> 00:56:27,880
with division.

820
00:56:27,880 --> 00:56:30,240
So if I have 400

821
00:56:31,160 --> 00:56:34,840
and if I say number plus equal to four,

822
00:56:36,320 --> 00:56:37,160
I will be

823
00:56:37,160 --> 00:56:46,320
getting hundreds.

824
00:56:46,320 --> 00:56:49,520
And then same with be

825
00:56:50,160 --> 00:56:54,880
modulus.

826
00:56:54,880 --> 00:56:57,480
So let's say if I have ten

827
00:56:58,240 --> 00:57:01,320
and if I say it, then modulus four

828
00:57:02,760 --> 00:57:03,000
what?

829
00:57:03,000 --> 00:57:05,400
Answer I will get guys

830
00:57:15,920 --> 00:57:23,120
who right, right, get to it.

831
00:57:24,720 --> 00:57:27,160
So this was our previous class.

832
00:57:27,720 --> 00:57:31,520
Now You guys can ask me if let's,
if still something

833
00:57:31,520 --> 00:57:35,280
is not clear about the
about the concepts that we discussed.

834
00:57:35,280 --> 00:57:37,680
You can ask me any questions from that

835
00:57:40,080 --> 00:57:40,720
or is it all

836
00:57:40,720 --> 00:57:48,120
clear?

837
00:57:48,120 --> 00:57:49,400
All clear. All clear.

838
00:57:49,400 --> 00:57:53,440
Mean nothing and nothing entered in
your brain are all clear.

839
00:57:53,440 --> 00:57:54,200
Mean.

840
00:57:54,240 --> 00:57:57,360
All concepts are clear.

841
00:57:57,520 --> 00:58:00,120
So do you help us with that homework? Yes.

842
00:58:00,400 --> 00:58:03,440
So now we will solve the homeworks.

843
00:58:03,440 --> 00:58:04,200
Okay.

844
00:58:04,680 --> 00:58:06,240
So far only tricky.

845
00:58:06,240 --> 00:58:08,040
Plus plus the entire println.

846
00:58:08,040 --> 00:58:09,920
Actually, it's a complete science.

847
00:58:09,920 --> 00:58:12,160
That plus plus
think it's a complete science.

848
00:58:12,160 --> 00:58:15,920
I will explain that in the review class.

849
00:58:15,920 --> 00:58:18,120
So don't worry about that plus plus ten

850
00:58:19,440 --> 00:58:22,200
the let's all the homeworks.

851
00:58:22,240 --> 00:58:25,840
Okay so let's call it
so I am creating a new class

852
00:58:27,040 --> 00:58:29,320
inside class three package

853
00:58:29,920 --> 00:58:51,120
and let's call it task one.

854
00:58:51,120 --> 00:59:16,640
So let me take online now.

855
00:59:17,280 --> 00:59:20,200
Is it okay if I close this other window?

856
00:59:20,320 --> 00:59:22,760
Maybe some of you are typing.

857
00:59:22,760 --> 00:59:26,840
You mentioned that many people did it
differently and wanted to talk about.

858
00:59:26,880 --> 00:59:27,520
Yes, I will.

859
00:59:27,520 --> 00:59:30,720
We're going to talk about

860
00:59:31,600 --> 00:59:32,000
you today.

861
00:59:32,000 --> 00:59:45,400
Closed this other file
or you guys maybe are typing from it.

862
00:59:45,400 --> 00:59:48,400
So here is one three people guys,

863
00:59:48,440 --> 00:59:51,480
before you solve your programing
homeworks,

864
00:59:52,840 --> 00:59:55,640
don't directly, try to call it.

865
00:59:56,040 --> 00:59:59,040
Okay don't directly try to quoted

866
00:59:59,040 --> 01:00:01,160
when you read the requirement first

867
01:00:02,000 --> 01:00:04,080
try to solve that on a paper

868
01:00:04,440 --> 01:00:06,600
on on a on a on a paper

869
01:00:07,320 --> 01:00:11,520
with pencil without directly
coding and just try to make

870
01:00:12,800 --> 01:00:16,920
steps
that how would you solve this problem

871
01:00:17,280 --> 01:00:20,960
without programing manually video
copy intervention.

872
01:00:21,440 --> 01:00:24,360
It will help you a lot.
Define those steps.

873
01:00:24,480 --> 01:00:28,200
Once you have those steps,
then try to board against those steps.

874
01:00:28,960 --> 01:00:30,160
It will help you a lot.

875
01:00:30,160 --> 01:00:30,600
By the way,

876
01:00:30,600 --> 01:00:34,840
it's a proper technique in programing
and it's called pseudo programing.

877
01:00:35,040 --> 01:00:39,720
Okay, so maybe you guys want to Google it,
so try to write pseudo codes first,

878
01:00:40,000 --> 01:00:45,120
then try to then then write actually code.

879
01:00:45,120 --> 01:00:48,360
So if I solve this problem, right,
if I solve

880
01:00:48,360 --> 01:00:50,480
this problem manually without

881
01:00:51,640 --> 01:00:54,360
without writing the code directly,

882
01:00:54,480 --> 01:00:59,600
what I will do, I will first divide
this problem into smaller steps.

883
01:01:00,240 --> 01:01:02,960
So I have to write a program.

884
01:01:03,200 --> 01:01:07,680
So if I, if I just read this part,
it means that

885
01:01:07,680 --> 01:01:09,560
I have to create a new class.

886
01:01:09,560 --> 01:01:11,680
That class should have
the main method, right?

887
01:01:11,720 --> 01:01:15,240
And this should be my first step.

888
01:01:15,240 --> 01:01:20,840
Then I have to do addition,
subtraction, multiplication

889
01:01:21,200 --> 01:01:24,960
and or division
with the two decimal values.

890
01:01:24,960 --> 01:01:28,280
Okay,
so I have to perform these four operations

891
01:01:28,800 --> 01:01:32,280
and I have to do these operations
with decimal numbers.

892
01:01:32,760 --> 01:01:34,400
Okay.

893
01:01:34,400 --> 01:01:40,400
And then the third step can be my my program should say if should operate the bar,

894
01:01:41,440 --> 01:01:44,200
then the

895
01:01:44,560 --> 01:01:45,880
result

896
01:01:46,560 --> 01:01:49,080
of two numbers,

897
01:01:49,080 --> 01:01:51,920
the first number, the second number,

898
01:01:52,360 --> 01:01:54,600
and then it should say is equal to

899
01:01:55,520 --> 01:01:58,960
and then if should print the results

900
01:01:58,960 --> 01:02:00,360
about this task.

901
01:02:00,360 --> 01:02:06,640
What we need to learn scanner
all we can do with out and it's so nice.

902
01:02:06,880 --> 01:02:10,800
If I have no part you about something

903
01:02:10,800 --> 01:02:14,360
then yes, you guys are not supposed
to use that in your homework.

904
01:02:14,400 --> 01:02:15,080
Okay.

905
01:02:15,160 --> 01:02:17,560
So then you guys will learn about this
kind of class.

906
01:02:17,560 --> 01:02:21,440
I guess it's in the next class then. Yes,
you can use this kind of

907
01:02:22,200 --> 01:02:23,480
in your programs.

908
01:02:23,480 --> 01:02:26,520
By the way,
those who don't know about Scandal, it's

909
01:02:26,520 --> 01:02:31,240
a piece of code that can help

910
01:02:31,240 --> 01:02:35,200
you take the input dynamically
from your keyboard.

911
01:02:35,280 --> 01:02:35,640
Okay.

912
01:02:35,640 --> 01:02:39,400
So right now we are hard
coding everything in our programs, right?

913
01:02:39,400 --> 01:02:43,000
Hard coding the values and variables
using the scanner.

914
01:02:43,360 --> 01:02:45,920
You guys will be able to take
the input from your keyboard.

915
01:02:47,240 --> 01:02:48,120
Yes, one thing at

916
01:02:48,120 --> 01:03:04,560
a time. Day.

917
01:03:06,240 --> 01:03:08,040
Yes. Let me check

918
01:03:08,040 --> 01:03:15,280
if we are missing something.

919
01:03:15,280 --> 01:03:15,880
Correct.

920
01:03:15,880 --> 01:03:28,520
Everything looks good. So

921
01:03:29,880 --> 01:03:32,600
first I need two variables, right?

922
01:03:32,720 --> 01:03:33,760
First, I need to enable.

923
01:03:33,760 --> 01:03:36,960
So let me define so variables.

924
01:03:37,920 --> 01:03:43,040
Number one, and maybe let's say next

925
01:03:43,080 --> 01:03:44,560
or ten in

926
01:03:48,800 --> 01:03:54,520
two and store again and inside.

927
01:03:54,760 --> 01:04:00,720
Okay.

928
01:04:00,720 --> 01:04:04,040
And now to all the results

929
01:04:04,880 --> 01:04:09,360
of these calculations,
let's define more creative.

930
01:04:09,600 --> 01:04:12,120
Okay. So I have to do addition.

931
01:04:12,120 --> 01:04:15,000
So I will have a variable double

932
01:04:17,160 --> 01:04:20,160
B, some.

933
01:04:20,160 --> 01:04:26,400
And in here I will say number one.

934
01:04:26,400 --> 01:04:27,600
Number two

935
01:04:30,080 --> 01:04:31,440
or yes, number.

936
01:04:31,440 --> 01:04:33,600
That should be that.

937
01:04:33,600 --> 01:04:36,120
You must point.

938
01:04:36,120 --> 01:04:36,720
Is it good?

939
01:04:36,720 --> 01:04:42,880
Now we'll start.

940
01:04:42,880 --> 01:04:47,920
So I have declared a variable
that contains the result of

941
01:04:48,280 --> 01:04:51,360
of some now why not float.

942
01:04:51,880 --> 01:04:52,320
So in

943
01:04:53,880 --> 01:04:55,200
this float

944
01:04:55,200 --> 01:04:57,880
number today actually
you guys will learn about it

945
01:04:58,680 --> 01:05:01,440
first has less capacity than double

946
01:05:02,200 --> 01:05:07,080
second every time you use floor float
you have to put that at the end.

947
01:05:07,520 --> 01:05:11,640
Okay, So that's why, as I have explained

948
01:05:11,640 --> 01:05:15,800
previously, that these days, the memory,
it does not matter that much.

949
01:05:16,120 --> 01:05:18,600
So you can always use the tables in here

950
01:05:18,960 --> 01:05:22,480
today I will show you
the limitation of floor data type.

951
01:05:22,520 --> 01:05:26,600
Okay, so this double for decimal numbers

952
01:05:26,840 --> 01:05:30,480
always use double
for into type of numbers.

953
01:05:30,680 --> 01:05:35,040
Always use in not short,
not long, not byte and things like that.

954
01:05:35,200 --> 01:05:38,240
Like they are the most commonly used

955
01:05:38,320 --> 01:05:43,240
data types.

956
01:05:43,240 --> 01:05:46,000
Then double maybe subtraction

957
01:05:58,240 --> 01:06:28,680
and multiplication.

958
01:06:28,680 --> 01:06:31,280
Why I'm getting an error on online
and in nice

959
01:06:45,440 --> 01:06:47,640
there are no variables.

960
01:06:47,640 --> 01:06:53,000
Add number
and that I have defined in my program.

961
01:06:53,000 --> 01:06:54,360
So I am.

962
01:06:54,360 --> 01:06:58,360
I will be getting an error
if I have not defined something and if

963
01:06:58,360 --> 01:07:04,760
I try to use that.

964
01:07:04,760 --> 01:07:05,280
All right.

965
01:07:07,040 --> 01:07:09,480
So now I have to produce this output.

966
01:07:10,000 --> 01:07:13,800
So to produce this output, which concept

967
01:07:13,800 --> 01:07:19,920
I will use right?

968
01:07:19,920 --> 01:07:22,480
Things can get in nature, right?

969
01:07:22,480 --> 01:07:26,760
Combining
multiple output from multiple variables.

970
01:07:26,760 --> 01:07:31,680
So with the help of string
kind of stagnation,

971
01:07:31,680 --> 01:07:34,000
I need to say duh.

972
01:07:34,920 --> 01:07:37,880
So I will use double quotes.

973
01:07:39,680 --> 01:07:43,280
Then I will say

974
01:07:46,600 --> 01:07:49,600
our nation of

975
01:07:51,600 --> 01:07:55,120
two numbers.

976
01:07:55,120 --> 01:08:00,480
Okay, so the addition of two numbers

977
01:08:01,760 --> 01:08:04,920
then if space in here,

978
01:08:04,920 --> 01:08:06,960
then I will say

979
01:08:07,000 --> 01:08:08,320
number one

980
01:08:09,440 --> 01:08:11,360
again plus

981
01:08:13,600 --> 01:08:14,160
okay.

982
01:08:14,440 --> 01:08:17,040
Plus then and

983
01:08:18,120 --> 01:08:20,160
again. Space

984
01:08:20,160 --> 01:08:22,040
again plus

985
01:08:23,680 --> 01:08:25,720
then number two

986
01:08:26,360 --> 01:08:28,080
again plus

987
01:08:28,440 --> 01:08:28,880
again.

988
01:08:28,880 --> 01:08:32,040
Double force is

989
01:08:33,320 --> 01:08:36,360
equal to space

990
01:08:37,840 --> 01:08:38,760
plus.

991
01:08:39,640 --> 01:08:42,480
And the variable that contain

992
01:08:42,960 --> 01:08:45,080
it is what is error?

993
01:08:45,560 --> 01:08:47,840
Where is the error

994
01:08:49,560 --> 01:08:52,560
word system or word system?

995
01:08:53,120 --> 01:08:54,720
Oh, you guys mean this?

996
01:08:54,720 --> 01:08:56,560
It should be system out.

997
01:08:57,600 --> 01:08:59,200
It's there are

998
01:08:59,200 --> 01:09:02,000
multiple classes in this in the system

999
01:09:03,000 --> 01:09:03,960
interface. Okay.

1000
01:09:03,960 --> 01:09:06,680
So that's why you guys are

1001
01:09:06,680 --> 01:09:10,560
not what you want that.

1002
01:09:10,560 --> 01:09:11,680
So is it clear right.

1003
01:09:11,680 --> 01:09:17,880
How I have built the output.

1004
01:09:17,880 --> 01:09:20,880
So if I execute this

1005
01:09:28,040 --> 01:09:31,680
not subtraction,

1006
01:09:31,680 --> 01:09:38,800
it should be something.

1007
01:09:38,800 --> 01:09:42,200
It should be some.

1008
01:09:42,200 --> 01:09:45,880
So now I can simply copy this

1009
01:09:55,400 --> 01:09:58,080
and I can replicate it.

1010
01:09:58,080 --> 01:10:00,600
All the other tasks

1011
01:10:27,600 --> 01:10:30,080
I lost my sound far field.

1012
01:10:30,520 --> 01:10:33,040
I don't know if you answered my question

1013
01:10:33,520 --> 01:10:36,640
or not.

1014
01:10:36,640 --> 01:10:39,760
Last word summary

1015
01:10:39,760 --> 01:10:41,480
Going this way is correct.

1016
01:10:41,480 --> 01:10:43,520
Yes, you'll get to it is also correct.

1017
01:10:43,520 --> 01:10:45,800
I have just declared additional variables

1018
01:10:46,520 --> 01:10:50,160
to make this program a little simpler.

1019
01:10:50,760 --> 01:10:54,200
My question was it worked for me
without line

1020
01:10:54,280 --> 01:10:58,840
16 to 19, do we need to have those lines?

1021
01:10:58,880 --> 01:11:01,400
No, they they are just extra steps

1022
01:11:02,000 --> 01:11:06,200
to make the program
a little easier to understand.

1023
01:11:06,200 --> 01:11:07,160
Then that's it.

1024
01:11:07,160 --> 01:11:12,600
If you guys have used those brackets
and then if you have done the plus

1025
01:11:12,640 --> 01:11:16,280
and minus perfectly fine, it's

1026
01:11:16,280 --> 01:11:20,640
perfectly fine.

1027
01:11:20,640 --> 01:11:23,240
So now I will say the

1028
01:11:25,640 --> 01:11:26,840
fraction

1029
01:11:33,560 --> 01:11:35,680
is so

1030
01:11:40,200 --> 01:11:43,600
the other duplication

1031
01:11:48,800 --> 01:12:00,760
and then give.

1032
01:12:00,760 --> 01:12:04,080
And then when I tried to print this

1033
01:12:07,240 --> 01:12:09,760
different way is same result I am good at

1034
01:12:10,200 --> 01:12:13,800
it is not picky.

1035
01:12:13,800 --> 01:12:18,640
Let's not talk about it at all
now because it's this start right now.

1036
01:12:18,880 --> 01:12:24,800
It will be 0:00 in the future,
so don't worry about that.

1037
01:12:25,920 --> 01:12:29,640
But I hope you guys we've got great
how to how to fix those issues

1038
01:12:30,960 --> 01:12:33,120
rapidly and all that brilliant.

1039
01:12:33,120 --> 01:12:35,040
Not that smart.

1040
01:12:35,040 --> 01:12:39,160
You can easily fool.

1041
01:12:39,160 --> 01:12:40,520
Let's give

1042
01:12:41,480 --> 01:12:45,240
I think, only two problems
in the complete exercises.

1043
01:12:45,400 --> 01:12:48,760
There are only two problems
that might take some time.

1044
01:12:50,200 --> 01:12:51,120
Otherwise.

1045
01:12:51,120 --> 01:12:53,800
Are there any questions that I

1046
01:12:59,480 --> 01:13:00,080
explore?

1047
01:13:00,080 --> 01:13:04,680
Super easy right?

1048
01:13:04,680 --> 01:13:14,920
Is there anyone who was unable to solve
them?

1049
01:13:14,920 --> 01:13:16,400
Let's solve the task. Two

1050
01:13:23,200 --> 01:13:24,240
Well, I am.

1051
01:13:24,240 --> 01:13:27,320
My number console is all together.

1052
01:13:27,480 --> 01:13:28,720
Really.

1053
01:13:28,720 --> 01:13:32,440
Please share the screenshot
and posted in this sports channel.

1054
01:13:34,320 --> 01:13:35,480
It looks messy

1055
01:13:35,480 --> 01:13:38,960
and your looks may need
you shared a screenshot

1056
01:13:39,680 --> 01:13:43,200
so that I know.

1057
01:13:43,200 --> 01:13:45,240
So let's create task. So

1058
01:13:46,760 --> 01:13:52,200
are you guys following me? Yes.

1059
01:13:52,320 --> 01:13:52,800
Follow me.

1060
01:13:52,800 --> 01:14:14,600
Okay.

1061
01:14:14,600 --> 01:14:15,000
Okay.

1062
01:14:15,000 --> 01:14:20,960
So Lenny, I hope I'm
pronouncing your name correctly.

1063
01:14:20,960 --> 01:14:25,400
So make sure that you have these spaces,
okay?

1064
01:14:25,400 --> 01:14:28,000
Make sure you have the spaces

1065
01:14:28,000 --> 01:14:31,480
before the before
the before you end of the court.

1066
01:14:32,160 --> 01:14:32,760
Okay.

1067
01:14:33,240 --> 01:14:35,840
This one that they will make your output

1068
01:14:35,840 --> 01:14:44,520
look better.

1069
01:14:44,520 --> 01:14:54,440
Okay, I am closing this this file.

1070
01:14:55,000 --> 01:14:55,480
Right.

1071
01:14:55,800 --> 01:15:02,720
So should I close it?

1072
01:15:02,720 --> 01:15:04,640
Why the error?

1073
01:15:05,120 --> 01:15:06,960
Guys, if you are facing any errors,

1074
01:15:06,960 --> 01:15:09,880
please post and export channel

1075
01:15:10,200 --> 01:15:14,880
so you are not using this plus sign.

1076
01:15:14,880 --> 01:15:17,360
Now you are not using this plus sign.

1077
01:15:17,600 --> 01:15:21,040
So when you are putting a string
and a variable

1078
01:15:21,040 --> 01:15:24,600
inside the system out, you need this
plus sign.

1079
01:15:24,600 --> 01:15:25,640
Otherwise, how?

1080
01:15:25,640 --> 01:15:29,160
How do I know
if you are trying to get in it or what?

1081
01:15:29,160 --> 01:15:30,840
What you are trying to do?

1082
01:15:30,840 --> 01:15:36,440
You use that plus, are there

1083
01:15:36,640 --> 01:15:39,680
is there anyone who's getting any errors
or issues,

1084
01:15:40,480 --> 01:15:42,760
even though output is correct?

1085
01:15:42,920 --> 01:15:45,840
A repeat test is showing failed.

1086
01:15:46,120 --> 01:15:49,240
What should we do
so the way some make it anyway? No.

1087
01:15:49,520 --> 01:15:50,520
Okay, so guys,

1088
01:15:51,840 --> 01:15:53,160
let's see.

1089
01:15:53,160 --> 01:15:55,520
Let me actually this is important. So

1090
01:16:01,120 --> 01:16:02,880
so let's take the example of this.

1091
01:16:02,880 --> 01:16:09,800
This first.

1092
01:16:09,800 --> 01:16:12,920
So let's say for somebody
then you have written record.

1093
01:16:12,960 --> 01:16:14,960
I am not writing
any piece of code in here.

1094
01:16:15,640 --> 01:16:17,000
Okay?

1095
01:16:17,000 --> 01:16:19,320
And you try to run your best.

1096
01:16:20,320 --> 01:16:20,760
Okay.

1097
01:16:20,760 --> 01:16:23,240
So your test will fail, right?

1098
01:16:23,440 --> 01:16:27,720
Because it is not getting
what it is expecting.

1099
01:16:28,200 --> 01:16:31,040
But the how how can you check
what is double

1100
01:16:31,520 --> 01:16:34,800
what, what is expecting
and what is your output.

1101
01:16:35,280 --> 01:16:38,600
So if you click this result

1102
01:16:39,360 --> 01:16:40,080
so rapidly,

1103
01:16:40,080 --> 01:16:42,520
it will show that to say that, hey then

1104
01:16:43,720 --> 01:16:44,600
you know what?

1105
01:16:44,600 --> 01:16:48,840
From this wrapper,
I was expecting it through

1106
01:16:49,200 --> 01:16:52,680
and it false
as the output from the program.

1107
01:16:53,400 --> 01:16:55,880
But the actual output

1108
01:16:55,880 --> 01:16:58,880
that your program is generating,
it's empty.

1109
01:16:58,880 --> 01:17:00,200
It's empty.

1110
01:17:00,280 --> 01:17:00,960
Okay.

1111
01:17:01,160 --> 01:17:05,280
So you know that you are missing
something now.

1112
01:17:06,040 --> 01:17:07,920
Now let me

1113
01:17:22,400 --> 01:17:23,320
So let's

1114
01:17:23,320 --> 01:17:26,360
say I write something in here, okay?

1115
01:17:26,360 --> 01:17:27,720
I write something.

1116
01:17:27,720 --> 01:17:29,040
I run log.

1117
01:17:29,040 --> 01:17:31,280
I click on Run test again.

1118
01:17:31,280 --> 01:17:31,800
Okay.

1119
01:17:31,800 --> 01:17:37,720
Still, the test case is filled and
if I click on Desert again, so this time

1120
01:17:38,880 --> 01:17:41,200
my results are partially correct.

1121
01:17:41,400 --> 01:17:41,920
Okay.

1122
01:17:41,920 --> 01:17:45,520
So it will again
tell me that it will say that task

1123
01:17:45,560 --> 01:17:48,560
that I was expecting it true.

1124
01:17:48,560 --> 01:17:50,360
And if I was.

1125
01:17:50,360 --> 01:17:55,560
But you are your program is only printing
true and you are missing a false

1126
01:17:55,920 --> 01:18:00,600
so the variable
it will try to help you as much as it can.

1127
01:18:00,600 --> 01:18:01,360
Okay.

1128
01:18:01,600 --> 01:18:05,400
So therefore it is now telling you
it is saying that pass that

1129
01:18:05,400 --> 01:18:09,640
if you put this false in here as well,
your your test case will pass.

1130
01:18:09,640 --> 01:18:10,240
Okay.

1131
01:18:10,520 --> 01:18:14,040
So I will again go
I will check if I am missing

1132
01:18:14,040 --> 01:18:19,080
in my program.

1133
01:18:19,080 --> 01:18:20,240
I may put

1134
01:18:23,400 --> 01:18:25,440
a false as that.

1135
01:18:25,440 --> 01:18:26,080
Okay.

1136
01:18:26,320 --> 01:18:31,560
And now if I click on Run test, this time
the test is passed.

1137
01:18:31,560 --> 01:18:32,280
Okay.

1138
01:18:32,400 --> 01:18:36,320
And if I click on reserves,
this is what I was expecting.

1139
01:18:36,360 --> 01:18:38,320
This is what my program generated.

1140
01:18:38,320 --> 01:18:40,040
And so now all good.

1141
01:18:40,040 --> 01:18:44,400
So that's when you are
when you are facing any issues, always.

1142
01:18:45,360 --> 01:18:48,040
If the test case is not passing,
always post

1143
01:18:48,080 --> 01:18:51,000
the screenshot of this results
window. Okay.

1144
01:18:51,320 --> 01:18:59,640
So I know what you are missing
and I can help you back.

1145
01:18:59,640 --> 01:19:01,960
I like that I am self solving.

1146
01:19:01,960 --> 01:19:05,040
It helps me in developing attention
to details.

1147
01:19:05,040 --> 01:19:08,440
Yes, I have Arab in homework in public.

1148
01:19:09,200 --> 01:19:12,880
I get wrong answer, but the result is fail

1149
01:19:13,120 --> 01:19:16,440
and you check one of them and explain
thank you

1150
01:19:18,120 --> 01:19:19,400
Alex,

1151
01:19:19,920 --> 01:19:21,960
which rapidly you are talking about.

1152
01:19:21,960 --> 01:19:23,480
Well, 13 and 14. Okay.

1153
01:19:23,480 --> 01:19:26,360
So if if we are left some time,

1154
01:19:26,840 --> 01:19:30,040
remind me at the end of this class,
if we are left with some time,

1155
01:19:30,040 --> 01:19:33,120
then I will show
you would be solution funded

1156
01:19:33,120 --> 01:19:37,360
appeals.

1157
01:19:37,360 --> 01:19:37,880
All right.

1158
01:19:38,840 --> 01:19:41,360
So I am closing this this class days.

1159
01:19:41,800 --> 01:19:58,080
I am closing.

1160
01:19:58,080 --> 01:20:09,640
So the second task.

1161
01:20:09,640 --> 01:20:13,080
All right, so the second task was write

1162
01:20:13,080 --> 01:20:16,400
a program to find this.

1163
01:20:16,440 --> 01:20:20,520
The error of number 3.9.

1164
01:20:21,080 --> 01:20:21,840
Okay.

1165
01:20:22,000 --> 01:20:24,840
So base, how do we calculate

1166
01:20:24,840 --> 01:20:28,200
the square of a number
in the simplest way?

1167
01:20:28,200 --> 01:20:30,240
How can we calculate
the square of a number

1168
01:20:36,000 --> 01:20:38,640
multiplied the number with itself?

1169
01:20:38,800 --> 01:20:39,560
Right.

1170
01:20:39,560 --> 01:20:43,720
Multiply the number by itself.

1171
01:20:43,720 --> 01:20:48,520
So let's first can declare a variable

1172
01:20:50,000 --> 01:20:52,680
to hold this number double

1173
01:20:54,640 --> 01:20:57,560
the number 3.9.

1174
01:20:57,560 --> 01:20:58,200
Oops.

1175
01:20:58,320 --> 01:21:04,200
Not like that is equal to 3.9.

1176
01:21:04,200 --> 01:21:04,960
All right.

1177
01:21:06,120 --> 01:21:09,240
And then so let me use this time,

1178
01:21:10,000 --> 01:21:12,720
let let's not declare a variable.

1179
01:21:13,160 --> 01:21:14,640
Okay.

1180
01:21:14,640 --> 01:21:17,800
And let's try to use

1181
01:21:17,800 --> 01:21:24,120
the results directly in the system.

1182
01:21:24,120 --> 01:21:27,120
So the program says

1183
01:21:27,120 --> 01:21:31,360
the output should
be split the square of the

1184
01:21:34,760 --> 01:21:36,720
double force,

1185
01:21:37,480 --> 01:21:39,560
the sphere of the

1186
01:21:39,560 --> 01:21:41,800
and then plus sign

1187
01:21:43,560 --> 01:21:44,920
number

1188
01:21:45,400 --> 01:21:50,160
again, plus sign.

1189
01:21:50,160 --> 01:21:55,640
That is a space is.

1190
01:21:57,080 --> 01:22:01,560
And this time I am using brackets
because I don't want

1191
01:22:01,680 --> 01:22:06,120
the can get nation to happen 40
these are okay

1192
01:22:07,200 --> 01:22:10,440
so I will the number

1193
01:22:10,440 --> 01:22:12,680
multiplied by

1194
01:22:15,200 --> 01:22:16,720
multiplied by

1195
01:22:21,240 --> 01:22:25,680
so the square of 3.9 is 5.9999.

1196
01:22:26,320 --> 01:22:49,040
Okay.

1197
01:22:49,040 --> 01:22:50,120
All right.

1198
01:22:50,360 --> 01:22:55,480
So are there any questions

1199
01:22:55,480 --> 01:23:01,560
from this place, from this task?

1200
01:23:01,560 --> 01:23:10,920
Pretty simple, right?

1201
01:23:10,920 --> 01:23:14,480
I put it so in one more thing.

1202
01:23:14,480 --> 01:23:20,080
Nice for each task,
try to create a new file

1203
01:23:20,640 --> 01:23:24,680
that looks nice and create enough.

1204
01:23:24,680 --> 01:23:27,360
So right click

1205
01:23:28,320 --> 01:23:30,840
and then task could be

1206
01:23:32,800 --> 01:23:34,200
this method is right?

1207
01:23:34,200 --> 01:23:36,880
Yes, that method is also right.

1208
01:23:37,440 --> 01:23:38,080
Katrina.

1209
01:23:38,080 --> 01:23:47,960
That method is also right.

1210
01:23:47,960 --> 01:23:52,080
No special operator
grading to the power of then not.

1211
01:23:52,080 --> 01:23:53,160
There are operators.

1212
01:23:53,160 --> 01:23:56,960
I mean there are complete classes,
complete methods

1213
01:23:56,960 --> 01:24:01,040
to calculate
sine waves and romantic romantic values,

1214
01:24:02,160 --> 01:24:03,320
imaginary numbers.

1215
01:24:03,320 --> 01:24:07,720
Everything is available in Java, but
I will show it in a later point of time.

1216
01:24:07,960 --> 01:24:09,200
Okay, all is available.

1217
01:24:09,200 --> 01:24:14,280
Don't worry.

1218
01:24:14,280 --> 01:24:20,400
But right now I am only trying to use
those concepts that I have showed you.

1219
01:24:20,400 --> 01:24:23,600
Okay, so I will avoid all other concepts
even if they are

1220
01:24:23,600 --> 01:24:44,600
better.

1221
01:24:44,600 --> 01:24:49,720
Let's solve the next task.

1222
01:24:49,720 --> 01:24:51,520
Should I close this task?

1223
01:24:51,520 --> 01:24:52,840
Have you guys type this?

1224
01:24:52,840 --> 01:24:57,440
Let's focus on our homework first
and then just do the next thing.

1225
01:24:57,440 --> 01:25:00,240
Yes. Okay.

1226
01:25:00,240 --> 01:25:23,240
I am closing this one.

1227
01:25:25,920 --> 01:25:27,520
Java is easy.

1228
01:25:27,520 --> 01:25:31,680
If we go step by step, believe me,
if we go step by step,

1229
01:25:31,880 --> 01:25:36,160
if we know a little bit
about how to use Google programing,

1230
01:25:36,160 --> 01:25:40,360
Java and this computer science job,
it does not have any match.

1231
01:25:40,440 --> 01:25:41,640
Let me tell you the benefits of

1232
01:25:43,880 --> 01:25:46,240
a lot
of the stories from previous batches.

1233
01:25:46,680 --> 01:25:50,920
Right now, believe me,
they are doing their job from beaches

1234
01:25:50,920 --> 01:25:54,400
and they are enjoying because most them,
they are working remotely.

1235
01:25:54,960 --> 01:25:59,680
They just need a laptop and an internet
connection and they are on vacation.

1236
01:25:59,760 --> 01:26:04,560
Some of them, believe me, they were here
in United states for five years.

1237
01:26:04,560 --> 01:26:08,160
They never trusted their families
because they did the jobs last

1238
01:26:08,400 --> 01:26:10,960
the day they were not having vacations
or something like that.

1239
01:26:11,600 --> 01:26:14,840
So some of them, they have visited
families after five years

1240
01:26:14,840 --> 01:26:16,280
and they are doing their job.

1241
01:26:16,280 --> 01:26:18,440
A lot of work
from Afghanistan and back here.

1242
01:26:18,520 --> 01:26:19,840
So they visited their families.

1243
01:26:19,840 --> 01:26:21,400
Now often they go

1244
01:26:21,640 --> 01:26:25,680
and at some of the companies
they will be like

1245
01:26:25,800 --> 01:26:29,920
especially like one month or two months
paid holidays are there.

1246
01:26:31,360 --> 01:26:33,400
I have not seen my family in six years.

1247
01:26:33,440 --> 01:26:34,920
They did those two schools.

1248
01:26:34,920 --> 01:26:36,720
They were very, very happy.

1249
01:26:36,720 --> 01:26:39,240
Once they got a job,
the next thing they did, they

1250
01:26:39,280 --> 01:26:42,720
they just went back to their families

1251
01:26:45,040 --> 01:26:49,680
or I am getting at of.

1252
01:26:49,680 --> 01:26:56,080
So, Maryam,
you have not defined this number variable.

1253
01:26:56,560 --> 01:26:58,120
The names are okay.

1254
01:26:58,120 --> 01:27:01,240
No you have that number variable,
but actually it is

1255
01:27:01,320 --> 01:27:06,920
the spelling mistake is number mark,
the variable that you have defined

1256
01:27:06,920 --> 01:27:14,880
and you are trying to use a number
I use spelling mistake.

1257
01:27:14,880 --> 01:27:15,480
All right.

1258
01:27:15,480 --> 01:27:18,240
So I have to write a program to play

1259
01:27:19,200 --> 01:27:21,240
the area and the parameter.

1260
01:27:21,360 --> 01:27:23,520
Okay, So here comes to Google.

1261
01:27:23,840 --> 01:27:27,400
So now I have something like, say,
I may maybe I don't know

1262
01:27:27,840 --> 01:27:29,880
how to calculate the parameter. Okay.

1263
01:27:30,160 --> 01:27:32,040
How to calculate the area. Okay.

1264
01:27:32,040 --> 01:27:35,480
So what I will do either
I can always use Google, right?

1265
01:27:35,600 --> 01:27:36,640
So I will say

1266
01:27:39,160 --> 01:27:50,680
you and then I see the formula, right?

1267
01:27:50,920 --> 01:27:52,360
They formalize.

1268
01:27:52,360 --> 01:27:55,560
I have to add length with with

1269
01:27:55,800 --> 01:27:58,440
and then I have to multiply it by two.

1270
01:27:58,680 --> 01:28:00,880
Okay. So,

1271
01:28:02,360 --> 01:28:04,320
so we can cheat the whole time

1272
01:28:04,320 --> 01:28:07,320
is not actually cheating in on your jobs.

1273
01:28:07,320 --> 01:28:08,880
Even during your interviews.

1274
01:28:08,880 --> 01:28:10,560
You can use Google

1275
01:28:11,080 --> 01:28:12,000
computer precise.

1276
01:28:12,000 --> 01:28:15,000
They they don't respect you.

1277
01:28:15,680 --> 01:28:17,640
You can always use Google.

1278
01:28:17,640 --> 01:28:20,400
You just know
you should know how to use your tools.

1279
01:28:21,240 --> 01:28:22,160
That's it.

1280
01:28:22,440 --> 01:28:32,200
That's what the job requires from you.

1281
01:28:32,200 --> 01:28:33,520
So now I know.

1282
01:28:33,520 --> 01:28:36,320
Okay, so let me Google the oops

1283
01:28:37,680 --> 01:28:41,560
the area as this area of

1284
01:28:45,360 --> 01:28:45,720
well,

1285
01:28:46,840 --> 01:28:51,600
sorry, not the triangle rectangle,

1286
01:28:51,600 --> 01:28:56,640
but with multiplied by length.

1287
01:28:56,640 --> 01:28:59,400
So now let's try to solve this problem.

1288
01:28:59,680 --> 01:29:04,120
So I am programed to put into
the area and the parameter

1289
01:29:05,200 --> 01:29:07,840
all rectangle

1290
01:29:07,880 --> 01:29:10,240
with with five and height.

1291
01:29:10,760 --> 01:29:11,400
Okay.

1292
01:29:11,920 --> 01:29:16,560
So should I declare the integer type
of variable guys

1293
01:29:16,560 --> 01:29:21,120
or should I declare the full double value

1294
01:29:24,520 --> 01:29:25,000
byte?

1295
01:29:25,000 --> 01:29:27,720
Alexi, don't use bytes.

1296
01:29:27,720 --> 01:29:32,920
Okay, so guys, tell me in a

1297
01:29:33,080 --> 01:29:36,520
can a double variable hold B integer

1298
01:29:36,520 --> 01:29:40,560
values as well?

1299
01:29:40,560 --> 01:29:45,960
But again, an integer
hold the double values.

1300
01:29:45,960 --> 01:29:48,240
So which one is better to always use?

1301
01:29:49,920 --> 01:29:52,200
Always, Always go with the doubles.

1302
01:29:52,440 --> 01:29:55,440
Okay,

1303
01:29:55,440 --> 01:29:58,280
so yes,
we can solve this with the integers.

1304
01:29:58,920 --> 01:30:02,800
Like doubles are better.

1305
01:30:02,800 --> 01:30:07,200
Double with it

1306
01:30:07,200 --> 01:30:09,720
equal to five

1307
01:30:11,440 --> 01:30:12,720
number.

1308
01:30:12,720 --> 01:30:20,440
I is equal to eight

1309
01:30:22,600 --> 01:30:25,600
and then double

1310
01:30:27,080 --> 01:30:38,360
and later.

1311
01:30:38,360 --> 01:30:41,640
So if you formula is two

1312
01:30:44,040 --> 01:30:46,360
is implied by

1313
01:30:49,080 --> 01:30:52,480
the plus

1314
01:30:59,800 --> 01:31:07,440
and then double it

1315
01:31:11,640 --> 01:31:21,720
with multiplied by height.

1316
01:31:21,720 --> 01:31:24,160
And now I can say

1317
01:31:29,000 --> 01:31:31,720
so I can copy this

1318
01:31:34,520 --> 01:31:36,080
double course

1319
01:31:37,560 --> 01:31:41,360
space then

1320
01:31:44,360 --> 01:31:45,560
it works.

1321
01:31:45,560 --> 01:31:45,960
Good.

1322
01:31:46,120 --> 01:31:49,640
Is it correct
if you use N in this exercise?

1323
01:31:49,640 --> 01:31:52,160
Yes. Yes. It's also correct.

1324
01:31:52,160 --> 01:31:54,680
But double is better

1325
01:31:54,800 --> 01:31:59,520
then you also show how to do it
in system or out line as well.

1326
01:31:59,560 --> 01:32:01,800
Yes, sure, I will tell you.

1327
01:32:01,800 --> 01:32:04,000
So if I used is it not correct?

1328
01:32:04,000 --> 01:32:05,960
No, but know it's also correct.

1329
01:32:05,960 --> 01:33:29,280
But the doubles are better.

1330
01:33:29,280 --> 01:33:31,600
So I see my output in here.

1331
01:33:32,240 --> 01:33:40,080
Let me try to do without variables.

1332
01:33:40,080 --> 01:33:42,880
So without variables, you're able to

1333
01:33:51,960 --> 01:33:54,400
this step

1334
01:33:55,840 --> 01:33:58,080
and do

1335
01:33:59,160 --> 01:34:10,760
its start.

1336
01:34:10,760 --> 01:34:14,240
Okay, so I get the same answer now,

1337
01:34:14,440 --> 01:34:18,120
but a double will take mostly
for our decimal value, right?

1338
01:34:18,280 --> 01:34:20,440
Yes, we are three.

1339
01:34:20,440 --> 01:34:23,320
We should be taking the double
for decimal values,

1340
01:34:23,360 --> 01:34:27,240
but the numbers as they can
hold the integers as well.

1341
01:34:28,280 --> 01:34:30,880
So it's always better to use double so 30.

1342
01:34:30,920 --> 01:34:35,040
Even if your calculations
are giving you a result

1343
01:34:35,800 --> 01:34:40,160
that can be a double,
you still don't get any errors.

1344
01:34:40,520 --> 01:34:42,000
Okay, so it's always better.

1345
01:34:42,000 --> 01:34:47,400
So let's say, for example,

1346
01:34:47,400 --> 01:34:50,520
you have to perform

1347
01:34:50,520 --> 01:34:53,000
the division in this case.

1348
01:34:53,520 --> 01:34:56,800
So although the numbers on

1349
01:34:56,800 --> 01:35:01,800
which I am trying to perform division,
although they are integers,

1350
01:35:02,280 --> 01:35:05,560
but what type of result
I will get precisely

1351
01:35:05,560 --> 01:35:08,760
if I try to divide five by eight,
will it be an integer

1352
01:35:08,760 --> 01:35:13,560
or a double?

1353
01:35:13,560 --> 01:35:15,200
It will be a double, right?

1354
01:35:15,200 --> 01:35:17,640
I will be getting on starting point.

1355
01:35:17,640 --> 01:35:26,760
So that's
why using doubles is always better.

1356
01:35:26,760 --> 01:35:27,720
All right.

1357
01:35:28,080 --> 01:35:31,240
So do you guys want me to go through

1358
01:35:31,240 --> 01:35:35,680
the rest of the tasks
or you guys want to break

1359
01:35:43,680 --> 01:35:45,520
or no

1360
01:35:45,520 --> 01:35:48,360
break and we more, please.

1361
01:35:49,400 --> 01:35:49,760
Okay.

1362
01:35:49,760 --> 01:35:52,160
So we see a message from Damini as well.

1363
01:35:53,120 --> 01:36:03,000
From there.

1364
01:36:03,000 --> 01:36:04,920
Just one task left to go on.

1365
01:36:04,920 --> 01:36:08,200
Okay, let's do that task as we

1366
01:36:30,280 --> 01:36:31,280
let me check.

1367
01:36:31,280 --> 01:36:40,080
How many tasks are there?

1368
01:36:40,080 --> 01:36:42,320
Actually, there are 3 to 4 tasks.

1369
01:36:42,760 --> 01:36:44,720
It's not only one task.

1370
01:36:44,720 --> 01:36:45,520
So let's do that.

1371
01:36:45,520 --> 01:36:52,280
I people do it

1372
01:36:54,280 --> 01:36:56,000
around 1140.

1373
01:36:56,000 --> 01:36:59,160
So please be back by 12

1374
01:37:04,080 --> 01:37:05,280
and remind me

1375
01:37:05,280 --> 01:37:16,800
about everybody.

1376
01:37:16,800 --> 01:37:20,440
How's everybody doing today?

1377
01:37:20,520 --> 01:37:24,960
I can take a break first.

1378
01:37:24,960 --> 01:37:27,280
All right. I hope you guys are back.

1379
01:37:28,560 --> 01:37:30,200
Will be a gem.

1380
01:37:30,200 --> 01:37:32,400
Of course I like it.

1381
01:37:32,400 --> 01:37:33,640
Yes, that is

1382
01:37:36,840 --> 01:37:37,720
is next

1383
01:37:37,720 --> 01:37:45,080
on the next task.

1384
01:37:45,080 --> 01:37:48,240
Can you please go to previous window
for a minute?

1385
01:37:48,240 --> 01:37:59,680
Yes, sure.

1386
01:37:59,680 --> 01:38:00,800
Scared I was.

1387
01:38:00,800 --> 01:38:12,640
Who is talking from my computer? Yes.

1388
01:38:12,640 --> 01:38:19,240
We are recording.

1389
01:38:19,240 --> 01:38:31,800
Okay.

1390
01:38:31,800 --> 01:38:33,480
So the next task

1391
01:38:34,800 --> 01:38:36,520
was to declare aviary.

1392
01:38:36,520 --> 01:38:40,400
It will and increase by hand Bird

1393
01:38:41,000 --> 01:38:43,320
using shorthand operator.

1394
01:38:44,000 --> 01:38:47,320
Yeah.

1395
01:38:47,320 --> 01:38:52,720
So these are number.

1396
01:38:52,720 --> 01:38:55,600
And here

1397
01:38:58,560 --> 01:39:02,480
and now let's use the shorthand operator

1398
01:39:02,640 --> 01:39:12,040
to increase it by our.

1399
01:39:13,040 --> 01:39:16,960
If I put into the value, I will see 101

1400
01:39:20,680 --> 01:39:22,640
So this is be sharpened.

1401
01:39:22,640 --> 01:39:23,720
Operator

1402
01:39:24,360 --> 01:39:26,760
All you make screen bigger and smaller.

1403
01:39:26,960 --> 01:39:31,160
So Hasim on Windows
hold down your control button

1404
01:39:31,640 --> 01:39:34,920
and then press the plus sign
to increase the font

1405
01:39:34,920 --> 01:39:38,280
and minus sign or decrease the font.

1406
01:39:38,280 --> 01:39:41,640
Or guys try to use Google right in

1407
01:39:42,040 --> 01:39:45,720
in the Google
How to increase the font size in Eclipse.

1408
01:39:46,080 --> 01:39:50,600
I want you to start practicing that.

1409
01:39:50,600 --> 01:39:53,960
It says increase by 100.

1410
01:39:53,960 --> 01:39:56,080
Okay. Okay.

1411
01:39:56,080 --> 01:40:00,360
Then we have to do this

1412
01:40:01,520 --> 01:40:06,360
declare variable and increase by 200

1413
01:40:08,520 --> 01:40:13,600
using the shorthand operator.

1414
01:40:13,600 --> 01:40:14,640
Is it good now?

1415
01:40:14,640 --> 01:40:17,080
Are we good now number plus equal to

1416
01:40:21,240 --> 01:40:22,440
and then it says

1417
01:40:22,440 --> 01:40:26,520
declare variable and decrease by 67

1418
01:40:28,680 --> 01:40:29,720
or ten

1419
01:40:36,000 --> 01:40:38,680
and remember to

1420
01:40:41,240 --> 01:40:42,360
under

1421
01:40:45,840 --> 01:40:47,840
two minus

1422
01:40:48,480 --> 01:41:05,720
quarter to 60.

1423
01:41:05,720 --> 01:41:08,840
I see practically

1424
01:41:27,320 --> 01:41:30,960
next task last

1425
01:41:45,720 --> 01:41:48,000
declared variable

1426
01:41:48,000 --> 01:41:50,400
increase is equal to 11.

1427
01:41:51,360 --> 01:41:54,400
So integer

1428
01:41:55,320 --> 01:41:58,200
excuse me quarter to 11

1429
01:41:58,200 --> 01:42:00,440
and divide

1430
01:42:00,440 --> 01:42:02,640
peace between

1431
01:42:02,640 --> 01:42:05,880
for people using shorthand operator.

1432
01:42:07,280 --> 01:42:12,040
Each person
should get an equal piece of cake.

1433
01:42:12,040 --> 01:42:14,160
I really like your teaching method.

1434
01:42:14,160 --> 01:42:17,000
Thank you. Right from the three now.

1435
01:42:17,000 --> 01:42:19,840
So guys, I have to divide something.

1436
01:42:19,840 --> 01:42:24,480
Should I use the modulus operator
or the division operator?

1437
01:42:24,800 --> 01:42:27,000
So I saw I saw in your homework.

1438
01:42:27,000 --> 01:42:29,520
Some of you use the

1439
01:42:29,920 --> 01:42:34,080
modulus operator
and some of you use the division operator.

1440
01:42:34,320 --> 01:42:37,320
So the task simplifies divide, right?

1441
01:42:37,400 --> 01:42:40,280
Divide means divide, for example. So

1442
01:42:42,000 --> 01:42:44,920
and when it says divide equally,

1443
01:42:45,120 --> 01:42:48,560
I know that I should not be using
the double data type.

1444
01:42:48,800 --> 01:42:50,080
Right. Right.

1445
01:42:50,080 --> 01:42:53,000
If I use the double letter
type can I divided equally

1446
01:42:54,560 --> 01:42:58,600
so so those who are saying double

1447
01:42:59,400 --> 01:43:03,400
if we if we use double,
then this is what will happen.

1448
01:43:04,080 --> 01:43:07,160
Now I will get

1449
01:43:07,960 --> 01:43:10,160
decimal points in my answers.

1450
01:43:10,480 --> 01:43:11,200
Okay.

1451
01:43:11,200 --> 01:43:14,080
But we have to divide complete pieces.

1452
01:43:14,280 --> 01:43:15,880
Okay. Complete pieces.

1453
01:43:15,880 --> 01:43:18,880
So if I say get

1454
01:43:19,400 --> 01:43:22,360
divide by four.

1455
01:43:22,360 --> 01:43:24,560
So yes, it is still a division,

1456
01:43:25,080 --> 01:43:27,920
but now I will be getting those
in decimal point.

1457
01:43:27,920 --> 01:43:30,920
Okay. And I have 11 pieces.

1458
01:43:31,280 --> 01:43:31,640
Okay.

1459
01:43:31,640 --> 01:43:33,960
I don't have 1.5 pieces.

1460
01:43:33,960 --> 01:43:36,040
12.3 pieces. 12.2.

1461
01:43:36,040 --> 01:43:40,320
So I have to divide the complete piece
between four people.

1462
01:43:40,320 --> 01:43:46,560
So if I use double,
I will be getting the answer in point.

1463
01:43:46,560 --> 01:43:47,000
Okay.

1464
01:43:47,000 --> 01:43:50,360
But I don't have 175 piece either.

1465
01:43:50,360 --> 01:43:52,920
How you have one piece or no piece.

1466
01:43:52,920 --> 01:43:56,240
So for that reason we should
after type, I should use case

1467
01:43:59,640 --> 01:44:01,800
the integer one, right?

1468
01:44:01,800 --> 01:44:06,560
So when we use the integer one, yes,
some of the pieces will be left over, but

1469
01:44:07,240 --> 01:44:10,080
the pieces that will be divided
between four people,

1470
01:44:10,080 --> 01:44:13,040
they will be complete pieces

1471
01:44:13,560 --> 01:44:17,120
naught half or two or 2.5 or 3.5.

1472
01:44:17,120 --> 01:44:17,600
Okay.

1473
01:44:17,760 --> 01:44:21,200
So that's why
we should use the inferior data type,

1474
01:44:21,920 --> 01:44:26,400
and that's why we should use
the division operator, not the modulus.

1475
01:44:26,400 --> 01:44:31,680
Optical modulus of the operator will
tell me how much pieces are left behind.

1476
01:44:32,160 --> 01:44:37,320
So let's if I want to know that,
okay, two pieces per person are divided.

1477
01:44:37,320 --> 01:44:42,600
And if I want to know how many pieces
are left behind, then I will use.

1478
01:44:42,600 --> 01:44:45,880
The modulus Operator
So modulus operator will tell me

1479
01:44:46,800 --> 01:44:49,200
how many pieces

1480
01:44:49,240 --> 01:44:55,440
are still there.

1481
01:44:55,440 --> 01:44:58,920
So two pieces for each person.

1482
01:44:59,240 --> 01:45:06,920
And then I have I am left with three.

1483
01:45:06,920 --> 01:45:09,240
So that was your

1484
01:45:10,360 --> 01:45:11,640
number three.

1485
01:45:11,800 --> 01:45:13,320
Is it clear? Right.

1486
01:45:13,320 --> 01:45:16,560
Why I am using that type, Why

1487
01:45:16,560 --> 01:45:31,960
I am using double.

1488
01:45:31,960 --> 01:45:34,960
So the last task.

1489
01:45:34,960 --> 01:45:37,440
So last task save

1490
01:45:38,360 --> 01:45:41,720
declared variable key piece.

1491
01:45:42,080 --> 01:45:46,560
So first step I declare this variable.

1492
01:45:46,800 --> 01:45:50,880
Okay.

1493
01:45:50,880 --> 01:45:54,160
And divide peace between seven people.

1494
01:45:54,400 --> 01:45:59,160
This time again I will use integer
because I want to divide equally.

1495
01:46:00,240 --> 01:46:02,880
I got 2.75.

1496
01:46:03,880 --> 01:46:05,040
Oh. Okay.

1497
01:46:05,040 --> 01:46:06,960
So we have two.

1498
01:46:06,960 --> 01:46:09,840
So could we use four triangle?

1499
01:46:10,160 --> 01:46:13,000
Yes. So let's try to use this
shorthand operator.

1500
01:46:13,000 --> 01:46:20,000
So it is

1501
01:46:21,520 --> 01:46:23,280
divide

1502
01:46:23,720 --> 01:46:25,880
by four.

1503
01:46:25,880 --> 01:46:28,120
Then I will see.

1504
01:46:29,280 --> 01:46:32,760
Okay, so there we commit this out

1505
01:46:35,000 --> 01:46:38,360
and if I putting this out

1506
01:46:41,640 --> 01:46:43,840
and are okay, so

1507
01:46:45,160 --> 01:46:47,640
let me make it take this one.

1508
01:46:47,880 --> 01:46:48,200
Okay.

1509
01:46:48,200 --> 01:46:53,960
For the next task.

1510
01:46:53,960 --> 01:46:59,960
So I get the answer to using the shorthand
operator.

1511
01:46:59,960 --> 01:47:03,360
Are you using double A
to hold your variable?

1512
01:47:03,760 --> 01:47:05,320
Yes. You are using double, right?

1513
01:47:05,320 --> 01:47:15,440
That's why you are important.

1514
01:47:15,440 --> 01:47:16,040
All right.

1515
01:47:16,040 --> 01:47:18,600
So let's start with last task as well.

1516
01:47:18,600 --> 01:47:22,120
So then I start with the player
variable take.

1517
01:47:22,560 --> 01:47:26,280
So I am using this one because
I already have declared this in here.

1518
01:47:26,680 --> 01:47:30,560
Or maybe I can be assigned the
value of looking like this

1519
01:47:31,760 --> 01:47:33,280
and divide

1520
01:47:33,280 --> 01:47:37,440
peace between seven people
using shorthand operator

1521
01:47:38,120 --> 01:47:41,160
and find out

1522
01:47:43,840 --> 01:47:47,080
how many pieces of cake left

1523
01:47:47,280 --> 01:47:52,480
after it was distributed
equally among seven people.

1524
01:47:52,840 --> 01:47:53,560
Okay,

1525
01:47:54,360 --> 01:47:56,480
so if I say

1526
01:47:59,760 --> 01:48:01,960
so, first
I have to use the shorthand operator.

1527
01:48:02,200 --> 01:48:06,320
Okay, so I will see it piece

1528
01:48:08,960 --> 01:48:09,840
and then median

1529
01:48:09,840 --> 01:48:13,320
time to find and I have divided this time

1530
01:48:13,320 --> 01:48:24,200
between seven.

1531
01:48:24,200 --> 01:48:27,760
I put this out.

1532
01:48:29,080 --> 01:48:31,560
So if I want to divide 25

1533
01:48:32,000 --> 01:48:34,880
in seven people equally,

1534
01:48:35,360 --> 01:48:38,720
so each one will get three,
get three pieces.

1535
01:48:39,760 --> 01:48:43,040
And then I want to check that

1536
01:48:43,040 --> 01:48:46,320
how many eggs

1537
01:48:47,600 --> 01:48:50,200
are left behind?

1538
01:48:50,200 --> 01:48:50,400
Right.

1539
01:48:50,400 --> 01:48:57,360
How many pieces are there
after I have done the division.

1540
01:48:57,880 --> 01:49:07,120
So what I can say.

1541
01:49:07,120 --> 01:49:14,560
So one thing you guys can do is that you
can reassign bigger and you can take five

1542
01:49:16,320 --> 01:49:19,240
in here and you can say

1543
01:49:21,280 --> 01:49:24,600
a these and then modulus

1544
01:49:25,960 --> 01:49:27,520
by seven.

1545
01:49:27,520 --> 01:49:30,440
Okay, So then you will know

1546
01:49:30,600 --> 01:49:35,040
how many pieces are left over?

1547
01:49:35,400 --> 01:49:36,520
Like four.

1548
01:49:36,640 --> 01:49:40,440
I think there is there
is this ambiguity in question

1549
01:49:40,560 --> 01:49:44,080
so instead of

1550
01:49:44,560 --> 01:49:45,800
using the shorthand

1551
01:49:45,800 --> 01:49:54,120
operators.

1552
01:49:54,120 --> 01:50:05,960
Okay so this is let me update this.

1553
01:50:05,960 --> 01:50:09,360
So let me remove this
shorthand operator from here

1554
01:50:10,560 --> 01:50:12,360
and then we can use

1555
01:50:12,360 --> 01:50:15,280
to find out
how many pieces of get left over after.

1556
01:50:15,600 --> 01:50:16,080
Okay.

1557
01:50:16,480 --> 01:50:20,760
And let me move this short
turn of waterfront it

1558
01:50:21,560 --> 01:50:24,960
so that it does not confuse you.

1559
01:50:24,960 --> 01:50:28,680
You guys can also point out
if something is given,

1560
01:50:28,920 --> 01:50:31,200
even if it is a little confusing for you.

1561
01:50:31,200 --> 01:50:32,880
Okay, I will update those stuff.

1562
01:50:32,880 --> 01:50:35,160
I can do this task are not created by me.

1563
01:50:36,640 --> 01:50:38,280
They are created by someone else.

1564
01:50:38,280 --> 01:50:40,440
But it's fine. I can do it now.

1565
01:50:41,640 --> 01:50:44,120
We need percentage to get remaining.

1566
01:50:44,200 --> 01:50:48,720
Yes, because the question asked
only five remaining. Yes.

1567
01:50:49,280 --> 01:50:50,680
Sorry. You are right.

1568
01:50:50,680 --> 01:50:52,680
If also possible with the short one.

1569
01:50:52,680 --> 01:50:54,120
But it will it.

1570
01:50:54,120 --> 01:50:56,200
Some of you might find it a little harder.

1571
01:50:56,800 --> 01:50:59,960
So let's just make it easier

1572
01:50:59,960 --> 01:51:02,200
so that it does not confuse you.

1573
01:51:02,200 --> 01:51:05,840
So it says faster.

1574
01:51:05,840 --> 01:51:09,720
It says divide between seven people
and then it says

1575
01:51:10,640 --> 01:51:13,160
how much is left after division.

1576
01:51:13,160 --> 01:51:16,440
So that's why the division
and the modulus, both of them.

1577
01:51:17,000 --> 01:51:24,400
Is it clear days.

1578
01:51:24,400 --> 01:51:27,760
So these are our tasks

1579
01:51:31,440 --> 01:51:33,240
and now we are ready

1580
01:51:33,240 --> 01:51:51,680
to start the last number.

1581
01:51:51,680 --> 01:51:57,000
So on next, next what is in class
three by?

1582
01:51:57,000 --> 01:51:59,440
Show me three. It will be four.

1583
01:52:00,240 --> 01:52:08,160
I got three.

1584
01:52:08,160 --> 01:52:08,720
All right.

1585
01:52:08,720 --> 01:52:14,160
So guys,
you are making a very same simple mistake.

1586
01:52:14,160 --> 01:52:17,760
What happens with the shorthand operator

1587
01:52:17,880 --> 01:52:21,800
is that it actually update it actually

1588
01:52:21,880 --> 01:52:24,480
objective value of original variable

1589
01:52:25,320 --> 01:52:28,280
so because you guys
so you guys are making this mistake.

1590
01:52:28,440 --> 01:52:32,320
If I remove this assignment,
a piece is equal to 20

1591
01:52:33,840 --> 01:52:36,360
this, this shorthand operator

1592
01:52:36,400 --> 01:52:41,200
it is actually updating this eight piece
original value.

1593
01:52:41,520 --> 01:52:42,400
Okay.

1594
01:52:42,400 --> 01:52:44,960
So you guys, you guys are not reassigning.

1595
01:52:45,320 --> 01:52:49,200
So now if I if I go to school,
I will get a different answer.

1596
01:52:49,920 --> 01:52:52,160
I will get a three and the three.

1597
01:52:52,440 --> 01:52:54,480
Well, so why I'm getting this three.

1598
01:52:54,920 --> 01:52:59,280
So seven threes are 21, right?

1599
01:52:59,840 --> 01:53:02,120
And I am left with four.

1600
01:53:02,120 --> 01:53:02,760
Okay.

1601
01:53:03,080 --> 01:53:05,880
And 47.

1602
01:53:05,880 --> 01:53:06,960
So you're

1603
01:53:08,360 --> 01:53:10,560
left me actually do this.

1604
01:53:10,560 --> 01:53:16,000
So when we are saying 725
divided by seven, so we are doing this,

1605
01:53:16,400 --> 01:53:19,600
we are taking the value 25

1606
01:53:19,800 --> 01:53:25,160
Let me actually try it.

1607
01:53:25,160 --> 01:53:28,520
So we have this 25

1608
01:53:29,280 --> 01:53:33,080
so seven

1609
01:53:33,080 --> 01:53:39,320
threes are 21 right?

1610
01:53:39,320 --> 01:53:41,320
So we are left with four.

1611
01:53:41,920 --> 01:53:43,120
All right.

1612
01:53:44,160 --> 01:53:46,840
So in here

1613
01:53:47,000 --> 01:53:51,360
let me actually draw,
put a line so that we can visually

1614
01:53:52,560 --> 01:53:56,080
differentiate because we are going to be

1615
01:53:56,400 --> 01:54:13,080
as much.

1616
01:54:13,080 --> 01:54:18,160
So these are the results of task one,
these are our duties are solved.

1617
01:54:18,360 --> 01:54:30,240
Task.

1618
01:54:30,240 --> 01:54:34,160
So once we are done with this calculation,

1619
01:54:34,160 --> 01:54:38,040
so initially there was 25
in this case piece.

1620
01:54:38,520 --> 01:54:43,040
I use different variable
name to close this job,

1621
01:54:44,520 --> 01:54:47,040
but I gave new variable piece one.

1622
01:54:47,400 --> 01:54:52,360
Okay, so a 25
and then I am performing this operation

1623
01:54:53,000 --> 01:54:55,400
with the shorthand operator. Okay.

1624
01:54:55,400 --> 01:54:59,080
On the shorthand operator,
this is actually what is going on.

1625
01:54:59,480 --> 01:55:01,480
So the shorthand operator,

1626
01:55:02,920 --> 01:55:05,160
it is something like this

1627
01:55:05,160 --> 01:55:08,760
piece is equal to two divided by seven.

1628
01:55:08,760 --> 01:55:10,800
Okay.
So this is what it is actually doing.

1629
01:55:12,120 --> 01:55:15,120
So dividing the eight piece by seven,

1630
01:55:15,120 --> 01:55:19,080
then splitting the results
back to this variable.

1631
01:55:19,120 --> 01:55:19,720
Okay.

1632
01:55:19,800 --> 01:55:25,480
So if we put into our T value
after this operation, we get three Okay,

1633
01:55:26,440 --> 01:55:28,840
so this three that

1634
01:55:29,800 --> 01:55:32,000
this trade
that you guys are seeing in here,

1635
01:55:32,000 --> 01:55:34,720
this actually gets stored

1636
01:55:36,240 --> 01:55:38,520
in the original variable

1637
01:55:38,520 --> 01:55:41,680
and then after offered this line
on this line

1638
01:55:41,680 --> 01:55:46,400
47, you are actually doing this
three modulus

1639
01:55:47,400 --> 01:55:52,080
seven So we learn yesterday
that if we try to take them

1640
01:55:52,120 --> 01:55:55,200
on less of a shorter number,
we the bigger number,

1641
01:55:55,320 --> 01:55:58,680
the answer will always be shorter

1642
01:55:59,720 --> 01:56:01,440
innocuously.

1643
01:56:01,440 --> 01:56:04,680
So this three is coming from here.

1644
01:56:05,000 --> 01:56:05,600
Okay.

1645
01:56:05,600 --> 01:56:13,280
Is it clear
those who are getting the answer three.

1646
01:56:13,280 --> 01:56:16,240
So you guys can maybe
use a different variable name

1647
01:56:16,240 --> 01:56:18,920
or maybe you can just find a value

1648
01:56:20,760 --> 01:56:23,840
question asks for only how many left

1649
01:56:23,960 --> 01:56:27,000
I think and only to calculate
division is enough.

1650
01:56:27,000 --> 01:56:30,400
So Aisha because chances divide

1651
01:56:30,480 --> 01:56:32,880
the is between seven people.

1652
01:56:33,720 --> 01:56:36,240
Okay so the question also says divide

1653
01:56:37,440 --> 01:56:38,200
this piece

1654
01:56:38,200 --> 01:56:41,680
between seven people
using shorthand operator.

1655
01:56:42,040 --> 01:56:42,880
Okay.

1656
01:56:43,440 --> 01:56:46,440
And then find out how many pieces of it

1657
01:56:46,440 --> 01:56:49,400
are left over
if it was distributed equally.

1658
01:56:49,680 --> 01:56:55,080
So it's fine if you have only only
calculated how many pieces are left.

1659
01:56:55,080 --> 01:56:57,320
It is also fine
if you have calculated both.

1660
01:56:57,320 --> 01:56:57,840
Okay,

1661
01:56:59,280 --> 01:57:02,200
I just changed the variable and it works.

1662
01:57:02,200 --> 01:57:05,880
It was taking the value after the. Yes.

1663
01:57:06,760 --> 01:57:09,520
All right, so let's move forward.

1664
01:57:09,520 --> 01:57:14,240
Nice.

1665
01:57:14,240 --> 01:57:16,280
So today we will discuss about

1666
01:57:18,320 --> 01:57:20,560
the side being part means

1667
01:57:20,560 --> 01:57:24,080
how many pieces left
of the original name. Yes.

1668
01:57:24,800 --> 01:57:28,120
So today's class is about typecast

1669
01:57:28,960 --> 01:57:32,400
if statements and if else statements.

1670
01:57:33,640 --> 01:57:37,080
So first, let's try to understand
what is costing.

1671
01:57:37,560 --> 01:57:40,520
So you guys must have noticed that

1672
01:57:41,680 --> 01:57:44,760
we cannot place the values

1673
01:57:45,480 --> 01:57:49,680
of sometimes
we cannot place the values of one vector

1674
01:57:49,760 --> 01:57:53,600
type into an other type of variable.

1675
01:57:53,600 --> 01:57:58,680
For example,
if we try to place a double value,

1676
01:57:58,680 --> 01:58:02,040
if we try to place a double value
inside an integer

1677
01:58:02,040 --> 01:58:05,160
type of variable,
what happens if I try to do this?

1678
01:58:06,320 --> 01:58:08,640
I have a double value with decimal point

1679
01:58:09,120 --> 01:58:12,520
and I am trying to store it
inside an integer.

1680
01:58:12,600 --> 01:58:15,520
Can I do that?

1681
01:58:15,520 --> 01:58:16,880
I will get an error.

1682
01:58:16,880 --> 01:58:35,800
So this is what I am talking about.

1683
01:58:35,800 --> 01:58:40,800
And there actually I have integer number

1684
01:58:42,440 --> 01:58:45,960
ten and and bradburn

1685
01:58:47,400 --> 01:58:53,760
number who.

1686
01:58:53,760 --> 01:58:57,560
So I can I can I can do this

1687
01:58:57,800 --> 01:59:01,800
if I say number two is equal to number,

1688
01:59:03,320 --> 01:59:04,080
I can do that.

1689
01:59:04,080 --> 01:59:05,920
I don't get any errors.

1690
01:59:05,920 --> 01:59:08,760
And even if I

1691
01:59:08,920 --> 01:59:19,840
point this out, I don't get any errors.

1692
01:59:20,280 --> 01:59:22,720
And actually actually let me do this,

1693
01:59:24,360 --> 01:59:26,480
remove this.

1694
01:59:26,480 --> 01:59:29,440
So I have a variable which is of typing.

1695
01:59:31,080 --> 01:59:33,320
I have another box and another variable

1696
01:59:34,000 --> 01:59:35,160
which is

1697
01:59:36,360 --> 01:59:38,280
of type double.

1698
01:59:38,280 --> 01:59:40,560
Okay. Yes, I am

1699
01:59:41,040 --> 01:59:43,560
redefining not I am not redefining it.

1700
01:59:43,560 --> 01:59:45,400
I am reassigning it.

1701
01:59:45,400 --> 01:59:49,640
So this part is called definition
defining a variable.

1702
01:59:50,360 --> 01:59:53,880
This part is called
assigning a value to the table.

1703
01:59:54,440 --> 01:59:54,960
Read.

1704
01:59:54,960 --> 01:59:58,400
Defining is actually not possible in Java.

1705
01:59:59,120 --> 02:00:01,920
So if I tried to do this, if I say

1706
02:00:02,120 --> 02:00:05,720
double number, this is what will say that

1707
02:00:05,720 --> 02:00:09,600
I am trying to redefine something
so this is not allowed in Java.

1708
02:00:09,840 --> 02:00:10,680
You really get that. If

1709
02:00:12,480 --> 02:00:14,640
I am reassigning

1710
02:00:14,880 --> 02:00:16,680
or assigning

1711
02:00:17,920 --> 02:00:22,320
this number is is actually a smaller box.

1712
02:00:22,800 --> 02:00:24,640
It's actually a smaller box.

1713
02:00:24,640 --> 02:00:27,600
This double is actually a bigger box.

1714
02:00:27,600 --> 02:00:32,520
So right now I am picking the contents
of smaller box and place.

1715
02:00:32,520 --> 02:00:34,720
I am trying to place them in a bigger box.

1716
02:00:34,720 --> 02:00:39,160
So in our in real life,
if I try to do this, is there any harm

1717
02:00:39,160 --> 02:00:43,320
or is there any problem that I get
if I try to place

1718
02:00:43,640 --> 02:00:46,800
the contents of a smaller box in a bigger

1719
02:00:47,960 --> 02:00:50,160
I don't have any issues doing that.

1720
02:00:50,640 --> 02:00:52,720
What if I try to do the reverse guys?

1721
02:00:53,480 --> 02:01:00,000
If I try to do the reverse,
if I have a double,

1722
02:01:00,000 --> 02:01:04,560
if I have a double unit,

1723
02:01:04,560 --> 02:01:08,280
if I try to place

1724
02:01:09,000 --> 02:01:12,560
now the bigger content in do something

1725
02:01:13,800 --> 02:01:15,600
now, I will have issues.

1726
02:01:15,600 --> 02:01:17,720
So let's say,

1727
02:01:18,280 --> 02:01:19,960
let's say I have this box.

1728
02:01:19,960 --> 02:01:22,600
Okay?

1729
02:01:22,600 --> 02:01:24,240
And next to this is Sebastian.

1730
02:01:24,240 --> 02:01:29,160
Sebastian no means today.

1731
02:01:29,160 --> 02:01:29,520
Okay,

1732
02:01:31,080 --> 02:01:32,920
so this is the double

1733
02:01:34,320 --> 02:01:35,600
double box

1734
02:01:39,200 --> 02:01:41,600
and this one

1735
02:01:41,600 --> 02:01:44,000
is an integer box.

1736
02:01:44,000 --> 02:01:49,040
Sebastian, I hope you don't mind.

1737
02:01:49,040 --> 02:01:51,120
They will be coming down to it,
not working.

1738
02:01:51,760 --> 02:01:53,560
So now if I try.

1739
02:01:53,560 --> 02:01:56,280
If I try to feed Sebastian in here,

1740
02:01:57,560 --> 02:01:59,640
it may happen that we may only.

1741
02:01:59,760 --> 02:02:02,040
Only see the body of Sebastian in here.

1742
02:02:02,040 --> 02:02:02,680
Right.

1743
02:02:03,160 --> 02:02:06,280
Maybe they do out

1744
02:02:07,240 --> 02:02:07,920
right.

1745
02:02:08,680 --> 02:02:10,440
So I am losing something.

1746
02:02:10,440 --> 02:02:13,800
Okay, so in here

1747
02:02:13,800 --> 02:02:18,040
I have lost of information.

1748
02:02:18,040 --> 02:02:20,800
So that's why I get this data.

1749
02:02:22,000 --> 02:02:22,560
Okay?

1750
02:02:22,560 --> 02:02:25,840
That's why I said. Now

1751
02:02:25,840 --> 02:02:27,280
I want you to focus, guys.

1752
02:02:27,280 --> 02:02:29,640
I want you to focus. What if.

1753
02:02:30,920 --> 02:02:31,880
What if

1754
02:02:33,760 --> 02:02:34,440
I have this?

1755
02:02:34,440 --> 02:02:37,760
Then now we all know this.

1756
02:02:37,760 --> 02:02:40,680
That this pen, this pen, it can.

1757
02:02:40,680 --> 02:02:42,880
It can fit into the same digit.

1758
02:02:42,880 --> 02:02:45,000
Right. Embrace this pen.

1759
02:02:45,000 --> 02:02:47,520
Now, I know it can easily fit

1760
02:02:48,040 --> 02:02:50,400
inside this number.

1761
02:02:50,680 --> 02:02:51,240
Right.

1762
02:02:51,240 --> 02:02:55,040
Can you please repeat defining
your assigning the assignment moment.

1763
02:02:55,480 --> 02:02:59,640
So Aisha and this part is called
defining a variable.

1764
02:03:00,080 --> 02:03:00,800
Okay,

1765
02:03:01,520 --> 02:03:08,400
let break it down.

1766
02:03:08,400 --> 02:03:10,280
It's also in here.

1767
02:03:10,280 --> 02:03:12,480
We are also defining

1768
02:03:12,480 --> 02:03:13,720
and here

1769
02:03:14,760 --> 02:03:20,280
we are asking, here we have assignment.

1770
02:03:21,360 --> 02:03:27,200
And if I tried to assign either value
to the same variable, then I will.

1771
02:03:27,200 --> 02:03:29,520
I am reassigning something that I type.

1772
02:03:29,520 --> 02:03:31,520
Share this same variable name No

1773
02:03:32,520 --> 02:03:34,120
one variable name.

1774
02:03:34,120 --> 02:03:37,040
Even if you are trying to declare the same

1775
02:03:37,800 --> 02:03:41,040
for integer and then double or
not, it is also not allowed.

1776
02:03:42,400 --> 02:03:45,080
So let's assume,

1777
02:03:45,080 --> 02:03:50,480
let's let's
take the example of Sebastian and you.

1778
02:03:50,480 --> 02:03:51,800
So this is in page.

1779
02:03:51,800 --> 02:04:00,840
This is double.

1780
02:04:00,840 --> 02:04:02,920
This is in. Right.

1781
02:04:03,240 --> 02:04:05,160
Let's let's make Sebastian smaller

1782
02:04:05,160 --> 02:04:09,880
this time.

1783
02:04:09,880 --> 02:04:15,040
So I know that the content
that I have inside this bigger box,

1784
02:04:15,200 --> 02:04:18,920
it can easily fit in here right?

1785
02:04:18,920 --> 02:04:21,080
Even though I am picking the content

1786
02:04:22,280 --> 02:04:23,800
from a bigger box.

1787
02:04:23,800 --> 02:04:25,280
We got a box. I know.

1788
02:04:25,280 --> 02:04:28,920
I know that the
the actual content, it's actually smaller.

1789
02:04:29,000 --> 02:04:31,440
I know it will fit in this smaller box.

1790
02:04:31,960 --> 02:04:36,720
So now if I try to fit this inside
the smaller box, is there any harm guys,

1791
02:04:37,320 --> 02:04:39,480
if I know that actual content

1792
02:04:40,680 --> 02:04:45,360
and is outside?

1793
02:04:45,360 --> 02:04:51,280
Okay, so we have to remove that
and I want to

1794
02:04:51,280 --> 02:04:55,280
complete account is gone.

1795
02:04:55,280 --> 02:04:55,560
Okay.

1796
02:04:56,600 --> 02:04:59,080
So if I know

1797
02:05:00,400 --> 02:05:02,880
that the actual content

1798
02:05:02,880 --> 02:05:05,560
is something that can fit,

1799
02:05:06,480 --> 02:05:09,400
then I should be allowed to do that.

1800
02:05:09,640 --> 02:05:12,080
Right. But what happens, Right.

1801
02:05:12,560 --> 02:05:17,280
I this that I have stored them in here

1802
02:05:17,280 --> 02:05:19,520
and that can easily 13 and integer

1803
02:05:20,440 --> 02:05:22,800
but still Java is giving me edit

1804
02:05:22,800 --> 02:05:25,080
okay because Java don't know

1805
02:05:25,600 --> 02:05:29,440
what I have stored inside of that variable
or java

1806
02:05:29,440 --> 02:05:33,680
going to go and check inside the box
what is stored in there.

1807
02:05:34,040 --> 02:05:37,320
Java only knows that I am trying

1808
02:05:37,320 --> 02:05:40,000
to pick something from a bigger box

1809
02:05:40,600 --> 02:05:43,920
and I am trying to put that
in a smaller box.

1810
02:05:44,040 --> 02:05:46,400
Java. Don't check the actual content.

1811
02:05:46,400 --> 02:05:48,720
Okay, so in this scenario,

1812
02:05:49,080 --> 02:05:52,720
if I have something like this,
I can force Java.

1813
02:05:53,000 --> 02:05:58,400
I can say to Java that Java,
I know the content can fit in there.

1814
02:05:58,960 --> 02:06:00,520
So how do I say

1815
02:06:02,040 --> 02:06:03,480
I use these two

1816
02:06:03,480 --> 02:06:06,960
brackets and I see integer.

1817
02:06:07,600 --> 02:06:10,800
Okay, I said to Java that, Hey, Java,

1818
02:06:10,800 --> 02:06:13,120
I know this is a double value,

1819
02:06:13,880 --> 02:06:18,960
but I want and I know sometimes I know
sometimes that can double

1820
02:06:19,720 --> 02:06:24,120
can cannot fit in an integer
but you know in here

1821
02:06:24,120 --> 02:06:28,400
I know for sure that this
and it can fit into this box.

1822
02:06:28,400 --> 02:06:31,320
So can you please try to convert that?

1823
02:06:31,320 --> 02:06:33,920
Can you please do this placement

1824
02:06:35,480 --> 02:06:36,160
in here?

1825
02:06:36,160 --> 02:06:40,320
Because I am sure 100%
I will not be losing any information.

1826
02:06:40,360 --> 02:06:43,080
There is no harm doing that. So please.

1827
02:06:43,440 --> 02:06:48,480
So in here I am explicitly saying,
Hey Java, please take the contents

1828
02:06:48,840 --> 02:06:53,640
from the bigger box from the well
and put it inside the smaller box.

1829
02:06:53,640 --> 02:06:55,680
Because I know.

1830
02:06:55,680 --> 02:06:59,040
Because I know that the contents
they can fit.

1831
02:06:59,240 --> 02:07:03,720
Okay, so this process of explicitly saying

1832
02:07:05,360 --> 02:07:06,040
that a team

1833
02:07:06,040 --> 02:07:11,160
can fit in a letter
box is called typecasting.

1834
02:07:11,160 --> 02:07:14,640
Okay, It's a very good question
why we need to do this.

1835
02:07:14,800 --> 02:07:18,960
Okay, so, guys,
sometimes what happens is that so

1836
02:07:19,960 --> 02:07:22,680
I have showed you that

1837
02:07:22,680 --> 02:07:27,200
you guys will be writing thousands
and thousands of lines of code, right.

1838
02:07:27,720 --> 02:07:30,840
To solve real life problems,
even millions lines of code.

1839
02:07:31,400 --> 02:07:34,160
A single person can not write
all of that code.

1840
02:07:34,480 --> 02:07:36,920
You guys will be working in teams.

1841
02:07:36,920 --> 02:07:40,960
In my previous company,
there was a team of 50 developers

1842
02:07:40,960 --> 02:07:44,760
and we used to write code
for 400 plus services.

1843
02:07:45,440 --> 02:07:48,600
So some part of the code is written by me,
some other

1844
02:07:48,720 --> 02:07:50,800
the other part is maybe written
by someone else.

1845
02:07:50,800 --> 02:07:53,080
The other part is written by someone else.

1846
02:07:53,080 --> 02:07:56,400
Now, it is also possible that maybe,
Alexi,

1847
02:07:56,400 --> 02:08:00,120
maybe you you are you are storing
some information in an integer.

1848
02:08:00,240 --> 02:08:00,720
Right?

1849
02:08:00,840 --> 02:08:03,720
But I have written my logic for doubles

1850
02:08:04,320 --> 02:08:07,880
because I didn't have time
to go through all of your code.

1851
02:08:08,120 --> 02:08:08,960
I was writing.

1852
02:08:08,960 --> 02:08:14,240
My logic are according to me, you have
written your logic according to you.

1853
02:08:14,480 --> 02:08:16,560
And now we have to combine that code.

1854
02:08:17,240 --> 02:08:20,880
We have to combine that code
if typecasting is not possible

1855
02:08:21,280 --> 02:08:26,360
and if you have used doubles in your code,
I will not be able to translate either.

1856
02:08:26,360 --> 02:08:29,040
I have put you my code
or you to change your code.

1857
02:08:29,280 --> 02:08:32,880
Okay, so this convergence
between different variables,

1858
02:08:33,240 --> 02:08:36,960
it makes that merging of code easier.

1859
02:08:36,960 --> 02:08:41,400
Let's say, for example,
you have written a code 40 years later,

1860
02:08:41,640 --> 02:08:45,400
four years before you left that company,
someone else divided out some code

1861
02:08:45,400 --> 02:08:47,360
and now you are purging that.

1862
02:08:47,360 --> 02:08:52,120
So Java is giving you flexibility
that you don't have to change all the code

1863
02:08:52,400 --> 02:08:55,480
if some part is written
using a different type.

1864
02:08:56,080 --> 02:09:00,080
And the other part is written
using a different database.

1865
02:09:00,120 --> 02:09:05,880
Now you guys can easily convert the data
types between each other if you know

1866
02:09:06,360 --> 02:09:10,320
there is no harm, you can convert
the data ties between each of them.

1867
02:09:10,320 --> 02:09:13,680
You can transfer the information
from one type of variable

1868
02:09:14,560 --> 02:09:16,240
to the other type of variable.

1869
02:09:16,240 --> 02:09:20,160
Okay, So you get this
functionality by typecasting,

1870
02:09:21,440 --> 02:09:23,520
just like an item costing way

1871
02:09:23,520 --> 02:09:27,640
force one type to other type.

1872
02:09:27,640 --> 02:09:28,840
You are right.

1873
02:09:29,000 --> 02:09:31,840
Is it clear why we needed scary stories?

1874
02:09:31,840 --> 02:09:34,000
Begin here with projects support.

1875
02:09:34,000 --> 02:09:38,760
Put hundreds more.

1876
02:09:38,760 --> 02:09:51,040
So that's why we need typecasting.

1877
02:09:51,040 --> 02:09:53,720
And have you guys seen those converters?

1878
02:09:54,280 --> 02:09:56,440
So you buy something maybe

1879
02:09:58,400 --> 02:10:00,400
that takes maybe

1880
02:10:00,400 --> 02:10:05,520
110 words as the input
and then you try to use in another socket

1881
02:10:05,520 --> 02:10:10,840
that works on 22 and we use that converter
in between or adapter.

1882
02:10:10,840 --> 02:10:15,480
So it is that adapter taking the one thing
and converting it to the other thing

1883
02:10:15,720 --> 02:10:21,840
so that these things can be compatible.

1884
02:10:21,840 --> 02:10:25,480
Actually, my nose is hurting from inside
when I am speaking.

1885
02:10:25,480 --> 02:10:28,560
I had my surgery last week

1886
02:10:28,560 --> 02:10:31,320
so I cannot even laugh

1887
02:10:31,320 --> 02:10:35,280
really.

1888
02:10:35,280 --> 02:10:38,240
So now let me show you

1889
02:10:39,440 --> 02:10:40,680
which data type.

1890
02:10:40,680 --> 02:10:42,720
Okay, so assigning

1891
02:10:43,880 --> 02:10:46,640
a value of

1892
02:10:46,640 --> 02:10:48,360
one type

1893
02:10:48,920 --> 02:10:52,800
to a to a variable of an other type.

1894
02:10:52,800 --> 02:10:57,720
Okay So the data type,

1895
02:10:57,720 --> 02:11:01,320
the data type, they are the variables.

1896
02:11:01,320 --> 02:11:03,960
They are all different data types.

1897
02:11:03,960 --> 02:11:12,280
And we are trying to move the data
between those two different variables.

1898
02:11:12,280 --> 02:11:15,840
So this process is called costing.

1899
02:11:15,920 --> 02:11:18,560
Okay, so let me repeat again,
assigning a value

1900
02:11:19,800 --> 02:11:24,600
of one type to a variable of another type

1901
02:11:25,200 --> 02:11:27,400
is known as type question.

1902
02:11:28,360 --> 02:11:31,680
And there are two types of typecasting.

1903
02:11:31,880 --> 02:11:34,280
So guys, notice this.

1904
02:11:34,840 --> 02:11:36,960
Notice if I have an integer

1905
02:11:55,320 --> 02:11:57,960
in here, I am again doing the same thing.

1906
02:11:58,680 --> 02:12:01,920
I am trying to assign the value

1907
02:12:02,160 --> 02:12:05,480
from the one type of variable
to the other type.

1908
02:12:06,000 --> 02:12:08,280
But in here I don't get any errors.

1909
02:12:08,600 --> 02:12:10,400
Java does not give me any errors.

1910
02:12:10,400 --> 02:12:12,360
It does not bother me.

1911
02:12:12,360 --> 02:12:15,560
So yes, this is also typecasting.

1912
02:12:15,840 --> 02:12:20,440
So moving things from smaller box
to the bigger box.

1913
02:12:20,720 --> 02:12:23,520
So when we move something
from a smaller box to a bigger box,

1914
02:12:23,520 --> 02:12:27,360
we are 100% sure
that this thing can fit in the bigger box.

1915
02:12:27,880 --> 02:12:31,960
But when we are doing the reverse,
sometimes it can fit,

1916
02:12:32,240 --> 02:12:34,640
but the other times
it might not fit right?

1917
02:12:35,280 --> 02:12:40,680
So this typecasting is automatic, okay,

1918
02:12:41,040 --> 02:12:44,440
It's implicit, it's widening.

1919
02:12:44,440 --> 02:12:45,400
So three names.

1920
02:12:45,400 --> 02:12:48,200
Okay,
then just technically, don't worry about

1921
02:12:49,760 --> 02:12:51,120
this typecasting.

1922
02:12:51,120 --> 02:12:53,880
We have to explicitly do this right.

1923
02:12:53,880 --> 02:12:56,960
We have to explicitly
tell the job out there, page out loud.

1924
02:12:56,960 --> 02:13:00,200
Don't worry,
this thing can fit in the smaller box.

1925
02:13:00,200 --> 02:13:02,360
Please, please fit it right.

1926
02:13:03,360 --> 02:13:04,680
So this one. This.

1927
02:13:04,680 --> 02:13:08,520
This one is called explicit typecasting.

1928
02:13:08,520 --> 02:13:10,600
Okay. Or narrowing.

1929
02:13:10,600 --> 02:13:15,480
We are picking something and we are trying
to compress in a smaller box.

1930
02:13:15,480 --> 02:13:17,040
Okay, so this is close.

1931
02:13:17,040 --> 02:13:19,360
Narrowing, explicit.

1932
02:13:19,360 --> 02:13:22,280
Okay, So that's why

1933
02:13:22,760 --> 02:13:26,000
we have these names so widening.

1934
02:13:26,000 --> 02:13:30,440
We think something from smaller box again
into bigger box.

1935
02:13:30,440 --> 02:13:33,720
So we are widening this space.

1936
02:13:33,720 --> 02:13:36,200
It's also called implicit

1937
02:13:36,760 --> 02:13:39,120
or it's automatic

1938
02:13:41,560 --> 02:13:41,880
format.

1939
02:13:41,880 --> 02:13:44,880
You you are from Afghanistan

1940
02:13:44,880 --> 02:13:48,520
and all out of standardizing the

1941
02:13:49,600 --> 02:13:52,200
you guys understand both in the Urdu and

1942
02:13:52,520 --> 02:13:56,800
and all the movies
and get everything right very closely

1943
02:13:59,120 --> 02:14:00,600
at least one is automatic.

1944
02:14:00,600 --> 02:14:03,440
So you tell me which one is automatic?

1945
02:14:04,320 --> 02:14:06,360
Which one is automatic?

1946
02:14:06,760 --> 02:14:16,480
Is this one automatic or one is automatic?

1947
02:14:16,480 --> 02:14:17,880
This one is automatic.

1948
02:14:17,880 --> 02:14:19,440
I am not doing anything.

1949
02:14:19,440 --> 02:14:21,960
It is being done automatically by Java.

1950
02:14:22,080 --> 02:14:22,760
Right?

1951
02:14:23,040 --> 02:14:25,560
So this one is automatic.

1952
02:14:25,560 --> 02:14:27,160
Which one is implicit? Right.

1953
02:14:27,160 --> 02:14:30,400
Which one is implicit?

1954
02:14:30,400 --> 02:14:41,400
First one or the second one?

1955
02:14:41,400 --> 02:14:43,640
So this one is implicit.

1956
02:14:44,200 --> 02:14:47,640
Implicit
I am not explicitly doing in here.

1957
02:14:47,640 --> 02:14:52,320
I am explicitly doing it in
which in which one is widening,

1958
02:14:52,560 --> 02:15:04,200
which one is widening, in which case

1959
02:15:04,400 --> 02:15:12,120
the size of the box is getting wider.

1960
02:15:12,120 --> 02:15:14,520
The second one, this one is widening.

1961
02:15:14,520 --> 02:15:16,800
Okay, this one is narrowing.

1962
02:15:17,040 --> 02:15:20,120
We are actually shrinking the space.

1963
02:15:20,120 --> 02:15:21,040
All right.

1964
02:15:21,040 --> 02:15:25,880
So now, guys, this is also possible
and this is also possible that

1965
02:15:28,280 --> 02:15:29,960
if we try to sum

1966
02:15:29,960 --> 02:15:32,960
if we
try to figure something from Maker Box,

1967
02:15:33,440 --> 02:15:36,440
it is also possible

1968
02:15:37,400 --> 02:15:40,920
that big thing
may not fit in the beta box.

1969
02:15:41,040 --> 02:15:46,920
Okay, so this is also possible.

1970
02:15:46,920 --> 02:15:50,080
And this it can lead to two

1971
02:15:52,760 --> 02:15:54,560
something very unexpected.

1972
02:15:54,560 --> 02:15:54,960
Okay.

1973
02:15:54,960 --> 02:15:55,800
Losing the data.

1974
02:15:55,800 --> 02:15:58,680
For example, if I say

1975
02:15:58,680 --> 02:16:00,800
in pager

1976
02:16:00,880 --> 02:16:02,680
number

1977
02:16:03,000 --> 02:16:05,880
five is equal to one, two, five, six,

1978
02:16:06,840 --> 02:16:10,920
and if I try to fit in a smaller box

1979
02:16:10,920 --> 02:16:22,440
where it's very, very small box right.

1980
02:16:22,440 --> 02:16:27,120
So in here again, I am trying to fit
from a bigger box to a smaller box.

1981
02:16:27,320 --> 02:16:29,000
So how can I tell you about that?

1982
02:16:29,000 --> 02:16:31,280
Hey, don't worry. This thing can fit.

1983
02:16:32,040 --> 02:16:32,760
How can I tell?

1984
02:16:32,760 --> 02:16:35,040
What is the syntax?
What should I write in here?

1985
02:16:35,600 --> 02:16:38,680
If I want this
for this convergence to be forced,

1986
02:16:40,120 --> 02:16:41,280
I need to write

1987
02:16:41,280 --> 02:16:44,760
brackets and I need to write byte.

1988
02:16:45,360 --> 02:16:48,240
Okay, so what do you guys think?

1989
02:16:48,240 --> 02:16:50,600
What will happen
if I try to print this number six?

1990
02:16:51,920 --> 02:16:54,960
I might get something very weird.

1991
02:16:55,160 --> 02:16:55,800
Okay.

1992
02:16:56,040 --> 02:16:58,680
Because now we are forcing Sebastian.

1993
02:16:58,920 --> 02:17:01,240
So I got -24.

1994
02:17:01,560 --> 02:17:02,280
Okay,

1995
02:17:03,000 --> 02:17:06,800
so features in September features and your

1996
02:17:10,040 --> 02:17:12,600
so in here we have we might,

1997
02:17:13,080 --> 02:17:15,680
we might lose this information
or maybe even

1998
02:17:15,720 --> 02:17:18,920
we would change the

1999
02:17:18,920 --> 02:17:21,600
actual context into something different.

2000
02:17:21,600 --> 02:17:22,200
Okay.

2001
02:17:22,440 --> 02:17:25,680
So whenever you are performing
this kind of work,

2002
02:17:25,800 --> 02:17:31,520
make sure make, sure
the pain can fit inside that box.

2003
02:17:31,520 --> 02:17:33,720
Otherwise the results can be disastrous.

2004
02:17:34,080 --> 02:17:43,320
Okay.

2005
02:17:43,320 --> 02:17:45,480
Are we often Monday?

2006
02:17:45,480 --> 02:17:47,000
I think. Yes, you are.

2007
02:17:47,000 --> 02:17:50,000
Do you guys have classes on Mondays?

2008
02:17:50,360 --> 02:17:54,800
I think you know, after
I guess after four weeks

2009
02:17:54,800 --> 02:17:59,920
you guys will be having so Romani saying,
why we go?

2010
02:18:00,280 --> 02:18:02,880
Why We got -40.

2011
02:18:03,240 --> 02:18:05,040
Okay.

2012
02:18:05,040 --> 02:18:07,320
So this is what is happening right now.

2013
02:18:07,320 --> 02:18:07,920
Okay.

2014
02:18:08,240 --> 02:18:10,720
So maybe you
you have tried to forcefully to

2015
02:18:11,160 --> 02:18:14,880
fit Sebastian in here
and now it has deformed to something else.

2016
02:18:14,880 --> 02:18:15,600
I might be okay.

2017
02:18:15,600 --> 02:18:18,000
Something like this.
So it has become something else.

2018
02:18:19,200 --> 02:18:21,320
So that's why you got -24.

2019
02:18:21,920 --> 02:18:25,360
So when Java tries to perform
this calculation,

2020
02:18:25,360 --> 02:18:28,320
it follows a special procedure. Okay.

2021
02:18:28,640 --> 02:18:33,120
And when you try to fit a very big number
into a box that is smaller.

2022
02:18:33,360 --> 02:18:38,680
So sometimes maybe it is only able
to fit this part of this box.

2023
02:18:38,680 --> 02:18:42,840
So this convergence
is actually happening in binary.

2024
02:18:43,320 --> 02:18:46,400
So instead of this, Wolf,
I find the computer is floating

2025
02:18:46,400 --> 02:18:51,360
something like this. So

2026
02:18:53,400 --> 02:18:54,400
this is zero, actually.

2027
02:18:54,400 --> 02:18:55,000
Okay.

2028
02:18:55,840 --> 02:18:59,440
In computers, if you have to represent
a negative number,

2029
02:18:59,680 --> 02:19:04,240
you make it
the first bit as one, okay, As one.

2030
02:19:04,760 --> 02:19:07,080
And if you have to put something

2031
02:19:07,280 --> 02:19:10,120
if you have to show the plus sign,
you make it to zero.

2032
02:19:10,680 --> 02:19:12,600
So this number was positive.

2033
02:19:12,600 --> 02:19:14,280
So first bit was zero.

2034
02:19:15,400 --> 02:19:17,360
Then you try to fit in a smaller box.

2035
02:19:17,360 --> 02:19:20,360
Maybe you have
no you have lost this, first of all, big.

2036
02:19:20,840 --> 02:19:25,200
And now the remaining part
that you left with it starts with a one.

2037
02:19:25,200 --> 02:19:29,760
So Java is thinking that
maybe it is a -24.

2038
02:19:30,640 --> 02:19:33,000
Okay, this is actually complete science,

2039
02:19:33,200 --> 02:19:37,120
how the calculations are performed
under the hood.

2040
02:19:37,120 --> 02:19:39,360
Okay. And it all happens in binary.

2041
02:19:39,680 --> 02:19:42,760
So if you guys have not understood
this part, it's fine.

2042
02:19:42,760 --> 02:19:46,080
Just understand this
that if you are trying to fit something

2043
02:19:46,080 --> 02:19:50,040
very big into something very small things,
you you guys will be getting an

2044
02:19:50,200 --> 02:19:51,760
unexpected visit.

2045
02:19:51,760 --> 02:19:54,440
But in actual,
the results are very calculated.

2046
02:19:54,440 --> 02:19:57,800
They are not unexpected, but
there is a complete science behind that.

2047
02:19:57,800 --> 02:19:59,840
And I don't want you to get into that.

2048
02:19:59,840 --> 02:20:01,840
Fine.

2049
02:20:01,840 --> 02:20:04,800
Even if we typecast,
we still have that a lot.

2050
02:20:04,920 --> 02:20:09,160
So what is the use of forcing
to change that that I saw

2051
02:20:10,320 --> 02:20:11,800
right now?

2052
02:20:11,800 --> 02:20:16,120
You know the actual contents
that you have stored inside this variable.

2053
02:20:16,520 --> 02:20:20,880
Later on, you guys will learn
how to read data from files,

2054
02:20:20,880 --> 02:20:25,000
how to read data from Internet,
how to read from data from keyboard.

2055
02:20:25,000 --> 02:20:27,480
User can enter anything from the keyboard.

2056
02:20:27,680 --> 02:20:30,680
The logic will be same,
but the data can be different.

2057
02:20:30,680 --> 02:20:31,720
In those scenarios.

2058
02:20:31,720 --> 02:20:35,080
You will not be knowing in advance
what kind of data you will be dealing.

2059
02:20:35,600 --> 02:20:38,320
So in those scenarios
we will be using typecasting.

2060
02:20:38,400 --> 02:20:39,000
Okay.

2061
02:20:39,000 --> 02:20:41,640
And in those narratives,
we will not be knowing the results.

2062
02:20:41,640 --> 02:20:45,240
Yes, you are right.

2063
02:20:45,240 --> 02:20:47,600
So I think in the next class or so,

2064
02:20:47,600 --> 02:20:51,080
you guys will learn about this kind of
class, then things will make more sense.

2065
02:20:51,520 --> 02:20:55,600
Right now, we are we are like
you can also ask this question there.

2066
02:20:55,600 --> 02:21:00,720
Tell us that you know, that this
this will be five cannot fix it in this

2067
02:21:01,240 --> 02:21:04,600
why why you are placing this
well 5556 in here

2068
02:21:05,320 --> 02:21:09,120
so in here I am demonstrating
your different possibilities

2069
02:21:09,720 --> 02:21:12,720
in actual
when you will be solving a real problem,

2070
02:21:13,120 --> 02:21:15,600
you will not me knowing the
all the circumstances.

2071
02:21:15,680 --> 02:21:19,360
Okay, then you will be using different
different logics to make your programs

2072
02:21:19,360 --> 02:21:21,480
work in real life values.

2073
02:21:21,480 --> 02:21:25,800
But right now, because we are learning,
I need to show you all the possibilities.

2074
02:21:25,800 --> 02:21:29,040
So sometimes I may use dumb examples which

2075
02:21:29,040 --> 02:21:31,680
to show you that what can happen
if you do this.

2076
02:21:32,200 --> 02:21:34,960
Okay, so It's not always possible

2077
02:21:34,960 --> 02:21:38,160
to show you in real life use case
out of all the examples.

2078
02:21:38,920 --> 02:21:59,160
So sometimes you have to meet.

2079
02:21:59,160 --> 02:22:03,920
Okay, So, Alexi, you are trying to write,
I guess you to the Russian

2080
02:22:04,600 --> 02:22:08,240
is good for Russian or something
that you are trying to write in comics

2081
02:22:08,840 --> 02:22:12,840
so your eclipse,
it cannot handle all the languages.

2082
02:22:13,280 --> 02:22:17,680
So it trying to convert that Russian
to something simpler before starting.

2083
02:22:17,760 --> 02:22:20,760
If you remove your comics
or if you use English,

2084
02:22:20,760 --> 02:22:24,160
then it should work.

2085
02:22:24,160 --> 02:22:28,080
Actually, the file type is not Java,
and Java File does

2086
02:22:28,080 --> 02:22:31,360
not support all languages
and that's why sometimes

2087
02:22:31,360 --> 02:22:40,760
you can get these others.

2088
02:22:40,760 --> 02:22:47,680
Yes. So guys, so this is the sequence.

2089
02:22:47,760 --> 02:22:48,240
Okay.

2090
02:22:48,280 --> 02:22:51,240
This is the sequence in which

2091
02:22:51,480 --> 02:22:54,840
the memory is increase or decrease.

2092
02:22:54,840 --> 02:22:57,560
So the shortest data type is by.

2093
02:22:58,200 --> 02:23:01,560
Okay, I hope you guys remember
this, that it can only store

2094
02:23:02,840 --> 02:23:06,120
from one -128 to 127.

2095
02:23:06,240 --> 02:23:09,440
Then the next bigger data type is sharp.

2096
02:23:10,440 --> 02:23:12,840
So it means that we can easily place

2097
02:23:12,840 --> 02:23:15,680
the contents of a bite a short, okay.

2098
02:23:16,040 --> 02:23:19,440
We can easily place the contents
of a short inside an integer.

2099
02:23:19,960 --> 02:23:23,040
We can easily perform integer too long.

2100
02:23:23,520 --> 02:23:24,560
Okay.

2101
02:23:24,560 --> 02:23:27,920
So if I am moving in this direction,
am I doing

2102
02:23:27,920 --> 02:23:31,320
explicit typecasting
or implicit typecasting?

2103
02:23:31,320 --> 02:23:38,160
Guys, it's

2104
02:23:38,160 --> 02:23:40,600
implicit like automatic lightning.

2105
02:23:41,960 --> 02:23:44,040
So float is than long.

2106
02:23:44,040 --> 02:23:46,800
And then long applicable is the biggest.

2107
02:23:46,920 --> 02:23:51,120
Okay when it comes to numbers
and this is just Natalie

2108
02:23:51,440 --> 02:23:58,600
doing the reverse.

2109
02:23:58,600 --> 02:23:59,840
All right.

2110
02:23:59,840 --> 02:24:11,080
Are there any questions guides
from this typecasting? It's

2111
02:24:12,280 --> 02:24:13,280
okay. Yes.

2112
02:24:13,280 --> 02:24:22,360
You guys need practice, that's for sure.

2113
02:24:22,360 --> 02:24:23,560
All right,

2114
02:24:24,760 --> 02:24:25,280
Come on.

2115
02:24:25,280 --> 02:24:28,200
I must use only English. Yes for comments.

2116
02:24:28,920 --> 02:24:32,520
Yes, you can use some other languages,
but not all of them are supported.

2117
02:24:32,840 --> 02:24:37,840
So I don't know right now, which I guess
you are trying to use some version.

2118
02:24:37,840 --> 02:24:43,680
Or it can also happen
if you are trying to make

2119
02:24:43,960 --> 02:24:48,920
trying to store emojis
or something like that.

2120
02:24:48,920 --> 02:24:50,840
So if you're using this, it should work.

2121
02:24:50,840 --> 02:24:52,520
If you should not get any errors

2122
02:25:01,440 --> 02:25:02,640
and you give us more

2123
02:25:02,640 --> 02:25:05,520
examples about the typecasting,

2124
02:25:06,840 --> 02:25:11,760
you want more examples of the typecasting.

2125
02:25:11,760 --> 02:25:16,760
Okay, let's let's let's do more.

2126
02:25:16,760 --> 02:25:20,280
So if I say a short,

2127
02:25:21,920 --> 02:25:27,800
I'm seven, okay?

2128
02:25:28,400 --> 02:25:31,760
And if I say

2129
02:25:33,600 --> 02:25:35,880
and then if I stand by

2130
02:25:37,800 --> 02:25:39,680
number eight.

2131
02:25:40,680 --> 02:25:44,160
Okay So if I try to store number seven,

2132
02:25:45,840 --> 02:25:48,800
if I try to assign number
seven variable to number, nobody

2133
02:25:49,280 --> 02:25:51,840
can I do that Or I have to do

2134
02:25:51,840 --> 02:25:59,680
some kind of exclusive casting.

2135
02:25:59,680 --> 02:26:01,960
So if I said

2136
02:26:02,000 --> 02:26:04,040
number seven,

2137
02:26:04,680 --> 02:26:08,400
I get an added right, I get an error.

2138
02:26:08,440 --> 02:26:13,920
Why I am getting an error, guys,
I am trying to assign a variable

2139
02:26:13,920 --> 02:26:19,920
which is of type shark to a variable
which is of type by I'm getting an error.

2140
02:26:19,920 --> 02:26:23,400
Why I am getting an error.

2141
02:26:23,400 --> 02:26:24,880
We should box in the bigger picture.

2142
02:26:24,880 --> 02:26:32,000
It is bigger divided by it is bigger.

2143
02:26:32,000 --> 02:26:36,200
So I am trying to store something bigger

2144
02:26:36,440 --> 02:26:39,720
from a bigger box to a smaller box.

2145
02:26:40,320 --> 02:26:42,560
So how can I avoid this area?

2146
02:26:42,560 --> 02:26:44,800
Because I know the bite and tell

2147
02:26:47,120 --> 02:26:49,560
I need to typecast, right?

2148
02:26:49,600 --> 02:26:51,680
I need time part.

2149
02:26:51,680 --> 02:26:54,040
I need to say Java is fine.

2150
02:26:54,440 --> 02:26:59,280
I know the number can fit inside
the smaller class.

2151
02:26:59,280 --> 02:27:01,320
Okay.

2152
02:27:01,320 --> 02:27:05,520
And if I do, if I see in integer

2153
02:27:06,600 --> 02:27:08,880
number nine

2154
02:27:09,000 --> 02:27:11,840
is equal to 1000.

2155
02:27:11,840 --> 02:27:15,920
And if I say long order, maybe,
maybe float

2156
02:27:17,680 --> 02:27:21,560
or F can assign this number nine to float

2157
02:27:21,600 --> 02:27:32,320
without performing any typecasting
or I have to typecast it.

2158
02:27:32,320 --> 02:27:33,800
Which box is bigger? Right?

2159
02:27:33,800 --> 02:27:36,720
Which box is the bigger
the integer or the float

2160
02:27:40,120 --> 02:27:41,520
Float is bigger, right?

2161
02:27:41,520 --> 02:27:43,600
So I can simply say

2162
02:27:45,280 --> 02:27:48,560
number nine is equal to float. Okay

2163
02:27:49,880 --> 02:27:52,760
And if I say long

2164
02:27:54,240 --> 02:27:56,120
and is equal to,

2165
02:27:56,120 --> 02:28:00,240
can I assign this f to this l directly?

2166
02:28:00,240 --> 02:28:02,280
Or I have to do some kind of convergent

2167
02:28:09,000 --> 02:28:10,280
which boxes are bigger that

2168
02:28:10,280 --> 02:28:16,320
float or long.

2169
02:28:16,320 --> 02:28:18,600
So floor is bigger.

2170
02:28:18,600 --> 02:28:19,160
No, no, no.

2171
02:28:19,160 --> 02:28:20,400
Float is bigger, right?

2172
02:28:20,400 --> 02:28:23,840
Long is not bigger.

2173
02:28:23,840 --> 02:28:24,800
Big luminous.

2174
02:28:24,800 --> 02:28:26,960
And I try to memorize this sequence.

2175
02:28:28,400 --> 02:28:31,560
So float comes after long

2176
02:28:34,040 --> 02:28:36,240
it take 2 minutes

2177
02:28:37,640 --> 02:28:42,080
to memorize it and then we will do it.

2178
02:28:42,080 --> 02:28:46,160
So first byte, short integer,

2179
02:28:47,520 --> 02:28:50,920
then long then float and.

2180
02:28:50,920 --> 02:28:54,640
Then at the last double.

2181
02:28:54,640 --> 02:28:56,760
So forget about the decimal point.

2182
02:28:57,240 --> 02:28:59,400
Okay? Just memorize this.

2183
02:29:00,000 --> 02:29:01,960
Size of boxes.

2184
02:29:01,960 --> 02:29:12,200
Yeah.

2185
02:29:12,200 --> 02:29:16,640
So now if I try to do this,
I will get ten.

2186
02:29:16,640 --> 02:29:19,800
Adam and I have to explicitly type.

2187
02:29:19,800 --> 02:29:22,680
Oops.

2188
02:29:22,680 --> 02:29:24,680
What would I type inside the box? Right.

2189
02:29:24,680 --> 02:29:32,040
Longer float.

2190
02:29:32,040 --> 02:29:36,600
So the variable which is over the left

2191
02:29:37,360 --> 02:29:42,040
I am saying,
will convert this f to this variable.

2192
02:29:42,040 --> 02:29:44,600
So I will say long. Okay. Not short.

2193
02:29:45,840 --> 02:29:48,440
I am saying convert this flock to a long.

2194
02:29:48,840 --> 02:29:51,360
Okay. So I will not specify float.

2195
02:29:51,360 --> 02:29:54,640
I will say long.

2196
02:29:54,640 --> 02:29:57,280
Okay. And bucket next to this.

2197
02:29:57,480 --> 02:29:59,920
If I have a double

2198
02:30:01,640 --> 02:30:04,760
number ten and if I have 10.5 in here

2199
02:30:06,040 --> 02:30:08,640
and if I have indeed

2200
02:30:08,640 --> 02:30:10,600
number 11

2201
02:30:11,720 --> 02:30:12,920
and I shoot this content

2202
02:30:12,920 --> 02:30:18,040
inside this locked case.

2203
02:30:18,040 --> 02:30:22,440
So even if even if I force Java,
even if I force in Java,

2204
02:30:22,840 --> 02:30:25,040
even if I thought Java by saying,

2205
02:30:25,560 --> 02:30:30,440
hey, Java I know what I am doing,
you just try to convert it,

2206
02:30:30,800 --> 02:30:33,880
what will happen? What will happen, guys?

2207
02:30:33,880 --> 02:30:36,520
What output I will get, I will lose.

2208
02:30:36,520 --> 02:30:39,880
So Java will do the convergent
because I am forcing it,

2209
02:30:40,480 --> 02:30:44,520
but the actual results,
they can be disastrous.

2210
02:30:45,000 --> 02:30:47,040
They can be unexpected time.

2211
02:30:47,520 --> 02:30:51,600
So Java will do the conversion
because I am posting it by saying this,

2212
02:30:52,480 --> 02:30:55,600
but sometimes I might lose information

2213
02:30:56,560 --> 02:30:58,960
so I lost the decimal part.

2214
02:31:00,800 --> 02:31:02,880
This can happen with the other data types.

2215
02:31:02,880 --> 02:31:07,280
If something can fix can fit easily, go
I will fit it

2216
02:31:07,600 --> 02:31:11,520
if not just

2217
02:31:12,520 --> 02:31:13,680
your input

2218
02:31:13,680 --> 02:31:20,360
and the result can be something
very unexpected.

2219
02:31:20,360 --> 02:31:20,640
All right.

2220
02:31:20,640 --> 02:31:22,680
Is it clear now

2221
02:31:36,800 --> 02:31:37,280
to check

2222
02:31:37,280 --> 02:31:47,760
if we are on type of not?

2223
02:31:47,760 --> 02:31:55,800
Okay, Everything seems good.

2224
02:31:55,800 --> 02:31:56,520
Okay.

2225
02:31:56,560 --> 02:31:59,360
So do we move forward
or do you guys need more examples?

2226
02:31:59,840 --> 02:32:03,120
So if our first variable is bigger
than the second variable,

2227
02:32:03,120 --> 02:32:06,360
we do typecasting.

2228
02:32:06,360 --> 02:32:07,440
No, no, it's not bigger.

2229
02:32:07,440 --> 02:32:10,680
It's smaller if the first two.

2230
02:32:10,680 --> 02:32:12,560
So the variable in which

2231
02:32:12,560 --> 02:32:16,240
we are trying to store
it is smaller than you do.

2232
02:32:16,320 --> 02:32:21,000
Typecasting.

2233
02:32:21,000 --> 02:32:25,800
So the minor is fine
if you don't understand the use case.

2234
02:32:25,800 --> 02:32:26,400
Okay.

2235
02:32:27,000 --> 02:32:32,000
So once you start building your framework,
then you will understand the use case.

2236
02:32:32,040 --> 02:32:33,960
So right now, focus on the rules.

2237
02:32:33,960 --> 02:32:36,280
If you understand the rules, it's fine.

2238
02:32:36,280 --> 02:32:38,280
The actual use case, they will be coming

2239
02:32:38,280 --> 02:32:42,120
after you guys are done with Java,
then you will build your own framework.

2240
02:32:42,120 --> 02:32:43,880
Then you will realize the use cases.

2241
02:32:45,280 --> 02:32:45,880
Is there any

2242
02:32:45,880 --> 02:32:50,400
use case of it in non
imperative that I fahadh

2243
02:32:50,400 --> 02:32:52,560
you mean non primitive prototype

2244
02:32:53,720 --> 02:32:57,640
because there is nothing like non
imperative prototype.

2245
02:32:57,640 --> 02:32:58,240
Okay.

2246
02:33:02,640 --> 02:33:07,720
So if there are two different types
then we cannot do testing now.

2247
02:33:07,720 --> 02:33:10,440
Actually do typecasting
when the data types are different.

2248
02:33:10,960 --> 02:33:14,400
You see in here the data type is double.

2249
02:33:14,600 --> 02:33:17,080
In here, type is integer.

2250
02:33:17,080 --> 02:33:21,520
Okay, two different data types,

2251
02:33:21,520 --> 02:33:26,720
double is bigger than integer.

2252
02:33:26,720 --> 02:33:27,080
Yeah.

2253
02:33:27,920 --> 02:33:29,840
So how many of you all get left?

2254
02:33:29,840 --> 02:33:30,480
Let's do this.

2255
02:33:30,480 --> 02:33:32,520
How many of you understand this?

2256
02:33:32,800 --> 02:33:34,600
That which in.

2257
02:33:34,600 --> 02:33:38,040
That type is bigger and smaller,
if I ask you,

2258
02:33:39,720 --> 02:33:42,960
is long, greater than float or not?

2259
02:33:43,200 --> 02:33:46,800
How many of you can answer this question
Which data type is bigger float

2260
02:33:46,800 --> 02:33:52,480
or long float?

2261
02:33:52,920 --> 02:33:54,840
And what about long end double?

2262
02:33:55,840 --> 02:33:57,160
Which one is bigger

2263
02:33:57,160 --> 02:34:01,480
than double?

2264
02:34:01,480 --> 02:34:03,480
Okay, so you guys understand this.

2265
02:34:03,480 --> 02:34:06,080
Okay, the second part,

2266
02:34:06,280 --> 02:34:07,920
do you guys understand this?

2267
02:34:07,920 --> 02:34:12,040
That If we try to fit something bigger

2268
02:34:13,680 --> 02:34:15,960
in a smaller box,

2269
02:34:15,960 --> 02:34:19,760
we might not be able to do that

2270
02:34:22,920 --> 02:34:25,360
right?

2271
02:34:25,360 --> 02:34:28,120
So sometimes, depending upon

2272
02:34:28,400 --> 02:34:31,920
what we have stored in a box, right,

2273
02:34:32,080 --> 02:34:34,800
sometimes we might be able to fit it,

2274
02:34:35,560 --> 02:34:37,920
sometimes we might not be able to fit it.

2275
02:34:37,920 --> 02:34:38,520
Right.

2276
02:34:39,360 --> 02:34:41,760
So if I have this mobile phone right,

2277
02:34:42,480 --> 02:34:48,320
and if I pulled this mobile in a box
that can hold one box and hold 15

2278
02:34:48,320 --> 02:34:52,240
mobile phones and the other box can hold
ten mobile phones,

2279
02:34:52,800 --> 02:34:55,920
but I have only one phone in that box

2280
02:34:55,920 --> 02:34:59,000
which can hold 15
mobile phone, mobile phones.

2281
02:34:59,320 --> 02:35:03,840
And if I try to pick this phone
from that box, which can hold 15

2282
02:35:04,160 --> 02:35:07,800
and if I try to place this phone in a box
that can hold only ten,

2283
02:35:08,360 --> 02:35:14,280
will I be able to do that
or I will not be able to do that?

2284
02:35:14,280 --> 02:35:15,360
Can I do that?

2285
02:35:15,360 --> 02:35:17,480
I have only one one phone.

2286
02:35:18,160 --> 02:35:20,640
I have only one phone, and I am

2287
02:35:20,640 --> 02:35:24,280
picking this phone from a box
that can hold 15 phones

2288
02:35:24,800 --> 02:35:28,120
and I am trying to place it in a box
that can hold that phone.

2289
02:35:28,320 --> 02:35:29,840
So if I have only one phone,

2290
02:35:29,840 --> 02:35:33,600
I don't have any issues
putting in a smaller box right?

2291
02:35:33,600 --> 02:35:35,160
So if I have

2292
02:35:38,040 --> 02:35:40,320
if I have a box.

2293
02:35:40,320 --> 02:35:41,080
Okay.

2294
02:35:41,120 --> 02:35:45,680
And the contents of that box,
the contents of that box

2295
02:35:46,160 --> 02:35:49,040
can easily fit in other box.

2296
02:35:50,040 --> 02:35:51,720
I don't have any issues. Right.

2297
02:35:51,720 --> 02:35:53,880
I don't have any issues
I can just write in.

2298
02:35:54,320 --> 02:35:57,480
And the convergence will happen.

2299
02:35:57,480 --> 02:36:03,160
But if I know that I have something
which is bigger,

2300
02:36:03,720 --> 02:36:07,200
okay, it's not only in a bigger box,

2301
02:36:07,200 --> 02:36:12,040
but it can also not fit inside
this smaller box.

2302
02:36:12,760 --> 02:36:15,240
Then I will lose information.

2303
02:36:15,720 --> 02:36:18,560
Okay Then I will lose information.

2304
02:36:18,560 --> 02:36:20,760
What if that box already has been formed?

2305
02:36:20,800 --> 02:36:24,640
Yes. If that is the case, Maryam,
then we will lose the information.

2306
02:36:25,720 --> 02:36:28,880
Then the convergent will not be perfect.

2307
02:36:28,880 --> 02:36:30,920
We only use costing for numbers.

2308
02:36:31,000 --> 02:36:37,280
Not we actually can cost any variables,
but you will learn those in the later

2309
02:36:38,280 --> 02:36:39,040
part.

2310
02:36:39,400 --> 02:36:40,800
But right now, yes, we can.

2311
02:36:40,800 --> 02:36:42,160
Only you can think of that.

2312
02:36:42,160 --> 02:36:51,720
We can only do it with number five
for now, double was bigger than integer.

2313
02:36:52,200 --> 02:36:56,520
How was integer able
to hold the double in number 10.5?

2314
02:36:56,560 --> 02:36:59,160
No, it was not able to hold that at all.

2315
02:36:59,480 --> 02:37:00,920
It was not able to hold that.

2316
02:37:00,920 --> 02:37:04,480
You see, we have lost
we have lost about 2.5.

2317
02:37:04,480 --> 02:37:09,680
We have that that 50% of the information
we are only able to create.

2318
02:37:09,680 --> 02:37:16,800
And then we have lost that .5.5.

2319
02:37:16,800 --> 02:37:19,120
We lose that if we try to force it,

2320
02:37:20,480 --> 02:37:21,360
I think we lose that.

2321
02:37:21,360 --> 02:37:24,640
I would try to force it.

2322
02:37:24,640 --> 02:37:30,720
Is it still not clear, guys,
if we lose information, we can fix it.

2323
02:37:30,720 --> 02:37:33,320
No, Alexa, unfortunately,
we cannot fix it.

2324
02:37:33,560 --> 02:37:36,360
We have to be careful with the
with the conversion.

2325
02:37:36,480 --> 02:37:42,880
We have to be careful with the conversion.

2326
02:37:42,880 --> 02:37:45,880
But it will get more clear
when you guys will fold it apples.

2327
02:37:46,560 --> 02:37:47,280
And then

2328
02:37:48,360 --> 02:37:50,800
in the next class, I will again revise it.

2329
02:37:51,280 --> 02:37:54,280
And on the review session
I will again revise it.

2330
02:37:54,280 --> 02:37:57,920
Okay,
So if there are still questions left,

2331
02:37:58,520 --> 02:38:02,440
So when guys will solve the homework,
when you will solve the if oppose,

2332
02:38:02,440 --> 02:38:05,160
when you will attend the review class
after the review class,

2333
02:38:05,160 --> 02:38:08,200
we will go through that again
in the next week.

2334
02:38:08,640 --> 02:38:11,680
So it's fine.

2335
02:38:11,680 --> 02:38:15,360
So if you guys have understood,
let's say 70%

2336
02:38:15,360 --> 02:38:18,400
of what I have told you, it's fine.

2337
02:38:18,600 --> 02:38:24,480
But if you are on around 50% or 40%,
then it can be problematic.

2338
02:38:24,480 --> 02:38:27,720
You should ask me questions. Then

2339
02:38:28,800 --> 02:38:30,640
when do we need costings?

2340
02:38:30,640 --> 02:38:33,960
So most probably
you guys will not be needing it.

2341
02:38:34,200 --> 02:38:34,560
Okay.

2342
02:38:34,560 --> 02:38:39,480
But we need it when we have to combine
because from multiple sources

2343
02:38:40,640 --> 02:38:44,360
to build a single application

2344
02:38:44,800 --> 02:38:47,000
long L is equal to long.

2345
02:38:47,000 --> 02:38:49,000
F line 23. Not clear.

2346
02:38:50,360 --> 02:38:52,920
Okay, so line 424.

2347
02:38:52,920 --> 02:38:54,280
So you know

2348
02:38:55,400 --> 02:38:58,640
which box is bigger,
which box bigger is float

2349
02:38:58,680 --> 02:39:02,800
bigger or the longest bigger.

2350
02:39:02,800 --> 02:39:05,240
I thought it was one.

2351
02:39:05,240 --> 02:39:07,080
Oh exactly, actually.

2352
02:39:07,080 --> 02:39:09,960
Okay, let me change it to number.

2353
02:39:10,560 --> 02:39:11,000
Maybe

2354
02:39:13,360 --> 02:39:14,800
on the end of the class.

2355
02:39:14,800 --> 02:39:17,480
Can you send more
YouTube videos on next lesson?

2356
02:39:17,480 --> 02:39:19,280
Same be how you do yesterday.

2357
02:39:19,280 --> 02:39:21,360
Yes. I will always be sharing the YouTube

2358
02:39:22,320 --> 02:39:24,240
before each class

2359
02:39:25,080 --> 02:39:27,240
float bigger, right?

2360
02:39:27,240 --> 02:39:29,640
Yes. Float is bigger than long.

2361
02:39:29,640 --> 02:39:32,880
So because float bigger than long.

2362
02:39:33,400 --> 02:39:37,200
That's why I need to explicitly tell

2363
02:39:37,200 --> 02:39:41,640
to Java that hey Java, please try.

2364
02:39:41,640 --> 02:39:43,960
They try to convert this number.

2365
02:39:43,960 --> 02:39:46,760
I know that this number 10,000.

2366
02:39:46,760 --> 02:39:51,240
It can fit easily inside a log,
so don't worry.

2367
02:39:51,240 --> 02:39:58,600
Just do the conversion.

2368
02:39:58,600 --> 02:40:04,720
Yes, you have written it properly.

2369
02:40:04,720 --> 02:40:07,200
All right. So should we move forward

2370
02:40:08,160 --> 02:40:09,240
or are there any

2371
02:40:09,240 --> 02:40:12,640
any questions out there and there?

2372
02:40:13,160 --> 02:40:16,000
There are any questions why?

2373
02:40:16,440 --> 02:40:20,200
I am getting an added for line
19 and 20 vital changes.

2374
02:40:20,200 --> 02:40:32,520
Screenshot.

2375
02:40:32,520 --> 02:40:33,840
All right.

2376
02:40:33,840 --> 02:40:38,760
So so we have learned about the

2377
02:40:39,840 --> 02:40:42,600
arithmetic operators

2378
02:40:42,600 --> 02:40:43,280
today.

2379
02:40:43,280 --> 02:40:46,320
We will learn the relational operators

2380
02:40:47,560 --> 02:40:50,040
and equality operators,

2381
02:40:50,040 --> 02:41:27,840
the two types of new operators.

2382
02:41:27,840 --> 02:41:29,280
Give me what happened.

2383
02:41:29,280 --> 02:41:45,440
Give me why that bad face.

2384
02:41:45,440 --> 02:41:46,080
All right.

2385
02:41:46,080 --> 02:41:47,440
So nice deal.

2386
02:41:47,440 --> 02:41:50,160
Now we have learned about

2387
02:41:52,840 --> 02:41:55,040
but we have only learned about the

2388
02:41:55,080 --> 02:41:58,520
all the casting or all of that.

2389
02:41:59,120 --> 02:42:03,240
You what I have been doing
was from the previous class.

2390
02:42:03,680 --> 02:42:07,080
From this class,
we have only learned about the casting

2391
02:42:08,280 --> 02:42:12,760
you give to a man to comprehend
in general.

2392
02:42:12,760 --> 02:42:14,280
Yes, programing.

2393
02:42:14,280 --> 02:42:16,440
It requires

2394
02:42:16,560 --> 02:42:20,280
attention to those details
and these symbol.

2395
02:42:20,280 --> 02:42:22,560
And then semicolons and then this.

2396
02:42:22,920 --> 02:42:24,760
So many rules.

2397
02:42:24,760 --> 02:42:26,760
So yes, it will take time.

2398
02:42:26,760 --> 02:42:34,520
It will take time.

2399
02:42:34,520 --> 02:42:35,040
Don't worry.

2400
02:42:35,040 --> 02:42:38,200
We will make you learn
all you have during this bootcamp.

2401
02:42:38,320 --> 02:42:40,840
You will learn.

2402
02:42:40,840 --> 02:42:43,520
It will be easy
for people who has experience.

2403
02:42:43,520 --> 02:42:46,760
But so we started from zero. So sorry.

2404
02:42:46,800 --> 02:42:51,440
I don't know if you are coming
from regular or not.

2405
02:42:51,680 --> 02:42:59,440
95% of our students,
they don't have any background.

2406
02:42:59,440 --> 02:43:21,480
It's not that easy.

2407
02:43:21,480 --> 02:43:26,400
Okay, so on line number 24, Michael,

2408
02:43:27,000 --> 02:43:30,720
the s off that chart is actually capital.

2409
02:43:31,680 --> 02:43:33,760
Make sure that it is not capital.

2410
02:43:35,040 --> 02:43:35,680
It should be

2411
02:43:35,680 --> 02:43:44,960
with lowercase s.

2412
02:43:44,960 --> 02:43:45,480
All right.

2413
02:43:45,480 --> 02:43:49,560
So today we will learn how to make

2414
02:43:50,320 --> 02:43:53,160
our programs take decisions.

2415
02:43:53,360 --> 02:43:56,280
Okay. Based On data.

2416
02:43:56,280 --> 02:43:59,080
How Based on data,

2417
02:43:59,120 --> 02:44:03,480
how to take decisions,
it is easy for woman, I guess, because.

2418
02:44:03,480 --> 02:44:07,000
Woman
they they inherently naturally they, they,

2419
02:44:07,240 --> 02:44:12,520
they have more attention
to details than men.

2420
02:44:12,520 --> 02:44:16,040
And that's why a lot of women,
they join the testing,

2421
02:44:16,280 --> 02:44:18,120
testing jobs and they are successful.

2422
02:44:18,120 --> 02:44:22,120
So men as the developer and woman
as the test

2423
02:44:22,360 --> 02:44:26,280
is the best combination.

2424
02:44:26,280 --> 02:44:30,320
Even if you do
all of the things in your life perfectly,

2425
02:44:30,920 --> 02:44:37,000
your wife and your mom,
they can still tell you issues, you know,

2426
02:44:37,040 --> 02:44:41,560
all the things that you do right.

2427
02:44:41,560 --> 02:44:47,400
Let's bring people to us.

2428
02:44:47,400 --> 02:44:49,000
We are in different class.

2429
02:44:49,000 --> 02:44:51,400
And then of men can also focus on details.

2430
02:44:51,880 --> 02:44:52,720
I'm just kidding.

2431
02:44:53,760 --> 02:44:56,240
Okay. So

2432
02:44:57,320 --> 02:44:59,480
there are some things which are good.

2433
02:44:59,480 --> 02:45:03,120
Like, for example, ladies,
they can see more shared in class,

2434
02:45:03,120 --> 02:45:06,120
like so many different types of lipsticks

2435
02:45:06,720 --> 02:45:09,000
when it comes to choosing a dress.

2436
02:45:09,200 --> 02:45:12,400
And girls can decide for look,
they can decide

2437
02:45:12,400 --> 02:45:15,480
from so many colors men,
they are just simple, right?

2438
02:45:16,000 --> 02:45:20,120
And he showed they see from the job
they just by the end

2439
02:45:20,120 --> 02:45:29,040
they come home.

2440
02:45:29,040 --> 02:45:31,640
So today, guys, we will learn about

2441
02:45:33,440 --> 02:45:35,840
how to make our programs

2442
02:45:36,440 --> 02:45:39,000
kind of base and decisions.

2443
02:45:39,000 --> 02:45:39,720
Okay.

2444
02:45:40,760 --> 02:45:43,440
How to make our programs

2445
02:45:43,440 --> 02:45:46,600
big decisions based on certain scenarios

2446
02:45:46,840 --> 02:45:50,640
or certain data,
how to perform certain tasks.

2447
02:45:50,680 --> 02:45:50,920
Okay.

2448
02:45:50,920 --> 02:45:53,520
Or how to avoid certain task, how to

2449
02:45:54,600 --> 02:45:56,640
execute one part of the court

2450
02:45:56,640 --> 02:45:59,680
record,
how to avoid one part of the court.

2451
02:45:59,680 --> 02:46:00,240
Okay.

2452
02:46:00,360 --> 02:46:04,760
Now, to make our programs
take these decisions,

2453
02:46:05,360 --> 02:46:08,400
we need to learn some new operators. Okay?

2454
02:46:10,000 --> 02:46:12,960
And the first operator

2455
02:46:15,360 --> 02:46:17,040
So let's say

2456
02:46:17,040 --> 02:46:21,840
so now we will learn
how to make our to take the decisions.

2457
02:46:21,880 --> 02:46:27,040
So if the operator that we will learn
is an equal to operator.

2458
02:46:27,600 --> 02:46:31,440
So if we want to check that,

2459
02:46:31,960 --> 02:46:36,160
if something if the contents of a box

2460
02:46:36,840 --> 02:46:43,680
are same as of a third box,
we use this operator

2461
02:46:43,680 --> 02:46:46,240
and it is called equal
to equal to operator

2462
02:46:47,720 --> 02:46:49,720
will report the code on canvas.

2463
02:46:49,800 --> 02:46:55,000
Yes, I will always post the code on canvas
for all the classes to complete course

2464
02:46:55,000 --> 02:47:00,240
you will be having the material on canvas.

2465
02:47:00,240 --> 02:47:15,760
So if I have two boxes.

2466
02:47:15,760 --> 02:47:18,600
So if I have two boxes. Okay.

2467
02:47:19,240 --> 02:47:22,160
So right now I am hard coding the values

2468
02:47:22,160 --> 02:47:26,320
I am explicitly stored in ten inside port.

2469
02:47:26,320 --> 02:47:28,040
The variables. Okay.

2470
02:47:28,040 --> 02:47:31,320
But there will be times
you guys will not be annoying

2471
02:47:31,520 --> 02:47:34,960
beforehand,
but the values variables contain.

2472
02:47:35,600 --> 02:47:38,520
If you want, check in those scenarios.

2473
02:47:39,160 --> 02:47:42,360
If the contents of two variables
are same or not,

2474
02:47:42,880 --> 02:47:47,040
we can use the equal to equal to.

2475
02:47:47,040 --> 02:47:49,120
And this is how we use it. We see

2476
02:47:51,520 --> 02:47:53,960
number one equal to equal to

2477
02:47:55,120 --> 02:47:56,160
number two.

2478
02:47:56,160 --> 02:47:58,920
Okay, guys, if something

2479
02:47:59,440 --> 02:48:03,040
if Java has to represent
something in the form of Yes or

2480
02:48:03,560 --> 02:48:05,600
what do we use instead of yes

2481
02:48:06,200 --> 02:48:09,240
and no, in Java, what do we use?

2482
02:48:09,240 --> 02:48:10,800
True and false.

2483
02:48:10,800 --> 02:48:11,560
Right.

2484
02:48:11,800 --> 02:48:19,280
So if the contents of these two variables,
if they are same,

2485
02:48:19,840 --> 02:48:26,560
we like get a true or false,
I will be getting a true yes.

2486
02:48:27,160 --> 02:48:30,000
So if I ask you this, exclude

2487
02:48:33,040 --> 02:48:34,440
I get true.

2488
02:48:34,440 --> 02:48:40,200
True means both of these variables
they contain same thing.

2489
02:48:40,480 --> 02:48:41,200
Okay.

2490
02:48:41,280 --> 02:48:45,600
If change this 10 to 20

2491
02:48:46,120 --> 02:48:51,600
and if now I institute my code,

2492
02:48:51,600 --> 02:48:54,560
I get a false because now

2493
02:48:55,160 --> 02:48:58,960
both variables,
they contain different things.

2494
02:48:59,040 --> 02:49:05,280
Okay, so If we have to check something,
if something is same in

2495
02:49:05,280 --> 02:49:10,800
both the variables,
we use this equal to equal to operator.

2496
02:49:10,800 --> 02:49:12,280
So looking for comments as it

2497
02:49:26,880 --> 02:49:29,880
all is possible without using boolean.

2498
02:49:30,040 --> 02:49:32,760
It is possible with the help of this.

2499
02:49:33,120 --> 02:49:38,200
Equal to equal to operator.

2500
02:49:38,200 --> 02:49:42,560
Yes. Java knows without without boolean,
without variable

2501
02:49:42,560 --> 02:49:47,000
if it is a true or false,
why we are double equal.

2502
02:49:47,400 --> 02:49:50,160
So Alex in Java single

2503
02:49:50,160 --> 02:49:53,400
equal is reserved for assignment.

2504
02:49:53,920 --> 02:49:56,560
Okay,
so That's why they are using double equal.

2505
02:49:56,560 --> 02:50:01,320
So you guys might be thinking that
in math in the in real life

2506
02:50:01,920 --> 02:50:07,080
the the equal to single equal
to in a real life we use for equality.

2507
02:50:07,080 --> 02:50:07,680
Right.

2508
02:50:07,680 --> 02:50:11,760
So in programing things are little
different single equal to sign

2509
02:50:12,520 --> 02:50:15,000
we use if we want to assign

2510
02:50:15,000 --> 02:50:19,200
to a variable double equal to sign
we use for equality.

2511
02:50:19,320 --> 02:50:19,600
Okay.

2512
02:50:19,600 --> 02:50:25,560
It's it's a little different,
but we only use it to check it

2513
02:50:25,680 --> 02:50:27,240
and then erase it.

2514
02:50:27,240 --> 02:50:29,120
So we are not erasing anything.

2515
02:50:29,120 --> 02:50:34,600
We are simply checking if number one
is equal to number two or not.

2516
02:50:35,240 --> 02:50:37,680
But we are not erasing.
We are not storing.

2517
02:50:37,680 --> 02:50:39,000
We are not doing anything.

2518
02:50:39,000 --> 02:50:41,440
But yes, if you want, you can do this.

2519
02:50:41,440 --> 02:50:42,320
You can say

2520
02:50:44,240 --> 02:50:46,760
you can see Boolean

2521
02:50:48,360 --> 02:50:50,520
results and you can see

2522
02:50:51,680 --> 02:50:56,760
number one to the number.

2523
02:50:57,000 --> 02:50:59,040
Okay. But you can you can do that as well.

2524
02:50:59,640 --> 02:51:03,080
So because the because the results

2525
02:51:03,120 --> 02:51:06,200
of this operation, they are a boolean,

2526
02:51:06,760 --> 02:51:10,680
I can declare a variable
and I can stored the reserves

2527
02:51:10,680 --> 02:51:19,240
in that variable.

2528
02:51:19,240 --> 02:51:20,600
Okay. Yes.

2529
02:51:20,600 --> 02:51:25,160
But it's a longer B, it's a longer.

2530
02:51:25,160 --> 02:51:25,760
Okay.

2531
02:51:25,800 --> 02:51:27,840
And I can also put into this all

2532
02:51:34,640 --> 02:51:39,960
these items.

2533
02:51:39,960 --> 02:51:46,920
So both both give me false.

2534
02:51:46,920 --> 02:51:49,920
So this is my first operator.

2535
02:51:50,120 --> 02:51:51,840
Do you guys understand this, by the way?

2536
02:51:51,840 --> 02:51:56,400
Guys,
if you to use a single equal to sign,

2537
02:51:57,840 --> 02:51:59,240
I like typing.

2538
02:51:59,240 --> 02:52:00,600
We need to get used to typing.

2539
02:52:00,600 --> 02:52:02,400
Yes, you guys should be typing.

2540
02:52:02,400 --> 02:52:04,600
You guys should be following. Okay.

2541
02:52:05,480 --> 02:52:06,800
It's important.

2542
02:52:06,800 --> 02:52:07,960
Don't think that I

2543
02:52:07,960 --> 02:52:11,520
because I will be sharing all the code
and not you guys don't need to type it

2544
02:52:11,920 --> 02:52:17,040
because guys, it's not only your brain
that learns but your muscles.

2545
02:52:17,040 --> 02:52:19,400
They also learn. They also have memory.

2546
02:52:19,760 --> 02:52:21,720
So when you are typing something,

2547
02:52:21,720 --> 02:52:24,600
there are so many things
your muscles also need to learn.

2548
02:52:24,640 --> 02:52:27,120
Okay,
so make sure you are practicing with me.

2549
02:52:27,760 --> 02:52:30,720
So guys, if I see if I.

2550
02:52:30,840 --> 02:52:37,480
If I use single equal, what happens
when we use the single equal guys.

2551
02:52:37,480 --> 02:52:41,800
So if you accidentally use single value.

2552
02:52:42,360 --> 02:52:45,160
So now if I try to execute the score

2553
02:52:46,800 --> 02:52:50,320
instead of true and false, I am getting 20

2554
02:52:50,880 --> 02:52:55,720
y, I am getting 20
because P value from number two

2555
02:52:55,720 --> 02:52:58,720
variable is being assigned to number one

2556
02:52:59,160 --> 02:53:02,160
and number one is being printed. Okay?

2557
02:53:02,400 --> 02:53:05,400
And if you try to do remove in here,
you will get an negative

2558
02:53:06,240 --> 02:53:10,040
because now the result of this operation
is a number,

2559
02:53:10,400 --> 02:53:14,040
not a boolean, but you are trying to store
that result in a boolean.

2560
02:53:14,040 --> 02:53:14,600
Okay.

2561
02:53:14,600 --> 02:53:17,400
So make sure you are using
the relational operators.

2562
02:53:19,320 --> 02:53:21,560
So let me also show my printing it out.

2563
02:53:22,240 --> 02:53:25,320
If I put into B value of number one,
what about what?

2564
02:53:25,320 --> 02:53:26,720
I will go to guys

2565
02:53:27,280 --> 02:53:31,240
I am using assignment operator
or the equality operator,

2566
02:53:31,480 --> 02:53:55,720
what output I will get for number one,
I will get 20.

2567
02:53:56,040 --> 02:53:59,160
That pen has been reassigned

2568
02:54:00,520 --> 02:54:02,200
that then

2569
02:54:02,360 --> 02:54:05,160
the pen has been reassigned by this point.

2570
02:54:05,160 --> 02:54:06,320
B Okay.

2571
02:54:06,320 --> 02:54:09,960
It has been reassigned
because I use the assignment operator.

2572
02:54:09,960 --> 02:54:14,280
So note then those who were saying
I will be now getting 20

2573
02:54:14,280 --> 02:54:17,120
because I have done this assignment
operation,

2574
02:54:17,400 --> 02:54:24,240
is it clear to do a thing then?

2575
02:54:24,240 --> 02:54:31,440
So make sure you use double equals.

2576
02:54:31,440 --> 02:54:32,200
All right.

2577
02:54:32,200 --> 02:54:35,280
So the next operator

2578
02:54:44,440 --> 02:54:45,600
I don't understand.

2579
02:54:45,600 --> 02:54:47,040
Can you explain again?

2580
02:54:47,040 --> 02:54:50,280
So which part you don't understand
then you tell me the line

2581
02:54:50,280 --> 02:54:50,960
number

2582
02:55:00,120 --> 02:55:02,120
Boolean, please.

2583
02:55:02,440 --> 02:55:05,560
This this line, this one

2584
02:55:07,360 --> 02:55:09,200
line quantity.

2585
02:55:09,200 --> 02:55:14,040
Okay, so let me do this.

2586
02:55:14,040 --> 02:55:16,320
So Java,

2587
02:55:17,920 --> 02:55:19,400
execute from top

2588
02:55:19,400 --> 02:55:24,360
to bottom, from left to right.

2589
02:55:24,800 --> 02:55:25,960
Okay, left, right.

2590
02:55:25,960 --> 02:55:28,360
But when we have this equal to sign,

2591
02:55:29,280 --> 02:55:32,200
first the Java execute whatever

2592
02:55:32,200 --> 02:55:35,800
we are writing after that equal to sign.

2593
02:55:36,240 --> 02:55:40,280
Okay,
so after that equal to sign, I am writing.

2594
02:55:40,280 --> 02:55:41,640
I am saying Java.

2595
02:55:41,640 --> 02:55:47,480
And please tell me if number one is equal
to equal to number two or not. So

2596
02:55:48,560 --> 02:55:50,200
is it is it equal to number?

2597
02:55:50,200 --> 02:55:56,080
Is one equal to number two? No.

2598
02:55:56,520 --> 02:56:05,040
So the result of this calculation
will be false.

2599
02:56:05,040 --> 02:56:09,280
Right after I have gotten this
false result,

2600
02:56:10,000 --> 02:56:12,360
I am storing that result

2601
02:56:12,960 --> 02:56:15,360
inside this result variable.

2602
02:56:15,480 --> 02:56:18,400
It's a Boolean variable, right?

2603
02:56:18,400 --> 02:56:21,320
So the there are two operations

2604
02:56:21,320 --> 02:56:26,400
that are being performed on line number
ten, one in one operation.

2605
02:56:26,400 --> 02:56:30,040
I am checking
if two numbers are equal or not

2606
02:56:30,720 --> 02:56:34,040
and it is top
whether it's a true or false,

2607
02:56:34,200 --> 02:56:38,920
I am spotting that true or false
inside the results variable.

2608
02:56:39,480 --> 02:56:41,600
So one assignment

2609
02:56:41,600 --> 02:56:43,200
and one

2610
02:56:43,400 --> 02:56:45,440
equality checking operation.

2611
02:56:45,720 --> 02:56:49,560
Okay, so that's why you get true or false.

2612
02:56:49,560 --> 02:56:51,120
And depending

2613
02:56:51,200 --> 02:56:54,240
if the numbers are same or not in black

2614
02:56:54,240 --> 02:56:58,360
box, well, the reason is certain

2615
02:56:58,360 --> 02:57:02,000
when you change the position of number one
or number two, the results change.

2616
02:57:02,000 --> 02:57:02,400
Right?

2617
02:57:02,440 --> 02:57:05,600
So is it clear
those who were saying about this line ten

2618
02:57:15,880 --> 02:57:19,000
is an X symbol, saying about line?

2619
02:57:19,880 --> 02:57:24,360
I think in line I am simply printing
the value of number one.

2620
02:57:25,320 --> 02:57:27,600
I'm simply printing the value
of number one.

2621
02:57:27,600 --> 02:57:29,600
So number one contains ten.

2622
02:57:29,600 --> 02:57:31,560
Okay, I am printing it.

2623
02:57:31,560 --> 02:57:38,840
And if I execute for my core,
I get ten in here.

2624
02:57:39,320 --> 02:57:44,440
But if I use single equal to sign

2625
02:57:45,240 --> 02:57:47,680
instead of double click one double equal.

2626
02:57:48,640 --> 02:57:50,880
So now

2627
02:57:50,880 --> 02:57:53,960
this 20 from this number two

2628
02:57:54,400 --> 02:57:57,080
is first of being assigned to number one.

2629
02:57:57,200 --> 02:57:59,760
So this then it will be discarded.

2630
02:58:00,520 --> 02:58:02,920
Number 20 will be stored in number one.

2631
02:58:03,080 --> 02:58:07,560
And if then I try to print it out,
then I think about what?

2632
02:58:07,640 --> 02:58:10,760
But will I get ten or 20?

2633
02:58:10,760 --> 02:58:12,120
I have change.

2634
02:58:12,120 --> 02:58:19,960
This two equals to single equal.

2635
02:58:19,960 --> 02:58:23,640
So previously I was using the assignment
operator.

2636
02:58:23,960 --> 02:58:26,520
Sorry, the equality.

2637
02:58:26,520 --> 02:58:31,960
Now I am using the assignment operator
So the brand

2638
02:58:31,960 --> 02:58:36,400
you will be assigned to now
and that's why I get 20.

2639
02:58:36,400 --> 02:58:41,560
I made it clear
that why if I use single equal, I get 20.

2640
02:58:42,480 --> 02:58:45,520
And why if I use double equal signs,

2641
02:58:45,520 --> 02:58:52,560
I get false, I get sometimes false

2642
02:58:52,680 --> 02:58:56,360
and sometimes 20
because I am doing different operations.

2643
02:58:57,080 --> 02:59:00,720
When I do assignment,
I get the result of variable.

2644
02:59:01,320 --> 02:59:04,040
When I do equality

2645
02:59:04,040 --> 02:59:07,360
operation, I am checking
if something is equal or not.

2646
02:59:07,400 --> 02:59:11,480
Then I get the
rule for false as the answer

2647
02:59:12,960 --> 02:59:13,280
nicely.

2648
02:59:13,280 --> 02:59:18,120
Are there any other students
who are confused about line

2649
02:59:18,120 --> 02:59:27,520
11 or line ten?

2650
02:59:27,520 --> 02:59:29,640
Remember, guys, it's perfectly fine.

2651
02:59:29,640 --> 02:59:33,360
Even if you have explained something
you still don't understand.

2652
02:59:33,560 --> 02:59:35,960
Your questions are dumb.

2653
02:59:35,960 --> 02:59:38,080
You are going repeat it multiple times.

2654
02:59:38,080 --> 02:59:41,000
It's fine for now. It's fine. Slowly.

2655
02:59:41,000 --> 02:59:44,600
When we move forward in this course,
then explicitly

2656
02:59:44,840 --> 02:59:47,760
I will be telling you guys that, Hey guys,

2657
02:59:47,760 --> 02:59:50,840
you should not be asking this question
at this point of time.

2658
02:59:51,280 --> 02:59:53,040
Or maybe I will say that.

2659
02:59:53,040 --> 02:59:56,640
Hey guys,
I have already explained this thing twice.

2660
02:59:56,640 --> 02:59:58,680
Twice. You should pay attention.

2661
02:59:58,680 --> 03:00:01,000
You should not waste
your time of other class.

2662
03:00:01,800 --> 03:00:04,880
Because remember, guys,
there will be students.

2663
03:00:04,880 --> 03:00:08,080
There are students
who are paying full attention.

2664
03:00:08,320 --> 03:00:11,880
They are investing their time, their money
and their efforts.

2665
03:00:12,520 --> 03:00:13,200
Okay.

2666
03:00:13,200 --> 03:00:17,240
And always, if we are repeating something
four or five times,

2667
03:00:17,600 --> 03:00:20,280
we are not doing fear with those students

2668
03:00:20,600 --> 03:00:23,520
who are giving full time, full effort.

2669
03:00:23,720 --> 03:00:24,440
Right.

2670
03:00:24,600 --> 03:00:27,840
So then we be we should be focusing.

2671
03:00:27,840 --> 03:00:30,600
Then we should think
maybe we are not doing proper

2672
03:00:30,760 --> 03:00:35,600
and because a lot of the students,
they are not from the background.

2673
03:00:35,600 --> 03:00:39,120
If we move too fast
in the start of the course,

2674
03:00:39,120 --> 03:00:40,800
then it is not fair with those.

2675
03:00:40,800 --> 03:00:43,440
Okay, so right now it's fine.

2676
03:00:43,480 --> 03:00:46,280
But as we move forward,
I will be telling you that

2677
03:00:46,280 --> 03:00:48,440
if you maybe need to study more

2678
03:00:48,920 --> 03:00:53,880
or maybe if you need to practice more,
or maybe if you need to focus more

2679
03:00:55,960 --> 03:00:57,960
so far now, if the questions are dumb

2680
03:00:57,960 --> 03:01:02,240
or if you don't understand
in the first attempt or second, it's fine.

2681
03:01:03,280 --> 03:01:07,920
In line 11
is that when you switch to single equal,

2682
03:01:07,960 --> 03:01:10,440
the result will be 20 instead of ten.

2683
03:01:11,160 --> 03:01:14,760
Will it always choose the higher value
number with 20?

2684
03:01:14,760 --> 03:01:20,160
So, Catalina, it's not about the higher
values, it's about the assignment.

2685
03:01:20,160 --> 03:01:24,120
If I put if I took five in here

2686
03:01:24,840 --> 03:01:27,120
and if I, if I remove this equal to sign,

2687
03:01:27,960 --> 03:01:32,000
this five is being assigned
to this number one.

2688
03:01:32,280 --> 03:01:35,600
Now what, what I what, I will get Catalina
will I get five

2689
03:01:35,600 --> 03:01:36,200
or ten

2690
03:01:39,800 --> 03:01:40,560
by. Right.

2691
03:01:40,560 --> 03:01:42,720
So it's not about bigger or smaller
number.

2692
03:01:43,440 --> 03:01:46,000
It's about, it's about

2693
03:01:46,080 --> 03:01:49,720
it's about what value is stored in.

2694
03:01:49,720 --> 03:01:50,600
And number two

2695
03:01:51,560 --> 03:01:54,320
is being shifted to earth.

2696
03:01:54,360 --> 03:01:56,040
Number one, it's about this.

2697
03:01:56,040 --> 03:01:58,160
Okay, this is the logic

2698
03:01:59,640 --> 03:02:01,720
so it's not about

2699
03:02:01,720 --> 03:02:05,880
because so line
nine is over writing line ten.

2700
03:02:06,000 --> 03:02:07,560
So but

2701
03:02:07,880 --> 03:02:10,040
it's not proper to say we are

2702
03:02:10,560 --> 03:02:13,080
line is overriding

2703
03:02:13,080 --> 03:02:17,600
the values of of variables
are being overwritten.

2704
03:02:17,600 --> 03:02:22,920
The value of number one
variable is being overwritten by number.

2705
03:02:22,920 --> 03:02:25,080
So this is the proper terminology.

2706
03:02:26,400 --> 03:02:28,040
Yes. Is reassignment.

2707
03:02:28,040 --> 03:02:32,200
We are reassigning in here.

2708
03:02:32,200 --> 03:02:33,680
It used to be assigned.

2709
03:02:33,680 --> 03:02:36,200
So the double equal, if we want to check.

2710
03:02:36,360 --> 03:02:41,280
Okay.

2711
03:02:41,280 --> 03:02:42,080
All right.

2712
03:02:42,080 --> 03:02:44,560
So should I move forward with it
or is it okay?

2713
03:02:44,920 --> 03:02:48,520
You guys need to break.

2714
03:02:48,520 --> 03:02:52,160
Just give me maybe 15 minutes,
then we will have a break.

2715
03:02:52,160 --> 03:02:55,560
Okay? Yes.

2716
03:02:55,600 --> 03:03:00,960
Number two, value is assigned to number.

2717
03:03:00,960 --> 03:03:03,120
It's okay. We can move forward.

2718
03:03:03,880 --> 03:03:09,240
Yes. One equals to find
assigning to equal to find equality

2719
03:03:12,600 --> 03:03:13,040
like.

2720
03:03:13,960 --> 03:03:16,600
Well, actually,
we have started from this variable.

2721
03:03:16,640 --> 03:03:18,720
Okay, let's learn about this symbol.

2722
03:03:18,840 --> 03:03:21,000
This this kind of

2723
03:03:23,880 --> 03:03:28,640
it's called less than symbol. So

2724
03:03:31,240 --> 03:03:33,480
in here we are

2725
03:03:33,480 --> 03:03:36,560
we are checking
if if something is equal to or not.

2726
03:03:37,040 --> 03:03:41,920
What if if I have to check if something is
bigger than the other thing or not.

2727
03:03:42,120 --> 03:03:42,680
Right.

2728
03:03:42,720 --> 03:03:47,400
Value of one variable is bigger than
the value of the other variable or not.

2729
03:03:48,360 --> 03:03:51,480
If again,
I check back with the equal to find guys.

2730
03:03:51,880 --> 03:03:55,560
If one variable has the bigger value
than the other variable,

2731
03:03:55,560 --> 03:03:57,400
can I check that with equal cosine?

2732
03:03:57,400 --> 03:04:00,280
No, I cannot check that

2733
03:04:00,760 --> 03:04:02,280
indicator.

2734
03:04:02,720 --> 03:04:03,840
Well. Okay.

2735
03:04:03,840 --> 03:04:05,880
Maybe equals a typo.

2736
03:04:05,880 --> 03:04:06,560
Okay.

2737
03:04:06,720 --> 03:04:10,200
So we cannot check that equal
to sign only checks if two things

2738
03:04:10,200 --> 03:04:14,160
are equal or not. So.

2739
03:04:15,880 --> 03:04:18,720
So if we want to check

2740
03:04:18,760 --> 03:04:23,280
this in info that if something is bigger
then the other or not.

2741
03:04:24,200 --> 03:04:26,200
Or we use

2742
03:04:27,600 --> 03:04:30,160
this greater than sign. Okay

2743
03:04:35,680 --> 03:04:39,560
guys, is

2744
03:04:39,560 --> 03:04:43,320
the is the value
that that we have stored in

2745
03:04:43,320 --> 03:04:46,440
number one, is it greater than the value
which we have stolen?

2746
03:04:46,440 --> 03:04:50,640
Number two, Yes.

2747
03:04:50,640 --> 03:04:54,680
Give me the result
of all the relational operators

2748
03:04:54,680 --> 03:04:57,960
will be true or false.

2749
03:04:57,960 --> 03:05:05,560
So should I get a true or false
in this case?

2750
03:05:05,560 --> 03:05:07,200
Right. I get it.

2751
03:05:07,200 --> 03:05:09,760
So Java is telling me that,
hey, that's good.

2752
03:05:09,760 --> 03:05:13,640
Whatever you have stored in number one,
it is bigger

2753
03:05:14,440 --> 03:05:17,760
that then
whatever you have stored in number two.

2754
03:05:18,000 --> 03:05:20,200
Okay, it's not that simple.

2755
03:05:20,200 --> 03:05:20,560
Which

2756
03:05:21,760 --> 03:05:24,120
if I change this to 50,

2757
03:05:24,240 --> 03:05:30,920
what are what I will get Now?

2758
03:05:30,920 --> 03:05:32,880
Now I will get false.

2759
03:05:32,880 --> 03:05:38,160
Because number two contains
something that is bigger

2760
03:05:39,400 --> 03:05:42,280
and number one contains something
that is smaller.

2761
03:05:42,560 --> 03:05:45,160
Okay.
But we are checking for little things.

2762
03:05:45,640 --> 03:05:48,920
So now I will get false.

2763
03:05:48,920 --> 03:05:49,240
Yeah.

2764
03:05:50,760 --> 03:05:52,480
So whatever

2765
03:05:52,480 --> 03:05:56,120
value, whatever variable we are putting,
we are

2766
03:05:56,120 --> 03:05:59,680
we have this two two sides of this symbol.

2767
03:06:00,320 --> 03:06:03,840
If that thing contains bigger values,
we will be getting true

2768
03:06:04,360 --> 03:06:08,360
and we are over
is that there are this arrow like sign.

2769
03:06:09,480 --> 03:06:11,920
Whichever way we are
we will be placing there.

2770
03:06:12,000 --> 03:06:14,720
If it has smaller values,
then we will be getting full

2771
03:06:17,160 --> 03:06:20,680
and we have reversed the symbol

2772
03:06:20,760 --> 03:06:23,760
so we can also use the other the

2773
03:06:23,760 --> 03:06:26,840
the reverse arrow, this reversing them.

2774
03:06:27,520 --> 03:06:29,720
So now the logic will be reversed. Okay.

2775
03:06:30,120 --> 03:06:32,520
If now number one

2776
03:06:33,120 --> 03:06:35,160
has something that is smaller

2777
03:06:36,000 --> 03:06:39,680
and number two has something bigger,
now I will get control.

2778
03:06:40,080 --> 03:06:44,600
Okay.

2779
03:06:44,600 --> 03:06:48,000
So guys, it
is it possible that these two symbols,

2780
03:06:48,000 --> 03:06:52,600
they can have same values?

2781
03:06:52,600 --> 03:06:56,400
If I am using same variable,
is it possible they can also be both

2782
03:06:56,400 --> 03:07:00,160
and have blue
or they both can have false? I

2783
03:07:02,040 --> 03:07:06,160
think about this.

2784
03:07:06,160 --> 03:07:06,480
Okay.

2785
03:07:06,480 --> 03:07:11,160
So if two numbers are same,

2786
03:07:11,160 --> 03:07:13,880
so electra's same numbers are same.

2787
03:07:14,800 --> 03:07:16,080
So what do you guys think?

2788
03:07:16,080 --> 03:07:25,000
What answer
I will get for both of them now.

2789
03:07:25,000 --> 03:07:27,720
So they will have false

2790
03:07:29,600 --> 03:07:32,440
when both the values are equal, right?

2791
03:07:32,640 --> 03:07:34,400
So yes, they can have the same.

2792
03:07:34,400 --> 03:07:34,800
Okay.

2793
03:07:34,800 --> 03:07:39,240
Not greater, not not less.

2794
03:07:39,240 --> 03:07:42,920
All right.

2795
03:07:42,920 --> 03:07:45,920
So in programing, you have to
you have got to think

2796
03:07:45,920 --> 03:07:49,680
of all the possibilities.

2797
03:07:49,680 --> 03:07:50,120
Yeah.

2798
03:07:50,160 --> 03:07:54,960
Is it clear that these two symbols,

2799
03:07:54,960 --> 03:07:58,160
if they're just like math, simple,
just like math,

2800
03:07:59,400 --> 03:08:03,040
so closely related, are two next symbols

2801
03:08:03,400 --> 03:08:05,640
to next relational operators

2802
03:08:14,240 --> 03:08:15,600
that they are called

2803
03:08:15,600 --> 03:08:18,480
greater than equal to
or less than equal to.

2804
03:08:18,600 --> 03:08:23,000
Okay, so this thing, this symbol is called
called greater than symbol.

2805
03:08:23,000 --> 03:08:25,280
This symbol is called less than symbol.

2806
03:08:25,280 --> 03:08:29,880
These are called greater than equal
to symbol or less than or equal to symbol.

2807
03:08:30,080 --> 03:08:30,840
Okay.

2808
03:08:30,960 --> 03:08:34,040
So now we have this extra gap ability.

2809
03:08:34,800 --> 03:08:35,920
So this symbol,

2810
03:08:37,040 --> 03:08:39,040
it can check two things.

2811
03:08:39,040 --> 03:08:43,400
It can check if something is greater or.

2812
03:08:43,400 --> 03:08:46,440
If something is equal, this symbol,

2813
03:08:46,920 --> 03:08:49,600
it can only check if something is greater.

2814
03:08:50,040 --> 03:08:50,640
Okay.

2815
03:08:50,640 --> 03:08:55,160
But in this one it can check
if something is greater and equal.

2816
03:08:55,400 --> 03:08:57,120
Okay. So.

2817
03:08:57,120 --> 03:09:07,080
So tell me, guys, tell me the output.

2818
03:09:07,080 --> 03:09:12,840
If I put pen in both the variables,
what will be the output for this two lines

2819
03:09:12,840 --> 03:09:16,280
and what will be output
for these two lines?

2820
03:09:16,280 --> 03:09:18,200
You will be getting four outputs, right?

2821
03:09:18,200 --> 03:09:29,120
Those four outputs in the console,
you can just write f 44 false and two

2822
03:09:29,400 --> 03:09:33,240
So tell me those four answers.

2823
03:09:33,240 --> 03:09:35,240
All right.

2824
03:09:35,240 --> 03:09:37,840
So false. False.

2825
03:09:37,840 --> 03:09:39,600
And then

2826
03:09:40,080 --> 03:09:42,720
pro. So false, false.

2827
03:09:42,960 --> 03:09:43,840
Go through.

2828
03:09:43,840 --> 03:09:48,160
And if I, if I

2829
03:09:48,800 --> 03:09:51,360
if I say 20

2830
03:09:51,360 --> 03:09:52,600
now work output I will get

2831
03:10:00,800 --> 03:10:01,920
take your time.

2832
03:10:01,920 --> 03:10:02,720
Not right.

2833
03:10:02,720 --> 03:10:20,160
Think about it
and then tell me the output.

2834
03:10:20,160 --> 03:10:20,760
All right.

2835
03:10:21,080 --> 03:10:23,440
So for this one,

2836
03:10:23,440 --> 03:10:25,600
is the number one
the greater than number two, life

2837
03:10:27,120 --> 03:10:30,080
is number one greater the number two

2838
03:10:30,080 --> 03:10:33,080
false right is the number one less

2839
03:10:33,080 --> 03:10:37,080
then number two.

2840
03:10:37,080 --> 03:10:39,520
Yes. Right. So false. True.

2841
03:10:39,520 --> 03:10:43,080
And is the number one
greater or equal to number two?

2842
03:10:44,480 --> 03:10:45,120
No more.

2843
03:10:45,120 --> 03:10:47,280
The condition of failed, right?

2844
03:10:47,640 --> 03:10:49,920
Neither.
This number is equal to number one.

2845
03:10:50,040 --> 03:10:52,960
Neither number one is equal to number
two, nor

2846
03:10:53,520 --> 03:10:56,360
be number one is greater than number two.

2847
03:10:56,440 --> 03:10:59,480
Okay, so both the condition are feared.

2848
03:10:59,760 --> 03:11:05,080
So if I end insecurities, so I get false

2849
03:11:06,200 --> 03:11:09,000
because number one
is not greater than number two,

2850
03:11:09,800 --> 03:11:13,000
I get true because number
one is less than number two.

2851
03:11:14,080 --> 03:11:15,400
I get calls

2852
03:11:15,400 --> 03:11:20,880
because neither number one is greater
nor it is equal to number two.

2853
03:11:21,200 --> 03:11:21,840
Okay?

2854
03:11:22,200 --> 03:11:25,640
And get true
because one condition is passed.

2855
03:11:25,680 --> 03:11:28,440
This time I am getting this true.

2856
03:11:28,800 --> 03:11:32,320
I am I getting this true
because these two numbers are equal or

2857
03:11:32,320 --> 03:11:39,040
because number one is less than number
two, less.

2858
03:11:39,040 --> 03:11:39,280
Right.

2859
03:11:39,280 --> 03:11:42,920
So this this
this operator rejects who thinks, okay,

2860
03:11:43,040 --> 03:11:45,960
it's excluding all these operators clearly

2861
03:11:46,360 --> 03:12:00,000
they are these operators clear.

2862
03:12:00,000 --> 03:12:03,080
Okay then we have this
not equal to operator so

2863
03:12:03,280 --> 03:12:06,360
same as equal to

2864
03:12:06,440 --> 03:12:08,000
so if we want to check

2865
03:12:08,000 --> 03:12:11,760
if something is not equal to

2866
03:12:15,200 --> 03:12:19,560
or if number one is not equal to

2867
03:12:20,760 --> 03:12:24,480
number two,
then I will be getting it true.

2868
03:12:24,760 --> 03:12:25,000
Okay.

2869
03:12:25,000 --> 03:12:29,480
So it's the reverse of this condition.

2870
03:12:29,480 --> 03:12:31,160
We say, hey, let's

2871
03:12:34,560 --> 03:12:37,840
this is the reverse of equal to

2872
03:12:39,760 --> 03:12:42,160
so because these numbers
are not equal sign

2873
03:12:43,960 --> 03:12:44,560
group.

2874
03:12:45,000 --> 03:12:50,120
And if these numbers are equal,
then I will get a false

2875
03:12:50,640 --> 03:12:53,040
this is the reverse of that condition.

2876
03:12:55,000 --> 03:12:56,840
Now, let's have a break

2877
03:12:56,840 --> 03:12:59,560
and the break

2878
03:13:01,840 --> 03:13:04,200
we will learn about B,

2879
03:13:04,200 --> 03:13:07,720
if conditions get

2880
03:13:09,480 --> 03:13:10,040
worse.

2881
03:13:10,320 --> 03:13:14,040
Can you explain why on line 20
you get a draw

2882
03:13:14,520 --> 03:13:17,040
if just one condition is true

2883
03:13:18,520 --> 03:13:21,720
on line 20.

2884
03:13:21,720 --> 03:13:26,320
So in here, Catalina,
we are using two conditions.

2885
03:13:26,600 --> 03:13:29,240
And even if one condition returns true,

2886
03:13:30,000 --> 03:13:32,520
we return true for the complete condition.

2887
03:13:32,520 --> 03:13:35,160
So you're saying extend or condition.

2888
03:13:35,280 --> 03:13:35,760
Okay.

2889
03:13:36,360 --> 03:13:41,640
So in our
what do we say if this part is true, then

2890
03:13:41,640 --> 03:13:45,720
this part is also or if this part is true,
We said this is true.

2891
03:13:45,840 --> 03:13:46,520
Okay.

2892
03:13:46,560 --> 03:13:49,320
So if you ask me,

2893
03:13:49,320 --> 03:13:51,840
like in order to see how this works,

2894
03:13:53,640 --> 03:13:57,400
if let's say I have or

2895
03:13:58,960 --> 03:14:01,200
so I will say, okay,

2896
03:14:01,200 --> 03:14:05,520
if either of these values are one,

2897
03:14:06,280 --> 03:14:10,320
the answer is okay,
it can be first one or the second one.

2898
03:14:10,720 --> 03:14:13,240
It can be the first one

2899
03:14:13,600 --> 03:14:14,520
of the second one.

2900
03:14:14,520 --> 03:14:16,160
The answer is one.

2901
03:14:16,400 --> 03:14:19,880
If Both the conditions are one

2902
03:14:20,000 --> 03:14:21,640
spin. The answer is one.

2903
03:14:21,640 --> 03:14:24,320
This condition will only return false.

2904
03:14:24,360 --> 03:14:27,080
Then both the operators return

2905
03:14:29,160 --> 03:14:29,640
false.

2906
03:14:29,640 --> 03:14:32,440
So in three conditions
you will be getting a true.

2907
03:14:33,240 --> 03:14:34,280
First condition is true.

2908
03:14:34,280 --> 03:14:35,400
Second condition is true.

2909
03:14:35,400 --> 03:14:37,800
Both conditions are true. Okay.

2910
03:14:37,800 --> 03:14:41,240
Only you will be getting false
when both are fake.

2911
03:14:41,880 --> 03:14:43,560
Does it matter which one? We don't know.

2912
03:14:43,560 --> 03:14:48,040
It does not matter.

2913
03:14:48,040 --> 03:14:55,960
What was the last condition
if did not equal to a picture?

2914
03:14:55,960 --> 03:14:58,120
Please again about not equal.

2915
03:14:58,320 --> 03:15:00,960
So let's see if simple it checks.

2916
03:15:01,560 --> 03:15:04,080
If it fails, if number one

2917
03:15:04,920 --> 03:15:08,240
is non equals or number two
it will return you.

2918
03:15:08,440 --> 03:15:10,680
True.

2919
03:15:10,680 --> 03:15:16,320
So R is number one not equal to number two
or they are, they are equal.

2920
03:15:17,640 --> 03:15:19,400
So if I ask you this,

2921
03:15:19,400 --> 03:15:23,040
that number one
is not equal to number two.

2922
03:15:23,040 --> 03:15:24,400
What will be your answer?

2923
03:15:24,400 --> 03:15:31,560
Will you say true or false? No.

2924
03:15:31,840 --> 03:15:34,920
If I say number one is not equal

2925
03:15:34,920 --> 03:15:37,720
to number two,
will your answer be true or false?

2926
03:15:37,920 --> 03:15:40,480
I'm saying not equal to m.

2927
03:15:40,480 --> 03:15:41,720
I am.

2928
03:15:41,720 --> 03:15:44,280
So this condition is false.

2929
03:15:44,520 --> 03:15:47,760
Why it is false
because in actual numbers are equal.

2930
03:15:48,520 --> 03:15:51,480
So if just I am saying the reverse equal.

2931
03:15:51,760 --> 03:15:53,600
Okay.

2932
03:15:53,600 --> 03:15:56,080
Because they are equal equal.

2933
03:15:56,080 --> 03:15:58,160
Is it clear now

2934
03:16:07,200 --> 03:16:10,400
this class is not being too hard
if here we go.

2935
03:16:10,840 --> 03:16:15,160
Here we see the examples from Michael
and some point of time later on

2936
03:16:15,160 --> 03:16:17,680
maybe we will see a meme as well
from Sebastien

2937
03:16:19,600 --> 03:16:25,280
on Proven false.

2938
03:16:25,280 --> 03:16:28,920
No, we are not hungry. Let's have a break.

2939
03:16:30,040 --> 03:16:31,240
So I guess one thing we

2940
03:16:31,240 --> 03:16:34,200
saw because we have to cover a lot.

2941
03:16:34,200 --> 03:16:35,640
So let's have a shorter break.

2942
03:16:35,640 --> 03:16:45,000
Maybe 15 minutes.

2943
03:16:45,000 --> 03:16:47,480
No, there is no chance for 255

2944
03:16:49,560 --> 03:16:51,920
a 15 minute break

2945
03:16:51,920 --> 03:16:54,040
because we have to cover a lot.

2946
03:16:54,040 --> 03:16:57,560
So. 155.

2947
03:16:57,840 --> 03:16:59,400
Okay.

2948
03:16:59,400 --> 03:17:02,280
Please be back in 15 minutes

2949
03:17:05,160 --> 03:17:06,000
and reminding me

2950
03:17:06,000 --> 03:17:21,200
about the recording.

2951
03:17:21,200 --> 03:17:22,360
Okay.

2952
03:17:23,240 --> 03:17:24,560
I have started recording.

2953
03:17:24,560 --> 03:17:25,880
Thank you

2954
03:17:51,480 --> 03:17:57,840
to a new class.

2955
03:17:57,840 --> 03:17:59,520
So now

2956
03:17:59,920 --> 03:18:03,000
we will use these relational operators

2957
03:18:04,520 --> 03:18:08,760
with the help of another construct
that is called F condition.

2958
03:18:09,960 --> 03:18:13,440
So now we will write code that

2959
03:18:14,520 --> 03:18:16,760
execute certain blocks,

2960
03:18:17,000 --> 03:18:20,920
certain lines based on these conditions.

2961
03:18:21,040 --> 03:18:21,720
Okay.

2962
03:18:21,800 --> 03:18:23,760
And this is how we achieve it.

2963
03:18:23,760 --> 03:18:25,160
Let's say

2964
03:18:25,600 --> 03:18:31,200
we have one

2965
03:18:35,000 --> 03:18:37,480
and one or two

2966
03:18:38,440 --> 03:18:39,720
like this one

2967
03:18:40,160 --> 03:18:42,560
so we can see if.

2968
03:18:43,000 --> 03:18:44,400
Okay, so if

2969
03:18:45,600 --> 03:18:47,640
that two parenthesis

2970
03:18:48,240 --> 03:18:50,000
and if

2971
03:18:52,880 --> 03:18:54,560
frustrating it, let me tell you this,

2972
03:18:54,560 --> 03:18:56,280
I continue this

2973
03:18:58,920 --> 03:19:02,160
to parentheses
and then I am putting two in here.

2974
03:19:02,520 --> 03:19:19,120
Okay.

2975
03:19:19,120 --> 03:19:23,080
Yes, we are recording.

2976
03:19:23,080 --> 03:19:26,480
So if I have three lines like this

2977
03:19:44,320 --> 03:19:46,600
for this, if,

2978
03:19:47,000 --> 03:19:48,840
if whatever

2979
03:19:48,840 --> 03:19:51,560
we are putting inside these brackets,

2980
03:19:52,280 --> 03:19:55,320
if the result of that calculation is true,

2981
03:19:57,200 --> 03:20:00,920
the this starting bracket
and extending that liberated

2982
03:20:01,120 --> 03:20:05,160
whatever code
we put inside these two brackets

2983
03:20:06,640 --> 03:20:08,680
if that condition returns.

2984
03:20:08,760 --> 03:20:09,480
True.

2985
03:20:10,120 --> 03:20:12,640
Yeah, Java will execute that code.

2986
03:20:13,440 --> 03:20:16,840
If not because I will not execute
this line of code.

2987
03:20:17,720 --> 03:20:20,040
So right now I have placed true.

2988
03:20:20,040 --> 03:20:22,320
So I will see this line,

2989
03:20:23,160 --> 03:20:26,680
this line and this line on my console.

2990
03:20:26,840 --> 03:20:29,520
So if I execute this

2991
03:20:33,240 --> 03:20:34,920
I see before

2992
03:20:34,920 --> 03:20:39,360
if condition I see
I am inside of condition.

2993
03:20:39,360 --> 03:20:44,360
I see after if condition. Yes.

2994
03:20:44,400 --> 03:20:47,760
If same as of those court papers.

2995
03:20:48,520 --> 03:20:52,200
If I put clause in here

2996
03:20:53,880 --> 03:20:56,960
now I will only see this line

2997
03:20:58,120 --> 03:21:00,320
and this line. Okay.

2998
03:21:00,320 --> 03:21:04,560
This line
Java will now not execute this line

2999
03:21:05,040 --> 03:21:12,160
because in here we are putting false. Okay

3000
03:21:13,320 --> 03:21:15,160
I see before this line

3001
03:21:15,160 --> 03:21:18,840
after applying
and there can be thousands of lines

3002
03:21:18,960 --> 03:21:22,680
inside this condition, it's
not only about one line.

3003
03:21:22,800 --> 03:21:24,880
There can be thousands of lines.

3004
03:21:24,880 --> 03:21:28,400
Okay.

3005
03:21:28,400 --> 03:21:33,400
So if the condition is false,
none of those lines will execute.

3006
03:21:34,280 --> 03:21:36,480
If condition is true,

3007
03:21:37,440 --> 03:21:42,880
all the lines will be executed.

3008
03:21:42,880 --> 03:21:47,080
So this eighth condition,
it works on booleans.

3009
03:21:47,440 --> 03:21:49,440
Okay, True and false.

3010
03:21:49,440 --> 03:21:54,880
So those operators that we have learned,
what do the return, guys?

3011
03:21:55,320 --> 03:21:58,360
What kind of data written, what
what is the data type

3012
03:21:58,360 --> 03:21:59,800
that the return

3013
03:22:02,640 --> 03:22:04,640
boolean, right?

3014
03:22:04,640 --> 03:22:06,720
Yes or no? True or false?

3015
03:22:06,720 --> 03:22:10,840
So can I use those relational operators
inside these parentheses where?

3016
03:22:10,840 --> 03:22:17,880
I am using false and true, yes.

3017
03:22:17,880 --> 03:22:18,880
Right.

3018
03:22:19,040 --> 03:22:22,480
So if I say instead
of true and false, if I say

3019
03:22:29,560 --> 03:22:30,760
actually

3020
03:22:31,200 --> 03:22:49,120
actually we create a new class.

3021
03:22:49,120 --> 03:22:51,320
So they work on true and false. So

3022
03:22:54,120 --> 03:22:56,560
let me quickly copy in this code.

3023
03:22:57,880 --> 03:23:00,840
And at this time,

3024
03:23:00,920 --> 03:23:12,120
let me introduce you to.

3025
03:23:12,120 --> 03:23:15,440
So if I say number

3026
03:23:15,720 --> 03:23:18,240
one is greater than

3027
03:23:19,560 --> 03:23:23,880
number two,
so we will these lines on the consolidate.

3028
03:23:24,000 --> 03:23:25,120
If I said

3029
03:23:35,160 --> 03:23:38,760
no right, because this condition,

3030
03:23:40,160 --> 03:23:42,960
it is returning me a false.

3031
03:23:43,600 --> 03:23:45,960
And whenever we have a false

3032
03:23:46,760 --> 03:23:49,960
inside these parentheses in an F condition

3033
03:23:50,760 --> 03:23:54,960
are and Java does not execute the lines

3034
03:23:55,000 --> 03:23:58,840
which are inside the
if condition starting from this bracket.

3035
03:23:59,360 --> 03:24:01,200
Tell this.

3036
03:24:01,200 --> 03:24:04,160
So if I execute this

3037
03:24:06,080 --> 03:24:12,200
I see only two lines.

3038
03:24:12,200 --> 03:24:14,560
Why there is an added on line 16.

3039
03:24:14,960 --> 03:24:17,880
Please put in this portion of

3040
03:24:26,160 --> 03:24:28,680
so you are missing a bracket.

3041
03:24:28,680 --> 03:24:30,240
You are missing a bracket.

3042
03:24:30,240 --> 03:24:34,920
There should be three closed in
curly bracket one for this class,

3043
03:24:34,920 --> 03:24:39,880
the second one for this method
and the third one for the if condition.

3044
03:24:41,520 --> 03:24:44,720
You are missing that bracket.

3045
03:24:44,720 --> 03:24:46,320
Yes, I think. Sure.

3046
03:24:46,320 --> 03:24:48,760
Let me know once you have time this code.

3047
03:24:48,760 --> 03:24:51,480
But we have understood this code
to minors.

3048
03:24:51,880 --> 03:24:54,520
Try to understand this code.
Ask questions.

3049
03:24:54,520 --> 03:25:08,800
If something is not clear, I will. Yes.

3050
03:25:08,800 --> 03:25:13,440
Only if the condition is true,
then the lines will be printed

3051
03:25:13,440 --> 03:25:14,840
or any other code.

3052
03:25:14,840 --> 03:25:19,400
But any other code
that you put inside this if condition

3053
03:25:20,520 --> 03:25:23,480
inside the safe condition
starting this bracket to

3054
03:25:23,520 --> 03:25:27,360
this is not necessarily
to be print or statement.

3055
03:25:27,480 --> 03:25:30,440
Anything that you put inside in here,

3056
03:25:30,960 --> 03:25:33,840
Java will only execute those lines

3057
03:25:34,800 --> 03:25:39,880
if this part is returning a true

3058
03:25:46,520 --> 03:25:48,960
if the discrimination

3059
03:25:49,920 --> 03:25:53,360
Java is doing discrimination

3060
03:25:56,920 --> 03:26:02,560
or you just got back into print on

3061
03:26:11,440 --> 03:26:15,000
Jimmy, you are almost 10 minutes late

3062
03:26:18,000 --> 03:26:19,800
works the condition.

3063
03:26:19,800 --> 03:26:22,360
I'm not telling you about this condition.

3064
03:26:22,560 --> 03:26:25,040
First you have to pay the penalty.

3065
03:26:25,040 --> 03:26:27,720
You have to give part to all of the class
members.

3066
03:26:28,560 --> 03:26:29,320
Line 18.

3067
03:26:29,320 --> 03:26:32,440
Why is it outside? First

3068
03:26:33,520 --> 03:26:35,120
line is

3069
03:26:36,920 --> 03:26:38,200
at the line 18.

3070
03:26:38,200 --> 03:26:39,040
This way

3071
03:26:39,720 --> 03:26:40,600
it's different.

3072
03:26:40,600 --> 03:26:42,720
And this is with

3073
03:26:45,600 --> 03:26:47,720
line 16. Oh.

3074
03:26:47,720 --> 03:26:50,880
I am writing this line intentionally
so that you guys know

3075
03:26:50,880 --> 03:26:53,640
which lines are executed
and which which not.

3076
03:26:54,080 --> 03:26:56,560
When we started condition
just just to show you,

3077
03:26:57,560 --> 03:26:59,840
if we are not settling down,

3078
03:27:00,400 --> 03:27:03,480
then would it be the right race?

3079
03:27:08,600 --> 03:27:13,200
Okay, so Jimmy, we have learned about

3080
03:27:13,280 --> 03:27:17,720
so it does not matter
if it's outside those brackets on line 15.

3081
03:27:18,200 --> 03:27:22,720
So Catalina, this line
which outside of curly brackets

3082
03:27:23,480 --> 03:27:26,160
it is independent of this if condition,

3083
03:27:26,640 --> 03:27:29,400
whether this condition is returning to

3084
03:27:29,680 --> 03:27:33,160
or it is returning force,
it will always be executed

3085
03:27:33,760 --> 03:27:37,080
at face of things
which are outside of curly brackets.

3086
03:27:37,400 --> 03:27:39,040
They will always be executed.

3087
03:27:39,040 --> 03:27:42,800
Learn the things
which are inside these curly brackets

3088
03:27:43,440 --> 03:27:49,240
they will execute if if condition is true
and not if the if condition is false.

3089
03:27:50,600 --> 03:27:52,920
They they will declare bankruptcy,

3090
03:27:53,560 --> 03:27:56,040
giving a piece of body
to a class of 100 plus

3091
03:27:58,080 --> 03:28:02,000
or I will duplicate three times
I am inside of this condition.

3092
03:28:02,040 --> 03:28:05,240
So you're doing I just duplicate
it is to show you that we can put

3093
03:28:05,240 --> 03:28:09,720
more than one line inside this condition.

3094
03:28:09,720 --> 03:28:12,800
If you want to compute,
then we're going to look

3095
03:28:13,560 --> 03:28:15,640
just to show you
that we can have multiple lines.

3096
03:28:16,800 --> 03:28:18,640
Oops.

3097
03:28:18,640 --> 03:28:23,280
So, Jimmy, we were learning
about relational operators.

3098
03:28:23,280 --> 03:28:26,480
So focus on here. Give me

3099
03:28:26,480 --> 03:28:30,200
we now we
we are learning about this condition.

3100
03:28:30,520 --> 03:28:33,000
So how this condition works, if

3101
03:28:34,040 --> 03:28:37,120
we place it through

3102
03:28:37,120 --> 03:28:40,280
in here,

3103
03:28:40,280 --> 03:28:43,120
inside this, if whatever line

3104
03:28:43,400 --> 03:28:47,400
we write inside these brackets,
it is executed.

3105
03:28:47,520 --> 03:28:50,760
If we have a true in here.

3106
03:28:51,160 --> 03:28:53,720
Right. So if I execute this line.

3107
03:28:53,720 --> 03:28:56,680
So because I have oops,
I have a true in here,

3108
03:28:57,080 --> 03:29:01,200
I see these three lines
which are inside if condition

3109
03:29:02,160 --> 03:29:06,520
if I put a false, our job

3110
03:29:06,960 --> 03:29:10,320
will not execute these three lines

3111
03:29:10,320 --> 03:29:13,480
in here.

3112
03:29:13,480 --> 03:29:13,960
Okay.

3113
03:29:14,120 --> 03:29:16,840
So I see only two lines.

3114
03:29:17,040 --> 03:29:19,760
So they are called if health conditions.

3115
03:29:19,760 --> 03:29:22,800
So and instead of putting true and false,

3116
03:29:23,040 --> 03:29:25,680
I can also write code

3117
03:29:25,880 --> 03:29:29,400
that returns true
or false as a result an executed.

3118
03:29:29,640 --> 03:29:34,000
So if I write number
one is greater than number two

3119
03:29:34,120 --> 03:29:37,400
because the relational operators did it
and true or false.

3120
03:29:37,680 --> 03:29:38,480
Right.

3121
03:29:38,720 --> 03:29:41,000
So they can also
be used inside this condition.

3122
03:29:41,520 --> 03:29:44,520
So I am writing
if number one is greater than number two,

3123
03:29:44,520 --> 03:29:47,400
I am saying here Java and all these lines,

3124
03:29:47,400 --> 03:29:50,840
if number one is greater than number two,
if not in all of these lines,

3125
03:29:50,880 --> 03:29:55,800
in all this line, but these two lines
which are above and below

3126
03:29:55,800 --> 03:30:01,200
if condition, they are not dependent of on
if condition, no matter if the

3127
03:30:01,200 --> 03:30:05,720
if is true or if it is false,
they will always be executed.

3128
03:30:07,080 --> 03:30:11,440
They will always be executed.

3129
03:30:11,440 --> 03:30:15,240
And so when I print less than it print
all as true.

3130
03:30:16,200 --> 03:30:19,440
So let's see, because number one
is less than number two.

3131
03:30:19,440 --> 03:30:23,400
So you put in less,
then it will print all the values,

3132
03:30:23,560 --> 03:30:28,840
but it will print
because now the condition is true, right?

3133
03:30:28,840 --> 03:30:30,840
The condition is true.

3134
03:30:30,840 --> 03:30:34,240
So now I will see all the lines.

3135
03:30:34,240 --> 03:30:36,920
What is this used for, Maryam?

3136
03:30:37,200 --> 03:30:41,200
And these if conditions are used to give

3137
03:30:41,760 --> 03:30:46,320
to your programs
kind of in print now your programs,

3138
03:30:46,320 --> 03:30:50,880
they can think they can take the data
from the user.

3139
03:30:51,560 --> 03:30:53,920
They can now take decisions.

3140
03:30:53,920 --> 03:30:56,280
They can do either this or that.

3141
03:30:56,360 --> 03:31:01,160
Okay, So we are giving this new logic,

3142
03:31:01,200 --> 03:31:05,720
new kind of brings to our programs
that they can take the decisions.

3143
03:31:06,400 --> 03:31:10,760
So once you enter the username
and password correctly, guys,

3144
03:31:10,840 --> 03:31:15,040
once you enter the username and password
correctly on Facebook, what happens?

3145
03:31:15,480 --> 03:31:17,520
Facebook takes you to the

3146
03:31:18,640 --> 03:31:20,160
to the account, right?

3147
03:31:20,160 --> 03:31:25,080
How how, how Facebook is checking that
all Facebook is checking if your username

3148
03:31:25,080 --> 03:31:30,720
and password are the ones that you that
you entered when you created that account.

3149
03:31:31,040 --> 03:31:33,800
Using if conditions is

3150
03:31:33,840 --> 03:31:36,400
the most important thing in programing.

3151
03:31:36,880 --> 03:31:38,440
If The most important thing.

3152
03:31:38,440 --> 03:31:40,680
So so Facebook is doing this great

3153
03:31:42,000 --> 03:31:43,800
Facebook is doing this.

3154
03:31:43,800 --> 03:31:47,000
So say

3155
03:31:51,360 --> 03:31:52,960
let's say your password is ten.

3156
03:31:52,960 --> 03:31:55,680
Okay, I'm just as the password is ten.

3157
03:31:56,040 --> 03:31:59,520
So Facebook is saying
if number one is equal to equal to ten,

3158
03:32:00,080 --> 03:32:03,600
then show you the pool for your account
and everything.

3159
03:32:03,600 --> 03:32:04,320
Okay.

3160
03:32:04,360 --> 03:32:08,920
Otherwise, if if the password is not,
don't let you log in.

3161
03:32:09,120 --> 03:32:09,800
Okay.

3162
03:32:10,680 --> 03:32:15,600
So can't do that without the boolean
or justifying multiple method. Yes.

3163
03:32:15,760 --> 03:32:18,960
We cannot do this without booleans.

3164
03:32:18,960 --> 03:32:21,200
This is how your programs take decisions.

3165
03:32:22,040 --> 03:32:24,840
You can put any operator in here.

3166
03:32:24,840 --> 03:32:28,640
So if the value of if is equal to two,

3167
03:32:28,640 --> 03:32:31,880
it prints everything
inside the calibrated of

3168
03:32:31,960 --> 03:32:35,040
if condition when the value is false,
it does not work.

3169
03:32:35,080 --> 03:32:45,040
Yes, Farhad, you are right.

3170
03:32:45,040 --> 03:32:47,280
So let's do one more example Case.

3171
03:32:47,640 --> 03:32:49,080
Let's do one more.

3172
03:32:49,160 --> 03:33:05,880
So let me put it in in here.

3173
03:33:05,880 --> 03:33:07,440
Let's do something first because

3174
03:33:16,440 --> 03:33:17,480
let's say

3175
03:33:17,480 --> 03:33:21,200
you have this variable integer temp

3176
03:33:22,120 --> 03:33:26,680
that has 16, okay?

3177
03:33:26,680 --> 03:33:30,040
And you check if if

3178
03:33:31,680 --> 03:33:33,440
some pressure

3179
03:33:33,840 --> 03:33:36,040
is greater. 60.

3180
03:33:36,040 --> 03:33:36,360
Okay.

3181
03:33:36,360 --> 03:33:38,600
If it is greater than or equal to 60

3182
03:33:40,800 --> 03:33:42,600
is equal to greater than or equal

3183
03:33:42,600 --> 03:33:43,640
to say

3184
03:33:48,000 --> 03:33:54,720
I am going to be okay.

3185
03:33:54,720 --> 03:33:57,000
And with this if conditions,

3186
03:33:57,960 --> 03:34:00,600
I can also have an health condition.

3187
03:34:00,880 --> 03:34:01,680
Okay.

3188
03:34:01,840 --> 03:34:04,440
So if condition, if the thing

3189
03:34:04,440 --> 03:34:07,240
that I am writing in here,
if it pretend stroke,

3190
03:34:08,600 --> 03:34:11,280
whatever I write in here,
it will be printed.

3191
03:34:11,960 --> 03:34:17,640
If not, I can this as okay,
I can write this else.

3192
03:34:18,200 --> 03:34:21,920
So if true, do this else do this.

3193
03:34:22,200 --> 03:34:22,600
Okay.

3194
03:34:22,720 --> 03:34:24,960
So as I stand out

3195
03:34:25,520 --> 03:34:29,840
some thought out.

3196
03:34:29,840 --> 03:34:32,360
I mean, go for a

3197
03:34:33,720 --> 03:34:34,440
walk.

3198
03:34:35,080 --> 03:34:36,360
Okay.

3199
03:34:36,360 --> 03:34:38,800
So if

3200
03:34:38,800 --> 03:34:43,440
whatever condition
I am putting in here, if it is true,

3201
03:34:44,400 --> 03:34:45,800
the code from

3202
03:34:45,800 --> 03:34:50,360
extracting from this bracket in
this bracket will be executed.

3203
03:34:51,160 --> 03:34:55,920
If it is not true,
then this code will be executed.

3204
03:34:55,920 --> 03:34:56,440
Okay.

3205
03:34:56,920 --> 03:35:04,600
So is this condition progress?

3206
03:35:04,600 --> 03:35:05,400
What output?

3207
03:35:05,400 --> 03:35:09,240
I will see.

3208
03:35:09,240 --> 03:35:16,720
I am going to h.

3209
03:35:16,720 --> 03:35:22,280
And if I change the temperature to 50,
what output?

3210
03:35:22,280 --> 03:35:28,680
I will see.

3211
03:35:28,680 --> 03:35:34,480
I will go for whatever.

3212
03:35:34,480 --> 03:35:39,120
Okay, so now your program
is taking decisions based on the data.

3213
03:35:39,560 --> 03:35:40,200
Okay?

3214
03:35:40,560 --> 03:35:43,960
So it can
it can take the data from your keyboard,

3215
03:35:43,960 --> 03:35:46,240
it can download this data from Internet.

3216
03:35:46,240 --> 03:35:48,840
It can start from the other files.

3217
03:35:49,480 --> 03:35:51,920
So you feel the data to your program.

3218
03:35:51,920 --> 03:35:56,000
Depending upon that data,
your program can now take decisions.

3219
03:35:56,760 --> 03:35:59,080
This all the websites,

3220
03:35:59,080 --> 03:36:01,360
this is how they take decisions.

3221
03:36:01,360 --> 03:36:05,640
If the amount in your balance is
is less than B amount,

3222
03:36:05,880 --> 03:36:07,440
maybe you are trying to do something.

3223
03:36:07,440 --> 03:36:12,120
If it is less than that
and they show you at the e-commerce,

3224
03:36:12,120 --> 03:36:15,960
if you had usernames and passwords,
they are not same, they show you error.

3225
03:36:16,600 --> 03:36:18,680
Yes, it is also possible
to do with strength,

3226
03:36:19,320 --> 03:36:22,440
but part of strength
we have to do something

3227
03:36:23,480 --> 03:36:24,360
differently.

3228
03:36:24,360 --> 03:36:50,080
So, for example, let's say

3229
03:36:50,120 --> 03:36:52,040
I have this

3230
03:36:53,880 --> 03:36:58,680
one, two, three.

3231
03:36:58,680 --> 03:37:00,840
So strange guys.

3232
03:37:01,400 --> 03:37:03,560
Things don't work

3233
03:37:04,080 --> 03:37:09,720
with equal to.

3234
03:37:09,720 --> 03:37:12,000
Yes, these brackets,
they are very important.

3235
03:37:12,760 --> 03:37:14,760
Otherwise you will be getting error.

3236
03:37:14,760 --> 03:37:16,440
So things.

3237
03:37:16,440 --> 03:37:18,720
Yes, we can do.

3238
03:37:18,720 --> 03:37:21,960
We can use equal to equal to sign,
but it is not

3239
03:37:23,160 --> 03:37:25,440
recommended to use that equal to sign.

3240
03:37:25,920 --> 03:37:29,760
Things
actually have this different mechanism

3241
03:37:31,120 --> 03:37:33,640
that is called equals method.

3242
03:37:34,080 --> 03:37:38,160
So if you want to check
if two strings are equal or not,

3243
03:37:38,160 --> 03:37:42,280
instead of using equal to equal to sign,
it's only four strings, by the way.

3244
03:37:42,280 --> 03:37:42,840
Right?

3245
03:37:43,240 --> 03:37:47,880
So because string is a non primitive
data type, non

3246
03:37:47,880 --> 03:37:52,120
primitive data types, we check non
primitive data types differently.

3247
03:37:52,280 --> 03:37:52,920
Okay.

3248
03:37:53,880 --> 03:37:57,120
But if are primitive
you can use the equal to four times.

3249
03:37:57,120 --> 03:37:58,680
So you will say equals

3250
03:38:09,080 --> 03:38:12,720
yes. So if username equals

3251
03:38:13,120 --> 03:38:16,800
equal,

3252
03:38:16,800 --> 03:38:34,560
whatever.

3253
03:38:34,560 --> 03:38:36,440
Let me move this part.

3254
03:38:36,440 --> 03:38:39,120
Let's, let's keep it simple.

3255
03:38:39,720 --> 03:38:55,160
Else.

3256
03:38:55,160 --> 03:38:57,800
So five things

3257
03:38:58,040 --> 03:39:01,480
instead of using equal equal to operator,

3258
03:39:02,400 --> 03:39:05,160
I have to write this talk.

3259
03:39:05,160 --> 03:39:07,680
Okay, then I have to write the equals,

3260
03:39:08,600 --> 03:39:12,720
then brackets double course,
and then the value to which

3261
03:39:12,880 --> 03:39:20,440
I want to compare compare.

3262
03:39:20,440 --> 03:39:23,000
So I see. Hi. Yeah.

3263
03:39:24,080 --> 03:39:27,160
And if I change this to

3264
03:39:28,200 --> 03:39:30,720
Aisha, or what I will see

3265
03:39:30,880 --> 03:39:34,800
is is equal to almost

3266
03:39:36,960 --> 03:39:48,120
no right.

3267
03:39:48,120 --> 03:39:52,600
Okay.

3268
03:39:52,600 --> 03:39:53,880
I see.

3269
03:39:53,880 --> 03:39:57,480
I don't know.

3270
03:39:57,480 --> 03:40:00,280
So this is how we will use things

3271
03:40:02,920 --> 03:40:05,400
on right place

3272
03:40:08,520 --> 03:40:17,360
next to one more example.

3273
03:40:17,360 --> 03:40:21,120
So let's make sure you understand
these conditions

3274
03:40:21,120 --> 03:40:26,640
because they are very important. Yes.

3275
03:40:26,640 --> 03:40:29,720
I don't normally
I will be splitting my screen.

3276
03:40:29,960 --> 03:40:32,880
Okay.

3277
03:40:32,880 --> 03:40:33,760
Don't worry about

3278
03:40:37,160 --> 03:40:51,360
doing so.

3279
03:40:51,600 --> 03:40:53,880
This is where you guys will make

3280
03:40:55,040 --> 03:40:55,920
mistakes.

3281
03:40:55,920 --> 03:40:58,720
First, you can miss these brackets.

3282
03:40:59,280 --> 03:41:03,320
Okay, We can lift this bracket.

3283
03:41:03,320 --> 03:41:06,880
Most of the mistakes you guys
will be making in this area missing out.

3284
03:41:06,880 --> 03:41:09,040
These brackets are putting wrong brackets.

3285
03:41:09,200 --> 03:41:09,840
Okay?

3286
03:41:09,880 --> 03:41:14,400
So make sure every opening bracket
its closing bracket.

3287
03:41:14,760 --> 03:41:16,520
Okay. So

3288
03:41:25,840 --> 03:41:28,200
meanwhile, others
who have already tried it,

3289
03:41:28,200 --> 03:41:35,200
if you guys have any other
any questions you can ask me?

3290
03:41:35,200 --> 03:41:36,480
Yes. Dot equals.

3291
03:41:36,480 --> 03:41:40,720
We will only be using with strength
with a double boolean

3292
03:41:40,760 --> 03:41:45,320
with integer with correct
we we can use the equal to equal

3293
03:41:46,800 --> 03:41:49,760
because string is a non primitive
data type.

3294
03:41:50,200 --> 03:41:53,960
So we can use this equals to this equal

3295
03:41:53,960 --> 03:41:57,560
to equal to all of its things.

3296
03:41:57,560 --> 03:42:00,000
And right

3297
03:42:00,080 --> 03:42:02,200
now if because you guys have asked

3298
03:42:06,800 --> 03:42:07,880
so let me

3299
03:42:07,880 --> 03:42:18,960
show you this.

3300
03:42:18,960 --> 03:42:30,440
So this greater than sine
is also not allowed.

3301
03:42:30,440 --> 03:42:35,440
So on your after your
if condition for four days

3302
03:42:36,000 --> 03:42:38,640
you are putting
some of you are putting semicolons in here

3303
03:42:39,360 --> 03:42:43,080
it will give you error
this is your error remove that semicolon

3304
03:42:43,080 --> 03:42:49,480
semicolon if conditions
there don't have those semicolons.

3305
03:42:49,480 --> 03:42:52,680
Why did you write line 19 in separate

3306
03:42:52,680 --> 03:42:56,880
curly brackets?

3307
03:42:56,880 --> 03:43:01,880
This one from line 18?

3308
03:43:01,880 --> 03:43:04,440
You mean curly brackets or parentheses?

3309
03:43:04,520 --> 03:43:07,240
Catalina?
You mean these these two separate things.

3310
03:43:07,240 --> 03:43:11,520
All these brackets.

3311
03:43:11,520 --> 03:43:15,520
So why did you write line 19 in separate
separate brackets?

3312
03:43:17,240 --> 03:43:19,280
No, I am not writing exactly like this.

3313
03:43:19,960 --> 03:43:21,960
So Starting from here. Still here.

3314
03:43:22,160 --> 03:43:27,000
If if the part of if condition
and starting from here till here.

3315
03:43:27,000 --> 03:43:31,800
So if I cannot do this
so this is as and part belongs to else

3316
03:43:37,080 --> 03:43:39,200
so it is not always necessary

3317
03:43:39,200 --> 03:43:44,240
that you put these curly brackets,
but I would say it's a best practice.

3318
03:43:44,240 --> 03:43:48,240
So even if you remove this bracket
like this, if you remove this,

3319
03:43:48,440 --> 03:43:53,960
if you remove this, yes, your code will
still work, but it is not recommended.

3320
03:43:53,960 --> 03:43:56,240
And the reason why it is not recommended,

3321
03:43:56,280 --> 03:43:58,520
I will show you that reason
under review class.

3322
03:43:58,880 --> 03:44:01,840
For now, all of you
please use curly brackets.

3323
03:44:02,040 --> 03:44:02,680
Okay.

3324
03:44:02,880 --> 03:44:04,120
All of you.

3325
03:44:04,120 --> 03:44:18,320
Because. Yes.

3326
03:44:18,400 --> 03:44:18,840
Okay.

3327
03:44:18,840 --> 03:44:22,400
So just check this out because thing is

3328
03:44:23,280 --> 03:44:25,320
so Maryam, you are making the same mistake

3329
03:44:25,560 --> 03:44:28,200
on line number nine
and you are putting a semicolon.

3330
03:44:28,320 --> 03:44:30,920
Remove that semicolon

3331
03:44:36,680 --> 03:44:38,920
on line 15 and on line

3332
03:44:38,920 --> 03:44:42,280
nine, remove those semicolons after the
if condition.

3333
03:44:42,960 --> 03:44:45,600
You have a semicolon
in here after this condition

3334
03:44:46,680 --> 03:44:47,400
already.

3335
03:44:47,400 --> 03:44:51,000
So you guys
see this greater than operation is greater

3336
03:44:51,000 --> 03:44:55,360
than the operator is also not allowed
when it comes to things.

3337
03:44:56,720 --> 03:44:57,240
Okay.

3338
03:44:57,240 --> 03:44:58,880
It is not allowed

3339
03:44:59,480 --> 03:45:01,680
this less than is not allowed.

3340
03:45:01,680 --> 03:45:04,200
Okay.

3341
03:45:04,200 --> 03:45:07,320
But this equals two and not equal to
are allowed.

3342
03:45:07,320 --> 03:45:10,680
So first things only equal to
and not equal to are allowed.

3343
03:45:10,960 --> 03:45:42,360
Okay, let's put in order.

3344
03:45:42,360 --> 03:45:46,360
So do you mean are they getting any output
or are you getting any unexpected

3345
03:45:48,120 --> 03:45:55,200
answer.

3346
03:45:55,200 --> 03:45:56,080
So. Right.

3347
03:45:56,080 --> 03:45:57,040
Yes they are.

3348
03:45:57,040 --> 03:46:01,280
Allow the equal to equal to sign and
not equal to saying yes, they are allowed.

3349
03:46:01,280 --> 03:46:04,400
Look,
they are never, never recommended to use

3350
03:46:04,920 --> 03:46:08,120
always use the equals to method.

3351
03:46:08,520 --> 03:46:14,760
Okay.

3352
03:46:14,760 --> 03:46:16,600
They are not allowed

3353
03:46:16,600 --> 03:46:19,600
the greater than less than greater than
equal to they are not allowed

3354
03:46:22,160 --> 03:46:22,840
this equal

3355
03:46:22,840 --> 03:46:27,440
to an unequal to are allowed for
things like not recommended to use.

3356
03:46:27,760 --> 03:46:30,280
They may produce an expected result.

3357
03:46:30,280 --> 03:46:32,400
So always you have this equals method.

3358
03:46:32,840 --> 03:46:35,400
And there is one more thing, guys.

3359
03:46:35,480 --> 03:46:38,160
When you are using greater
than equal to sign,

3360
03:46:38,160 --> 03:46:42,480
make sure you put in this equal to sign
after this this greater than fine.

3361
03:46:43,400 --> 03:46:44,000
Okay.

3362
03:46:44,000 --> 03:46:49,320
If you put this equal to sign before be
greater than sign, you will get an error.

3363
03:46:49,320 --> 03:46:51,680
Do you guys see this this equal to sign?

3364
03:46:51,680 --> 03:46:57,800
It should be after this symbol.

3365
03:46:57,800 --> 03:47:00,720
And if the same case
will be less than equal to sign,

3366
03:47:02,480 --> 03:47:04,080
it will work for less

3367
03:47:04,080 --> 03:47:07,080
than if you put it after the error.

3368
03:47:07,080 --> 03:47:11,000
If today was okay, far less than no.

3369
03:47:11,000 --> 03:47:13,200
It is not always, always after. And

3370
03:47:14,520 --> 03:47:17,320
so far less than

3371
03:47:17,920 --> 03:47:20,280
if you put it before you will get better.

3372
03:47:20,640 --> 03:47:23,640
Okay. For

3373
03:47:24,240 --> 03:47:27,080
far greater.

3374
03:47:27,080 --> 03:47:30,040
So this sign, it should be in here.

3375
03:47:30,240 --> 03:47:30,760
Okay.

3376
03:47:30,880 --> 03:47:34,080
After this this this this symbol.

3377
03:47:34,120 --> 03:47:37,400
So some of you might not make this
mistake.

3378
03:47:37,400 --> 03:47:40,200
Okay. So it should be in here.

3379
03:47:40,920 --> 03:47:42,960
Is this five things right now?

3380
03:47:43,000 --> 03:47:46,320
It's four numbers.

3381
03:47:46,320 --> 03:47:49,200
So it needs to look like yes, like this.

3382
03:47:49,360 --> 03:47:53,760
And if you do this,
it should be like this.

3383
03:47:53,760 --> 03:47:54,360
Okay.

3384
03:47:54,920 --> 03:47:58,800
So if it is greater than okay,

3385
03:47:59,200 --> 03:48:03,880
it is greater than sign, then
the equal to sign should be after this.

3386
03:48:04,200 --> 03:48:04,560
Okay.

3387
03:48:04,560 --> 03:48:07,560
If you look at before
that, you will get an error

3388
03:48:08,640 --> 03:48:10,800
and far less than sign.

3389
03:48:10,800 --> 03:48:12,680
It should be before the error.

3390
03:48:12,680 --> 03:48:14,840
So it's not actually same.

3391
03:48:14,840 --> 03:48:17,760
Both less than and greater
than two different okay.

3392
03:48:18,280 --> 03:48:21,520
Or greater than it should be
before the equal to sign.

3393
03:48:21,520 --> 03:48:23,440
And it should be after.

3394
03:48:23,440 --> 03:48:25,880
It should not actually. Yes,
it should not.

3395
03:48:25,880 --> 03:48:28,240
And Java guys should not do this.

3396
03:48:29,800 --> 03:48:30,920
They should make it different.

3397
03:48:30,920 --> 03:48:33,600
But there might be a reason

3398
03:48:33,640 --> 03:48:35,520
behind doing this.

3399
03:48:35,520 --> 03:48:38,440
So I will try to do a research on
this as well.

3400
03:48:38,760 --> 03:48:41,280
Maybe they need a specific reason
for doing this, but

3401
03:48:41,920 --> 03:48:45,800
common sense is that it
should not be the case.

3402
03:48:45,800 --> 03:48:50,760
So you guys can get errors
If you are using the

3403
03:48:50,760 --> 03:48:54,120
is equal to sign operators,
you guys will get errors.

3404
03:48:54,120 --> 03:48:58,080
You put a semicolon in here
and you guys can get errors

3405
03:48:58,080 --> 03:49:01,200
if you're going to place data lubricates

3406
03:49:01,200 --> 03:49:02,360
this.

3407
03:49:02,360 --> 03:49:03,720
My brain hurts.

3408
03:49:03,720 --> 03:49:07,440
I think the analogy from your break fast
is now consumed.

3409
03:49:07,800 --> 03:49:09,320
Michael Right.

3410
03:49:09,600 --> 03:49:13,400
Why? I am laughing at

3411
03:49:14,440 --> 03:49:15,800
So for us both

3412
03:49:15,800 --> 03:49:18,920
in this sport, you are missing a Celebrex.

3413
03:49:19,480 --> 03:49:22,360
Okay, make sure guys,

3414
03:49:22,560 --> 03:49:27,680
for every opening cut bracket
for every opening, click back in.

3415
03:49:27,680 --> 03:49:30,040
Do you have a closing bracket?

3416
03:49:30,040 --> 03:49:32,840
If not curly brackets, parentheses,

3417
03:49:32,880 --> 03:49:35,360
square brackets,
they always come in pairs.

3418
03:49:36,160 --> 03:49:38,480
If you do not have a closing bracket

3419
03:49:38,480 --> 03:49:41,880
for an optical bracket,
you will get an error.

3420
03:49:43,400 --> 03:49:44,080
Please write

3421
03:49:44,080 --> 03:49:46,560
it in the proper way of investing.

3422
03:49:47,120 --> 03:49:48,680
You mean this?

3423
03:49:49,360 --> 03:49:52,080
I am making so this is the proper way.

3424
03:49:52,800 --> 03:49:55,360
If you try to put it before the arrow sign
you will go down.

3425
03:49:55,560 --> 03:49:57,640
This is the proper way

3426
03:49:57,680 --> 03:49:58,120
show.

3427
03:49:58,320 --> 03:50:14,640
This is the property.

3428
03:50:14,640 --> 03:50:15,600
All right.

3429
03:50:15,600 --> 03:50:18,840
So have you guys to
all of you have to type this code now

3430
03:50:24,840 --> 03:50:28,320
if you knew what I mean, this

3431
03:50:33,120 --> 03:50:33,480
assume

3432
03:50:33,480 --> 03:50:40,680
you are still typing it.

3433
03:50:40,680 --> 03:50:41,960
Let me know.

3434
03:50:41,960 --> 03:50:42,520
Sorry.

3435
03:50:42,520 --> 03:50:44,640
Don't equals use only fast things. Yes.

3436
03:50:44,640 --> 03:50:46,560
Actually not only first things.

3437
03:50:46,560 --> 03:50:50,000
All of the non primitive that are bytes

3438
03:50:54,640 --> 03:50:56,880
lost in this question of strings.

3439
03:50:56,880 --> 03:51:00,960
Actually I don't want
I didn't want to show this.

3440
03:51:00,960 --> 03:51:04,520
I don't to show this but so

3441
03:51:04,800 --> 03:51:09,080
but someone asked this question
and now I am showing this

3442
03:51:09,920 --> 03:51:12,560
so is so Maryam it's

3443
03:51:12,600 --> 03:51:15,160
because of their student loan believe me

3444
03:51:15,760 --> 03:51:19,040
if you
if you think something hard has found.

3445
03:51:19,240 --> 03:51:21,680
Okay.
This is not because me. It is because

3446
03:51:23,800 --> 03:51:26,120
I wanted to show it actually later.

3447
03:51:26,120 --> 03:51:29,480
So you can ignore this part,

3448
03:51:29,520 --> 03:51:32,160
this one, this one

3449
03:51:32,160 --> 03:51:35,960
or now. Yes.

3450
03:51:36,120 --> 03:51:39,600
That's why I don't like that's
why I always want to go step by step.

3451
03:51:41,400 --> 03:51:42,600
Okay.

3452
03:51:42,600 --> 03:51:44,680
So next looking.

3453
03:51:44,680 --> 03:51:46,920
Well, that actually is it easy now

3454
03:51:48,160 --> 03:51:53,600
or is it still hard?

3455
03:51:53,600 --> 03:51:56,480
Is it easy now?

3456
03:51:56,480 --> 03:51:59,480
Somebody who was already scared
before even

3457
03:51:59,760 --> 03:52:05,000
even before the class was active.

3458
03:52:05,000 --> 03:52:05,960
So you can order that state.

3459
03:52:05,960 --> 03:52:13,040
But we will learn that later.

3460
03:52:13,040 --> 03:52:16,480
Nice gesture.

3461
03:52:16,480 --> 03:52:17,280
They move forward.

3462
03:52:17,280 --> 03:52:29,520
So we do the next example.

3463
03:52:29,520 --> 03:52:31,880
So let's let's do one more example. So

3464
03:52:34,080 --> 03:52:36,160
in your in your testing, you guys have

3465
03:52:37,800 --> 03:52:40,600
expected results
and actually that's right.

3466
03:52:40,920 --> 03:52:42,960
And then you test, test.

3467
03:52:42,960 --> 03:52:44,320
This is based on that.

3468
03:52:44,320 --> 03:52:48,520
So if let me use
doubles this time so if you

3469
03:52:50,120 --> 03:52:53,800
still are so

3470
03:53:01,080 --> 03:53:04,160
expectation are equal to 15.

3471
03:53:04,520 --> 03:53:05,160
Okay.

3472
03:53:05,400 --> 03:53:10,280
So we are expecting you
to at least 15 hours

3473
03:53:11,800 --> 03:53:13,440
each week. Right.

3474
03:53:13,440 --> 03:53:18,000
But if you are giving only 2 hours
a week to this course,

3475
03:53:18,000 --> 03:53:22,320
what will happen, guys, if we have

3476
03:53:24,240 --> 03:53:25,720
actual

3477
03:53:28,360 --> 03:53:31,360
if actual hours

3478
03:53:32,240 --> 03:53:34,800
are less, then

3479
03:53:37,000 --> 03:53:47,560
expected of.

3480
03:53:47,560 --> 03:53:52,560
So if you are doing this for
it will be hard.

3481
03:53:52,560 --> 03:53:57,480
Oops. Or

3482
03:53:59,120 --> 03:54:01,120
really hard for you

3483
03:54:17,600 --> 03:54:31,760
as as or in

3484
03:54:32,920 --> 03:54:36,160
the you

3485
03:54:36,360 --> 03:54:37,080
there

3486
03:54:37,720 --> 03:54:40,320
your job

3487
03:54:40,320 --> 03:54:42,800
after five

3488
03:54:44,160 --> 03:54:48,080
months.

3489
03:54:48,080 --> 03:54:50,040
I am closing this

3490
03:54:51,360 --> 03:54:53,040
so but I'll I will say guys

3491
03:54:53,040 --> 03:54:55,120
if I execute this code line full

3492
03:54:56,720 --> 03:54:57,960
line 12 years.

3493
03:54:57,960 --> 03:55:01,080
What is wrong with line 12.

3494
03:55:01,080 --> 03:55:11,200
No spaces.

3495
03:55:11,200 --> 03:55:11,880
Oh okay.

3496
03:55:11,880 --> 03:55:22,320
So you mean I will go to the line
pattern right?

3497
03:55:22,320 --> 03:55:25,800
So of course will be hard. But you.

3498
03:55:25,800 --> 03:55:31,520
And if you are giving more than 15 odds,

3499
03:55:31,520 --> 03:55:36,120
then because it will be easy for you
and you will get your job.

3500
03:55:36,440 --> 03:55:36,960
Okay.

3501
03:55:37,320 --> 03:55:52,360
So this is how if health conditions were,
let me know what you

3502
03:55:52,400 --> 03:55:55,640
once you guys have typed this,
we will do another example.

3503
03:55:55,920 --> 03:55:57,600
I will tell a lot of examples

3504
03:55:59,320 --> 03:56:01,840
that 15 hours

3505
03:56:01,840 --> 03:56:05,080
on base story

3506
03:56:13,000 --> 03:56:15,240
if I'm not putting don't worry

3507
03:56:15,240 --> 03:56:17,680
how about instead of changing the value

3508
03:56:17,680 --> 03:56:20,160
of double change the operator. Yes.

3509
03:56:20,760 --> 03:56:23,400
If you can also do that

3510
03:56:23,400 --> 03:56:25,800
less than double, then you have to reverse

3511
03:56:26,560 --> 03:56:28,600
the content of the
if as condition as that.

3512
03:56:29,160 --> 03:56:31,600
Otherwise the result would be incorrect.

3513
03:56:31,600 --> 03:56:32,200
Right.

3514
03:56:32,320 --> 03:56:35,680
So if you use greater than in here,

3515
03:56:36,760 --> 03:56:38,920
you should put this line

3516
03:56:39,560 --> 03:56:41,640
entirely else

3517
03:56:43,400 --> 03:56:46,160
this line inside this

3518
03:56:47,280 --> 03:56:51,640
and this line inside
that you now have same.

3519
03:56:52,520 --> 03:56:54,680
So you have changed the operator,
you have the change,

3520
03:56:54,680 --> 03:57:07,400
the conditions as well.

3521
03:57:07,400 --> 03:57:11,720
I try by variable, I stay by variable.

3522
03:57:11,760 --> 03:57:14,280
I think some of it is common commonsense.

3523
03:57:14,920 --> 03:57:18,120
Actually all of it is a common sense
except in that syntax.

3524
03:57:19,440 --> 03:57:23,000
So once we have understood
the syntax, it's very logical

3525
03:57:23,480 --> 03:57:34,360
programing languages,
they are very logical things.

3526
03:57:34,360 --> 03:57:35,440
What is else meaning?

3527
03:57:35,440 --> 03:57:38,760
So Eugene, what does it mean in English?

3528
03:57:38,760 --> 03:57:43,440
What does it mean in English means
same in the programing language Java.

3529
03:57:44,320 --> 03:57:48,040
If if this condition is true,

3530
03:57:48,040 --> 03:57:50,640
do this as notice.

3531
03:57:51,040 --> 03:57:52,320
Okay. As to this.

3532
03:57:53,520 --> 03:57:56,440
If it is not the case. Yes,

3533
03:57:56,440 --> 03:57:57,480
it is not that.

3534
03:57:57,480 --> 03:57:59,560
It's just remembering everything.

3535
03:57:59,560 --> 03:58:02,120
Yes, you guys have to learn that syntax

3536
03:58:02,400 --> 03:58:20,280
first.

3537
03:58:20,280 --> 03:58:22,080
I am Groot

3538
03:58:25,480 --> 03:58:28,680
or what you guys are talking about.

3539
03:58:28,680 --> 03:58:31,960
I don't understand your language, so

3540
03:58:31,960 --> 03:58:33,880
let me use

3541
03:58:35,600 --> 03:58:37,480
Google translate.

3542
03:58:37,480 --> 03:58:40,280
Maybe you are saying Peter is bad.

3543
03:58:40,280 --> 03:58:43,920
It means otherwise.

3544
03:58:43,920 --> 03:58:46,080
Is Hindi as in

3545
03:58:48,160 --> 03:58:50,640
there?

3546
03:58:50,640 --> 03:58:52,760
Thank God Google is here to help me

3547
03:58:54,680 --> 03:58:58,160
a little java.

3548
03:58:58,160 --> 03:59:01,600
So in the previous bad
student was saying in Brazilian

3549
03:59:01,600 --> 03:59:04,920
that the teacher is so bad
I don't understand him.

3550
03:59:04,920 --> 03:59:07,200
So I googled him in front of all the class

3551
03:59:08,520 --> 03:59:13,480
if I was even has thought a single line.

3552
03:59:13,480 --> 03:59:15,320
Okay. So I was just telling you.

3553
03:59:15,320 --> 03:59:19,280
I was just telling them
that we will be following this approach

3554
03:59:19,280 --> 03:59:23,880
and this approach and this is the students
said, I don't understand this digit.

3555
03:59:23,880 --> 03:59:30,360
Oh man, I have not even started putting.

3556
03:59:30,360 --> 03:59:34,560
So sometimes if you build a perspective
about about a person,

3557
03:59:35,400 --> 03:59:40,680
so it takes a lot time
to change their perspective.

3558
03:59:40,680 --> 03:59:43,920
So some of their stories
there can be part of them.

3559
03:59:43,920 --> 03:59:46,080
It's harder to understand my accent,

3560
03:59:47,240 --> 03:59:49,800
why I am getting of in as part

3561
03:59:50,160 --> 03:59:54,120
because you have a semicolon on line
number ten days.

3562
03:59:54,120 --> 03:59:56,280
I don't know why it happens, so

3563
03:59:57,800 --> 04:00:01,680
I need to at least tell the same thing
at least five times.

3564
04:00:02,000 --> 04:00:05,280
Still, they're asked to write,
so don't listen and make the same mistake.

3565
04:00:05,720 --> 04:00:07,720
So are you guys.

3566
04:00:07,720 --> 04:00:10,080
I think you guys are doing this. You are?

3567
04:00:10,080 --> 04:00:13,560
Only when I speak for 5 minutes,
you are only grabbing

3568
04:00:13,880 --> 04:00:17,160
the content of 2 minutes,
maybe four and 5 minutes.

3569
04:00:17,160 --> 04:00:17,880
Right.

3570
04:00:18,520 --> 04:00:21,640
And then you have to repeat again
and that you guys missed that.

3571
04:00:21,640 --> 04:00:22,440
I can

3572
04:00:23,720 --> 04:00:26,720
use this, quote, channel

3573
04:00:27,000 --> 04:00:29,360
to turn off and on.

3574
04:00:29,360 --> 04:00:32,880
So the best thing you need to write,
if something is not right again,

3575
04:00:32,880 --> 04:00:39,000
try turning it off and on.

3576
04:00:39,000 --> 04:00:41,160
I am sitting with translator to

3577
04:00:49,720 --> 04:00:52,800
so it
means after condition after condition.

3578
04:00:52,800 --> 04:00:55,200
Yes. No semicolons, no semicolons.

3579
04:00:56,640 --> 04:00:57,800
Semicolon.

3580
04:00:57,800 --> 04:01:01,920
We use semicolon when we will
when we end statement.

3581
04:01:02,080 --> 04:01:05,280
Okay so this
if condition it's not a statement.

3582
04:01:05,880 --> 04:01:07,320
This line is a statement.

3583
04:01:07,320 --> 04:01:09,080
This line of the statement.

3584
04:01:09,080 --> 04:01:11,280
This condition is not a statement.

3585
04:01:11,280 --> 04:01:16,840
So we don't need a semicolon.

3586
04:01:16,840 --> 04:01:17,880
Thank you, Mike.

3587
04:01:17,880 --> 04:01:25,720
So are we ready for the next example?

3588
04:01:25,720 --> 04:01:52,320
Let's let's do one more example.

3589
04:01:52,320 --> 04:01:52,760
Okay.

3590
04:01:52,760 --> 04:01:55,720
So let's use ten classes.

3591
04:01:55,720 --> 04:01:57,400
We move the two packages.

3592
04:01:57,400 --> 04:01:59,680
Yes, they can. We will to packages.

3593
04:01:59,680 --> 04:02:04,000
So, for example,
let me check if we can do in here

3594
04:02:05,920 --> 04:02:15,000
new and package.

3595
04:02:15,000 --> 04:02:19,760
So I have created a package inside
another package this one

3596
04:02:20,160 --> 04:02:23,040
and if I drag this class
and I drop in here

3597
04:02:25,040 --> 04:02:27,920
and now that class
has been moved inside this package.

3598
04:02:28,080 --> 04:02:32,040
Okay, so maybe you guys

3599
04:02:35,240 --> 04:02:36,000
want to

3600
04:02:36,000 --> 04:02:38,480
find out, organize your code
into packages.

3601
04:02:38,960 --> 04:02:42,920
For example, let's say

3602
04:02:45,880 --> 04:02:51,360
if conditions are okay,
so create a package

3603
04:02:51,360 --> 04:02:55,320
inside another package, select
all the conditions.

3604
04:02:56,040 --> 04:03:00,040
So if you if you want to find that,
organize your for and then

3605
04:03:01,360 --> 04:03:04,600
place all your
if conditions inside this package.

3606
04:03:05,040 --> 04:03:07,320
If you if you want, you can do that. So

3607
04:03:10,720 --> 04:03:13,920
I am storing everything off
to the end to this package plus three.

3608
04:03:13,920 --> 04:03:15,360
It keeps it organized. Yes.

3609
04:03:15,360 --> 04:03:22,640
If you want to create further protein,
it is also possible.

3610
04:03:22,640 --> 04:03:23,160
All right.

3611
04:03:23,160 --> 04:03:25,640
So double

3612
04:03:34,480 --> 04:03:36,840
five and let's

3613
04:03:37,520 --> 04:03:43,840
try it is 5.993

3614
04:03:43,920 --> 04:03:47,400
country.

3615
04:03:47,400 --> 04:03:50,440
And That's right.
I don't understand, Alexa.

3616
04:03:50,480 --> 04:03:51,520
I don't understand this.

3617
04:03:51,520 --> 04:03:52,240
Still

3618
04:04:13,080 --> 04:04:15,720
and do how you would not

3619
04:04:15,720 --> 04:04:18,480
you means three to choose

3620
04:04:20,000 --> 04:04:22,320
the video package

3621
04:04:31,040 --> 04:04:32,040
so if

3622
04:04:34,680 --> 04:04:36,800
it is in the money

3623
04:04:38,280 --> 04:04:41,440
is greater or at least equal to

3624
04:04:43,440 --> 04:04:45,560
would be the ultimate price

3625
04:05:07,880 --> 04:05:13,880
as I am.

3626
04:05:15,240 --> 04:05:24,560
I said okay, okay.

3627
04:05:26,480 --> 04:05:28,240
So I am I said not happy

3628
04:05:28,240 --> 04:05:46,920
if I execute this code base,

3629
04:05:46,920 --> 04:05:53,560
I insert right.

3630
04:05:53,560 --> 04:05:58,560
And if I have more money,
even if I have at least 5.99

3631
04:06:02,200 --> 04:06:03,480
or chocolate

3632
04:06:03,480 --> 04:06:19,920
for you. Yes.

3633
04:06:19,920 --> 04:06:23,160
You mean you are doing your tried

3634
04:06:33,960 --> 04:06:35,400
order advice.

3635
04:06:35,400 --> 04:06:38,880
So if you have understood this simple, if

3636
04:06:41,080 --> 04:06:43,480
and if you allow me, we can now

3637
04:06:44,280 --> 04:06:47,080
learn the next type of conditions

3638
04:06:47,400 --> 04:06:50,440
that has
that can check for more conditions.

3639
04:06:51,000 --> 04:06:53,600
So right now
we are only checking two conditions.

3640
04:06:53,720 --> 04:06:57,480
Okay, I'm not writing.

3641
04:06:57,480 --> 04:06:59,880
Okay. Even
you guys will not be able to focus.

3642
04:06:59,880 --> 04:07:02,000
If you are writing,
let me know what's your time type this

3643
04:08:25,880 --> 04:08:27,360
We can only print the

3644
04:08:27,360 --> 04:08:31,120
print line
in the eighth condition is true. Yes.

3645
04:08:31,120 --> 04:08:36,800
Only If it is true,
today is okay tomorrow.

3646
04:08:37,000 --> 04:08:39,600
So which class
you guys will be having tomorrow?

3647
04:08:39,600 --> 04:08:43,200
I mean, on Tuesday you're testing classes,

3648
04:08:43,200 --> 04:08:46,640
right, Manuel? Testing.

3649
04:08:46,800 --> 04:08:48,080
They are easy, right?

3650
04:08:48,080 --> 04:08:51,720
When we're testing is easy.

3651
04:08:51,720 --> 04:08:59,520
So as fan

3652
04:09:01,200 --> 04:09:01,920
for now.

3653
04:09:01,920 --> 04:09:08,360
Yes, all classes are easy except Java.

3654
04:09:09,160 --> 04:09:11,000
So don't say this.

3655
04:09:11,000 --> 04:09:11,280
Yeah.

3656
04:09:11,280 --> 04:09:24,480
Why is not hard? So

3657
04:09:25,880 --> 04:09:30,800
you guys can always check your canvas.

3658
04:09:30,800 --> 04:09:33,280
Java. It's not C++. Yes.

3659
04:09:33,280 --> 04:09:37,080
If you guys have to learn C or C++.

3660
04:09:37,360 --> 04:09:40,280
Oh man, that is way harder than this.

3661
04:09:42,080 --> 04:09:44,400
Are you going to be Java instructor?

3662
04:09:44,400 --> 04:09:47,680
No, I will be music musical instructor.

3663
04:09:47,680 --> 04:09:48,760
I will be teaching.

3664
04:09:48,760 --> 04:09:53,520
I will be teaching you how to play guitar.

3665
04:09:53,520 --> 04:09:56,880
I am the instructor for upcoming classes.

3666
04:09:56,880 --> 04:10:03,520
Yes, I will be the Java instructor.

3667
04:10:03,520 --> 04:10:07,920
No, I think he means permanently.

3668
04:10:07,920 --> 04:10:09,360
As I began to get that memory of

3669
04:10:09,360 --> 04:10:16,200
you also know about, I thought, okay,
but there are no exercises about it.

3670
04:10:16,200 --> 04:10:17,400
First condition.

3671
04:10:17,400 --> 04:10:17,680
No, no.

3672
04:10:17,680 --> 04:10:20,040
And there are so many
excited about if conditions

3673
04:10:21,480 --> 04:10:23,640
so if we

3674
04:10:23,640 --> 04:10:28,560
will, I hope you

3675
04:10:28,560 --> 04:10:36,920
guys don't mind my jokes.

3676
04:10:36,920 --> 04:10:41,400
So these conditions, they are called
the conditional statements.

3677
04:10:41,400 --> 04:10:46,040
All of these are starting from 25 to 30.

3678
04:10:46,040 --> 04:10:50,920
These nested
if y you guys have standard class first

3679
04:10:52,440 --> 04:10:57,120
or I think you guys
oh my God, I think you guys were supposed

3680
04:10:57,120 --> 04:11:01,520
to learn about this kind of class today.

3681
04:11:01,520 --> 04:11:05,040
And I think I have missed that

3682
04:11:07,760 --> 04:11:08,160
class.

3683
04:11:08,160 --> 04:11:11,040
Most of the class in here,

3684
04:11:11,400 --> 04:11:12,680
it's not present

3685
04:11:12,680 --> 04:11:24,040
on these slides.

3686
04:11:24,040 --> 04:11:28,200
Why you guys have it happens
regarding these kind of class

3687
04:11:29,960 --> 04:11:32,720
or this of classes in the next class. Yes.

3688
04:11:33,920 --> 04:11:35,000
Tangled I caught by.

3689
04:11:35,000 --> 04:11:36,600
You have missed something.

3690
04:11:36,600 --> 04:11:39,640
So you will be learning about this 10:00
in the next class.

3691
04:11:39,640 --> 04:11:44,480
Not all that.

3692
04:11:44,480 --> 04:11:47,400
That's great.

3693
04:11:47,400 --> 04:11:57,040
Then you go
back to the previous issue in here.

3694
04:11:57,040 --> 04:12:03,400
My favorite movie is
we are going to have your translated into

3695
04:12:04,360 --> 04:12:06,840
all you have seen in the

3696
04:12:06,840 --> 04:12:14,840
week from get together
the viewers are going to like

3697
04:12:15,000 --> 04:12:21,160
have seen this movie or not
actually I was because I was an engineer.

3698
04:12:21,160 --> 04:12:23,360
I was in an engineering university.

3699
04:12:23,480 --> 04:12:26,200
In the end, they don't have life.

3700
04:12:26,200 --> 04:12:34,280
So I didn't watch that many movies.

3701
04:12:34,280 --> 04:12:37,040
What engineers cannot last.

3702
04:12:37,200 --> 04:12:38,240
Yes, in the next class.

3703
04:12:38,240 --> 04:12:43,200
So you can just kind of class.

3704
04:12:43,200 --> 04:12:45,200
Where are you from,
if you don't mind asking?

3705
04:12:45,200 --> 04:12:48,600
I am from Pakistan.

3706
04:12:48,600 --> 04:12:51,560
And you can watch it now.

3707
04:12:51,560 --> 04:12:54,120
Yes, now I was able to

3708
04:12:54,240 --> 04:12:57,120
actually I am right now
taking three batches.

3709
04:12:57,600 --> 04:13:00,680
So ten and batch nine, That's nine.

3710
04:13:00,680 --> 04:13:02,480
They have their interviews.

3711
04:13:02,480 --> 04:13:05,400
So I will be
the one who will be assisting you

3712
04:13:05,400 --> 04:13:08,640
in your interviews.

3713
04:13:08,640 --> 04:13:11,720
So they have just graduated
like one month before.

3714
04:13:13,360 --> 04:13:14,440
Yes, we are.

3715
04:13:14,440 --> 04:13:18,000
And it was 9 minutes left.

3716
04:13:18,040 --> 04:13:18,680
All right, guys.

3717
04:13:18,680 --> 04:13:22,320
So should I move forward?

3718
04:13:22,320 --> 04:13:24,680
There are many Stay.

3719
04:13:25,440 --> 04:13:28,360
Our friend from batch
nine just wanted a job.

3720
04:13:28,360 --> 04:13:33,880
Yes, I guess 25 students from the batch
have a9a matched

3721
04:13:33,880 --> 04:13:37,320
and have got the job
and it's just their third week or so.

3722
04:13:38,320 --> 04:13:42,520
I will invite some of the students
from Batch ten just to motivate you.

3723
04:13:42,520 --> 04:13:43,920
Just one of you guys.

3724
04:13:43,920 --> 04:13:46,880
My you guys will be having these questions
in your mind maybe,

3725
04:13:48,560 --> 04:13:51,880
and my spending
and the proper amount of time this course.

3726
04:13:52,680 --> 04:13:55,560
I don't understand
hundred percent of the content.

3727
04:13:55,680 --> 04:13:59,920
So will I get the job if I only understand
60% or 70%

3728
04:14:01,560 --> 04:14:04,400
how much time it takes to get the job?

3729
04:14:04,400 --> 04:14:08,920
How much salaries are you guys paid so
you guys can ask all of these questions.

3730
04:14:08,920 --> 04:14:11,760
I will invite you to four
students from previous batch.

3731
04:14:13,560 --> 04:14:14,200
How hard?

3732
04:14:14,200 --> 04:14:18,000
Yes, how hard is getting a job on
how many offers they got,

3733
04:14:18,240 --> 04:14:21,840
how many jobs they apply
So guys can all just just

3734
04:14:22,920 --> 04:14:24,640
Do you work for the company?

3735
04:14:24,640 --> 04:14:27,000
Yes, I am working for a company.

3736
04:14:27,000 --> 04:14:31,920
I am also doing freelancing projects
and am doing my research for my master's.

3737
04:14:32,120 --> 04:14:39,920
So I am doing a lot of things. Why?

3738
04:14:39,920 --> 04:14:41,400
Because I don't know.

3739
04:14:41,400 --> 04:14:43,520
I cannot stay idle.

3740
04:14:43,520 --> 04:14:45,480
I, I have to do something.

3741
04:14:45,480 --> 04:14:47,720
Otherwise I get bored

3742
04:14:50,640 --> 04:14:52,640
when I get the job done.

3743
04:14:53,560 --> 04:14:56,240
I think not done like just like that.

3744
04:14:56,760 --> 04:14:59,880
I think it will take around six months

3745
04:14:59,880 --> 04:15:03,600
to to be comfortable with the company,
the culture,

3746
04:15:04,040 --> 04:15:07,000
the procedures, the policies and all that.

3747
04:15:07,440 --> 04:15:10,840
But in my case, when I got my job
for the first three months,

3748
04:15:12,120 --> 04:15:13,600
I was in training.

3749
04:15:13,600 --> 04:15:18,720
So I used to watch movies
and then YouTube during my training.

3750
04:15:20,280 --> 04:15:23,520
How is it possible to get a job before
completing the course?

3751
04:15:23,880 --> 04:15:27,600
It is not possible to get a job before
completing the course.

3752
04:15:27,600 --> 04:15:31,920
Oh, you guys mean Batch ten Also,
I meant batch nine.

3753
04:15:32,160 --> 04:15:33,840
Oh, okay. Okay. Yes you are.

3754
04:15:33,840 --> 04:15:35,080
The students are from batch nine.

3755
04:15:35,080 --> 04:15:37,280
Not not batch death, but Yeah.

3756
04:15:37,280 --> 04:15:40,080
Some of the students,
they started applying on the jobs

3757
04:15:40,520 --> 04:15:43,200
before they completed the course.

3758
04:15:43,200 --> 04:15:45,560
And three of them,
they actually got the job.

3759
04:15:45,560 --> 04:15:47,920
They were ready and be ready last week.

3760
04:15:47,920 --> 04:16:16,000
So because.

3761
04:16:16,000 --> 04:16:18,560
Nice. Is it
okay if I take ten more minutes?

3762
04:16:18,560 --> 04:16:23,840
Maybe today?

3763
04:16:23,840 --> 04:16:27,160
I know it's already like

3764
04:16:27,160 --> 04:16:31,920
5 hours class,
but just give me ten more minutes.

3765
04:16:31,920 --> 04:16:32,520
So guys,

3766
04:16:33,480 --> 04:16:35,040
up till now, we have you.

3767
04:16:35,040 --> 04:16:37,240
I am not going to work anymore.

3768
04:16:37,240 --> 04:16:41,320
Your brain is all set to programing,

3769
04:16:41,320 --> 04:16:45,560
so once you are a programmer,
you can continue programing.

3770
04:16:45,560 --> 04:16:49,800
You can sit in the in front of laptops
five, 16 hours, 18 hours.

3771
04:16:49,800 --> 04:16:55,920
If It's normal in the life of programmers
to just sit in front of computers

3772
04:16:55,920 --> 04:16:58,560
for 16 hours a day or 18 hours a day

3773
04:17:00,200 --> 04:17:03,560
actually, then 5 to 6 hours day.

3774
04:17:03,560 --> 04:17:07,520
Then they need 5 to 6 hours
to just just get started.

3775
04:17:08,400 --> 04:17:11,040
So if it's just just get started,

3776
04:17:11,040 --> 04:17:13,680
think 5 to 6 hours

3777
04:17:15,520 --> 04:17:19,360
when we will be done with
because do we have any certification?

3778
04:17:19,360 --> 04:17:22,120
So you'll get a
you don't need any certification in I.T.

3779
04:17:22,120 --> 04:17:23,000
sector.

3780
04:17:23,000 --> 04:17:25,800
You don't need a
degree in the certification.

3781
04:17:26,880 --> 04:17:28,400
You apply on a job.

3782
04:17:28,400 --> 04:17:31,120
They ask you for the interview,
they ask questions.

3783
04:17:31,520 --> 04:17:33,240
If you answer those questions, you get.

3784
04:17:33,240 --> 04:17:34,200
I don't.

3785
04:17:34,200 --> 04:17:36,920
This is the beauty of i.t. Sector guys.

3786
04:17:36,920 --> 04:17:40,600
40% of the google employees,
they don't have any degree.

3787
04:17:41,080 --> 04:17:43,280
They just know how to do this stuff.

3788
04:17:43,280 --> 04:17:46,080
That's it.

3789
04:17:46,080 --> 04:17:47,720
None of our students.

3790
04:17:47,720 --> 04:17:49,800
This is the 11th batch.

3791
04:17:49,800 --> 04:17:53,160
And each batch, at least
a hundred students are there in batch.

3792
04:17:53,160 --> 04:17:56,960
So more than 1200 students,
they all got their jobs

3793
04:17:56,960 --> 04:17:59,280
without any degree,
without any certifications.

3794
04:17:59,680 --> 04:18:01,800
Some of them are from nothing.

3795
04:18:01,800 --> 04:18:05,400
Background,
faith, background, different background.

3796
04:18:05,400 --> 04:18:13,800
It does not matter in here.

3797
04:18:13,800 --> 04:18:15,040
So if you have got past

3798
04:18:15,040 --> 04:18:18,560
multiple conditions guys,
if you have got test multiple conditions,

3799
04:18:18,960 --> 04:18:21,960
then we can extend the this
if health conditions.

3800
04:18:21,960 --> 04:18:24,600
Okay.

3801
04:18:24,600 --> 04:18:28,320
So let's say, for example, up till now
we were testing only two conditions.

3802
04:18:28,640 --> 04:18:31,800
If this is true, do this
if it is not true.

3803
04:18:31,800 --> 04:18:32,960
No, the other part.

3804
04:18:32,960 --> 04:18:33,720
Okay.

3805
04:18:33,720 --> 04:18:36,600
Now we will do multiple if conditions.

3806
04:18:36,760 --> 04:18:38,640
So let's say if I have

3807
04:18:39,800 --> 04:18:41,240
a variable

3808
04:18:41,240 --> 04:18:45,120
is equal to one, I can say if

3809
04:18:48,880 --> 04:18:51,080
B is equal to equal to one

3810
04:18:52,880 --> 04:18:54,120
does the

3811
04:18:54,120 --> 04:18:56,800
it will be certification help
with finding a job?

3812
04:18:56,800 --> 04:18:59,640
No assignment. It is not required.

3813
04:19:00,000 --> 04:19:03,280
It will give you an edge,
but it is not required.

3814
04:19:03,920 --> 04:19:07,040
Same is
the case would be Java certification. Yes.

3815
04:19:07,040 --> 04:19:09,480
If you do it you will have an edge.

3816
04:19:09,880 --> 04:19:13,920
But right now, believe me,
there are so many jobs on the market

3817
04:19:14,360 --> 04:19:16,640
they don't even take complete interviews.

3818
04:19:16,920 --> 04:19:20,160
The if they if they know that you
you are the person who can do the job,

3819
04:19:20,160 --> 04:19:23,480
they will just hide it right away.

3820
04:19:23,480 --> 04:19:26,240
If we are relocating to another company
comparing

3821
04:19:26,640 --> 04:19:29,520
comparing batches, are we doing
okay so far?

3822
04:19:29,560 --> 04:19:31,320
Actually, you guys

3823
04:19:33,280 --> 04:19:35,040
be how a batch is doing.

3824
04:19:35,040 --> 04:19:37,680
I can tell it from the sports channel

3825
04:19:38,200 --> 04:19:40,280
if you guys are making a lot of mistakes.

3826
04:19:40,680 --> 04:19:43,480
So I will look at sports Channel
after the class and then I will tell you

3827
04:19:43,480 --> 04:19:47,040
in the next class.

3828
04:19:47,040 --> 04:19:52,920
So if I have compressed
multiple conditions.

3829
04:19:52,920 --> 04:19:56,520
So let's say, for example,
I want to check this condition.

3830
04:19:57,000 --> 04:19:59,760
If today is equal to equal to one,

3831
04:20:00,120 --> 04:20:02,200
I fair money.

3832
04:20:03,000 --> 04:20:06,160
If this is not the case,
I check another condition

3833
04:20:06,160 --> 04:20:11,600
so I will write ls space
and other if condition ls if

3834
04:20:13,600 --> 04:20:16,240
there is equal to equal to two

3835
04:20:18,840 --> 04:20:22,600
this time go I will say

3836
04:20:23,800 --> 04:20:26,680
it's still there.

3837
04:20:28,040 --> 04:20:30,800
If I have to check another condition,
I will say

3838
04:20:31,000 --> 04:20:34,080
as if again

3839
04:20:34,960 --> 04:20:39,360
it is equal to equal to three.

3840
04:20:39,360 --> 04:20:41,000
I see.

3841
04:20:41,320 --> 04:20:42,480
Oops.

3842
04:20:42,480 --> 04:20:51,920
Expensive benefit.

3843
04:20:51,920 --> 04:20:54,200
I can add more conditions as if.

3844
04:20:54,520 --> 04:20:57,360
Okay, so more conditions

3845
04:20:58,280 --> 04:21:01,760
equal to fourth.

3846
04:21:01,760 --> 04:21:03,720
I see.

3847
04:21:03,960 --> 04:21:04,800
Firstly

3848
04:21:11,320 --> 04:21:13,600
more conditions.

3849
04:21:14,320 --> 04:21:17,600
And if is there a shortcut for typing

3850
04:21:17,600 --> 04:21:20,640
system brought out
and start of typing the whole thing. Yes.

3851
04:21:20,800 --> 04:21:24,920
If you just type this out
you press control and space

3852
04:21:24,920 --> 04:21:28,160
and it would automatically be entered
automatically

3853
04:21:28,160 --> 04:21:29,040
complete

3854
04:22:20,400 --> 04:22:20,960
report.

3855
04:22:20,960 --> 04:22:23,880
And if in the end or does not need
be in Java.

3856
04:22:24,120 --> 04:22:25,120
Yes we can put it.

3857
04:22:25,120 --> 04:22:26,520
I will show you

3858
04:22:35,640 --> 04:22:37,680
and the last I can see

3859
04:22:43,000 --> 04:22:45,560
wrong date so that if

3860
04:22:46,720 --> 04:22:49,440
for one
do you know any other programing language

3861
04:22:49,680 --> 04:22:52,160
this and this is in F hash

3862
04:22:52,480 --> 04:22:55,000
you're seeing python

3863
04:22:55,600 --> 04:22:58,000
and in other programing language we this

3864
04:22:58,000 --> 04:23:02,200
and if your child

3865
04:23:02,280 --> 04:23:05,200
so present in that Microsoft Excel

3866
04:23:06,040 --> 04:23:09,240
what is the language it's

3867
04:23:09,320 --> 04:23:11,880
F hash or or we will basic

3868
04:23:12,280 --> 04:23:14,560
we use the different visual basics

3869
04:23:15,840 --> 04:23:17,760
if we as the

3870
04:23:17,760 --> 04:23:20,400
but they have not that much with be

3871
04:23:21,120 --> 04:23:23,840
I have worked with six or seven
other programing languages

3872
04:23:25,160 --> 04:23:29,280
so that's how it will work. Now.

3873
04:23:29,280 --> 04:23:31,840
So Java starts from top to bottom

3874
04:23:33,400 --> 04:23:35,920
so us to check

3875
04:23:35,920 --> 04:23:38,760
if this condition is 2:00.

3876
04:23:38,760 --> 04:23:42,200
If this condition is true,
this line will be executed

3877
04:23:42,200 --> 04:23:45,520
and all of the remaining lines
will be ignored.

3878
04:23:45,520 --> 04:23:48,160
And we will jump in here. Okay.

3879
04:23:49,200 --> 04:23:52,520
If this condition is not true,
Java will be next condition

3880
04:23:52,520 --> 04:23:53,760
If it is also not true.

3881
04:23:53,760 --> 04:23:55,320
Next condition, next condition.

3882
04:23:55,320 --> 04:23:58,160
It will keep on
checking all the condition.

3883
04:23:58,160 --> 04:24:03,440
And if none of these conditions are true,
this last condition, this aspart

3884
04:24:04,640 --> 04:24:06,840
this will be executed here.

3885
04:24:06,840 --> 04:24:09,120
So If

3886
04:24:11,680 --> 04:24:14,600
if I said is equal to for work output,

3887
04:24:14,640 --> 04:24:25,400
I will go to this.

3888
04:24:25,400 --> 04:24:27,600
So this condition is true.

3889
04:24:27,600 --> 04:24:32,840
So we get test.

3890
04:24:32,840 --> 04:24:35,800
If I put ten,

3891
04:24:35,800 --> 04:24:38,760
is there any condition who becomes true?

3892
04:24:38,760 --> 04:24:41,520
If I put ten?

3893
04:24:41,520 --> 04:24:44,760
So which part will be executed now

3894
04:24:46,440 --> 04:24:49,240
be wrong by

3895
04:24:51,200 --> 04:24:53,400
so wrong if none of the conditions are

3896
04:24:55,600 --> 04:24:58,320
if I put one the first part.

3897
04:24:58,320 --> 04:24:58,800
Okay.

3898
04:24:58,800 --> 04:25:02,160
So this is how this is the bigger login.

3899
04:25:02,200 --> 04:25:04,960
All three false conditions
with multiple conditions.

3900
04:25:04,960 --> 04:25:09,160
So if we want to check multiple conditions
for the same variable,

3901
04:25:09,360 --> 04:25:13,920
you can use this approach.

3902
04:25:13,920 --> 04:25:16,960
If if you guys have any questions
you can ask.

3903
04:25:16,960 --> 04:25:26,800
Otherwise,
we will continue the next class from here.

3904
04:25:26,800 --> 04:25:28,600
Any homework? Yes, why not?

3905
04:25:28,600 --> 04:25:43,800
And definitely a lot of homework.

3906
04:25:43,800 --> 04:25:47,120
Let me post.

3907
04:25:47,120 --> 04:25:52,080
I guess the exercises are available, but
you guys don't need to do those exercises

3908
04:25:52,200 --> 04:25:54,600
they are finding next week.

3909
04:25:54,600 --> 04:25:56,920
Once you have learned
about this kind of class,

3910
04:25:57,400 --> 04:26:00,200
then you guys should follow those
if health conditions.

3911
04:26:00,280 --> 04:26:04,520
But if there are any exercises
which don't require results,

3912
04:26:04,560 --> 04:26:06,040
condition, you can solve them.

3913
04:26:06,040 --> 04:26:07,880
Now as well. Okay.

3914
04:26:07,880 --> 04:26:16,760
But the actual deadline
is in the next week.

3915
04:26:16,760 --> 04:26:18,600
Just give me one moment. I will show you

3916
04:26:22,560 --> 04:26:23,920
and show

3917
04:26:23,920 --> 04:26:42,960
you this clip.

3918
04:26:42,960 --> 04:26:46,320
Let me know, guys, if you have questions.

3919
04:26:46,600 --> 04:26:49,440
We have only one homework.

3920
04:26:49,440 --> 04:26:54,520
Yes, some response and then homework.

3921
04:26:54,520 --> 04:27:00,120
So this homework is due next Saturday.

3922
04:27:00,120 --> 04:27:04,160
So the nine nine stays the same.

3923
04:27:04,160 --> 04:27:08,640
This one I show.

3924
04:27:08,640 --> 04:27:10,920
What do you mean by stays the same?

3925
04:27:11,320 --> 04:27:13,840
This completely first condition
stays the same.

3926
04:27:14,760 --> 04:27:19,040
Only you change the value
from this variable and how replace

3927
04:27:19,320 --> 04:27:22,600
so you guys are supposed to complete
first 17

3928
04:27:22,600 --> 04:27:25,680
proposed till next week

3929
04:27:25,680 --> 04:27:27,840
16 to 17 I guess

3930
04:27:27,840 --> 04:27:30,240
is not required of this kind of class.

3931
04:27:31,920 --> 04:27:39,520
Yes, that's the homework.

3932
04:27:39,520 --> 04:27:41,520
What is the condition of line nine?

3933
04:27:42,320 --> 04:27:45,640
So line nine says
that if the value of Daisy equal to one,

3934
04:27:46,360 --> 04:27:49,120
if the value of day
is equal to one, then execute

3935
04:27:50,760 --> 04:27:51,360
this line.

3936
04:27:51,360 --> 04:27:55,960
That's what line nine says.

3937
04:27:55,960 --> 04:27:58,920
If if day is equal to equal to one,

3938
04:27:59,000 --> 04:28:01,480
if we are storing one entire day one,

3939
04:28:02,040 --> 04:28:05,560
then execute this line
that is inside of condition.

3940
04:28:05,560 --> 04:28:15,160
That is what is meant
by the first different issue. So

3941
04:28:16,800 --> 04:28:18,840
do we have not have enough letter?

3942
04:28:18,840 --> 04:28:22,080
I hope you don't mind my my don't mind
my joke.

3943
04:28:23,040 --> 04:28:24,040
Are you with us?

3944
04:28:24,040 --> 04:28:27,680
It all seems so clear
now if this can also happen

3945
04:28:27,680 --> 04:28:31,240
when picture is showing something
all seems simple

3946
04:28:31,640 --> 04:28:34,400
and when we try to do it on our own,

3947
04:28:34,400 --> 04:28:37,880
then we get so many errors

3948
04:28:39,040 --> 04:28:42,120
of the desperate.

3949
04:28:42,120 --> 04:28:45,440
I change the day, but they don't change

3950
04:28:45,800 --> 04:28:48,920
if front line nine still works.

3951
04:28:49,280 --> 04:28:49,440
Yeah.

3952
04:28:49,440 --> 04:29:14,000
Can you please show me the screenshot?

3953
04:29:14,000 --> 04:29:16,280
Yes. Now you guys can write programs.

3954
04:29:16,560 --> 04:29:20,320
So for the name of your friend
in a variable and then type

3955
04:29:20,560 --> 04:29:24,600
something funny about your friend
in the condition and the as far.

3956
04:29:24,640 --> 04:29:27,960
So this is what I did
when I learned about live conditions.

3957
04:29:28,560 --> 04:29:30,960
I build programs out of my friends

3958
04:29:31,800 --> 04:29:33,840
next to
you will learn about this kind of classes

3959
04:29:33,840 --> 04:29:36,240
so you guys can type something
from your keyboard.

3960
04:29:36,240 --> 04:29:39,840
And then based on that input,
your program will differently

3961
04:29:43,080 --> 04:29:43,840
than you recommend

3962
04:29:43,840 --> 04:29:46,840
some backside for practice writing code.

3963
04:29:47,120 --> 04:29:50,440
So unless you have plus you have homework,

3964
04:29:50,440 --> 04:30:02,280
you still need another part.

3965
04:30:02,280 --> 04:30:05,280
So I shot if I put

3966
04:30:05,680 --> 04:30:09,160
day is equal to zero,
then this will be executed.

3967
04:30:09,560 --> 04:30:16,440
Not the or this one.

3968
04:30:16,440 --> 04:30:16,800
Okay.

3969
04:30:16,800 --> 04:30:19,760
Wrong day.

3970
04:30:19,760 --> 04:30:22,240
So yes, it's a perfectly fine behavior.

3971
04:30:22,440 --> 04:30:25,920
You you are expecting something else.

3972
04:30:25,920 --> 04:30:28,080
So because none of the conditions
are true,

3973
04:30:28,080 --> 04:30:30,960
that's
why the devil is executing this block.

3974
04:30:31,080 --> 04:30:48,320
This else condition.

3975
04:30:48,320 --> 04:30:50,000
So let's

3976
04:30:50,640 --> 04:30:52,720
just go on Google and type

3977
04:30:57,280 --> 04:30:59,600
no practice

3978
04:30:59,600 --> 04:31:04,400
forms and then you will see
a very big list of the platforms.

3979
04:31:04,400 --> 04:31:08,040
But I don't recommend you
to start practicing in here

3980
04:31:08,040 --> 04:31:10,160
because the questions,
they will be harder.

3981
04:31:10,200 --> 04:31:11,760
And I don't don't think so.

3982
04:31:11,760 --> 04:31:13,720
You will be able to
follow them. But if you can

3983
04:31:14,680 --> 04:31:15,280
predict

3984
04:31:16,040 --> 04:31:20,760
at least wait 2 to 3 weeks,
then you will be able to solve problems

3985
04:31:20,760 --> 04:31:32,680
from these platforms.

3986
04:31:32,680 --> 04:31:37,600
If are coming back, then after Professor,

3987
04:31:37,600 --> 04:31:42,440
even if muscle comes back,
I think it's only next 2 to 3 weeks.

3988
04:31:43,160 --> 04:31:45,640
The last part of Java
I will be teaching you

3989
04:31:45,640 --> 04:31:50,000
that.

3990
04:31:50,000 --> 04:31:54,080
Can you please
explain the exercise for honorable?

3991
04:31:54,160 --> 04:31:55,320
Yes, sure.

3992
04:31:55,680 --> 04:31:57,960
So those who want to leave guys,
they can leave.

3993
04:31:57,960 --> 04:32:00,480
I will not be showing anything new.

3994
04:32:00,480 --> 04:32:04,320
If you guys have any questions
regarding reptiles or anything else,

3995
04:32:04,320 --> 04:32:09,120
then you guys can stay here,

3996
04:32:09,120 --> 04:32:14,720
take some rest.

3997
04:32:14,720 --> 04:32:16,840
So who ask this question

3998
04:32:18,960 --> 04:32:22,960
now, and I hope I'm pronouncing your name
correctly.

3999
04:32:23,160 --> 04:32:23,760
Noble.

4000
04:32:23,760 --> 04:32:27,640
It's noble.

4001
04:32:27,640 --> 04:32:30,120
Okay. So it's very simple, right?

4002
04:32:30,400 --> 04:32:34,240
So you have to print out

4003
04:32:34,680 --> 04:32:35,520
this pattern.

4004
04:32:35,520 --> 04:32:36,080
Okay.

4005
04:32:36,080 --> 04:32:39,360
So first one star, then to start, Right.

4006
04:32:39,720 --> 04:32:46,240
So if there's one simple, like,
for example, if I create

4007
04:32:58,840 --> 04:33:01,160
for you putting into one star, okay,

4008
04:33:02,040 --> 04:33:06,640
then you write and print statement,
you're able to start.

4009
04:33:06,800 --> 04:33:11,080
It's that simple.

4010
04:33:11,080 --> 04:33:11,960
Very simple.

4011
04:33:11,960 --> 04:33:16,800
And then on the same in the same way,
you have to print out this

4012
04:33:16,960 --> 04:33:21,640
first one star, then two stars,
three stars, then to have and then three.

4013
04:33:21,960 --> 04:33:24,040
And your test case should pass.

4014
04:33:24,040 --> 04:33:26,800
Can you review test 14 on your show?

4015
04:33:27,480 --> 04:33:30,120
Any assessment test given to us from.

4016
04:33:30,120 --> 04:33:34,040
INTERVIEWER I have a collection
of all the code in test

4017
04:33:34,040 --> 04:33:35,520
and all the interview questions

4018
04:33:35,520 --> 04:33:37,960
that I will share with you
once you are done with Java.

4019
04:33:37,960 --> 04:33:41,240
So don't worry about that.

4020
04:33:41,240 --> 04:33:44,200
So Oracle 13

4021
04:33:44,200 --> 04:33:51,880
Estimating operations.

4022
04:33:51,880 --> 04:33:55,080
I am not I'm not showing this one.

4023
04:33:55,080 --> 04:33:57,080
It will take like 15 minutes.

4024
04:33:57,080 --> 04:34:00,120
I am out of energy.

4025
04:34:00,120 --> 04:34:01,640
Let me read it out.

4026
04:34:01,640 --> 04:34:05,240
In this project it will become a magician
and I have a small program

4027
04:34:05,240 --> 04:34:07,200
that performs a mathematical magic trick.

4028
04:34:07,200 --> 04:34:09,760
It will involve performing
a reflective operation.

4029
04:34:09,760 --> 04:34:16,560
Activities are going to be recorded one.

4030
04:34:16,560 --> 04:34:17,040
Okay,

4031
04:34:18,000 --> 04:34:19,880
so create

4032
04:34:20,120 --> 04:34:24,000
my number,
set it equal to any other number.

4033
04:34:25,040 --> 04:34:26,120
So don't put zero.

4034
04:34:26,120 --> 04:34:29,640
We will refer to my number
as ordinal number.

4035
04:34:29,640 --> 04:34:31,120
From now on,

4036
04:34:31,680 --> 04:34:36,200
create an indoor variable called step
one equal to the original number,

4037
04:34:36,240 --> 04:34:39,000
my number multiplied by itself

4038
04:34:40,320 --> 04:34:41,240
and integer.

4039
04:34:41,240 --> 04:34:43,160
So you are you guys.

4040
04:34:43,160 --> 04:34:46,360
Any issues following these steps
or what is the issue

4041
04:34:46,360 --> 04:34:47,880
with this triple

4042
04:35:09,440 --> 04:35:12,120
by the way I forgot.

4043
04:35:12,600 --> 04:35:14,120
I forgot to say right.

4044
04:35:14,120 --> 04:35:17,280
I will be sharing the solutions
of all the ripples as well.

4045
04:35:17,280 --> 04:35:17,960
Video.

4046
04:35:17,960 --> 04:35:21,400
Okay, so after each week, once
you guys are done doing those ripples,

4047
04:35:21,800 --> 04:35:26,040
I will, I will share the expert solution
so you guys can compare your solutions

4048
04:35:26,040 --> 04:35:36,440
with my statement statement.

4049
04:35:36,440 --> 04:35:38,440
So let's do this, guys, let's do this.

4050
04:35:38,680 --> 04:35:40,720
I will share these solutions next week.

4051
04:35:40,960 --> 04:35:43,720
But all of the proposals are till 17.

4052
04:35:44,400 --> 04:35:49,160
If things still don't make sense,
then we will go through those efforts.

4053
04:35:49,680 --> 04:35:52,520
Okay.

4054
04:35:52,520 --> 04:35:54,640
Is it good?
Who ask the question? You'll get the

4055
04:35:55,760 --> 04:35:59,320
moment.

4056
04:35:59,320 --> 04:36:03,840
Or maybe we can do it on the review glass.

4057
04:36:03,840 --> 04:36:06,200
Okay. Some of you have already told them.

4058
04:36:06,720 --> 04:36:11,240
That's great.

4059
04:36:11,240 --> 04:36:13,640
All right, guys, please take some rest.

4060
04:36:14,360 --> 04:36:18,080
So if you are stuck on a ripple,
leave it and move to the next one.

4061
04:36:18,320 --> 04:36:18,680
Okay?

4062
04:36:18,680 --> 04:36:21,000
Don't be too much time on it. Okay.

4063
04:36:22,160 --> 04:36:26,360
Once I share the solution so you can
compare it and things don't make sense.

4064
04:36:26,360 --> 04:36:28,360
You can ask me in the review glasses.

4065
04:36:28,360 --> 04:36:32,280
Actually will solve the repulsive video
during the review class.

4066
04:36:32,280 --> 04:36:38,120
If I was thinking
maybe you put you put my face

4067
04:36:38,120 --> 04:36:50,000
on top of this guy's face and then say,
Thank you so.

4068
04:36:50,000 --> 04:36:51,240
All right, guys, Bye bye.

4069
04:36:51,240 --> 04:36:53,800
Take some rest.
