1
00:00:08,560 --> 00:00:09,440
Right.

2
00:00:10,600 --> 00:00:12,360
Good morning, beautiful people.

3
00:00:12,360 --> 00:00:13,320
I like that.

4
00:00:13,320 --> 00:00:16,800
Hey, good morning, guys.

5
00:00:16,800 --> 00:00:18,400
Monday morning.

6
00:00:18,840 --> 00:00:20,480
Happy Sunday to you guys.

7
00:00:20,480 --> 00:00:23,360
Happy Halloween, right?

8
00:00:23,760 --> 00:00:26,120
Hope you guys enjoy your time.

9
00:00:26,120 --> 00:00:30,120
Yesterday didn't party too late, right?

10
00:00:30,480 --> 00:00:33,120
All right, guys.

11
00:00:33,600 --> 00:00:35,240
Morning. Good morning.

12
00:00:35,240 --> 00:00:37,000
I need more people to join.

13
00:00:37,000 --> 00:00:40,720
I don't see everyone join yet.

14
00:00:42,320 --> 00:00:43,360
Okay. Okay.

15
00:00:43,360 --> 00:00:46,320
Where they are, Where they are. Right.

16
00:00:46,320 --> 00:00:46,840
All right.

17
00:00:46,840 --> 00:00:49,040
Guess.

18
00:00:50,440 --> 00:00:51,120
All right.

19
00:00:51,320 --> 00:00:53,600
How are we doing, guys?

20
00:00:54,200 --> 00:00:56,160
How was your Saturday day

21
00:00:56,160 --> 00:01:00,600
short break from us?

22
00:01:03,480 --> 00:01:04,400
Twisted.

23
00:01:05,240 --> 00:01:08,280
Great.

24
00:01:08,280 --> 00:01:08,960
You are here.

25
00:01:08,960 --> 00:01:11,280
Syntax are me. I like that.

26
00:01:11,280 --> 00:01:13,000
Brain hurts.

27
00:01:13,600 --> 00:01:16,600
Well, we're going to try to not hurt
too much of today.

28
00:01:16,960 --> 00:01:18,560
Or maybe it will be so deep.

29
00:01:18,560 --> 00:01:21,000
I don't know.

30
00:01:22,520 --> 00:01:23,760
Right. Okay.

31
00:01:23,760 --> 00:01:25,720
I hope you guys all excited and ready.

32
00:01:25,720 --> 00:01:28,360
Any plans for today, guys? Helping plan.

33
00:01:28,360 --> 00:01:36,880
So you guys all did
your Halloween stuff yesterday.

34
00:01:38,760 --> 00:01:41,360
Party Alexander to celebrate

35
00:01:41,800 --> 00:01:46,000
Halloween in Ukraine.

36
00:01:46,000 --> 00:01:49,240
Ahmet is partying with java.

37
00:01:49,360 --> 00:01:51,240
Kids are high but not mad there Mama.

38
00:01:51,240 --> 00:01:54,440
Mama will be hype next year.

39
00:01:54,440 --> 00:01:58,720
She celebrated yesterday
so someone is okay.

40
00:01:59,240 --> 00:02:02,200
I guess it's getting spread

41
00:02:02,680 --> 00:02:05,160
pre country with the child.

42
00:02:05,160 --> 00:02:05,880
That's good.

43
00:02:05,880 --> 00:02:06,880
That's good.

44
00:02:08,080 --> 00:02:11,680
Well, so after the class today,
you still guys have time, right?

45
00:02:11,680 --> 00:02:17,200
So whatever your plans are it sleep
repeat Hashem no parties for you.

46
00:02:17,200 --> 00:02:18,280
That's good.

47
00:02:18,840 --> 00:02:19,640
Okay. That's right.

48
00:02:19,640 --> 00:02:24,880
So you guys are going to party next year
right after you get your job,

49
00:02:25,200 --> 00:02:27,240
and then you guys will be celebrating it.

50
00:02:28,240 --> 00:02:30,440
Okay? All right, guys.

51
00:02:30,440 --> 00:02:32,680
So today, right as usual,

52
00:02:33,960 --> 00:02:36,480
in the

53
00:02:37,800 --> 00:02:38,400
well, it's okay.

54
00:02:38,400 --> 00:02:42,400
You know, the way we say it's
very hard during the progress,

55
00:02:42,400 --> 00:02:46,440
but then it becomes easier
and easier, right?

56
00:02:46,440 --> 00:02:47,400
Okay. It

57
00:02:48,800 --> 00:02:49,800
shouldn't be trying to

58
00:02:49,800 --> 00:02:52,920
fall behind because if you guys
looking at the calendar, Right.

59
00:02:52,920 --> 00:02:58,600
So now your favorite topic
will be going on now for every single day.

60
00:02:58,600 --> 00:03:01,000
So you guys
will be learning a lot of stuff.

61
00:03:01,000 --> 00:03:06,840
So you guys need to make sure you are
continuously put in efforts right.

62
00:03:06,840 --> 00:03:08,800
Is still his candy.

63
00:03:09,360 --> 00:03:11,520
This is

64
00:03:12,680 --> 00:03:13,880
are you sure diligent?

65
00:03:13,880 --> 00:03:14,840
No, I don't think so.

66
00:03:14,840 --> 00:03:18,240
No, don't worry about if there is some,
because there will be some shift

67
00:03:18,280 --> 00:03:19,440
in and it causes. No, no, no.

68
00:03:19,440 --> 00:03:25,080
There is no schedule till June.

69
00:03:25,080 --> 00:03:26,440
So there is a.

70
00:03:26,440 --> 00:03:26,760
Okay.

71
00:03:26,760 --> 00:03:28,040
No, no, no. Don't worry about those.

72
00:03:28,040 --> 00:03:29,920
This I'll have to delete.

73
00:03:29,920 --> 00:03:32,680
There's a few things
that we actually introducing guys

74
00:03:34,120 --> 00:03:35,920
from the car and modeling to be introduced

75
00:03:35,920 --> 00:03:39,000
in a few more classes starting our batch.

76
00:03:39,240 --> 00:03:40,080
So that's why you see.

77
00:03:40,080 --> 00:03:42,080
But we will go over it over
that, don't worry.

78
00:03:42,080 --> 00:03:44,200
So you classes will be ending in

79
00:03:45,160 --> 00:03:47,440
in beginning of March. Yep.

80
00:03:47,440 --> 00:03:50,280
But anyway, if you guys see some schedule

81
00:03:50,280 --> 00:03:53,640
that's there somewhere,
you see no classes or some timings.

82
00:03:53,640 --> 00:03:57,560
Don't worry, we're going to fix it
as long as we are looking into October

83
00:03:57,560 --> 00:03:58,960
and our November title looks good.

84
00:03:58,960 --> 00:04:01,960
That's what's important, right?

85
00:04:01,960 --> 00:04:02,440
Okay.

86
00:04:03,280 --> 00:04:06,480
So sure of this
we will go quickly over the homework.

87
00:04:06,480 --> 00:04:07,880
Right. So

88
00:04:08,440 --> 00:04:12,240
today our topic will be
we will review the homework,

89
00:04:12,240 --> 00:04:16,040
we will touch base on the recap
on our nested loops.

90
00:04:16,040 --> 00:04:16,320
Right.

91
00:04:16,320 --> 00:04:21,800
And then we will start with our amazing
another topic of Eric's right

92
00:04:23,680 --> 00:04:26,880
because hours, the minute goes off,
the minute ours goes off. Yep.

93
00:04:26,880 --> 00:04:29,880
There is a
so there's a lot of things that you you

94
00:04:29,960 --> 00:04:32,760
you not a lot of things,
but there's a lot of condition

95
00:04:32,760 --> 00:04:36,440
you need to think right when there an hour
and then I need to add something

96
00:04:36,440 --> 00:04:38,680
and there's a minutes
I need to add something else. Right.

97
00:04:38,960 --> 00:04:40,200
So that's what are we going to look.

98
00:04:40,200 --> 00:04:43,480
So today is already class nine.

99
00:04:43,480 --> 00:04:44,600
Class nine.

100
00:04:44,600 --> 00:04:47,280
Okay,
so tell me, guys, what we were learning

101
00:04:47,280 --> 00:04:55,560
yesterday.

102
00:04:55,560 --> 00:04:57,800
We were looking into the next
that looks right here.

103
00:04:57,840 --> 00:05:00,120
We're looking into the nested loops. Okay.

104
00:05:00,120 --> 00:05:02,920
So we'll and continue and break you.

105
00:05:02,960 --> 00:05:04,200
All right. Nested loops

106
00:05:05,400 --> 00:05:09,480
and then continue and then breaks.

107
00:05:09,480 --> 00:05:11,640
Right. Continue in quick. Okay.

108
00:05:13,120 --> 00:05:16,320
So what is in this that look this

109
00:05:24,040 --> 00:05:26,880
nested loop is loop inside
another loop, right?

110
00:05:26,920 --> 00:05:28,560
Loop within that loop. Right.

111
00:05:28,560 --> 00:05:32,520
So what we have we have one loop, right,
that we call an outer loop.

112
00:05:32,520 --> 00:05:34,440
And then inside this loop

113
00:05:34,440 --> 00:05:38,520
we can this another loop,
that's what we call it, a nested right.

114
00:05:38,520 --> 00:05:42,440
So and as I was saying,
when it comes to the nesting guys,

115
00:05:42,480 --> 00:05:46,760
we can, there's any type of loops right
we can before inside for it can be four

116
00:05:46,760 --> 00:05:50,840
inside while it can be while inside, for
it can be different, different variations.

117
00:05:50,840 --> 00:05:54,960
Right? Yep.

118
00:05:54,960 --> 00:05:58,840
So and when we talk about the nested
loops, right when we talk,

119
00:05:59,960 --> 00:06:01,840
when we talk about the nested
looks. Right.

120
00:06:01,840 --> 00:06:04,320
So what, what did you guys do
on the button? This would look

121
00:06:39,760 --> 00:06:41,600
so within that inner loop.

122
00:06:41,600 --> 00:06:43,760
Always, always have a dependency, right?

123
00:06:43,760 --> 00:06:48,840
Why it has a dependency Because inner
loop leaves inside your auto loop.

124
00:06:48,960 --> 00:06:49,360
Right.

125
00:06:49,360 --> 00:06:53,760
So but in order for you to enter
the outer, look, what do we have to check?

126
00:06:53,760 --> 00:06:55,240
We have to check the condition. Right.

127
00:06:55,240 --> 00:06:58,360
So we're saying our condition
always, always

128
00:06:58,360 --> 00:07:01,800
has to be true, right?

129
00:07:01,800 --> 00:07:03,720
Always, always has to be true. Right.

130
00:07:03,720 --> 00:07:06,120
And in here. Right.

131
00:07:06,120 --> 00:07:08,640
Oh, let me actually add

132
00:07:09,960 --> 00:07:15,120
that we will do so system
that our the train line.

133
00:07:15,280 --> 00:07:15,720
Right.

134
00:07:15,720 --> 00:07:18,120
And let's say

135
00:07:19,680 --> 00:07:20,880
morning

136
00:07:21,720 --> 00:07:24,720
and here I'm going to see

137
00:07:32,360 --> 00:07:32,760
look.

138
00:07:32,760 --> 00:07:33,320
Right.

139
00:07:34,320 --> 00:07:38,480
Okay so how many times am I going to say
good morning?

140
00:07:38,480 --> 00:07:40,720
How many times
am I going to see hello, this

141
00:08:02,360 --> 00:08:03,840
three times

142
00:08:05,680 --> 00:08:09,840
in what, three times?

143
00:08:09,840 --> 00:08:10,560
Six times.

144
00:08:10,560 --> 00:08:13,640
Good morning. Hello.

145
00:08:13,640 --> 00:08:14,320
Two times

146
00:08:15,440 --> 00:08:16,240
two. Good morning.

147
00:08:16,240 --> 00:08:19,480
Three hellos.

148
00:08:19,480 --> 00:08:19,840
Hello.

149
00:08:19,840 --> 00:08:23,360
Six times.

150
00:08:23,360 --> 00:08:25,520
Hello. Six times

151
00:08:26,120 --> 00:08:27,040
six. Hello three.

152
00:08:27,040 --> 00:08:28,080
Good morning.

153
00:08:28,680 --> 00:08:28,960
Hello.

154
00:08:28,960 --> 00:08:33,240
Nine times.

155
00:08:33,240 --> 00:08:35,880
Hello. Nine times six. Hello.

156
00:08:35,920 --> 00:08:38,040
Good morning one time.

157
00:08:38,560 --> 00:08:40,600
Okay, so let's see this right?

158
00:08:40,600 --> 00:08:43,840
Let's see how many times
this condition is true. This

159
00:08:47,760 --> 00:08:48,800
two times, right?

160
00:08:48,800 --> 00:08:50,600
Two times one and two.

161
00:08:50,600 --> 00:08:51,360
So this way.

162
00:08:51,360 --> 00:08:51,920
Good morning.

163
00:08:51,920 --> 00:08:54,840
Will be printed two times. Right.

164
00:08:55,160 --> 00:08:57,280
So first time we are going to see.

165
00:08:57,280 --> 00:08:58,120
Good morning. Right?

166
00:08:58,120 --> 00:08:59,880
It will be printed one time.

167
00:08:59,880 --> 00:09:02,240
It will be printed second time. Right.

168
00:09:02,760 --> 00:09:03,560
So now what?

169
00:09:03,560 --> 00:09:07,440
Before we go to print the good morning you
a java will look into this loop, right?

170
00:09:07,680 --> 00:09:13,360
How many times
this condition will be true?

171
00:09:13,360 --> 00:09:14,960
Three times, right?

172
00:09:14,960 --> 00:09:16,840
Three times This condition will be true.

173
00:09:16,840 --> 00:09:17,600
So it will print.

174
00:09:17,600 --> 00:09:18,480
Hello. Hello.

175
00:09:18,480 --> 00:09:19,080
Hello.

176
00:09:19,080 --> 00:09:21,960
Right
then we will see. Good morning. Right.

177
00:09:22,200 --> 00:09:24,440
So once it prints three hellos, right.

178
00:09:24,440 --> 00:09:28,120
We said, Well, what
what happens after your G is equal to two.

179
00:09:28,400 --> 00:09:32,560
Then when your J gets equals to three
condition becomes false.

180
00:09:32,560 --> 00:09:34,320
Right? Then this will become false.

181
00:09:34,320 --> 00:09:36,360
Your inner loop will be exited.

182
00:09:36,360 --> 00:09:39,600
Then the your java sees
hello it or it brings good morning.

183
00:09:39,600 --> 00:09:41,120
It goes back right?

184
00:09:41,120 --> 00:09:45,560
And then you I guess increment
until two two is still less than three.

185
00:09:45,800 --> 00:09:46,840
Condition is true

186
00:09:46,840 --> 00:09:51,440
going inside while entering inside
and this cycle again repeats right.

187
00:09:51,440 --> 00:09:52,960
This cycle again repeats.

188
00:09:52,960 --> 00:09:56,320
So we are going to see
hello six times right.

189
00:09:56,640 --> 00:09:59,280
And we going to see
good morning two times. Right?

190
00:10:00,240 --> 00:10:01,880
We're going to see we morning to ten.

191
00:10:01,880 --> 00:10:02,640
Okay.

192
00:10:02,880 --> 00:10:06,040
So let me ask what about

193
00:10:11,720 --> 00:10:16,520
what if I'll do it?

194
00:10:18,480 --> 00:10:19,840
What if I did this?

195
00:10:19,840 --> 00:10:25,120
How many times mail will get executed?

196
00:10:25,120 --> 00:10:27,520
No, in a loop. Just say hello.

197
00:10:27,520 --> 00:10:28,200
Good morning.

198
00:10:28,200 --> 00:10:30,400
Is being a part of the outer
loop, right? Why?

199
00:10:30,400 --> 00:10:32,280
Because this is where your inner loop
starts.

200
00:10:32,280 --> 00:10:35,000
This where your inner look. It's

201
00:10:35,160 --> 00:10:35,560
nothing.

202
00:10:35,560 --> 00:10:42,000
Why? Nothing?

203
00:10:42,000 --> 00:10:45,360
Because our outer loop
is a false condition.

204
00:10:45,480 --> 00:10:48,480
Right? Of our loop is a false condition.

205
00:10:48,480 --> 00:10:52,360
So when our loop gives a false condition,
we cannot enter inside.

206
00:10:52,360 --> 00:10:57,720
So entire code, including your inner
loop, will be skipped.

207
00:10:57,720 --> 00:10:58,120
Right?

208
00:10:58,120 --> 00:11:00,720
Included because I is not more than three.

209
00:11:00,880 --> 00:11:03,920
One is not more than three, I

210
00:11:03,920 --> 00:11:05,520
think. All right.

211
00:11:05,520 --> 00:11:08,040
That's how our nested loop
and of course we will look more.

212
00:11:08,080 --> 00:11:10,680
Of course we'll look more
so now what is the bother?

213
00:11:10,680 --> 00:11:12,120
Continue in break.

214
00:11:12,120 --> 00:11:14,160
What did you guys
learn about continue in break

215
00:11:25,240 --> 00:11:27,680
so what continue does right

216
00:11:27,920 --> 00:11:31,400
it skips can't if the region right

217
00:11:32,800 --> 00:11:35,040
or an integration

218
00:11:35,360 --> 00:11:38,160
and moves to the next right

219
00:11:38,160 --> 00:11:41,280
move to the beginning
move it move to the beginning.

220
00:11:41,280 --> 00:11:46,160
We can put it this way.

221
00:11:46,160 --> 00:11:48,840
Okay and what about break

222
00:11:56,200 --> 00:11:57,120
break

223
00:11:57,720 --> 00:12:00,720
exists right

224
00:12:01,000 --> 00:12:04,200
Breaks the loop breaks the loop.

225
00:12:04,400 --> 00:12:04,840
Right

226
00:12:05,880 --> 00:12:06,600
Is it's right.

227
00:12:06,600 --> 00:12:07,440
That's it. It breaks.

228
00:12:07,440 --> 00:12:09,480
It breaks the block of it. Right.

229
00:12:09,760 --> 00:12:12,080
Okay,
So now let's try different variations.

230
00:12:12,080 --> 00:12:15,960
That's
I want to ask you what is going to happen

231
00:12:15,960 --> 00:12:18,160
if I'm going to place this

232
00:12:20,280 --> 00:12:22,640
on the class

233
00:12:23,080 --> 00:12:25,520
new edge

234
00:12:26,800 --> 00:12:29,080
on that since was that

235
00:12:30,240 --> 00:12:32,600
last question

236
00:12:32,880 --> 00:12:37,200
0909.

237
00:12:37,200 --> 00:12:41,760
Because once we add the ten,
we want class ten,

238
00:12:41,760 --> 00:12:45,000
then we want to make sure the class
is there correctly

239
00:12:48,320 --> 00:12:57,600
40, 40.

240
00:12:57,600 --> 00:13:02,400
And one thing what I'm going to ask you
this, I see some of you are sometimes

241
00:13:02,400 --> 00:13:06,240
sending the questions
into support during class about replies.

242
00:13:06,240 --> 00:13:09,000
Please, please
make sure you focus on on the screen.

243
00:13:09,000 --> 00:13:11,480
Right.
Don't do any of during the class. Okay.

244
00:13:11,920 --> 00:13:14,880
So just follow
the things that we are doing in here.

245
00:13:15,280 --> 00:13:17,320
I'll type. Hello. Right.

246
00:13:17,880 --> 00:13:29,800
I'll take a little. You

247
00:13:31,000 --> 00:13:34,640
know, we're all

248
00:13:44,560 --> 00:13:45,360
right.

249
00:13:45,360 --> 00:13:46,080
Okay.

250
00:13:46,280 --> 00:13:48,720
So if my condition is true,

251
00:13:48,720 --> 00:13:51,400
if I'm going to run,
this was my previous code, right?

252
00:13:51,720 --> 00:13:52,880
So what do we have said?

253
00:13:52,880 --> 00:13:55,720
So allow us three times. Good morning.

254
00:13:55,720 --> 00:13:56,240
One time.

255
00:13:56,240 --> 00:13:59,320
Hello, three times,
and then the morning second.

256
00:13:59,640 --> 00:14:00,120
Okay,

257
00:14:01,120 --> 00:14:04,920
so now when we talk about the break
and in the in continue.

258
00:14:04,920 --> 00:14:06,080
Right. So what are we saying?

259
00:14:06,080 --> 00:14:08,760
Break breaks the loop. Right.

260
00:14:08,840 --> 00:14:10,600
Break breaks the loop.

261
00:14:10,600 --> 00:14:10,960
Okay.

262
00:14:10,960 --> 00:14:14,760
So now what
do you guys think going to happen?

263
00:14:14,760 --> 00:14:21,000
If I'm going to put the break in here,
I want you to pay attention on the line.

264
00:14:21,360 --> 00:14:21,840
Okay.

265
00:14:22,080 --> 00:14:38,640
So what will be the output this.

266
00:14:38,640 --> 00:14:41,520
I'm on it. I'm. I didn't break. Remember,
there's break it.

267
00:14:41,600 --> 00:14:48,560
So it's a very powerful keyword.

268
00:14:48,560 --> 00:14:48,760
Yeah.

269
00:14:50,760 --> 00:14:51,880
So what will happen?

270
00:14:51,880 --> 00:14:52,160
Right.

271
00:14:52,160 --> 00:14:56,480
If you go into debugging this,
what will happen right.

272
00:14:56,480 --> 00:15:00,480
So initialization
first check in the condition.

273
00:15:00,480 --> 00:15:02,080
Condition is true.

274
00:15:02,080 --> 00:15:06,240
One inside our eyes initialize
of course, as soon as java enter inside

275
00:15:06,240 --> 00:15:09,800
it sees another force so it knows that
it needs to repeat the cycle.

276
00:15:10,080 --> 00:15:10,480
Right.

277
00:15:10,480 --> 00:15:13,440
Initializing to zero
zero is still less than two.

278
00:15:13,440 --> 00:15:14,480
Condition is true.

279
00:15:14,480 --> 00:15:15,200
Okay.

280
00:15:15,200 --> 00:15:17,560
Going inside so that little J was zero.

281
00:15:17,560 --> 00:15:20,080
It printed one time. Hello. Right.

282
00:15:20,080 --> 00:15:21,560
Or only one time. Hello.

283
00:15:21,560 --> 00:15:24,360
Now Jigger increment
the tool one is going to print.

284
00:15:24,360 --> 00:15:25,400
Hello again.

285
00:15:25,400 --> 00:15:29,960
Now J is equal to two right
to what's still true.

286
00:15:30,000 --> 00:15:34,560
Going to print again now after G was two
is going to incremental

287
00:15:34,560 --> 00:15:38,520
three three will be not
less than two condition will be false

288
00:15:38,840 --> 00:15:43,440
it exists our next at four then it sees
good morning right

289
00:15:43,440 --> 00:15:47,160
then it says good one is going to print
and then Java sees a break.

290
00:15:47,280 --> 00:15:50,920
Remember, guys, break
what it does, it breaks the loop, right?

291
00:15:51,320 --> 00:15:55,160
So now where we define
the break would define it a break inside

292
00:15:55,200 --> 00:15:58,120
our our loop right inside out.

293
00:15:58,800 --> 00:16:01,160
So now let me ask you guys this.

294
00:16:01,160 --> 00:16:02,040
What would be that?

295
00:16:02,040 --> 00:16:03,400
What if I put the break in here

296
00:16:06,480 --> 00:16:07,920
or do you guys think

297
00:16:10,680 --> 00:16:12,920
now I change my break in that place

298
00:16:12,920 --> 00:16:15,240
If inside my nested loop

299
00:16:28,080 --> 00:16:28,360
three.

300
00:16:28,360 --> 00:16:30,600
Hello to good morning

301
00:16:32,800 --> 00:16:34,440
to Good morning

302
00:16:34,680 --> 00:16:35,640
one. Hello one.

303
00:16:35,640 --> 00:16:37,880
Good morning one.

304
00:16:37,880 --> 00:16:38,400
Hello three.

305
00:16:38,400 --> 00:16:42,200
Hello one.

306
00:16:42,200 --> 00:16:44,440
Hello to Good morning one Hello.

307
00:16:44,920 --> 00:16:49,640
Okay so are we agree to be okay
let's see one

308
00:16:49,640 --> 00:16:52,200
Hello one
good morning one hello two good mornings.

309
00:16:53,880 --> 00:16:55,280
Hello. Good morning. Hello. Good one.

310
00:16:55,280 --> 00:16:57,280
Okay, let's see this again. Right.

311
00:16:57,680 --> 00:17:01,200
So always, always analyze
before you in the you can run you guys

312
00:17:01,200 --> 00:17:05,640
can analyze the code yourself right.

313
00:17:05,640 --> 00:17:08,880
The initialization checking condition.

314
00:17:09,000 --> 00:17:10,680
Condition is true.

315
00:17:10,680 --> 00:17:12,800
Condition is true. I'm going inside.

316
00:17:13,200 --> 00:17:14,640
Java enters inside.

317
00:17:14,640 --> 00:17:15,760
It's another loop.

318
00:17:15,760 --> 00:17:18,800
Okay, so for initialization condition.

319
00:17:19,680 --> 00:17:22,120
Condition is true. I am going inside.

320
00:17:22,440 --> 00:17:23,520
So what I'm going to do?

321
00:17:23,520 --> 00:17:24,320
I'm going to print.

322
00:17:24,320 --> 00:17:27,720
Hello. Then Java sees a break. Right?

323
00:17:27,720 --> 00:17:32,400
So when Java sees a break, it's
breaking outside of the loop.

324
00:17:32,720 --> 00:17:35,000
So would you like me to break in right
now, guys?

325
00:17:35,040 --> 00:17:39,920
Which loop is it going to break?

326
00:17:39,920 --> 00:17:41,440
It breaks this look right.

327
00:17:41,440 --> 00:17:45,800
Word was defined, it breaks this nested
right, It breaks this inner loop.

328
00:17:45,800 --> 00:17:48,800
So now it breaks it. It exists.

329
00:17:49,040 --> 00:17:52,240
Now, when it exits
what it sees, it sees a good morning.

330
00:17:52,240 --> 00:17:54,040
Right? Okay. It is a good morning.

331
00:17:54,040 --> 00:17:55,440
Is there any break?

332
00:17:55,440 --> 00:17:58,800
When we after good morning days.

333
00:17:58,800 --> 00:17:59,400
No. Right.

334
00:17:59,400 --> 00:18:00,240
Okay then.

335
00:18:00,240 --> 00:18:02,760
Java can cannot stop the execution. No.

336
00:18:02,920 --> 00:18:03,840
So what it will do?

337
00:18:03,840 --> 00:18:06,560
It will go back right now.

338
00:18:06,560 --> 00:18:09,240
I will get increment that it will
equal to two.

339
00:18:09,240 --> 00:18:10,440
Two is still Lisbon.

340
00:18:10,440 --> 00:18:12,160
Three condition is true.

341
00:18:12,160 --> 00:18:14,280
Now again I'm going inside.

342
00:18:14,520 --> 00:18:18,640
So what happens when I'm
going to go inside my inner loop?

343
00:18:18,640 --> 00:18:25,760
What happens with my is
what happened with my nested loop.

344
00:18:25,760 --> 00:18:27,840
My nested look resets, right?

345
00:18:27,840 --> 00:18:29,880
It resets right Because like again,

346
00:18:29,880 --> 00:18:34,320
being more right again, being born again
initialization condition.

347
00:18:34,320 --> 00:18:35,200
Condition is true.

348
00:18:35,200 --> 00:18:38,720
And when inside
like nothing happened before printing.

349
00:18:38,720 --> 00:18:39,640
Hello.

350
00:18:39,640 --> 00:18:41,920
Now your java C's break, right?

351
00:18:41,920 --> 00:18:43,080
Jarvis break again.

352
00:18:43,080 --> 00:18:44,080
What? It can break.

353
00:18:44,080 --> 00:18:46,960
It can break only one block of code.

354
00:18:46,960 --> 00:18:49,680
That's okay.
So which block of code was defined?

355
00:18:49,840 --> 00:18:51,000
It was defined.

356
00:18:51,000 --> 00:18:54,240
It was defined it inside
these nested loop.

357
00:18:54,240 --> 00:18:56,520
Right.
So now it will see the break. Is it okay?

358
00:18:56,520 --> 00:18:57,560
I got to get out.

359
00:18:57,560 --> 00:18:58,480
It gets out.

360
00:18:58,480 --> 00:19:00,800
And as soon as it gets out
it is good morning.

361
00:19:00,800 --> 00:19:01,520
Right.

362
00:19:01,520 --> 00:19:03,120
And then Java doesn't stab.

363
00:19:03,120 --> 00:19:04,920
Java still goes back.

364
00:19:04,920 --> 00:19:06,480
Only then it increments.

365
00:19:06,480 --> 00:19:11,480
I becomes three Now when the condition
will be false, that's when it starts.

366
00:19:11,520 --> 00:19:12,040
Right?

367
00:19:12,040 --> 00:19:14,280
So now you guys see the way
the break works.

368
00:19:14,280 --> 00:19:18,480
It does break the loop,
but it breaks the loop only inside

369
00:19:18,480 --> 00:19:20,120
which it was defined, right?

370
00:19:20,120 --> 00:19:24,920
So and then we say, in case of the nested
loop, it will bring that in.

371
00:19:24,920 --> 00:19:27,040
It will break the inner loop, right?

372
00:19:27,040 --> 00:19:30,040
It will break the inner little,
but it still will continue for our loop.

373
00:19:30,040 --> 00:19:30,520
Right.

374
00:19:30,960 --> 00:19:32,360
Good morning. Hello.

375
00:19:32,360 --> 00:19:33,080
Good morning.

376
00:19:33,080 --> 00:19:35,720
Okay.

377
00:19:35,720 --> 00:19:37,080
Without a break here.

378
00:19:37,080 --> 00:19:38,760
Without the break, it works as a regular

379
00:19:40,480 --> 00:19:41,040
three times.

380
00:19:41,040 --> 00:19:41,440
Hello.

381
00:19:41,440 --> 00:19:43,720
Because condition choice
three times in here.

382
00:19:44,120 --> 00:19:45,120
One good morning.

383
00:19:45,120 --> 00:19:45,760
Right.

384
00:19:45,880 --> 00:19:47,600
Then goes back again.

385
00:19:47,600 --> 00:19:49,920
Hello. Three times one. Good morning.

386
00:19:49,920 --> 00:19:54,960
But if you're are going to use a break
in here right then we are going to see.

387
00:19:54,960 --> 00:19:56,160
Hello. Good morning.

388
00:19:56,160 --> 00:19:57,040
Hello. Good morning.

389
00:19:57,040 --> 00:20:02,920
Right or right or you said, hey,
if we're going to have a break in here,

390
00:20:02,920 --> 00:20:07,160
then of course, because now break
is defined inside which block of code.

391
00:20:07,400 --> 00:20:10,520
Now break. Define inside my auto loop.

392
00:20:10,760 --> 00:20:14,280
Now, you guys just going to see three
halos. One.

393
00:20:14,280 --> 00:20:14,840
Good morning.

394
00:20:14,840 --> 00:20:18,440
Right behind those.

395
00:20:18,440 --> 00:20:22,840
Okay, Well, let me do another example.

396
00:20:23,200 --> 00:20:27,120
Maybe another example,
just to get our logic

397
00:20:27,120 --> 00:20:32,320
right.

398
00:20:32,320 --> 00:20:36,280
We don't want to have a four right

399
00:20:37,320 --> 00:20:37,760
digit.

400
00:20:37,760 --> 00:20:42,200
I think it might be equal to

401
00:20:43,320 --> 00:20:47,160
one. Let's wait for the three plus.

402
00:20:47,160 --> 00:20:47,880
Right.

403
00:20:48,480 --> 00:20:50,080
And then side.

404
00:20:50,080 --> 00:20:52,920
Well, I was going to say, I don't know.

405
00:20:54,000 --> 00:20:56,760
I am for loop.

406
00:20:59,440 --> 00:21:03,040
Let me take a variable right

407
00:21:03,120 --> 00:21:05,760
in the oval range.

408
00:21:05,760 --> 00:21:08,800
Morning equals fiction, right

409
00:21:10,440 --> 00:21:13,400
now inside my inside

410
00:21:13,400 --> 00:21:16,120
my for loop right inside my for loop.

411
00:21:16,720 --> 00:21:20,560
I want to nest
I don't want to index my wire

412
00:21:21,360 --> 00:21:24,880
while morning

413
00:21:24,880 --> 00:21:25,520
thing

414
00:21:26,640 --> 00:21:29,160
is all I want to see

415
00:21:30,480 --> 00:21:35,760
at the moment.

416
00:21:35,760 --> 00:21:38,760
Yeah. So now let's look at this.
Look this.

417
00:21:38,760 --> 00:21:42,520
I want you to look at this loop.

418
00:21:42,520 --> 00:22:51,240
That's what is going to be
the output of this loop.

419
00:22:51,240 --> 00:22:54,040
Okay, so now what we see in here, right?

420
00:22:55,200 --> 00:22:57,400
And you have a variable
that holds the value of.

421
00:22:57,400 --> 00:22:59,400
True. Okay. Right.

422
00:22:59,400 --> 00:23:01,520
You put the true in there.

423
00:23:01,520 --> 00:23:04,120
Initialization condition is true.

424
00:23:04,120 --> 00:23:06,800
What is the value of ise equals two one.

425
00:23:06,960 --> 00:23:08,840
One is less than three.

426
00:23:08,840 --> 00:23:10,160
Condition is true.

427
00:23:10,160 --> 00:23:12,360
Yes, condition is true.
We are going inside.

428
00:23:13,280 --> 00:23:15,680
Am I going to print this value?

429
00:23:15,680 --> 00:23:21,480
I am for loop.

430
00:23:21,480 --> 00:23:24,360
Right? Because it's just a statement.

431
00:23:24,360 --> 00:23:29,280
If we did not place this statement
inside the any cycle of all of loop,

432
00:23:29,280 --> 00:23:32,320
we did not put it inside
the conditional statement print in it.

433
00:23:32,320 --> 00:23:33,000
Good.

434
00:23:33,000 --> 00:23:35,840
Now as soon as I'm printed
in Dallas as well, what is it?

435
00:23:35,840 --> 00:23:38,000
While it knows
it needs to repeat BLOCK of code?

436
00:23:38,000 --> 00:23:38,680
As long as what?

437
00:23:38,680 --> 00:23:41,040
As long as the condition is to my morning.

438
00:23:41,040 --> 00:23:46,560
What is the value of morning days?

439
00:23:46,560 --> 00:23:48,600
It's true, right?

440
00:23:48,600 --> 00:23:49,920
And that is true.

441
00:23:49,920 --> 00:23:52,480
So now, while that is true,
I am going inside.

442
00:23:52,480 --> 00:23:53,280
I'm going to print.

443
00:23:53,280 --> 00:23:53,840
Good morning.

444
00:23:53,840 --> 00:24:00,400
After that, what happens, guys?

445
00:24:00,400 --> 00:24:02,400
It needs to go back, right?

446
00:24:02,400 --> 00:24:03,960
It goes back again.

447
00:24:03,960 --> 00:24:06,480
Checks
the condition. Condition is still true.

448
00:24:06,480 --> 00:24:08,160
And what is going to happen?

449
00:24:08,160 --> 00:24:10,400
We are going to get one good one.

450
00:24:10,400 --> 00:24:14,840
I am for loop and the rest,
what are we going to get?

451
00:24:15,280 --> 00:24:17,640
Good morning.
We're going to get an infinite loop.

452
00:24:17,640 --> 00:24:21,960
Well, because this condition holds
the value of true, right?

453
00:24:22,160 --> 00:24:26,360
And in order for Java
to go back to the outlook,

454
00:24:26,360 --> 00:24:30,200
it has to complete and number of cycles.

455
00:24:30,200 --> 00:24:33,000
Remember,
a Java doesn't have a stub by itself.

456
00:24:33,000 --> 00:24:37,440
Write what Java needs do say Java
needs to check the condition right now.

457
00:24:37,440 --> 00:24:39,080
What do we get? We got one time.

458
00:24:39,080 --> 00:24:43,320
I am for loop and then we got Good morning
Infinite infinite times.

459
00:24:43,320 --> 00:24:46,760
Write infinite times what?

460
00:24:46,760 --> 00:24:47,920
All right, let me

461
00:24:47,920 --> 00:24:51,720
show you guys what's going to happen
if I'm going to add a break in here.

462
00:24:53,200 --> 00:24:56,800
My in break I want to break my loop

463
00:25:00,280 --> 00:25:02,400
because the code was running very,
very fast.

464
00:25:02,400 --> 00:25:07,920
If you want to debug
because you going to see it and

465
00:25:09,440 --> 00:25:12,080
nothing happened.

466
00:25:12,200 --> 00:25:13,800
I don't know. I am for loop.

467
00:25:13,800 --> 00:25:14,040
I am.

468
00:25:14,040 --> 00:25:15,320
Good morning. One time.

469
00:25:15,320 --> 00:25:17,480
So what's going to happen?

470
00:25:17,960 --> 00:25:25,240
Well, nothing changes.

471
00:25:25,240 --> 00:25:26,480
Why no change?

472
00:25:26,480 --> 00:25:27,200
Why no change?

473
00:25:27,200 --> 00:25:40,000
You guys?

474
00:25:40,000 --> 00:25:43,760
Because in order for Java
to reach this break,

475
00:25:44,040 --> 00:25:48,240
it has to exist this loop, right?

476
00:25:48,240 --> 00:25:49,800
It has to exist this loop.

477
00:25:49,800 --> 00:25:55,400
Only then Java would see a break now
because this loop is running

478
00:25:55,400 --> 00:26:00,000
infinitely
so our break will never ever be reached.

479
00:26:00,000 --> 00:26:00,880
Right?

480
00:26:01,280 --> 00:26:02,520
Syntax wise is correct.

481
00:26:02,520 --> 00:26:03,800
Price index by this point

482
00:26:03,800 --> 00:26:07,840
would just because here we put a condition
that is always true.

483
00:26:08,160 --> 00:26:10,800
That's why your java will never
come to that point. Right?

484
00:26:12,640 --> 00:26:14,800
It's it's bathroom break

485
00:26:14,800 --> 00:26:17,160
in this part so now right

486
00:26:17,560 --> 00:26:22,840
I, I is equals to one condition is true
we print in I am for loop

487
00:26:22,840 --> 00:26:25,800
we are printing them a for loop by
then you java enters

488
00:26:26,160 --> 00:26:30,080
and less cycle of the good morning right
and they cannot break that cycle.

489
00:26:30,240 --> 00:26:33,640
We cannot stop by itself
while because your condition

490
00:26:33,640 --> 00:26:35,520
is always always true right.

491
00:26:35,520 --> 00:26:37,880
So your java will never hit that right.

492
00:26:38,040 --> 00:26:40,200
Like it will never hit that.

493
00:26:40,200 --> 00:26:41,000
Okay.

494
00:26:41,000 --> 00:26:45,720
So as I think for how do you ask before
if you going to put a break on top.

495
00:26:45,720 --> 00:26:46,040
Right.

496
00:26:46,040 --> 00:26:48,280
If you're going to put on break on top,

497
00:26:48,280 --> 00:26:50,880
then your compiler
will give you the error.

498
00:26:50,880 --> 00:26:51,240
Right?

499
00:26:51,240 --> 00:26:54,960
So now you will
compiler will give you the error

500
00:26:54,960 --> 00:26:58,360
which will tell you, hey,
you have unreachable code. Why?

501
00:26:58,360 --> 00:27:02,880
Because compiler C is okay as soon as
you're going to enter the fourth body.

502
00:27:02,880 --> 00:27:08,160
So you going to enter the full body
Java will see break now it will get out.

503
00:27:08,400 --> 00:27:11,000
So these lines will never be reachable.

504
00:27:11,040 --> 00:27:11,360
Right.

505
00:27:13,080 --> 00:27:13,680
All right.

506
00:27:13,680 --> 00:27:15,160
Let me ask guys this then.

507
00:27:15,160 --> 00:27:16,600
What if all enter?

508
00:27:16,600 --> 00:27:18,320
What if I enter break in here?

509
00:27:18,320 --> 00:27:51,160
What will be that?

510
00:27:51,160 --> 00:27:53,680
So what I will do, right?

511
00:27:53,680 --> 00:27:58,680
What it will do right, It will print this
because this condition is true.

512
00:27:58,680 --> 00:28:01,200
Three times
it will print that you will enter.

513
00:28:01,200 --> 00:28:03,880
Good morning. It will bring. Good morning.
It is a break.

514
00:28:04,160 --> 00:28:06,040
You will get out from where?

515
00:28:06,040 --> 00:28:07,880
From this nested well, right?

516
00:28:07,880 --> 00:28:10,000
It will get out from this list that well

517
00:28:10,000 --> 00:28:12,120
and then once it out
there's no block of blood.

518
00:28:12,120 --> 00:28:15,240
So it will go back
and then get incremented.

519
00:28:15,240 --> 00:28:19,400
I I equals to to again
enter in the morning

520
00:28:19,400 --> 00:28:23,520
print in one time he didn't break
you break in the wire loop

521
00:28:23,520 --> 00:28:27,600
going back to the for loop condition
three correct third time

522
00:28:27,600 --> 00:28:32,480
and then again entering the wild
seeing the break getting out of the while

523
00:28:32,640 --> 00:28:37,360
going back to the four increments in
I three plus one will be four.

524
00:28:37,360 --> 00:28:39,240
Four is not less than three.

525
00:28:39,240 --> 00:28:43,440
When the condition becomes false,
your java cannot enter the cycle of four.

526
00:28:43,520 --> 00:28:44,160
Right.

527
00:28:44,400 --> 00:28:48,240
So what are we going to get right.

528
00:28:48,240 --> 00:28:49,400
So are we going to get right?

529
00:28:49,400 --> 00:28:52,520
So in here we got I for loop.
Good morning.

530
00:28:52,560 --> 00:28:53,560
I am a foil.

531
00:28:53,560 --> 00:28:56,640
Good morning.
I'm for loop. Good morning. I

532
00:28:59,760 --> 00:29:00,720
say just good.

533
00:29:00,720 --> 00:29:02,520
Just see different variations. Okay.

534
00:29:02,520 --> 00:29:04,440
Let me ask you guys this.

535
00:29:04,440 --> 00:29:05,800
You think this

536
00:29:09,280 --> 00:29:12,200
think this.

537
00:29:12,200 --> 00:29:14,480
I'm going to copy my first code. Right?

538
00:29:14,480 --> 00:29:19,720
I'm going to copy my first code.

539
00:29:19,720 --> 00:29:22,040
Copy my first code. Right.

540
00:29:22,040 --> 00:29:25,440
So now the only thing
that's the only thing

541
00:29:26,800 --> 00:29:28,680
instead of the break.

542
00:29:28,680 --> 00:29:31,280
Instead of the break right here.

543
00:29:31,280 --> 00:29:32,280
Up to the break.

544
00:29:32,280 --> 00:29:34,240
And here we test with the break.

545
00:29:34,240 --> 00:29:36,320
Okay.

546
00:29:36,320 --> 00:29:39,240
So instead of the break,
what I would like to add,

547
00:29:39,560 --> 00:29:48,360
I want to add continue.

548
00:29:48,360 --> 00:29:51,280
Okay. It's that now
I'm not going to place it in here.

549
00:29:51,280 --> 00:29:54,440
I am going to place it.

550
00:29:54,440 --> 00:29:57,920
I need to
I need to e okay. I want to okay.

551
00:29:58,080 --> 00:29:59,160
I need to e things.

552
00:29:59,160 --> 00:30:04,720
One moment.

553
00:30:04,720 --> 00:30:06,520
Let me do F in here.

554
00:30:07,920 --> 00:30:12,480
He's g

555
00:30:12,480 --> 00:30:15,000
equals to one, right?

556
00:30:15,920 --> 00:30:18,600
Equals to one.

557
00:30:19,640 --> 00:30:22,440
Then what I'm going to do, I'm going to

558
00:30:23,640 --> 00:30:25,080
be okay.

559
00:30:25,080 --> 00:30:26,480
Continue.

560
00:30:26,480 --> 00:30:27,560
And let me start.

561
00:30:27,560 --> 00:30:29,680
I'm changing the value of G to one this.

562
00:30:29,680 --> 00:30:32,240
So this way to this things.

563
00:30:32,280 --> 00:30:36,440
Okay, let me fix my lines.

564
00:30:36,440 --> 00:30:40,760
So let me for my my right.

565
00:30:40,760 --> 00:30:43,440
So now what I did I added the continuous

566
00:30:44,480 --> 00:30:47,720
I added the continue
now let's analyze this.

567
00:30:47,720 --> 00:30:51,440
I want you to analyze and

568
00:30:51,480 --> 00:31:20,160
tell me what will be the output,
your hellos,

569
00:31:21,440 --> 00:31:24,440
hellos.

570
00:31:24,440 --> 00:31:27,000
Okay. Good morning.

571
00:31:27,000 --> 00:31:27,840
Give me

572
00:31:33,320 --> 00:31:35,840
don't run again is just doesn't
just try to look

573
00:31:35,840 --> 00:31:38,160
try to look and try try to analyze

574
00:31:40,360 --> 00:31:41,760
and you doesn't change

575
00:31:41,760 --> 00:31:46,440
anything in here.

576
00:31:46,440 --> 00:31:50,680
You continue It's a keyword
is it means something, right?

577
00:31:51,920 --> 00:31:53,040
Do. Good morning one.

578
00:31:53,040 --> 00:32:04,440
Hello.

579
00:32:04,440 --> 00:32:05,520
Two hellos,

580
00:32:06,720 --> 00:32:10,080
three good mornings.

581
00:32:10,080 --> 00:32:12,080
Two, one, two.

582
00:32:12,400 --> 00:32:13,200
Okay.

583
00:32:13,200 --> 00:32:14,840
Two into.

584
00:32:15,000 --> 00:32:15,800
Hello. Hello.

585
00:32:15,800 --> 00:32:17,120
Good morning.

586
00:32:17,120 --> 00:32:17,840
Hello. Hello.

587
00:32:17,840 --> 00:32:18,400
Good morning.

588
00:32:18,400 --> 00:32:20,040
Okay. Hello.

589
00:32:20,040 --> 00:32:20,760
Good morning. Hello.

590
00:32:20,760 --> 00:32:23,480
Good morning to all of the men.

591
00:32:23,480 --> 00:32:26,040
I can figure out two hellos. Okay.

592
00:32:26,040 --> 00:32:29,680
Two into two hellos for Good morning.

593
00:32:30,120 --> 00:32:33,920
Okay. One.

594
00:32:33,920 --> 00:32:37,920
Hello, Two, one.

595
00:32:37,920 --> 00:32:39,160
Good morning, One.

596
00:32:39,160 --> 00:32:39,360
Okay.

597
00:32:39,360 --> 00:32:42,200
I mean, of course
I saw the right answers already,

598
00:32:42,600 --> 00:32:46,040
and now we will try to see you guys

599
00:32:46,440 --> 00:32:48,480
likes it.

600
00:32:48,480 --> 00:32:49,480
So the way the break

601
00:32:49,480 --> 00:32:53,040
right break breaks the loop, but it breaks
the look with was defined, right.

602
00:32:53,280 --> 00:32:56,960
So now when you think of the continue it's
gives the iteration, right?

603
00:32:56,960 --> 00:33:00,440
It gives one iteration
but also iteration where this

604
00:33:00,840 --> 00:33:03,360
which iteration
it will be skipping or continue

605
00:33:07,920 --> 00:33:08,320
of the

606
00:33:08,320 --> 00:33:11,720
in the loop right in the loop
where it was defined.

607
00:33:11,720 --> 00:33:11,960
Right.

608
00:33:11,960 --> 00:33:13,400
So now let's do analysis.

609
00:33:13,400 --> 00:33:16,080
Always always guys just keep it, man.

610
00:33:16,080 --> 00:33:17,920
All right. That's what I call it.

611
00:33:17,920 --> 00:33:19,560
I equals to one.

612
00:33:19,560 --> 00:33:21,080
We know I.

613
00:33:21,080 --> 00:33:22,920
LISBON three Yes.

614
00:33:22,920 --> 00:33:25,200
Going inside right.

615
00:33:25,200 --> 00:33:27,840
While one inside J equals to one

616
00:33:28,920 --> 00:33:30,600
condition is true.

617
00:33:30,600 --> 00:33:32,480
Going inside. Right.

618
00:33:32,480 --> 00:33:35,720
As soon as I enter it inside,
tell me this one which line?

619
00:33:35,720 --> 00:33:39,600
My nested will and the minus
that for starts in word ends minus

620
00:33:39,600 --> 00:33:40,520
the for

621
00:33:49,800 --> 00:33:51,600
each bars on the line 39.

622
00:33:51,600 --> 00:33:53,520
That's
where we open in the bracket. Right?

623
00:33:53,520 --> 00:33:56,040
And then word is

624
00:34:00,240 --> 00:34:01,640
43 now that the

625
00:34:01,640 --> 00:34:05,160
the block of what for 43
is for the E blogger's 46.

626
00:34:05,160 --> 00:34:07,800
That's
where my inner loop starts and ends.

627
00:34:07,880 --> 00:34:08,920
Right. Okay.

628
00:34:08,920 --> 00:34:12,880
So now once you see why you guys
also can see immediately for

629
00:34:13,080 --> 00:34:16,320
this is where it starts,
this is where it goes right.

630
00:34:16,320 --> 00:34:20,160
So this block of code, it's
the it's for the if this where it starts,

631
00:34:20,160 --> 00:34:22,560
this is where it closes. Right. Okay.

632
00:34:23,080 --> 00:34:27,000
So now going back, we said, hey J equals

633
00:34:27,000 --> 00:34:31,640
211 is less than two,
condition is two going inside.

634
00:34:31,640 --> 00:34:36,640
As soon as we entered our inner loop,
Java sees if condition

635
00:34:36,920 --> 00:34:41,600
Java sees if condition here is equal
to one, yes, G equals to one.

636
00:34:41,960 --> 00:34:46,040
So what your job I see is
the Java Sea is continue forward.

637
00:34:46,040 --> 00:34:49,560
So what I continue means it says, hey,
ignore

638
00:34:49,600 --> 00:34:53,040
right, skim
the current iteration and go back.

639
00:34:53,520 --> 00:34:54,960
That's what I will do. Right.

640
00:34:54,960 --> 00:34:56,120
It will go back.

641
00:34:56,120 --> 00:35:00,360
Now, when the Java goes back,
what happens days when the Java goes back

642
00:35:06,880 --> 00:35:07,560
increment.

643
00:35:07,560 --> 00:35:11,440
So now J will get increment
till two checks.

644
00:35:11,440 --> 00:35:13,560
Hey, is due less or equal than two years.

645
00:35:13,560 --> 00:35:16,200
Condition is to go inside again.

646
00:35:16,760 --> 00:35:19,720
Checking the condition eve right now.

647
00:35:19,720 --> 00:35:23,640
Hey is two equals
two one No condition will be false.

648
00:35:24,000 --> 00:35:27,200
Cannot enter my eve I am going to print.

649
00:35:27,200 --> 00:35:28,720
Hello. Right.

650
00:35:28,720 --> 00:35:29,800
I'm going to print.

651
00:35:29,800 --> 00:35:33,120
Hello Then I am at the end of my

652
00:35:33,120 --> 00:35:38,040
for loop right now it goes back
J is equals to three condition

653
00:35:38,040 --> 00:35:39,000
three less than two.

654
00:35:39,000 --> 00:35:42,200
No condition is false
and now you cannot enter the four block

655
00:35:42,200 --> 00:35:46,480
right then what Your java sees you
Java sees Good morning right

656
00:35:46,920 --> 00:35:50,880
then I think is good morning
It goes back right it goes back

657
00:35:51,120 --> 00:35:54,880
now G will get the increment that you
Oh sorry I will get increment.

658
00:35:54,880 --> 00:35:57,080
The two condition is true.

659
00:35:57,080 --> 00:35:58,440
Two less than three. Right.

660
00:35:58,440 --> 00:36:02,800
Go in inside
and then your cycle repeats again.

661
00:36:02,800 --> 00:36:03,120
Right.

662
00:36:03,120 --> 00:36:08,520
So then again when the j's equals to one
you going to skip that iteration.

663
00:36:08,800 --> 00:36:12,120
But when the G is going to equal to two,
you're going to print Hello.

664
00:36:12,120 --> 00:36:15,360
Right then G get incremented till three.

665
00:36:15,640 --> 00:36:17,760
Three is not less than two.

666
00:36:17,760 --> 00:36:21,120
Your inner set, your inner
loop will give you a false condition

667
00:36:21,120 --> 00:36:24,120
java can enter and then it's going to see.

668
00:36:24,120 --> 00:36:25,840
Good morning. Right.

669
00:36:25,840 --> 00:36:28,280
Let's see what is debugging here.

670
00:36:28,320 --> 00:36:40,400
No, they're in mine for loop.

671
00:36:41,000 --> 00:36:43,720
Enter in my j loop right

672
00:36:45,200 --> 00:36:45,960
now. Loop

673
00:36:45,960 --> 00:36:50,440
is one value of gs, one is equals
to one is condition is true.

674
00:36:50,440 --> 00:36:55,440
Java will go inside sees continue won't
it goes back to the beginning of the loop

675
00:36:55,440 --> 00:36:59,520
but which loop inside the loop
in which it was defined?

676
00:36:59,520 --> 00:37:04,080
It was defined continue right now
as the defined inside my for loop

677
00:37:04,080 --> 00:37:09,120
right inside instead minus for it
goes back g gets incremented to

678
00:37:09,480 --> 00:37:13,320
now if condition is false,
it cannot enter now with prints Hello.

679
00:37:13,320 --> 00:37:13,960
Right.

680
00:37:13,960 --> 00:37:17,560
And then goes back g giving increment

681
00:37:17,560 --> 00:37:20,640
that three that is not less than two.

682
00:37:20,840 --> 00:37:24,440
We cannot enter the inner loop
and then print in.

683
00:37:24,440 --> 00:37:25,200
Good morning.

684
00:37:25,200 --> 00:37:29,160
Going back now what will happen is
I will get incremented.

685
00:37:29,640 --> 00:37:31,160
J That's it.

686
00:37:31,160 --> 00:37:33,320
The cycle of G has ended right?

687
00:37:33,640 --> 00:37:36,720
Then it goes back so I is equals to two.

688
00:37:36,960 --> 00:37:42,040
And then a j again
is being given the new life, right?

689
00:37:42,360 --> 00:37:43,600
And the equals to one.

690
00:37:43,600 --> 00:37:45,360
And then the cycle repeats.

691
00:37:45,360 --> 00:37:47,960
Prince Hello. Right. Good morning.

692
00:37:47,960 --> 00:37:49,320
And then goes back.

693
00:37:49,320 --> 00:37:52,720
Now I is equal to two
E will get incremental

694
00:37:52,840 --> 00:37:54,880
till three condition will be false.

695
00:37:54,880 --> 00:37:56,400
So your java is right.

696
00:37:56,400 --> 00:37:58,600
So this way
what do we get? Hello. Good morning.

697
00:37:58,800 --> 00:37:59,760
Hello. Good morning.

698
00:38:02,160 --> 00:38:04,800
In this
case, it shows is is this in writing?

699
00:38:04,800 --> 00:38:06,440
This gives the just shows the same.

700
00:38:06,440 --> 00:38:09,760
But he does a different thing, right?

701
00:38:09,960 --> 00:38:12,160
What does a different different things?

702
00:38:12,160 --> 00:38:16,400
Q So this is just you see, guys,
I'm just trying to put those different,

703
00:38:16,400 --> 00:38:20,680
different variations
in order for you to analyze

704
00:38:20,680 --> 00:38:24,040
and to develop our watch right?

705
00:38:24,280 --> 00:38:24,760
Okay.

706
00:38:25,120 --> 00:38:28,400
So we go to is the continuing break
from a continual break

707
00:38:28,400 --> 00:38:31,920
breaks the loop
or continuous to the night cycle.

708
00:38:31,920 --> 00:38:36,480
But we then which loop inside the loop
whether we're declared

709
00:38:37,200 --> 00:38:41,120
it breaks which loop inside
which it was declared.

710
00:38:41,320 --> 00:38:44,640
Okay.

711
00:38:44,640 --> 00:38:45,840
This needs a lot of practice.

712
00:38:45,840 --> 00:38:47,960
Yeah this is
you guys can do it on your own.

713
00:38:47,960 --> 00:38:51,040
Just, you know, try to throw throwing
different things in there.

714
00:38:51,360 --> 00:38:51,840
Right.

715
00:38:51,840 --> 00:38:54,560
And then by through,
by by drawing different different

716
00:38:55,600 --> 00:38:56,880
variations, you guys will

717
00:38:56,880 --> 00:39:01,440
be able to practice.

718
00:39:01,440 --> 00:39:07,000
All right.

719
00:39:07,000 --> 00:39:17,840
Any more of this, it's realized.

720
00:39:18,040 --> 00:39:18,520
Quickly.

721
00:39:18,520 --> 00:39:21,600
Go over all right,

722
00:39:21,600 --> 00:39:22,400
and work with me.

723
00:39:22,400 --> 00:39:25,920
See what I sent you.

724
00:39:25,920 --> 00:39:28,240
I sent you the homework. Right.

725
00:39:29,640 --> 00:39:30,440
Read numbers.

726
00:39:30,440 --> 00:39:31,480
Rule 1 to 50.

727
00:39:31,480 --> 00:39:34,800
Except those that I visit, visit divisible
by three.

728
00:39:34,800 --> 00:39:36,920
What did you guys use

729
00:39:46,640 --> 00:39:47,000
it? Go.

730
00:39:47,000 --> 00:39:48,200
If I had shared the code. Right.

731
00:39:48,200 --> 00:39:52,680
So you starting from one till 50
and then you throw an inside E, right?

732
00:39:52,680 --> 00:39:54,440
You saying hey any time.

733
00:39:54,440 --> 00:39:56,040
And number three. Right.

734
00:39:56,040 --> 00:39:58,640
If it's there is no reminder then
continue.

735
00:39:58,640 --> 00:40:00,120
Keep skipping. Right.

736
00:40:00,120 --> 00:40:02,120
And then outside of that we will print in.

737
00:40:02,200 --> 00:40:04,480
Okay, that's good

738
00:40:04,960 --> 00:40:06,640
let's say create a program

739
00:40:06,640 --> 00:40:09,720
that will ask user to apply
for credit card.

740
00:40:09,720 --> 00:40:13,640
And as soon as user gets a
as soon as you get it

741
00:40:13,640 --> 00:40:19,680
as a user,
then you should stop asking right.

742
00:40:19,680 --> 00:40:21,600
Let me see. Right. So you see

743
00:40:27,800 --> 00:40:28,480
it's now

744
00:40:28,480 --> 00:40:32,080
apply for a credit card
and you keep contrary captured the answer.

745
00:40:32,480 --> 00:40:35,000
Okay.

746
00:40:35,000 --> 00:40:36,000
So different ways.

747
00:40:36,000 --> 00:40:38,040
I see different ways it can be done right.

748
00:40:38,160 --> 00:40:40,920
It's actually good. Farhad I see. I see.

749
00:40:40,920 --> 00:40:42,840
I see your I see your code.

750
00:40:42,840 --> 00:40:44,400
It looks very good. Right?

751
00:40:44,400 --> 00:40:46,080
So you doing one action?

752
00:40:46,080 --> 00:40:48,240
Hey, do want to apply for credit card?

753
00:40:48,240 --> 00:40:53,040
You capturing the answer right right there
someone did is a while right.

754
00:40:53,040 --> 00:40:54,280
Which is also good. Right.

755
00:40:54,280 --> 00:40:58,280
So you're doing the while
and then you are using a break.

756
00:40:58,280 --> 00:41:01,360
So remember, guys,
when it comes to programing, there's

757
00:41:01,360 --> 00:41:06,840
always, always, always two ways
how it can be done, right?

758
00:41:06,840 --> 00:41:10,080
How can we that so some of you want
we should do look right some

759
00:41:10,080 --> 00:41:13,360
we would one is there will do
look some of you one with the while

760
00:41:13,360 --> 00:41:17,760
but what you did
you use the break you use the break.

761
00:41:18,960 --> 00:41:25,240
Okay right

762
00:41:27,120 --> 00:41:27,920
good.

763
00:41:27,920 --> 00:41:30,760
Now let's see.

764
00:41:30,760 --> 00:41:33,040
Okay. What about number three, guys?

765
00:41:33,040 --> 00:41:37,080
You needed to get that range
from a user, right?

766
00:41:37,080 --> 00:41:40,440
So now instead of using an integer
are equals to one.

767
00:41:40,720 --> 00:41:44,200
Now you want to use it to tell you
the starting point

768
00:41:44,520 --> 00:41:46,600
and user to tell you the end point.

769
00:41:46,600 --> 00:42:45,160
Let me see. So.

770
00:42:45,160 --> 00:42:48,000
So now the only difference
what was happening, guys,

771
00:42:48,720 --> 00:42:51,040
you needed a scanner, right?

772
00:42:51,040 --> 00:42:53,400
You needed a scanner in here.

773
00:42:53,720 --> 00:42:56,600
And the value is
that you are getting from this

774
00:42:56,600 --> 00:42:59,600
scanner right?

775
00:42:59,600 --> 00:43:02,520
The values
that you are getting from the scanner,

776
00:43:02,760 --> 00:43:07,360
those values you were using to initialize
you loop.

777
00:43:07,360 --> 00:43:09,680
Right. What is the starting point?

778
00:43:09,680 --> 00:43:13,520
And a value of the end right now

779
00:43:13,520 --> 00:43:17,560
will mean you were using to keep it
as your condition.

780
00:43:17,560 --> 00:43:19,320
Right? You keep it as your conditional.

781
00:43:19,320 --> 00:43:22,440
So for example,
if you are going to add there, hey,

782
00:43:22,680 --> 00:43:25,560
I want the range from ten till 20

783
00:43:25,640 --> 00:43:28,600
right then integer I equals to ten.

784
00:43:28,960 --> 00:43:31,800
How far are we going to to
any or user could

785
00:43:31,800 --> 00:43:35,360
enter from I don't know, 50 to 5000.

786
00:43:35,360 --> 00:43:38,840
Right. So now we are not defining the

787
00:43:38,920 --> 00:43:42,480
the starting point point
and any point in here.

788
00:43:42,760 --> 00:43:47,000
So what are we doing
we defining it with the help of the user,

789
00:43:47,320 --> 00:43:49,920
the values we capturing from the scanner.

790
00:43:50,120 --> 00:43:51,240
Right. From the scan.

791
00:43:52,200 --> 00:43:54,120
And then based on this range, Right.

792
00:43:54,120 --> 00:43:58,640
If user enter from 10 to 20,
I want to calculate a

793
00:43:58,720 --> 00:44:02,240
some of even or some of our numbers
from only that range.

794
00:44:02,520 --> 00:44:05,160
If user enters from 55,000,

795
00:44:05,400 --> 00:44:08,640
I want to calculate that French right.

796
00:44:08,640 --> 00:44:11,840
Let's say please enter
the starting end point 20

797
00:44:12,360 --> 00:44:15,400
and then let's say 30, right?

798
00:44:16,240 --> 00:44:17,640
48 go.

799
00:44:17,640 --> 00:44:21,960
So even numbers from range
12 to 30 is 150 and this 125.

800
00:44:21,960 --> 00:44:22,640
Right.

801
00:44:22,680 --> 00:44:27,240
So next time I want to enter from one to,
I don't know, 1000.

802
00:44:27,240 --> 00:44:31,240
Right you go, it's automatically changes
and then calculate

803
00:44:31,240 --> 00:44:34,760
the sum of even in the control
is the sum of all right

804
00:44:56,640 --> 00:44:57,080
okay.

805
00:44:57,080 --> 00:44:59,560
I see some of you guys actually did
very good.

806
00:44:59,760 --> 00:45:00,440
I see.

807
00:45:00,440 --> 00:45:04,240
I see some of you guys
through the condition right.

808
00:45:04,240 --> 00:45:06,960
So MRC accord.

809
00:45:07,120 --> 00:45:09,000
So what will happen?

810
00:45:09,000 --> 00:45:10,200
That is what will happen.

811
00:45:10,200 --> 00:45:14,200
Eve, Let's say
I'm going to enter the start point

812
00:45:14,720 --> 00:45:17,160
higher than the end point.

813
00:45:17,680 --> 00:45:18,960
What's going to happen this

814
00:45:29,280 --> 00:45:31,560
F Will it be the error

815
00:45:31,560 --> 00:45:37,760
based, not the syntax?

816
00:45:37,760 --> 00:45:39,920
Why is this one
be error? Write this index.

817
00:45:39,920 --> 00:45:40,920
Why is there one b error?

818
00:45:40,920 --> 00:45:43,800
But what's going to happen?

819
00:45:43,800 --> 00:45:46,280
We are not going to get an output right.

820
00:45:46,280 --> 00:45:47,760
We are not going to get an output.

821
00:45:47,760 --> 00:45:52,080
If you want, just say I equals to 20
and point is ten.

822
00:45:52,080 --> 00:45:52,880
Right?

823
00:45:53,040 --> 00:45:57,840
So now when you going to check
the condition, that condition is not true.

824
00:45:57,840 --> 00:45:59,880
Right? That condition is not true. Right.

825
00:46:00,120 --> 00:46:03,600
And I see some of you guys
you enter the eve, right?

826
00:46:03,600 --> 00:46:06,560
Some of you entered if Hey, only Molly.

827
00:46:06,920 --> 00:46:08,880
I'll do my for loop.

828
00:46:08,880 --> 00:46:10,200
Eve right.

829
00:46:10,200 --> 00:46:13,400
Eve my my start point.

830
00:46:13,400 --> 00:46:16,800
Only in all if my start point is
less than my end point.

831
00:46:16,800 --> 00:46:17,400
Right.

832
00:46:17,640 --> 00:46:20,560
So when you throw that condition,
you can do that, right?

833
00:46:20,880 --> 00:46:23,280
Some of you,
you guys swap right them are you.

834
00:46:23,280 --> 00:46:24,480
You guys can do the swap.

835
00:46:24,480 --> 00:46:25,840
So this, you guys can add

836
00:46:25,840 --> 00:46:30,480
more and more solution do it right
just to add a simple, simple stuff.

837
00:46:30,480 --> 00:46:30,760
Right.

838
00:46:30,760 --> 00:46:33,960
I'm going to say, hey,
when I would like to do this,

839
00:46:34,080 --> 00:46:38,160
when I want to do the calculation,
I want you do the calculation

840
00:46:38,160 --> 00:46:43,320
only when my starting point
will be less than the end.

841
00:46:43,320 --> 00:46:44,400
End point. Right.

842
00:46:44,400 --> 00:46:46,200
Okay. Can I throw that if condition?

843
00:46:46,200 --> 00:46:47,200
Yes, I can.

844
00:46:47,240 --> 00:46:50,160
I want to say,
hey, I'll do this calculation if

845
00:46:50,600 --> 00:46:53,000
my start is less than my end.

846
00:46:53,240 --> 00:46:53,880
Right.

847
00:46:54,080 --> 00:46:55,920
Only this condition is magic.

848
00:46:55,920 --> 00:46:59,200
Then I'm going to open my bracket. Right?

849
00:46:59,200 --> 00:47:03,920
Then I can calculate this
sum and I can finish it in here, right?

850
00:47:04,440 --> 00:47:08,760
I can finish it in here and saying,
Hey, let me format my good.

851
00:47:09,000 --> 00:47:11,840
I can say, Hey, all in.

852
00:47:11,840 --> 00:47:13,920
Only if start less than the end.

853
00:47:14,160 --> 00:47:17,440
I'll do this
loop, I'll find the calculation.

854
00:47:17,680 --> 00:47:22,120
Otherwise I can see otherwise in here,
if you don't want to do anything,

855
00:47:22,600 --> 00:47:25,600
I can enter this message
in here, writes it out.

856
00:47:27,040 --> 00:47:28,360
We need

857
00:47:30,440 --> 00:47:33,320
enter, start, point,

858
00:47:34,760 --> 00:47:35,200
start.

859
00:47:35,200 --> 00:47:37,640
Also the like that red message
start point.

860
00:47:38,960 --> 00:47:42,400
There then and

861
00:47:42,400 --> 00:47:44,440
then something like that.

862
00:47:45,480 --> 00:47:50,440
So now if we want to put into debugging
right, if you want to put in debugging,

863
00:47:50,800 --> 00:47:54,360
wasn't that this start out
entering by mistake ten

864
00:47:54,960 --> 00:47:57,480
and I'm saying five,

865
00:47:57,480 --> 00:47:58,200
right.

866
00:47:58,320 --> 00:47:59,320
So no, I'll check.

867
00:47:59,320 --> 00:48:01,520
Hey is the start is the ten

868
00:48:02,600 --> 00:48:03,440
less than five?

869
00:48:03,440 --> 00:48:05,160
No condition is false.

870
00:48:05,160 --> 00:48:07,160
So now I'm going to skip

871
00:48:08,280 --> 00:48:12,960
my entire loop and my entire calculation
and I'm good inside my else right.

872
00:48:13,720 --> 00:48:17,520
I'm going to send my else and I'm going
to place their lives at their start point.

873
00:48:17,520 --> 00:48:19,880
Less than that then the end point. Right?

874
00:48:20,080 --> 00:48:22,680
And then don't do any loops.

875
00:48:22,680 --> 00:48:26,000
Don't do any loops,
in which case I want to do the loops.

876
00:48:26,000 --> 00:48:29,560
Only know Eve. Eve my

877
00:48:30,880 --> 00:48:32,360
starting point,

878
00:48:32,360 --> 00:48:36,160
which is three,
will be less than the end important.

879
00:48:36,440 --> 00:48:38,520
Only that condition is much.

880
00:48:38,520 --> 00:48:40,400
Then I'm going to do my loop right.

881
00:48:40,400 --> 00:48:41,080
I'm going to do

882
00:48:41,080 --> 00:48:45,080
the calculation of my loops and after
the calculation is finished, right,

883
00:48:45,360 --> 00:48:48,320
only then I'm going to do this
print outs, right?

884
00:48:48,640 --> 00:48:50,840
Otherwise there's no prints. Right?

885
00:48:51,200 --> 00:48:54,840
Go with those.

886
00:48:54,840 --> 00:48:58,000
Those things could have could be added
if some of you guys say

887
00:48:58,000 --> 00:49:02,320
that you want to swap
maybe user by mistakes and three and five

888
00:49:02,320 --> 00:49:06,240
if you guys want to swap,
you can try that variation as well.

889
00:49:06,240 --> 00:49:06,440
Right.

890
00:49:06,440 --> 00:49:10,640
Just different different a little
different more points to be adding.

891
00:49:10,640 --> 00:49:11,280
Right.

892
00:49:12,240 --> 00:49:14,200
All in 4:00.

893
00:49:14,200 --> 00:49:25,160
Let's look at the clock.

894
00:49:25,160 --> 00:49:26,600
So now

895
00:49:28,680 --> 00:49:30,880
it equals less than nine.

896
00:49:30,880 --> 00:49:37,000
If it was more than nine if our an hour
I see different different variations.

897
00:49:37,000 --> 00:49:37,680
Let's see

898
00:49:40,600 --> 00:49:41,840
the clock was crazy.

899
00:49:41,840 --> 00:49:43,160
Let let me look guys.

900
00:49:43,160 --> 00:49:46,280
Let me see. Okay.

901
00:49:46,280 --> 00:49:47,280
I have Matthew one four.

902
00:49:47,280 --> 00:49:49,480
One, two, three, four.

903
00:49:49,720 --> 00:49:53,080
One, two, three, four loops.

904
00:49:53,080 --> 00:49:56,000
I met you on four for loops, uh,

905
00:49:57,120 --> 00:50:00,080
in JS equal less than nine.

906
00:50:01,640 --> 00:50:05,760
And then if I.

907
00:50:05,760 --> 00:50:08,000
I mean,
it doesn't give you the correct output

908
00:50:08,920 --> 00:50:12,120
for the minutes and, and hours.

909
00:50:12,240 --> 00:50:14,680
Okay. We can look at that. Okay.

910
00:50:15,600 --> 00:50:16,600
That's Angelica.

911
00:50:16,600 --> 00:50:19,080
You, are you statements in there.

912
00:50:19,080 --> 00:50:20,400
Okay, that's good.

913
00:50:20,400 --> 00:50:22,560
JS Less than ten. Less than ten.

914
00:50:23,600 --> 00:50:25,840
Okay That's good.

915
00:50:25,840 --> 00:50:31,920
Or do you want for three loops?

916
00:50:31,920 --> 00:50:35,280
I see.

917
00:50:35,640 --> 00:50:38,400
I like a

918
00:50:39,920 --> 00:50:40,560
light

919
00:50:41,320 --> 00:50:44,280
plus E

920
00:50:44,280 --> 00:50:47,520
You need to look.

921
00:50:47,520 --> 00:50:51,200
Okay, Ramani,
you want very similar is Angelique.

922
00:50:51,200 --> 00:50:53,040
All right, let me copy this again.

923
00:50:53,040 --> 00:50:54,240
Copy that.

924
00:50:54,240 --> 00:50:57,040
Alexander,
you went for three nested loops.

925
00:50:57,040 --> 00:50:59,640
Okay.

926
00:50:59,640 --> 00:51:02,920
Simon,
You also one very similar to previous one.

927
00:51:04,520 --> 00:51:05,600
Okay.

928
00:51:05,600 --> 00:51:06,720
More of that for me.

929
00:51:06,720 --> 00:51:07,800
Okay. Right.

930
00:51:07,800 --> 00:51:10,360
So the same thing goes in here.

931
00:51:10,360 --> 00:51:13,320
There could be
then different different variation.

932
00:51:13,360 --> 00:51:15,960
Okay. There could be different variation.

933
00:51:15,960 --> 00:51:20,880
Probably probably the easiest one if I'm
going to look right, if I'm going to look.

934
00:51:22,400 --> 00:51:24,720
So the easiest one was four.

935
00:51:25,240 --> 00:51:28,880
Let me copy this right.

936
00:51:28,880 --> 00:51:29,960
What you guys said. Right.

937
00:51:29,960 --> 00:51:32,120
So who defines the hours?

938
00:51:32,120 --> 00:51:36,480
Hours were defined
by hours were defined by my outlook.

939
00:51:36,480 --> 00:51:37,200
Right.

940
00:51:37,360 --> 00:51:40,760
And then were defined by my inner loop

941
00:51:40,920 --> 00:51:47,360
right in my inner loop.

942
00:51:47,360 --> 00:51:52,760
So now the issue with this was
when I'm trying to print races for

943
00:51:52,760 --> 00:51:56,760
if you guys were trying to print hours,
write hours,

944
00:51:57,240 --> 00:52:01,080
and then concatenate

945
00:52:01,920 --> 00:52:03,480
of clock

946
00:52:03,480 --> 00:52:06,680
and plus minutes, this 1 hours

947
00:52:06,680 --> 00:52:10,080
plus.

948
00:52:10,080 --> 00:52:10,680
Right.

949
00:52:10,960 --> 00:52:13,080
So now what
are we going to look at the output.

950
00:52:13,080 --> 00:52:13,400
Right.

951
00:52:13,400 --> 00:52:15,280
Our output was correct.

952
00:52:15,280 --> 00:52:17,400
Our output was correct.

953
00:52:17,400 --> 00:52:18,600
But that was correct.

954
00:52:18,600 --> 00:52:20,680
One, we were having two digits, right?

955
00:52:20,680 --> 00:52:24,800
2359 looks perfect
where output was not that pretty.

956
00:52:24,800 --> 00:52:25,040
What?

957
00:52:25,040 --> 00:52:27,800
We had a one digit in here when we had it.

958
00:52:27,800 --> 00:52:29,240
One digit in here.

959
00:52:29,240 --> 00:52:29,640
Right.

960
00:52:29,640 --> 00:52:33,360
For the minutes
any time the minute is less than ten.

961
00:52:33,400 --> 00:52:34,320
Right.

962
00:52:34,320 --> 00:52:38,800
So when you time the minute this was that
and look me on this page and here you

963
00:52:44,560 --> 00:52:44,920
so in

964
00:52:44,920 --> 00:52:48,840
here right any time you send heat
any time is the minute right.

965
00:52:48,840 --> 00:52:52,000
If the minute is less than ten. Right.

966
00:52:52,000 --> 00:52:55,520
So we wanted to add it
leading zeros to it.

967
00:52:55,520 --> 00:52:55,800
Right.

968
00:52:55,800 --> 00:52:58,200
We wanted to add the leading zeros to it.

969
00:52:58,920 --> 00:53:00,320
Leading zeros to it. Right.

970
00:53:00,320 --> 00:53:02,680
That's one of the things. Right.
That's one of the things.

971
00:53:03,120 --> 00:53:03,720
Okay.

972
00:53:03,720 --> 00:53:07,080
So now let's see what else is in there.

973
00:53:07,080 --> 00:53:07,880
The same thing.

974
00:53:07,880 --> 00:53:09,760
Okay. The same thing. Hours, right?

975
00:53:09,760 --> 00:53:12,680
If the minutes are less than ten,
then we looked.

976
00:53:12,840 --> 00:53:14,400
I think that's the repetition.

977
00:53:14,400 --> 00:53:16,360
Every wave minutes, less than ten.

978
00:53:16,360 --> 00:53:21,920
We need to add the leading zeros right now
when we look also for the hours, right?

979
00:53:22,240 --> 00:53:24,240
When the hours is less than ten.

980
00:53:24,480 --> 00:53:25,600
So now where you want

981
00:53:25,600 --> 00:53:28,960
to add the leading zeros
when the hours is less than ten, Right?

982
00:53:29,560 --> 00:53:31,040
When the hours is less than ten.

983
00:53:31,040 --> 00:53:33,240
Okay, cool. No problem. Right.

984
00:53:33,240 --> 00:53:35,640
So that's what you guys need
to start thinking, right?

985
00:53:35,640 --> 00:53:38,400
So, hey, what is the condition?

986
00:53:38,400 --> 00:53:40,920
Is minute less than ten.

987
00:53:41,320 --> 00:53:45,160
Then I want to add a leading zeros
to my minute.

988
00:53:45,280 --> 00:53:46,080
Right.

989
00:53:46,120 --> 00:53:51,920
If I was less than ten, then
I want to add the leading zero to my hours

990
00:53:52,200 --> 00:53:55,920
and then just try different,
different variations in there.

991
00:53:55,920 --> 00:53:58,640
Right?
Different variations. Okay, So let's see.

992
00:53:59,680 --> 00:54:00,600
Let's see.

993
00:54:00,720 --> 00:54:02,040
So what I can do, guys?

994
00:54:02,040 --> 00:54:04,080
Right. What I can do.

995
00:54:04,080 --> 00:54:05,840
Let me define one string this.

996
00:54:05,840 --> 00:54:10,240
Can I define one string?

997
00:54:10,240 --> 00:54:13,120
You let me define one string.

998
00:54:13,920 --> 00:54:14,880
We define one string.

999
00:54:14,880 --> 00:54:17,320
I'll define string.

1000
00:54:17,560 --> 00:54:20,680
I'm sprinkling.

1001
00:54:20,680 --> 00:54:24,240
Okay, So now we are saying,
hey, this approach, it works, right?

1002
00:54:24,240 --> 00:54:26,960
But I need to add zeros right now.

1003
00:54:26,960 --> 00:54:30,920
You just look, you just think of different
different variations.

1004
00:54:30,920 --> 00:54:31,440
Right?

1005
00:54:32,120 --> 00:54:33,240
So then what we said.

1006
00:54:33,240 --> 00:54:35,200
So first, let's fix the minutes.

1007
00:54:35,200 --> 00:54:37,320
Let's fix the minutes,
and then we will see you guys.

1008
00:54:37,320 --> 00:54:40,960
Remember, we started one by one right now.

1009
00:54:40,960 --> 00:54:44,080
Let me see the one you

1010
00:54:45,360 --> 00:54:46,680
okay, So I see.

1011
00:54:46,680 --> 00:54:49,600
Let me pick this right now

1012
00:54:50,800 --> 00:54:54,000
inside my nested for before printing.

1013
00:54:54,000 --> 00:54:55,320
I want to have a condition.

1014
00:54:55,320 --> 00:54:59,880
I'm saying, hey,
if the hour will be less than ten, right?

1015
00:55:00,560 --> 00:55:02,560
If the minute will be less than ten.

1016
00:55:02,760 --> 00:55:07,400
So what we want to add we want to add
a leading zeros before, right?

1017
00:55:07,400 --> 00:55:09,200
I want to add the zeros

1018
00:55:09,200 --> 00:55:13,800
to to my hours and I want to add the zeros
for my minutes right.

1019
00:55:13,800 --> 00:55:15,960
So in that condition will be true.

1020
00:55:15,960 --> 00:55:18,400
Right In that condition will be true.

1021
00:55:18,400 --> 00:55:23,800
Okay, let me change it to m.

1022
00:55:23,800 --> 00:55:24,280
Right.

1023
00:55:24,520 --> 00:55:27,560
So I'd say, hey,
if the hours is less than 10 minutes, less

1024
00:55:28,880 --> 00:55:30,000
less than ten,

1025
00:55:30,000 --> 00:55:34,280
then what will be my time
then I'll make my time equals, right?

1026
00:55:34,680 --> 00:55:36,280
So in

1027
00:55:36,480 --> 00:55:37,600
my time will equal.

1028
00:55:37,600 --> 00:55:39,840
I need to add a leading zeros. Right?

1029
00:55:39,840 --> 00:55:42,440
So zero

1030
00:55:42,440 --> 00:55:45,200
plus zero

1031
00:55:46,320 --> 00:55:48,160
plus my hour.

1032
00:55:48,160 --> 00:55:49,080
Right.

1033
00:55:49,160 --> 00:55:50,960
Then my

1034
00:55:51,120 --> 00:55:52,360
clock in here.

1035
00:55:52,360 --> 00:55:55,400
And I need to add the leading zeros
to my minutes.

1036
00:55:55,400 --> 00:55:57,800
Right. Plus zero.

1037
00:55:59,040 --> 00:56:01,080
Oops, sorry. In zero.

1038
00:56:01,360 --> 00:56:03,480
And then plus minutes

1039
00:56:05,920 --> 00:56:06,760
is. That makes sense.

1040
00:56:06,760 --> 00:56:08,640
That's what I did with my string. Right?

1041
00:56:08,640 --> 00:56:13,440
So now if it will come on here,
now I have to configure that time.

1042
00:56:13,720 --> 00:56:16,120
So I will add the hours less than ten.

1043
00:56:16,320 --> 00:56:18,360
I will add zero in here.

1044
00:56:18,360 --> 00:56:22,600
If the minute is less than ten,
I will let the zero in here.

1045
00:56:22,760 --> 00:56:23,160
Right?

1046
00:56:23,160 --> 00:56:24,960
I would like that zero in here.

1047
00:56:24,960 --> 00:56:27,160
So now there could be variations, right?

1048
00:56:27,160 --> 00:56:30,040
Hey, what if my hour is more than ten?

1049
00:56:30,080 --> 00:56:31,880
Can my hour be more than ten years?

1050
00:56:31,880 --> 00:56:33,920
My hour can be more than ten. Right?

1051
00:56:33,960 --> 00:56:38,440
My hour can be so but my minutes
still can be less than ten, right?

1052
00:56:38,440 --> 00:56:42,560
Even if my hour is more than ten,
my minute can be less than ten.

1053
00:56:42,880 --> 00:56:45,440
So if my hour is more than ten

1054
00:56:45,840 --> 00:56:49,760
and my minute is less than ten,
what do where do we need to add zeros?

1055
00:56:49,760 --> 00:56:50,280
Days.

1056
00:56:50,280 --> 00:56:55,200
If my hour is more than ten and my minute
is less than ten, we're doing,

1057
00:56:56,320 --> 00:56:57,160
what do we need to add?

1058
00:56:57,160 --> 00:57:01,120
The leading zeros.

1059
00:57:01,120 --> 00:57:02,040
What a minute. Right.

1060
00:57:02,040 --> 00:57:06,160
We don't need it any more for 2 hours
Now, is there another condition?

1061
00:57:06,160 --> 00:57:08,800
Yes, there's another something else

1062
00:57:08,800 --> 00:57:10,840
else. If. What could be the condition?

1063
00:57:11,040 --> 00:57:14,080
My hour could be more than ten.

1064
00:57:15,080 --> 00:57:18,560
And at the same time,
my minutes can be less than ten.

1065
00:57:18,680 --> 00:57:20,680
Right? Would be that the condition?

1066
00:57:20,680 --> 00:57:22,080
Yes. Could be that the condition.

1067
00:57:22,080 --> 00:57:23,920
If that will be the condition.

1068
00:57:23,920 --> 00:57:25,640
Let's consider my time.

1069
00:57:25,640 --> 00:57:27,320
Let's contribute my time.

1070
00:57:27,320 --> 00:57:30,960
So if I was more than ten,
I don't need meeting zeros anymore.

1071
00:57:30,960 --> 00:57:31,280
Right?

1072
00:57:31,280 --> 00:57:32,040
I don't need zeros.

1073
00:57:32,040 --> 00:57:34,680
My hour stays this way. Right?

1074
00:57:34,680 --> 00:57:36,320
Add where I need the leading zeros.

1075
00:57:36,320 --> 00:57:38,280
I need the leading zeros for my minute.

1076
00:57:38,280 --> 00:57:40,840
Right. So

1077
00:57:43,680 --> 00:57:46,200
if so now

1078
00:57:47,960 --> 00:57:49,080
that's one variation.

1079
00:57:49,080 --> 00:57:51,160
Right. So now guess what? If.

1080
00:57:51,560 --> 00:57:54,200
What if my hour is

1081
00:57:54,200 --> 00:57:57,480
less than ten,
but my minute is more than ten?

1082
00:57:58,000 --> 00:58:00,360
This variation
that now you look at this operation.

1083
00:58:00,640 --> 00:58:03,080
Hey, what is my hour is less than ten,

1084
00:58:03,360 --> 00:58:06,240
but minute, more than 10 hours.

1085
00:58:06,240 --> 00:58:09,120
Less than ten and minute is more than ten

1086
00:58:10,200 --> 00:58:13,440
is our clock should look
should we ask, is our code

1087
00:58:13,440 --> 00:58:15,720
going to look this way
or this way or different way?

1088
00:58:17,520 --> 00:58:18,840
Now, if the hour is

1089
00:58:18,840 --> 00:58:21,960
less than ten,
I need to add the leading zero in here

1090
00:58:21,960 --> 00:58:25,360
and I don't have to do this
the minute, right?

1091
00:58:25,400 --> 00:58:27,560
I don't have to do anything
with the minutes. Right.

1092
00:58:27,880 --> 00:58:29,800
So is there another condition to check?

1093
00:58:29,800 --> 00:58:31,320
Yes, there is another condition to check.

1094
00:58:31,320 --> 00:58:34,240
We can do else if right. Else. Even

1095
00:58:36,480 --> 00:58:37,400
if what?

1096
00:58:37,400 --> 00:58:39,760
Hour is less than ten.

1097
00:58:39,760 --> 00:58:43,480
And at the same time
my minute is more tense and.

1098
00:58:43,480 --> 00:58:44,160
Right.

1099
00:58:44,160 --> 00:58:46,680
If that's the case, what will be my time

1100
00:58:47,480 --> 00:58:50,160
In that case, this will be my time.

1101
00:58:50,160 --> 00:58:53,200
I am adding a leading zero to my hour.

1102
00:58:53,400 --> 00:58:54,040
Right?

1103
00:58:54,120 --> 00:58:56,920
I am adding a leading zero to my hour,

1104
00:58:57,160 --> 00:59:00,240
but I don't need to add the leading zero
to my minute.

1105
00:59:00,480 --> 00:59:01,200
Right.

1106
00:59:01,200 --> 00:59:04,200
So this way, if hours less than ten,

1107
00:59:04,680 --> 00:59:08,680
less than 10 minutes is more
than 10 minutes is more than ten.

1108
00:59:08,920 --> 00:59:13,040
I am adding leading zero to my hour
and nothing to the minute.

1109
00:59:13,200 --> 00:59:13,800
Right?

1110
00:59:14,480 --> 00:59:17,200
And if none of the conditions
are matching this

1111
00:59:17,200 --> 00:59:19,360
and none of the condition,
imagine what do we need?

1112
00:59:19,360 --> 00:59:24,000
This?

1113
00:59:24,000 --> 00:59:31,960
Well, if our ease is not of the condition,
imagine.

1114
00:59:32,160 --> 00:59:34,320
So. Do we need to add any zeros days?

1115
00:59:34,320 --> 00:59:35,640
Do we need to add any zeros

1116
00:59:37,800 --> 00:59:38,360
now? Right.

1117
00:59:38,360 --> 00:59:42,800
So we'll say, hey, if not in the condition
I'm watching, this is will be my time.

1118
00:59:43,160 --> 00:59:47,800
I'll just print our end minute
right now and me.

1119
00:59:48,400 --> 00:59:54,000
But now what are we doing this
my eve just configures my string.

1120
00:59:54,040 --> 00:59:54,760
Right.

1121
00:59:55,000 --> 00:59:57,520
So now once I consider my string, right,

1122
00:59:57,520 --> 01:00:01,200
once I configure my street,
let me add once it's out in here

1123
01:00:01,440 --> 01:00:06,720
and what I'm printing is
what am I printing?

1124
01:00:06,720 --> 01:00:10,600
After I define my FLC block
what I'm going to print,

1125
01:00:12,200 --> 01:00:20,280
Let me apply my time.

1126
01:00:20,280 --> 01:00:23,920
All right, So now let's do this.

1127
01:00:23,920 --> 01:00:25,480
Now let's see

1128
01:00:26,720 --> 01:00:34,040
logging.

1129
01:00:34,040 --> 01:00:37,640
So declare our our zero, right?

1130
01:00:38,280 --> 01:00:41,200
Declare oops already
hour and minute zeros.

1131
01:00:41,200 --> 01:00:43,600
Right. So now what is my condition?

1132
01:00:44,360 --> 01:00:47,040
Always Less than 10 minutes.
Less than ten.

1133
01:00:47,120 --> 01:00:51,560
Okay, I'm declaring my I'm
initializing my variable time.

1134
01:00:51,680 --> 01:00:52,440
Right.

1135
01:00:52,640 --> 01:00:54,000
All I did correct.

1136
01:00:54,000 --> 01:00:55,160
One moment this. I've got it

1137
01:00:56,440 --> 01:00:57,560
right.

1138
01:00:57,560 --> 01:00:59,400
This point

1139
01:01:02,760 --> 01:01:05,640
only setting
the hour is less than ten are in reading

1140
01:01:05,640 --> 01:01:08,800
zero student hour
and leading years to the minute like

1141
01:01:16,200 --> 01:01:17,960
hour 000.

1142
01:01:17,960 --> 01:01:21,000
I'm adding more zeros to my time
right here.

1143
01:01:21,120 --> 01:01:22,440
This block becomes true.

1144
01:01:22,440 --> 01:01:28,560
I'm initializing my variable time and once
I initialize it outside, I'm doing 1300.

1145
01:01:28,920 --> 01:01:31,520
That's what I get right?
Then what happens?

1146
01:01:31,640 --> 01:01:35,160
My minute will get incremented right,
my min and get increment.

1147
01:01:35,160 --> 01:01:37,280
And so this condition is still true.

1148
01:01:37,280 --> 01:01:40,400
So now I'm going to print 0001. Right?

1149
01:01:40,400 --> 01:01:43,560
And it will go all the way
until my minutes.

1150
01:01:43,680 --> 01:01:44,400
Right?

1151
01:01:44,720 --> 01:01:47,560
It will go all the way

1152
01:01:47,560 --> 01:01:51,080
until I reach minute or Valley of Ted.

1153
01:01:51,240 --> 01:01:52,000
Right.

1154
01:01:53,000 --> 01:01:55,160
So this right four

1155
01:01:55,160 --> 01:01:57,840
and then five, six, seven, eight,

1156
01:01:58,880 --> 01:02:00,080
nine.

1157
01:02:00,240 --> 01:02:02,480
So now as soon as my minute

1158
01:02:02,480 --> 01:02:05,960
is going to be ten, now my minute is ten.

1159
01:02:06,320 --> 01:02:10,840
So now hour is still zero,
but minute is ten, right?

1160
01:02:10,840 --> 01:02:13,800
So now my first block is not true.

1161
01:02:14,000 --> 01:02:18,040
Now one would hey, is my hour
more than ten, not hours.

1162
01:02:18,040 --> 01:02:19,200
Not more than ten.

1163
01:02:19,200 --> 01:02:20,920
Hey, is my hour less than ten?

1164
01:02:20,920 --> 01:02:22,800
This hour is less than ten.

1165
01:02:22,800 --> 01:02:24,400
Is the minute more than ten?

1166
01:02:24,400 --> 01:02:26,520
Okay, now, good point.

1167
01:02:26,520 --> 01:02:27,320
Oh, actually, no.

1168
01:02:27,320 --> 01:02:30,720
The condition is right
now is not becoming true.

1169
01:02:30,720 --> 01:02:31,360
Right.

1170
01:02:31,360 --> 01:02:33,840
So now I could go to the else. Right.

1171
01:02:33,840 --> 01:02:36,000
And then this is what we printed.

1172
01:02:36,000 --> 01:02:37,960
So what should we fix this?

1173
01:02:37,960 --> 01:02:40,520
My board should have gone in here.

1174
01:02:40,960 --> 01:02:42,960
My quads should have gone in here.

1175
01:02:42,960 --> 01:02:44,400
Right. But they did not go.

1176
01:02:45,840 --> 01:02:48,240
Was I still want to print zero.

1177
01:02:48,800 --> 01:02:50,840
I still want to print zero. Right.

1178
01:02:50,840 --> 01:02:54,200
I still want to print zero in here.

1179
01:02:54,200 --> 01:02:56,400
Because my minute right.

1180
01:02:56,400 --> 01:02:59,280
My minute can be more,
but because my hour is less.

1181
01:03:00,840 --> 01:03:02,320
Well, it's about equal sign.

1182
01:03:02,320 --> 01:03:03,720
Right? Let's add the equal sign.

1183
01:03:03,720 --> 01:03:07,560
So even right, even my hour
will be more than ten.

1184
01:03:07,560 --> 01:03:10,200
But let me include the ten as well. Right.

1185
01:03:10,400 --> 01:03:13,480
Then they will continue adding
zeros. Right.

1186
01:03:13,480 --> 01:03:18,480
So let me do again.

1187
01:03:18,480 --> 01:03:24,920
So we saw that it works
for everything till ten, right?

1188
01:03:24,920 --> 01:03:27,800
So now when your minute becomes
ten, Right.

1189
01:03:28,160 --> 01:03:30,840
So now this condition
false, this condition false.

1190
01:03:31,040 --> 01:03:33,480
Now, hey, our is less than ten years.

1191
01:03:33,480 --> 01:03:36,280
Our lives in ten minute is ten. Okay?

1192
01:03:36,960 --> 01:03:38,240
Now this condition is true.

1193
01:03:38,240 --> 01:03:40,800
I'm still adding
the leading zeros to my time

1194
01:03:41,080 --> 01:03:43,920
and now I'm printing it right now
again, zero zero ten.

1195
01:03:44,200 --> 01:03:46,360
Right. Okay.

1196
01:03:46,360 --> 01:03:51,760
And then this will work all the way
until my hour is less than ten.

1197
01:03:51,840 --> 01:03:52,080
Right?

1198
01:03:52,080 --> 01:03:55,080
Let me run
it is probably going to take me some time

1199
01:03:57,880 --> 01:04:01,120
it from here

1200
01:04:01,120 --> 01:04:02,600
or still going this way.

1201
01:04:02,600 --> 01:04:07,320
I can see good.

1202
01:04:07,320 --> 01:04:12,480
Okay, so now I'm going to 159.

1203
01:04:12,480 --> 01:04:14,800
So 59 359 450.

1204
01:04:14,800 --> 01:04:17,520
Now let me get to nine days. Okay.

1205
01:04:18,280 --> 01:04:19,400
Oh, it's already one two.

1206
01:04:19,400 --> 01:04:19,880
Let's

1207
01:04:20,760 --> 01:04:23,480
let me enter our right hours. 11

1208
01:04:24,760 --> 01:04:26,640
minute is 0 hours.

1209
01:04:26,640 --> 01:04:28,000
11 minutes is zero.

1210
01:04:28,000 --> 01:04:30,880
Hey, is our less than 10 hours,
not less than ten.

1211
01:04:31,160 --> 01:04:34,160
Hey, is our more than 10 hours
More than ten?

1212
01:04:34,160 --> 01:04:35,400
Because it's 11.

1213
01:04:35,400 --> 01:04:38,160
And now my minute by minute,
there's less than ten, right?

1214
01:04:38,160 --> 01:04:42,680
So now, because my hour is more than ten,
I'm just going to print my hour bottom.

1215
01:04:43,160 --> 01:04:45,760
Adding the leading minutes right now.

1216
01:04:45,800 --> 01:04:47,400
Again, oops.

1217
01:04:47,400 --> 01:04:48,640
Anyways, we got all of that.

1218
01:04:48,640 --> 01:04:50,200
That thing that printed too quickly, guys.

1219
01:04:50,200 --> 01:04:52,200
Yep. 11 zero zero. Right.

1220
01:04:52,200 --> 01:04:54,320
And then let me just run it
all the way in.

1221
01:04:54,320 --> 01:05:04,800
I think that's that's should be it.

1222
01:05:04,800 --> 01:05:06,080
Now let me check

1223
01:05:07,040 --> 01:05:09,240
here is correct

1224
01:05:09,240 --> 01:05:13,000
here is correct.

1225
01:05:13,000 --> 01:05:19,480
Nothing more important it will be
when we have hours and minutes right.

1226
01:05:19,480 --> 01:05:22,720
And okay so here's the issue guys.

1227
01:05:23,040 --> 01:05:24,440
Here are face the issue.

1228
01:05:24,440 --> 01:05:26,480
Look, my core is still not pretty.

1229
01:05:26,480 --> 01:05:29,160
My hour becomes two digits, right?

1230
01:05:29,160 --> 01:05:31,000
My hour becomes the digits. My, my.

1231
01:05:31,000 --> 01:05:33,400
But my minutes for the time
did not get printed.

1232
01:05:33,400 --> 01:05:33,960
What should I.

1233
01:05:33,960 --> 01:05:39,680
Six days
When my hour become ten, I'm not print.

1234
01:05:39,680 --> 01:05:44,400
I'm not adding
leading zeros to the minute.

1235
01:05:44,400 --> 01:05:46,320
So where should I add the equal guys?

1236
01:05:46,320 --> 01:05:56,960
Where should add the equal?

1237
01:05:56,960 --> 01:06:00,360
So for which block? Which blogger's

1238
01:06:00,360 --> 01:06:04,080
e block elseif elseif or else

1239
01:06:07,120 --> 01:06:08,320
on the line 17.

1240
01:06:08,320 --> 01:06:08,600
Right.

1241
01:06:08,600 --> 01:06:13,440
Hey, if the hour will be more than ten,
but not less.

1242
01:06:13,640 --> 01:06:16,520
I forgot to include less or equals.

1243
01:06:16,520 --> 01:06:17,280
That's where you want

1244
01:06:18,560 --> 01:06:21,000
or that's where you want our right ready.

1245
01:06:21,320 --> 01:06:25,920
So if the hour will be ten,
write more or equal than ten.

1246
01:06:26,160 --> 01:06:27,720
But minute is less than ten.

1247
01:06:27,720 --> 01:06:28,600
I still want to.

1248
01:06:28,600 --> 01:06:30,840
I'm leaving zero in here. Right.

1249
01:06:30,840 --> 01:06:34,720
And I think that was the only,
only mistake in here.

1250
01:06:34,720 --> 01:06:36,720
Everything else looks pretty

1251
01:06:38,840 --> 01:06:39,480
way to know.

1252
01:06:39,480 --> 01:06:42,240
Should look pretty. You again?

1253
01:06:43,000 --> 01:06:43,520
I'll meet you.

1254
01:06:43,520 --> 01:06:47,720
Have my ten.

1255
01:06:47,720 --> 01:06:49,320
Yep. They go now I get six. Right.

1256
01:06:49,320 --> 01:06:52,160
Ten 00010208.

1257
01:06:52,560 --> 01:06:55,920
I think.

1258
01:06:55,920 --> 01:07:00,640
All right, so then you guys just
I added more spaces just to for my my of

1259
01:07:00,960 --> 01:07:04,640
if you don't, you don't need to have
all these extra spaces in here.

1260
01:07:04,640 --> 01:07:06,240
Right. You guys are you.

1261
01:07:06,240 --> 01:07:08,320
Some of you just need to see
what's in there.

1262
01:07:08,320 --> 01:07:09,280
It's fine.

1263
01:07:09,280 --> 01:07:13,120
So here inside my few blocks
right inside my

1264
01:07:13,120 --> 01:07:17,520
if statement, I'm trying to configure
the string for my time.

1265
01:07:17,800 --> 01:07:20,040
And outside of what you block. Right.

1266
01:07:20,200 --> 01:07:24,120
Whether it falls inside,
if elseif elseif or else

1267
01:07:24,400 --> 01:07:28,200
I'm going to initialize my variable
and once my variable initialize

1268
01:07:28,560 --> 01:07:34,960
I am printing one time,
I am printing one time it.

1269
01:07:34,960 --> 01:07:39,200
That could be your one solution,
That could be your one solution.

1270
01:07:40,600 --> 01:07:44,080
This quarter, we want to push
it to the GitHub so you guys will see.

1271
01:07:44,080 --> 01:07:44,680
Right.

1272
01:07:44,680 --> 01:07:48,880
And I saw that guys, you guys, some of you
did it the little different way, right?

1273
01:07:48,880 --> 01:07:50,640
A little different way.

1274
01:07:50,640 --> 01:07:52,480
Some of you guys use that.

1275
01:07:52,480 --> 01:07:55,640
We three loops, right?

1276
01:07:55,640 --> 01:07:57,000
Let me see. Mari.

1277
01:07:57,000 --> 01:07:58,360
Let me okay, let me see.

1278
01:07:58,360 --> 01:08:04,200
Four, three, four, four, four.

1279
01:08:04,200 --> 01:08:04,920
Okay, so I'm on.

1280
01:08:04,920 --> 01:08:08,320
You won four for three lose,
but you still throw in this condition.

1281
01:08:08,440 --> 01:08:14,160
So I think, Oh, no,

1282
01:08:14,160 --> 01:08:16,200
you have to lose integer I

1283
01:08:17,640 --> 01:08:20,120
equals to you.

1284
01:08:20,200 --> 01:08:20,640
Okay.

1285
01:08:20,640 --> 01:08:23,120
I just don't think you need
the first initialization.

1286
01:08:23,120 --> 01:08:25,800
But the rest. The thing is this same.

1287
01:08:25,800 --> 01:08:28,400
Let me see. Alexander.
You did three loops.

1288
01:08:28,400 --> 01:08:32,040
Let me see how you guys did.

1289
01:08:32,040 --> 01:08:33,040
We copied this.

1290
01:08:34,200 --> 01:08:36,480
Let's see this out.

1291
01:08:36,880 --> 01:08:39,800
That on my for all

1292
01:08:42,120 --> 01:08:44,360
the way.

1293
01:08:44,360 --> 01:08:45,000
Right.

1294
01:08:45,000 --> 01:08:46,440
I'm just going to try to run it.

1295
01:08:46,440 --> 01:08:48,120
And if it's good, I'll keep it here.

1296
01:08:48,120 --> 01:08:52,400
If it's not, let's see if
it has any issues and you guys can fix it.

1297
01:08:52,880 --> 01:08:54,880
Right. Okay.

1298
01:08:54,880 --> 01:08:56,720
So I see some of you, you guys.

1299
01:08:56,720 --> 01:08:59,840
Well, or this is for loops.

1300
01:08:59,840 --> 01:09:01,840
Oh, okay. This is for loops. Okay.

1301
01:09:01,840 --> 01:09:05,000
So here you can control in

1302
01:09:05,000 --> 01:09:06,600
hours.

1303
01:09:06,600 --> 01:09:07,200
Two loops.

1304
01:09:07,200 --> 01:09:09,000
You control in hours with two loops.

1305
01:09:09,000 --> 01:09:11,040
You control minutes with more.

1306
01:09:11,040 --> 01:09:12,960
More inside loops. Right.

1307
01:09:12,960 --> 01:09:21,120
Let me see.

1308
01:09:21,120 --> 01:09:25,240
So if you check that, if everything looks
good, then you could have gone this way.

1309
01:09:25,240 --> 01:09:27,400
Well, okay,

1310
01:09:27,440 --> 01:09:32,560
so I think that's what I.

1311
01:09:32,560 --> 01:09:36,040
So here what are we seen in other student

1312
01:09:36,440 --> 01:09:39,880
he went right
using four different loops Right.

1313
01:09:40,080 --> 01:09:45,320
But in this case two loops
are controlling in our right

1314
01:09:45,760 --> 01:09:49,920
and two loops are controlling right
to control

1315
01:09:49,920 --> 01:09:54,000
in the middle.

1316
01:09:54,000 --> 01:09:56,280
Well, quiet, quiet is more clear.

1317
01:09:56,280 --> 01:09:59,520
Um, my, my guys, when I said yesterday,

1318
01:10:00,520 --> 01:10:02,200
when it comes to nested right

1319
01:10:02,200 --> 01:10:06,400
we are not going to try to nest
more than two loops.

1320
01:10:06,400 --> 01:10:06,720
Right.

1321
01:10:06,720 --> 01:10:09,440
But in this case I would say
the both code looks good.

1322
01:10:09,440 --> 01:10:12,480
If you guys asked me,
look what code looks good here.

1323
01:10:12,520 --> 01:10:17,960
You just throw in more if else blocks here
you just nested for loops.

1324
01:10:18,120 --> 01:10:21,360
Okay. Here you business and for loops.

1325
01:10:21,360 --> 01:10:23,840
Oh, let's see what code looks good, but

1326
01:10:27,320 --> 01:10:29,640
here you write this code
a little bit clean way.

1327
01:10:29,640 --> 01:10:32,000
Yes, we can write it
even a little bit cleaner.

1328
01:10:32,000 --> 01:10:34,800
We you want something, but

1329
01:10:34,800 --> 01:10:38,760
both of this code right now
giving you exact except the same output.

1330
01:10:38,880 --> 01:10:39,320
Okay.

1331
01:10:39,320 --> 01:10:40,400
What will make you cry?

1332
01:10:40,400 --> 01:10:42,760
Hey, I hope you guys did not cry too much.

1333
01:10:42,760 --> 01:10:44,920
Right? That too much.

1334
01:10:44,920 --> 01:10:47,520
Okay, I do.

1335
01:10:47,800 --> 01:10:49,200
I like this code as well too.

1336
01:10:49,200 --> 01:10:49,920
It's okay.

1337
01:10:49,920 --> 01:10:53,360
So, buddy,
you guys see different, different mindset.

1338
01:10:53,360 --> 01:10:56,080
You guys are thinking differently, right?

1339
01:10:56,080 --> 01:10:58,920
So thinking differently.

1340
01:10:58,920 --> 01:11:01,280
Well, that's what I want.

1341
01:11:01,560 --> 01:11:03,720
That's what, a home. Right. Okay.

1342
01:11:03,720 --> 01:11:05,600
Any questions for the nested loops?

1343
01:11:05,600 --> 01:11:20,600
This Any questions for the nested loops?

1344
01:11:20,600 --> 01:11:23,880
So stick on code 415 zero zero.

1345
01:11:23,880 --> 01:11:24,560
Let me see

1346
01:11:29,920 --> 01:11:34,480
what.

1347
01:11:34,480 --> 01:11:36,720
Oh, actually, sorry guys,
I even did not check.

1348
01:11:36,720 --> 01:11:38,880
This does not work completely. Does

1349
01:11:40,560 --> 01:11:42,560
this look? Does not work completely.

1350
01:11:42,560 --> 01:11:44,400
Let me see guys.

1351
01:11:44,680 --> 01:11:48,280
It has one twos, threes, fours.

1352
01:11:49,200 --> 01:11:50,240
Oh, okay, guys.

1353
01:11:50,240 --> 01:11:51,440
No, this doesn't work.

1354
01:11:51,440 --> 01:11:54,480
It does not work. Five

1355
01:11:54,480 --> 01:11:56,080
If that's going to work after five

1356
01:11:56,080 --> 01:12:01,080
this after five from 5 to 10
is missing from 5 to 10.

1357
01:12:01,080 --> 01:12:02,520
Admission mission hours.

1358
01:12:02,520 --> 01:12:04,560
I would not look at the minutes goes

1359
01:12:05,640 --> 01:12:08,240
minutes, minutes, minutes, minutes
That thing with good

1360
01:12:08,640 --> 01:12:11,400
Maria it does not have a clock again

1361
01:12:11,400 --> 01:12:15,640
after that from 15 to from 15 to 20

1362
01:12:15,640 --> 01:12:17,920
it doesn't going to have time

1363
01:12:19,720 --> 01:12:21,800
for this is the minute separate.

1364
01:12:23,360 --> 01:12:25,600
One, two, three, four,
five, six, seven, eight, nine.

1365
01:12:25,600 --> 01:12:25,880
Okay.

1366
01:12:25,880 --> 01:12:32,120
It it mission the minute
ten, 11, 12, 13, 15, 19.

1367
01:12:32,120 --> 01:12:34,040
It missing the minute 20. Okay.

1368
01:12:34,040 --> 01:12:36,000
So this code, this code needs some work.

1369
01:12:37,440 --> 01:12:38,120
Okay.

1370
01:12:38,120 --> 01:12:39,280
This code needs somewhere.

1371
01:12:39,280 --> 01:12:41,640
This I did not look into all the details.

1372
01:12:42,000 --> 01:12:42,600
Okay.

1373
01:12:42,600 --> 01:12:45,560
Mission all it admission minute

1374
01:12:46,280 --> 01:12:49,680
1020, 30, 40.

1375
01:12:49,920 --> 01:12:53,960
Right it admission hours from after from

1376
01:12:54,080 --> 01:12:58,520
from five
till ten and admission hours from 1520.

1377
01:12:58,920 --> 01:13:02,280
Okay so there is some
if conditions you guys

1378
01:13:02,280 --> 01:13:05,640
probably need to drop when it goes 2459.

1379
01:13:05,640 --> 01:13:09,760
It shouldn't be going 2459 right
it should stop at 2359

1380
01:13:09,760 --> 01:13:11,080
and it's done

1381
01:13:12,960 --> 01:13:14,240
and it's then

1382
01:13:20,920 --> 01:13:21,680
okay, the mirror.

1383
01:13:21,680 --> 01:13:25,680
Let me see the now let me see.

1384
01:13:25,680 --> 01:13:30,800
We only

1385
01:13:33,000 --> 01:13:36,320
let me try to change

1386
01:14:04,480 --> 01:14:07,640
the first for

1387
01:14:10,320 --> 01:14:23,480
first.

1388
01:14:23,480 --> 01:14:26,240
Okay, so let me see guys.

1389
01:14:26,760 --> 01:14:28,600
So I changed the things in here.

1390
01:14:28,600 --> 01:14:34,080
Steps 2359 Well, I probably would suggest
you guys go and debug and see.

1391
01:14:34,080 --> 01:14:35,520
Okay. Now assistance.

1392
01:14:35,520 --> 01:14:38,400
Okay, that's good. As is 20. That's good.

1393
01:14:39,120 --> 01:14:42,720
22, 21, 20.

1394
01:14:42,720 --> 01:14:44,440
Okay. No, it's still guys.

1395
01:14:44,440 --> 01:14:48,600
Now it has the issue,
it stops at 1359, then it goes at 20.

1396
01:14:48,600 --> 01:14:49,280
Okay.

1397
01:14:49,280 --> 01:14:52,200
So in here you guys
you will still have to throw

1398
01:14:52,200 --> 01:14:54,880
some statements in there
if you want to go this way.

1399
01:14:55,200 --> 01:14:55,720
Okay.

1400
01:14:55,800 --> 01:14:59,280
Because I've seen students doing it
this way, but there's some conditions

1401
01:14:59,280 --> 01:15:00,840
you guys have to add.

1402
01:15:00,840 --> 01:15:05,200
So in probably the same thing
here it goes all the way to 359,

1403
01:15:05,200 --> 01:15:10,320
but then skips hours from four till ten.

1404
01:15:10,320 --> 01:15:10,760
Okay.

1405
01:15:11,160 --> 01:15:13,800
So if you guys want to look into this

1406
01:15:13,960 --> 01:15:17,840
so you guys can have it another way, but

1407
01:15:19,000 --> 01:15:22,680
please make work.

1408
01:15:22,680 --> 01:15:25,040
There's, there's
it could work with this week.

1409
01:15:25,040 --> 01:15:27,600
There's always this way
you just need to see in

1410
01:15:27,600 --> 01:15:31,240
which case you want to add
that is if if statements. Okay

1411
01:15:34,720 --> 01:15:36,640
so I'll keep this quote.

1412
01:15:36,640 --> 01:15:38,760
I'll keep this code, the one that works.

1413
01:15:38,760 --> 01:15:40,560
You guys can fix this code.

1414
01:15:40,560 --> 01:15:43,480
Hey, this can fix this one

1415
01:15:43,800 --> 01:16:08,800
or it was

1416
01:16:10,600 --> 01:16:32,880
just change second and fourth one.

1417
01:16:32,880 --> 01:16:45,360
So with this goodness.

1418
01:16:45,360 --> 01:16:53,200
So okay,
so this I'll give you guys as a homework.

1419
01:16:53,400 --> 01:16:55,800
I'll give you guys this is
this is a homework

1420
01:16:55,800 --> 01:17:00,800
you guys will just need to see
because this loop the first digit right

1421
01:17:01,120 --> 01:17:04,920
Our first digits can go only from zero
all the way till two.

1422
01:17:04,920 --> 01:17:05,200
Right?

1423
01:17:05,200 --> 01:17:10,560
Because when the hour hits 20
and whatever, this second loop

1424
01:17:11,280 --> 01:17:14,000
controls the second digit of the hour.

1425
01:17:14,000 --> 01:17:14,600
Right.

1426
01:17:14,600 --> 01:17:19,560
The second digit of the hour also goes
all the way, Also goes

1427
01:17:19,560 --> 01:17:23,320
all the way
till three and starts in starts from zero.

1428
01:17:23,320 --> 01:17:26,080
Right. So you guys just
will have to configure this thing.

1429
01:17:26,080 --> 01:17:29,920
This C controls
the first of the minute, right?

1430
01:17:29,920 --> 01:17:33,600
This second controls
the second digit of the minute.

1431
01:17:33,760 --> 01:17:34,000
Right.

1432
01:17:35,440 --> 01:17:37,760
So I guess I'll let you fix it, Right.

1433
01:17:37,800 --> 01:17:38,640
I'll let you fix it.

1434
01:17:38,640 --> 01:17:41,520
And then maybe in your review class,

1435
01:17:42,400 --> 01:17:45,000
maybe in your New Year review class,
you guys can

1436
01:17:45,720 --> 01:17:49,040
look at this code with

1437
01:17:49,120 --> 01:17:50,840
Sarsgaard But can it be fixed?

1438
01:17:50,840 --> 01:17:51,960
Yes, it can be fixed.

1439
01:17:51,960 --> 01:17:55,880
It can be fixed, but it can be easily
fixed for when you guys are debugging.

1440
01:17:56,000 --> 01:17:58,080
Okay.

1441
01:17:58,080 --> 01:17:58,760
Okay.

1442
01:17:59,640 --> 01:18:00,400
All right.

1443
01:18:00,480 --> 01:18:02,320
So it's 1125.

1444
01:18:02,320 --> 01:18:06,280
Let's guys look at a couple more example
of the nested loops.

1445
01:18:06,280 --> 01:18:06,640
Right?

1446
01:18:06,640 --> 01:18:10,920
Well, what things we can do and then
you guys, we are going to move into them

1447
01:18:12,160 --> 01:18:16,680
and then we're going to move
into the Erased right?

1448
01:18:16,680 --> 01:18:18,360
So yesterday, right.

1449
01:18:18,360 --> 01:18:22,000
Yesterday, guys, I asked you
if some of you are interested.

1450
01:18:22,000 --> 01:18:22,280
Right.

1451
01:18:22,280 --> 01:18:26,280
So because when it comes to the the flip
you guys can do

1452
01:18:26,400 --> 01:18:29,000
very, very interesting things, right.

1453
01:18:29,000 --> 01:18:32,160
When it comes to the nested look,
What do you guys can do?

1454
01:18:32,480 --> 01:18:35,360
You guys can print different
different quadrants.

1455
01:18:35,400 --> 01:18:36,600
Right.

1456
01:18:36,600 --> 01:18:38,840
And when it comes to different
parties, right.

1457
01:18:38,840 --> 01:18:43,880
There can be crazy things you guys can can
friends, pyramids, reverse person

1458
01:18:43,880 --> 01:18:48,920
pyramids and different different
of triangles, different type of squares.

1459
01:18:48,920 --> 01:18:49,400
Right.

1460
01:18:49,440 --> 01:18:52,080
I'm just going to show you
very simple one,

1461
01:18:52,440 --> 01:18:55,200
very simple one in how to basically

1462
01:18:56,240 --> 01:18:57,640
think of those when you guys

1463
01:18:57,640 --> 01:19:01,440
trying to when you guys going to try
to print those press.

1464
01:19:01,720 --> 01:19:04,920
And as I mentioned, guys,
if you any of you interested

1465
01:19:04,920 --> 01:19:08,160
you guys can explore this options
a little bit more.

1466
01:19:08,400 --> 01:19:12,440
And the thing has got also in the review
class is going to look a little bit more.

1467
01:19:12,440 --> 01:19:15,480
Okay so guys, just hold with a little bit
with the break

1468
01:19:15,520 --> 01:19:18,360
and let me show you some things. Okay.

1469
01:19:18,360 --> 01:19:22,080
So ranging

1470
01:19:23,880 --> 01:19:34,120
in forms, for example.

1471
01:19:34,560 --> 01:19:35,080
Right?

1472
01:19:35,360 --> 01:19:38,040
For example, you know what?

1473
01:19:38,040 --> 01:19:41,400
If I want to print, right,

1474
01:19:41,400 --> 01:19:43,600
What if I want
you bring this square, right?

1475
01:19:44,040 --> 01:19:45,720
I want to print a square. Right.

1476
01:19:45,720 --> 01:19:48,440
That can see, let's say,
of course, stars, right?

1477
01:19:48,840 --> 01:19:49,920
Four stars, right.

1478
01:19:49,920 --> 01:19:53,400
I want to print this square
that consists of four stars.

1479
01:19:53,400 --> 01:19:54,040
Right?

1480
01:19:54,040 --> 01:19:57,840
So then what I can do right?

1481
01:19:57,840 --> 01:20:01,840
What I can do,
I can start printing stars, right?

1482
01:20:01,840 --> 01:20:05,400
For example,
I can put my loop right, I think before

1483
01:20:05,840 --> 01:20:11,720
and I think you do, I will do one right
and then I less or equal.

1484
01:20:11,720 --> 01:20:13,080
Let me make it equal.

1485
01:20:13,080 --> 01:20:14,760
Three, two, four times. Right.

1486
01:20:14,760 --> 01:20:16,600
One, two, three, four.

1487
01:20:16,600 --> 01:20:18,920
And then I plus, let's break

1488
01:20:23,800 --> 01:20:24,760
and then I can do

1489
01:20:24,760 --> 01:20:27,840
this or I'm going to print this stock.

1490
01:20:27,920 --> 01:20:28,440
Right?

1491
01:20:28,800 --> 01:20:31,200
But I'm going to not separate.

1492
01:20:31,200 --> 01:20:33,480
I'm going to print everything
in one line, right?

1493
01:20:33,640 --> 01:20:35,480
When you print everything in one way.

1494
01:20:35,480 --> 01:20:40,000
So now what I got, if I want to
add a little space, maybe a little space.

1495
01:20:40,000 --> 01:20:40,560
Right.

1496
01:20:41,880 --> 01:20:43,960
So now what I got I got four stars, right?

1497
01:20:44,160 --> 01:20:47,040
If I want to have five stars,
we can have five steps, right, to make it.

1498
01:20:47,400 --> 01:20:51,000
So now, if I want to make a square
like that, then what?

1499
01:20:51,000 --> 01:20:51,840
I would go.

1500
01:20:51,840 --> 01:20:55,320
I would have to go and put this loose.

1501
01:20:55,520 --> 01:20:55,800
Right?

1502
01:20:55,800 --> 01:20:59,520
I will have to go in for this.

1503
01:20:59,520 --> 01:21:00,200
Right.

1504
01:21:00,400 --> 01:21:02,680
You even without the loops, right? Oh,
okay.

1505
01:21:03,360 --> 01:21:04,520
No, not like that.

1506
01:21:04,520 --> 01:21:06,960
Let me create the new line before. Right.

1507
01:21:07,680 --> 01:21:11,000
So because you just print
after I finish my loop,

1508
01:21:11,000 --> 01:21:15,000
let me create the new line
after finish my loop.

1509
01:21:15,760 --> 01:21:19,280
Let me create a new line
after finish model.

1510
01:21:19,360 --> 01:21:21,200
Let me create a new line right

1511
01:21:22,760 --> 01:21:23,080
here.

1512
01:21:23,080 --> 01:21:24,520
What I got I got a square.

1513
01:21:24,520 --> 01:21:27,000
I did again. Esquire. Yes, I've got it.

1514
01:21:27,000 --> 01:21:29,960
But how many globes did it
take me to get this quarter?

1515
01:21:29,960 --> 01:21:30,520
It took me.

1516
01:21:30,520 --> 01:21:34,440
It took me
it took me some time to get this square.

1517
01:21:34,480 --> 01:21:35,120
Right.

1518
01:21:35,640 --> 01:21:38,640
So now easiest way.

1519
01:21:38,760 --> 01:21:40,440
Okay. Easiest way.

1520
01:21:40,440 --> 01:21:45,240
Guys to print this type of quarters
because sometimes it can be square.

1521
01:21:45,600 --> 01:21:48,800
Sometimes what we can get
there is besides a square,

1522
01:21:49,040 --> 01:21:51,800
we can get a triangles like that. Okay?

1523
01:21:51,800 --> 01:21:53,880
We can get triangles like that.

1524
01:21:53,880 --> 01:21:57,080
Or sometimes we can get a triangles
like that.

1525
01:21:57,960 --> 01:21:59,160
Pyramids, right?

1526
01:21:59,160 --> 01:22:01,640
We can get something. Pyramids like that.

1527
01:22:01,640 --> 01:22:04,320
So there is a different things
that we can print, right?

1528
01:22:04,320 --> 01:22:06,000
There's different things
that we can print.

1529
01:22:06,000 --> 01:22:11,840
Sometimes we can even print something like
this if we really really want

1530
01:22:13,520 --> 01:22:15,800
to. We really want we can print
something like this, right?

1531
01:22:16,120 --> 01:22:18,000
Different shapes,
different shapes in there.

1532
01:22:18,000 --> 01:22:19,320
We can print, right?

1533
01:22:19,320 --> 01:22:24,360
So now to print those shapes,
it's actually will be very easy.

1534
01:22:24,360 --> 01:22:27,800
Instead of using multiple independent
loops.

1535
01:22:27,800 --> 01:22:28,040
Right.

1536
01:22:28,040 --> 01:22:30,960
You have one loop in here, another
loop in here, another loop in here.

1537
01:22:31,320 --> 01:22:35,040
So now instead of having multiple,
multiple loops,

1538
01:22:35,360 --> 01:22:40,080
what we can do this weekend,
this type of part is we can print

1539
01:22:40,360 --> 01:22:45,400
using our nested loops,
using our initiative loops.

1540
01:22:45,840 --> 01:22:49,280
So now the way the logic of this
will be this, the way

1541
01:22:49,280 --> 01:23:16,920
the logic of this will be, okay,

1542
01:23:18,280 --> 01:23:21,480
maybe I should add five stars
to make it better look, but that's fine.

1543
01:23:22,640 --> 01:23:24,360
Actually, let me add one more.

1544
01:23:24,360 --> 01:23:25,720
So let me add one more star.

1545
01:23:25,720 --> 01:23:29,440
Yeah, one more story, one star, one.

1546
01:23:30,400 --> 01:23:33,000
Just to have a different look

1547
01:23:33,000 --> 01:23:34,000
has to have a distance.

1548
01:23:34,000 --> 01:23:38,040
Now, the way this type words can be
printed

1549
01:23:38,040 --> 01:23:42,200
is they can be printed
using our nested look.

1550
01:23:42,360 --> 01:23:47,360
Okay, so now we know that in this loop
we'll always have the outer loop

1551
01:23:47,760 --> 01:23:50,400
and we always have a inner loop, right?

1552
01:23:51,000 --> 01:23:54,200
So now when we look into this plot,
what do we see?

1553
01:23:55,080 --> 01:23:58,240
What we see? It consists of rows, right?

1554
01:23:58,240 --> 01:24:03,440
Remember, those rows always goes
horizontally, rows goes horizontally.

1555
01:24:03,760 --> 01:24:06,960
And then what we have we have a columns,

1556
01:24:07,400 --> 01:24:10,080
we have a columns, we have a constant.

1557
01:24:10,560 --> 01:24:13,000
Okay, so rows. This is my rows.

1558
01:24:13,440 --> 01:24:14,960
This is my columns.

1559
01:24:14,960 --> 01:24:17,200
Right This might come soon.

1560
01:24:17,200 --> 01:24:19,840
Okay, so now when we look in here, this.

1561
01:24:20,040 --> 01:24:22,320
How many rows do you guys see?

1562
01:24:22,320 --> 01:24:26,960
How many rows do we have?

1563
01:24:26,960 --> 01:24:27,640
How many rows

1564
01:24:28,640 --> 01:24:32,640
for one, two, three, four.

1565
01:24:33,120 --> 01:24:35,920
I have four rows.

1566
01:24:35,920 --> 01:24:36,520
Right.

1567
01:24:36,520 --> 01:24:37,360
How many columns?

1568
01:24:37,360 --> 01:24:41,280
I have?

1569
01:24:41,280 --> 01:24:43,000
I have five columns. Right.

1570
01:24:43,000 --> 01:24:46,560
One, two, three, four, five.

1571
01:24:46,600 --> 01:24:49,960
Right. I have five column. Okay.

1572
01:24:49,960 --> 01:24:53,000
So now how can I print a square

1573
01:24:53,240 --> 01:24:57,680
that will consist of four rows
and the five columns?

1574
01:24:57,720 --> 01:24:59,080
Okay, so remember this.

1575
01:24:59,080 --> 01:25:01,840
So what first comes first?

1576
01:25:01,840 --> 01:25:03,840
Always comes with a row, right?

1577
01:25:03,840 --> 01:25:05,160
First always comes in a row.

1578
01:25:05,160 --> 01:25:07,680
Think of it
like your in your excel. Right?

1579
01:25:07,920 --> 01:25:11,240
So first we have the row
then inside the row

1580
01:25:11,240 --> 01:25:15,000
we can have one, two, three, four,
five multiple columns.

1581
01:25:15,040 --> 01:25:15,640
Okay.

1582
01:25:15,800 --> 01:25:19,440
So now these photos can be easily printed

1583
01:25:19,560 --> 01:25:23,280
using our nested loops.

1584
01:25:23,400 --> 01:25:23,920
Okay.

1585
01:25:24,040 --> 01:25:26,720
So now our rows

1586
01:25:26,840 --> 01:25:30,320
will be controlled by our row loop.

1587
01:25:31,000 --> 01:25:33,600
Your columns will be controlled

1588
01:25:33,600 --> 01:25:37,440
by our inner loop. Why?

1589
01:25:37,440 --> 01:25:40,720
Because first, once we create their role.

1590
01:25:40,800 --> 01:25:44,440
Once we create the row,
then what do we have to do?

1591
01:25:44,440 --> 01:25:46,200
We have to own the same rule.

1592
01:25:46,200 --> 01:25:49,160
While row is one what we will be printing.

1593
01:25:49,160 --> 01:25:50,800
We will be printing five columns.

1594
01:25:51,840 --> 01:25:52,600
After we print

1595
01:25:52,600 --> 01:25:56,400
five columns, we're
moving to the next row, second row,

1596
01:25:56,760 --> 01:25:59,640
and then printing of our columns.

1597
01:25:59,640 --> 01:26:01,720
One, two, three, four, five.

1598
01:26:01,720 --> 01:26:04,200
Then moving to the third row

1599
01:26:04,200 --> 01:26:08,400
print in one, two, three, four, five,
and move into the fourth row printing.

1600
01:26:08,520 --> 01:26:10,080
One, two, three, five.

1601
01:26:10,080 --> 01:26:13,320
Okay, so while the column is still one,

1602
01:26:13,640 --> 01:26:16,440
I have a column while the row is one
and printing

1603
01:26:16,440 --> 01:26:20,480
column one column to column equal
for all in only one,

1604
01:26:20,480 --> 01:26:23,800
I completed my columns,
then I'm moving to the next row.

1605
01:26:23,920 --> 01:26:24,480
Right.

1606
01:26:24,480 --> 01:26:27,280
So when my cycle or my inner loop

1607
01:26:28,080 --> 01:26:31,880
ends, I'm going back incrementing my role.

1608
01:26:31,920 --> 01:26:33,640
My row becomes two.

1609
01:26:33,640 --> 01:26:37,080
And then while I'm on the second row,
I'm going to print one, two,

1610
01:26:37,080 --> 01:26:38,600
three, four, five columns.

1611
01:26:38,600 --> 01:26:42,080
Once the in the loop completes, I'm
going to increment,

1612
01:26:42,080 --> 01:26:45,560
my row becomes three,
and then my inner cycle repeats.

1613
01:26:45,560 --> 01:26:47,080
One, two, three, four, five.

1614
01:26:47,080 --> 01:26:50,400
Okay, so now let's see how we
can put opening that quote or

1615
01:26:51,800 --> 01:26:53,080
how we linked anymore.

1616
01:26:53,080 --> 01:26:57,680
So now let me remove this because we said
that this did not look good right?

1617
01:26:57,680 --> 01:26:58,960
So now we see.

1618
01:26:58,960 --> 01:27:03,920
So who controls my rows, my outer
look how many rows any to create.

1619
01:27:04,240 --> 01:27:08,400
I need to create four rows
right from row number one.

1620
01:27:08,400 --> 01:27:09,440
Then I need to create one.

1621
01:27:09,440 --> 01:27:11,480
Number two,
the new one would be the one number four.

1622
01:27:11,680 --> 01:27:13,680
So now we need to create five rows back.

1623
01:27:13,680 --> 01:27:14,480
Okay, so what?

1624
01:27:14,480 --> 01:27:16,640
How many specimens test for

1625
01:27:18,360 --> 01:27:18,720
here?

1626
01:27:18,720 --> 01:27:20,200
Let's make it so this way.

1627
01:27:20,200 --> 01:27:23,840
Know I'm going to start from the first row
how far I'm going

1628
01:27:23,840 --> 01:27:27,640
as long as I have four rows
and then are less flat.

1629
01:27:27,960 --> 01:27:28,560
Right

1630
01:27:29,920 --> 01:27:32,600
then what I have right then what I have.

1631
01:27:32,920 --> 01:27:35,320
I have five columns. Okay, sure.

1632
01:27:35,640 --> 01:27:37,360
So now I'm going to say four more

1633
01:27:39,160 --> 01:27:41,280
column equals to one,

1634
01:27:41,280 --> 01:27:43,640
and then I'm going to have one,

1635
01:27:43,640 --> 01:27:47,640
two, three or five columns.

1636
01:27:47,640 --> 01:27:53,280
That's columns
one be less or equal than five, Right.

1637
01:27:53,400 --> 01:27:56,520
And then what's right and then

1638
01:27:56,520 --> 01:27:59,680
now the only thing,
what are we are doing right.

1639
01:27:59,760 --> 01:28:03,200
The only thing, what we are doing,
we are printing our stars.

1640
01:28:03,720 --> 01:28:04,880
This is what are we doing?

1641
01:28:04,880 --> 01:28:07,320
We printing the columns. Right?

1642
01:28:07,520 --> 01:28:09,000
One, two, three, four, five.

1643
01:28:09,000 --> 01:28:10,640
One, two, three, four, five.

1644
01:28:10,640 --> 01:28:14,760
So now, do you guys see if you print
in the columns all line by line or.

1645
01:28:14,760 --> 01:28:31,360
We printed them all in one line.

1646
01:28:31,360 --> 01:28:32,520
We print in the right.

1647
01:28:32,520 --> 01:28:35,480
Once you have a row, once
you on the first row, then

1648
01:28:35,480 --> 01:28:38,680
you have to print all five,
all five columns in line.

1649
01:28:38,680 --> 01:28:39,200
Right?

1650
01:28:39,240 --> 01:28:43,040
So now how do we print
everything in one line?

1651
01:28:43,040 --> 01:28:45,960
We just going to do
print is going to print

1652
01:28:46,240 --> 01:28:48,640
and then want to print
and then print in my first.

1653
01:28:48,720 --> 01:28:50,640
And let me add a little space between.

1654
01:28:50,640 --> 01:28:52,760
So this is the space, right?

1655
01:28:53,440 --> 01:28:55,840
And now this is what's going to happen.

1656
01:28:56,080 --> 01:29:00,080
Remember,
this are equals 211 less than four years.

1657
01:29:00,080 --> 01:29:01,480
Condition is true.

1658
01:29:01,480 --> 01:29:07,000
Now initialize in C and then I'm going
to print how many times my C is true this.

1659
01:29:07,000 --> 01:29:09,280
How many times my CS two

1660
01:29:12,640 --> 01:29:12,960
is right.

1661
01:29:12,960 --> 01:29:14,120
So then what is going to do?

1662
01:29:14,120 --> 01:29:19,960
Print one, two, three, four, five.

1663
01:29:20,560 --> 01:29:23,760
Then My inner loop will exit right
my inner loop.

1664
01:29:23,760 --> 01:29:26,640
Once my it prints five times,
it will exit.

1665
01:29:27,160 --> 01:29:30,760
So now when it exists, right then it goes

1666
01:29:31,360 --> 01:29:36,000
and then R gets incremented
and then C starts again.

1667
01:29:36,320 --> 01:29:41,000
Now I want to make sure that
when I go to the next row, right

1668
01:29:42,040 --> 01:29:44,000
before, after

1669
01:29:44,000 --> 01:29:47,360
I finish with my row one one,
I go to the my next door.

1670
01:29:47,360 --> 01:29:50,360
I want to create a new empty line right.

1671
01:29:50,360 --> 01:29:52,440
I want to create a new empty line.

1672
01:29:52,440 --> 01:29:56,240
And then again print all my columns on

1673
01:29:56,240 --> 01:30:00,400
and once as soon as I'm done,
let me create a new one.

1674
01:30:00,400 --> 01:30:00,600
Right.

1675
01:30:00,600 --> 01:30:03,880
Let me create a new line
so then I can print my columns.

1676
01:30:03,880 --> 01:30:05,680
Very, very nice and easy.

1677
01:30:05,680 --> 01:30:08,760
Okay,
so how do we create a new empty line?

1678
01:30:08,760 --> 01:30:16,800
This.

1679
01:30:16,800 --> 01:30:17,760
Let's do so.

1680
01:30:17,760 --> 01:30:22,000
So now, as soon as you done
printing columns before you

1681
01:30:22,000 --> 01:30:24,960
and let me create and July right now

1682
01:30:25,080 --> 01:30:27,680
let's see how it's going to work right?

1683
01:30:28,320 --> 01:30:34,440
Let's see how it's going to work.

1684
01:30:34,440 --> 01:30:36,520
So this condition is true.

1685
01:30:37,920 --> 01:30:39,760
Oops, Condition is true.

1686
01:30:39,760 --> 01:30:40,760
Condition is true.

1687
01:30:40,760 --> 01:30:43,720
Now I'm doing I am printing one star.

1688
01:30:43,800 --> 01:30:44,600
Right?

1689
01:30:44,600 --> 01:30:48,840
Then what happens is my C gets
incrementing, it, prints another start,

1690
01:30:49,120 --> 01:30:51,920
and then another start
and then another star.

1691
01:30:52,320 --> 01:30:54,600
And then one more star. Right.

1692
01:30:54,880 --> 01:30:59,400
So now after you see after
you see to five, right.

1693
01:30:59,520 --> 01:31:01,840
You can see my cursor is still here. Why?

1694
01:31:01,840 --> 01:31:03,320
Because I'm using print, right?

1695
01:31:03,320 --> 01:31:05,400
My cursor is still here.

1696
01:31:05,400 --> 01:31:09,240
Now my C will get incremented.

1697
01:31:09,840 --> 01:31:11,880
I am skipping my

1698
01:31:12,880 --> 01:31:16,280
nested for then I'm creating a new line.

1699
01:31:16,680 --> 01:31:19,560
Then this print create me a new line.

1700
01:31:19,800 --> 01:31:21,920
So now my question went to here.

1701
01:31:21,920 --> 01:31:25,440
Now my cursor went through here
and then cycle and here repeats.

1702
01:31:25,440 --> 01:31:28,360
Right. I'm printing a first star.

1703
01:31:28,800 --> 01:31:31,680
I'm printing the first star,
then the second star,

1704
01:31:31,680 --> 01:31:34,680
then the third star than the four star,
then the fifth star.

1705
01:31:35,040 --> 01:31:38,040
After I'm done with my nested loop,
right after I'm

1706
01:31:38,040 --> 01:31:41,120
done with my nested loop,
my cursor is here, right?

1707
01:31:41,160 --> 01:31:43,000
Because I'm doing prints.

1708
01:31:43,000 --> 01:31:46,200
Now what I'm going to do after I print

1709
01:31:46,200 --> 01:31:49,440
all my columns, I'm creating the new line.

1710
01:31:49,960 --> 01:31:50,920
Create a new line.

1711
01:31:50,920 --> 01:31:52,680
Now, my question was here.

1712
01:31:52,680 --> 01:31:54,000
My question is here.

1713
01:31:54,000 --> 01:31:55,440
And then again, I'm starting over.

1714
01:31:55,440 --> 01:31:59,280
I'm fringing all my columns
creating a line and then creating

1715
01:31:59,640 --> 01:32:01,520
print in all the columns. Right?

1716
01:32:03,080 --> 01:32:06,040
So then, all
right, this is how we can print, right?

1717
01:32:06,040 --> 01:32:10,320
So now what we got you got five rows
that for rows that were controlled

1718
01:32:10,320 --> 01:32:15,400
by your inner loop and now you got
five columns that were controlled by your

1719
01:32:16,600 --> 01:32:21,240
absurd outlook, controls
the rows in a loop, controls your column.

1720
01:32:21,400 --> 01:32:23,480
Right. So now, let me ask this.

1721
01:32:23,520 --> 01:32:26,920
What if I will ask you I want to ask you,
can you print

1722
01:32:28,720 --> 01:32:31,120
I'm going to ask you

1723
01:32:31,800 --> 01:32:33,400
all to

1724
01:32:34,200 --> 01:32:35,480
print

1725
01:32:36,600 --> 01:32:38,280
a square.

1726
01:32:38,800 --> 01:32:42,040
That square ten by ten.

1727
01:32:42,040 --> 01:32:49,400
I want it to have ten rose
and ten columns.

1728
01:32:49,400 --> 01:32:52,560
And what are you guys going to do? It

1729
01:33:11,480 --> 01:33:13,440
So now

1730
01:33:13,440 --> 01:33:17,040
so now, instead of having four rows, you
to have ten.

1731
01:33:17,440 --> 01:33:21,600
Instead of having five columns,
you want to have a ten columns, right?

1732
01:33:21,840 --> 01:33:23,080
So now what are you will do?

1733
01:33:23,080 --> 01:33:24,840
You will do the same thing, right?

1734
01:33:24,840 --> 01:33:27,200
You will do the same thing.
And now what you will do,

1735
01:33:28,680 --> 01:33:28,880
right?

1736
01:33:28,880 --> 01:33:32,480
So now for you're going to change the ten

1737
01:33:33,520 --> 01:33:36,160
from C,
we're going to change to ten, right?

1738
01:33:36,560 --> 01:33:38,920
So, hey, I want to have a ten rows,

1739
01:33:39,360 --> 01:33:42,360
a first row one's going to create on that
first row.

1740
01:33:42,360 --> 01:33:46,840
I'm going to print ten stars,
then I'm moving to the new line, right?

1741
01:33:47,160 --> 01:33:50,680
And then after I move to the new one,
this cycle will repeat

1742
01:33:51,040 --> 01:33:53,280
and then again create a new one for me.

1743
01:33:53,280 --> 01:33:55,400
Again, print ten stars.

1744
01:33:55,400 --> 01:33:57,400
New line for me. Right.

1745
01:33:57,400 --> 01:33:58,040
Okay, go.

1746
01:33:58,040 --> 01:33:59,520
So now what do you get that?

1747
01:33:59,520 --> 01:33:59,960
A square.

1748
01:33:59,960 --> 01:34:02,640
That is ten by ten, Right?

1749
01:34:02,640 --> 01:34:05,440
By ten.

1750
01:34:05,440 --> 01:34:07,960
So let me ask you guys, what if I know

1751
01:34:09,280 --> 01:34:11,240
a lot of right now, Are we good in here?

1752
01:34:11,240 --> 01:34:13,320
This I'm just going to show you
just a few.

1753
01:34:13,320 --> 01:34:16,320
So this way, you guys,
if you look somewhere so this way.

1754
01:34:16,320 --> 01:34:17,160
This is this is.

1755
01:34:17,160 --> 01:34:21,680
This makes sense, guys.

1756
01:34:21,680 --> 01:34:22,440
Okay, So

1757
01:34:24,000 --> 01:34:26,680
if some of
you is confused, just go see it right now.

1758
01:34:26,680 --> 01:34:30,720
And once again,
this is just to do more practice

1759
01:34:30,720 --> 01:34:33,840
with the nested
when it comes to our actual automation.

1760
01:34:33,840 --> 01:34:38,160
Of course, guys, our actual automation
is not to print stars and

1761
01:34:38,440 --> 01:34:40,000
and different different shapes.

1762
01:34:40,000 --> 01:34:43,040
This is just to develop our different
thinking.

1763
01:34:43,040 --> 01:34:46,840
Okay.

1764
01:34:46,840 --> 01:34:49,680
Okay. All right.

1765
01:34:49,880 --> 01:34:52,800
Let me look into this support,
because I think I think we have

1766
01:34:54,000 --> 01:34:54,960
I don't know.

1767
01:34:54,960 --> 01:34:57,600
Let me check on our support
because I know someone.

1768
01:34:57,600 --> 01:34:58,200
That's the question.

1769
01:34:58,200 --> 01:34:59,880
Okay, guys Let's take a break.

1770
01:34:59,880 --> 01:35:02,840
After break, I ask you a few
more questions and then we will move on.

1771
01:35:02,880 --> 01:35:03,360
Okay.

1772
01:35:03,440 --> 01:35:05,520
So one thing, that's what I'm going to do.

1773
01:35:05,960 --> 01:35:08,200
I'm going to push my code to the GitHub.

1774
01:35:08,400 --> 01:35:10,680
Okay?
I'm going to push my code to the GitHub.

1775
01:35:10,680 --> 01:35:12,680
So please have a look in there.

1776
01:35:12,720 --> 01:35:13,800
Have a look in there.

1777
01:35:13,800 --> 01:35:17,640
Meanwhile, I'll check, I'll check
someone's in the question in the support.

1778
01:35:17,640 --> 01:35:22,920
Okay?

1779
01:35:22,920 --> 01:35:24,120
Okay. This right.

1780
01:35:24,120 --> 01:35:27,560
So this podcast
once again guys, I just bring in

1781
01:35:27,560 --> 01:35:33,640
so this is an additional practice
for you to see how our loop works, right?

1782
01:35:33,640 --> 01:35:35,040
How our old works.

1783
01:35:35,040 --> 01:35:39,720
So another beautiful thing,
what we can guess what we can do

1784
01:35:41,160 --> 01:35:42,760
with this, right?

1785
01:35:42,760 --> 01:35:45,680
Besides just printing partners like this.

1786
01:35:45,960 --> 01:35:49,280
What if I want to pre in
something like that case,

1787
01:35:50,800 --> 01:35:52,680
you only can tell me.

1788
01:35:52,800 --> 01:35:57,520
I want you print a square of numbers.

1789
01:35:57,520 --> 01:36:00,600
Now I want you print one, two, three,

1790
01:36:02,120 --> 01:36:03,960
four, five.

1791
01:36:04,320 --> 01:36:05,000
That's what I want.

1792
01:36:05,000 --> 01:36:05,840
You print

1793
01:36:12,840 --> 01:36:14,400
What if I want to bring this square?

1794
01:36:14,400 --> 01:36:15,920
And now note of the stars.

1795
01:36:15,920 --> 01:36:19,640
Now I want to print this square over
numbers, right?

1796
01:36:19,720 --> 01:36:21,600
I want to bring the square over numbers.

1797
01:36:21,600 --> 01:36:25,160
Now, the logic will be
this same base case.

1798
01:36:25,240 --> 01:36:29,640
The logic will be the same
So how many be looking at how many rows

1799
01:36:30,520 --> 01:36:36,760
we're looking in here, guys,
We're still looking into how many rows.

1800
01:36:36,760 --> 01:36:37,400
Right.

1801
01:36:37,400 --> 01:36:40,720
Rows goes this way. One, two, three, four.

1802
01:36:40,800 --> 01:36:43,200
We still look on to the four rows right.

1803
01:36:43,200 --> 01:36:46,560
Four rows. And how many columns will

1804
01:36:48,200 --> 01:36:49,200
quite right

1805
01:36:49,200 --> 01:36:51,680
columns are still five columns are five.

1806
01:36:51,920 --> 01:36:52,560
Right.

1807
01:36:53,080 --> 01:36:56,400
So now all you guys have to define right.

1808
01:36:56,760 --> 01:37:00,000
So outlook controls.

1809
01:37:00,240 --> 01:37:04,320
Our gross rows are starting from one

1810
01:37:04,680 --> 01:37:07,480
going all the way to four.

1811
01:37:07,480 --> 01:37:10,240
And our plus, plus our plus plus.

1812
01:37:10,440 --> 01:37:11,080
Right.

1813
01:37:11,240 --> 01:37:16,800
And then inside what we have,
we have our nested four, right?

1814
01:37:16,800 --> 01:37:19,320
What we have, we have another nested four.

1815
01:37:19,720 --> 01:37:24,680
So now our nested four controls,
our columns write integers, C

1816
01:37:24,920 --> 01:37:28,560
equals integer, C equals to one, right.

1817
01:37:28,560 --> 01:37:33,000
And then going C less or equal than five.

1818
01:37:33,240 --> 01:37:35,640
Right. And then C++.

1819
01:37:36,480 --> 01:37:40,000
Now the part
you guys will have to figure out,

1820
01:37:40,040 --> 01:37:42,320
Hey, what am I printing?

1821
01:37:43,160 --> 01:37:44,160
Why am what?

1822
01:37:44,160 --> 01:37:47,240
I mean, what here
this rows goes horizontal, right?

1823
01:37:47,520 --> 01:37:50,160
This is run number one.
This is one. Number two, this one.

1824
01:37:50,160 --> 01:37:52,600
Number three,
this one. Number four columns.

1825
01:37:52,600 --> 01:37:53,840
How many columns?

1826
01:37:53,840 --> 01:37:54,720
One column.

1827
01:37:54,720 --> 01:37:57,360
Second column, Third column.
Fourth column.

1828
01:37:57,440 --> 01:37:59,360
Fifth column. Right.

1829
01:37:59,360 --> 01:38:00,040
Okay.

1830
01:38:00,040 --> 01:38:03,320
So now the only thing
what you have to figure out, right?

1831
01:38:03,840 --> 01:38:05,040
What are we printing?

1832
01:38:06,000 --> 01:38:08,040
Because
I need to print not just the stars.

1833
01:38:08,040 --> 01:38:10,800
Right. The way we did in here.
Look, printing just stars.

1834
01:38:10,800 --> 01:38:15,000
What I need to have instead of the stars,
I want to print numbers.

1835
01:38:15,000 --> 01:38:15,600
Right.

1836
01:38:15,800 --> 01:38:17,920
Okay, so now what I'm printing

1837
01:38:18,360 --> 01:38:20,960
while I am on the first roll,

1838
01:38:21,360 --> 01:38:24,280
I am printing one, two, three, four, five.

1839
01:38:25,000 --> 01:38:30,120
While I'm on the second row,
I am printing one, three, four, five.

1840
01:38:30,360 --> 01:38:30,920
Right.

1841
01:38:30,920 --> 01:38:33,160
So what are you guys think
we are printing in here?

1842
01:38:33,200 --> 01:38:34,760
If I'm printing one, two, three, four,
five.

1843
01:38:34,760 --> 01:38:47,680
Well, I'm printing the value of rows over
print, printing the value of columns.

1844
01:38:47,680 --> 01:38:58,040
Rows are the columns.

1845
01:38:58,040 --> 01:38:59,880
Rows, columns.

1846
01:38:59,880 --> 01:39:02,040
Okay, I don't want you to writing this.

1847
01:39:02,040 --> 01:39:03,560
Can you guys please don't run it.

1848
01:39:03,560 --> 01:39:03,960
I want.

1849
01:39:03,960 --> 01:39:12,240
I'm going to write the code
and then we will see right.

1850
01:39:12,240 --> 01:39:13,800
Awesome. More

1851
01:39:15,360 --> 01:39:23,080
right.

1852
01:39:23,080 --> 01:39:26,640
So here we see our loop controls the rows

1853
01:39:28,040 --> 01:39:29,320
and rows we have.

1854
01:39:29,320 --> 01:39:32,480
We have four rows and rows are increment

1855
01:39:32,840 --> 01:39:36,080
right? Or

1856
01:39:37,920 --> 01:39:39,960
here equals do

1857
01:39:39,960 --> 01:39:43,320
want to see less or equal than five.

1858
01:39:43,640 --> 01:39:44,160
Right.

1859
01:39:44,280 --> 01:39:46,760
And plus plus

1860
01:39:46,920 --> 01:39:47,920
here.

1861
01:39:47,920 --> 01:39:51,720
Now we have to define
what I'm thinking all in one line

1862
01:39:52,640 --> 01:39:55,720
and then we will have to define that all.

1863
01:39:55,720 --> 01:39:57,000
And then we're doing the same.

1864
01:39:57,000 --> 01:39:58,440
You in your right.

1865
01:39:58,440 --> 01:40:00,120
Okay, so now let's see.

1866
01:40:00,120 --> 01:40:00,640
Let's

1867
01:40:01,400 --> 01:40:04,920
let's see what I'm trying to print
when I'm printing.

1868
01:40:04,920 --> 01:40:09,240
I want you print
one two, three, four, five.

1869
01:40:10,120 --> 01:40:11,640
The new line starts.

1870
01:40:11,640 --> 01:40:15,000
I want you print one,
two, three, four, five.

1871
01:40:15,560 --> 01:40:16,840
New line start.

1872
01:40:16,840 --> 01:40:20,240
I want you print one,
two, three, four, five.

1873
01:40:21,000 --> 01:40:23,840
So now who control this?

1874
01:40:23,840 --> 01:40:26,000
Now is four. One, two, three, four, five.

1875
01:40:26,000 --> 01:40:30,160
Repeat Hadley on every single line.

1876
01:40:30,560 --> 01:40:34,040
So what we are printing, guys,
we are printing the columns right near

1877
01:40:34,040 --> 01:40:35,160
printing the columns.

1878
01:40:35,160 --> 01:40:38,280
So now if I'm going to print see there way

1879
01:40:38,320 --> 01:40:42,240
we start in our is equals to one, correct
or as equals to one

1880
01:40:42,800 --> 01:40:46,800
condition is true first,
then see is equals to one.

1881
01:40:46,800 --> 01:40:47,040
Right.

1882
01:40:47,040 --> 01:40:49,640
So now for a cycle,
I'm going to print one.

1883
01:40:50,520 --> 01:40:54,280
Then I am going back to see
gets incremented.

1884
01:40:54,600 --> 01:40:58,040
I am printing two, C gets incremented,

1885
01:40:58,040 --> 01:41:01,200
I'm going to print four,
then I'm going to print five.

1886
01:41:01,360 --> 01:41:02,520
Right now.

1887
01:41:02,520 --> 01:41:06,360
Once it becomes
six, condition will becomes false.

1888
01:41:06,360 --> 01:41:08,640
Am e exist in my inner loop.

1889
01:41:09,000 --> 01:41:12,960
While I'm exiting my inner loop,
I am creating a brand new line.

1890
01:41:13,120 --> 01:41:14,080
Right? Bring new line.

1891
01:41:14,080 --> 01:41:15,480
So my cursor moves here.

1892
01:41:15,480 --> 01:41:17,480
Write cursor is in here.

1893
01:41:17,480 --> 01:41:22,400
Now when I'm going back
R gets incremented, right?

1894
01:41:22,400 --> 01:41:26,040
R gives increment that RS to what happened

1895
01:41:26,080 --> 01:41:29,800
is our inner cycle,
our inner cycle resets, right?

1896
01:41:30,240 --> 01:41:32,920
So now it's again from the new line,

1897
01:41:32,920 --> 01:41:36,840
it will start one, two, three, four, five

1898
01:41:37,320 --> 01:41:40,200
when the columns are over
is going to create the brain.

1899
01:41:40,200 --> 01:41:45,000
You put the cursor in here and then again
you in a row previous right?

1900
01:41:45,000 --> 01:41:50,400
So now if you go to print,
see this is what we want to get right.

1901
01:41:51,440 --> 01:41:52,520
One, two, three, four, five.

1902
01:41:52,520 --> 01:41:56,880
Let me add a little space.

1903
01:41:56,880 --> 01:41:57,280
Okay.

1904
01:41:57,880 --> 01:42:00,360
It's already one, one,
two, three, four, five.

1905
01:42:00,680 --> 01:42:03,360
Okay, then. Now, let me ask you this.

1906
01:42:04,080 --> 01:42:06,640
What this thing will be the output.

1907
01:42:06,640 --> 01:42:36,000
If I'm going to put the R order,
this thing will be the output.

1908
01:42:36,000 --> 01:42:41,960
So now let's analyze it Now less RS one
valley C is one.

1909
01:42:42,440 --> 01:42:44,480
I am entering the loop. Right?

1910
01:42:44,960 --> 01:42:47,360
R equals to one.

1911
01:42:47,360 --> 01:42:50,080
So first time I am inside the inner loop.

1912
01:42:50,080 --> 01:42:53,280
I'm trying to print the value of
what is the value of r. This

1913
01:42:57,480 --> 01:42:59,320
one right?

1914
01:42:59,360 --> 01:43:01,560
I am going back.

1915
01:43:01,560 --> 01:43:03,080
The value of C is changing.

1916
01:43:03,080 --> 01:43:06,360
Now C becomes two,
but I'm still printing R.

1917
01:43:06,360 --> 01:43:10,760
What is the value of R one?

1918
01:43:11,200 --> 01:43:16,560
So now my inner loop will be true
five times it means five times.

1919
01:43:16,560 --> 01:43:20,160
I'm going to print 1111.

1920
01:43:20,480 --> 01:43:23,240
Right Then I'm exerting

1921
01:43:23,240 --> 01:43:26,520
my inner loop and creating a new line.

1922
01:43:26,520 --> 01:43:28,560
My cursor will be standing in here.

1923
01:43:28,560 --> 01:43:30,760
My my print will start from here.

1924
01:43:30,760 --> 01:43:36,400
I am going back R gets increment
that ah gets changed to two.

1925
01:43:36,440 --> 01:43:37,280
Right.

1926
01:43:37,320 --> 01:43:40,720
And then again I'm going inside my inner
loop.

1927
01:43:40,720 --> 01:43:43,920
Right.
And then my inner loop cycle resets.

1928
01:43:43,920 --> 01:43:48,160
It starts from one r what I'm
printing, I'm printing the r.

1929
01:43:48,160 --> 01:43:50,240
So at this time, what is the goal of R

1930
01:43:52,680 --> 01:43:54,840
now? The value of R is due

1931
01:43:54,840 --> 01:43:58,120
to 2 to 2, right?

1932
01:43:58,520 --> 01:44:02,120
And then they will go back and then we'll
print three, three, three three.

1933
01:44:02,400 --> 01:44:02,800
Right.

1934
01:44:02,800 --> 01:44:05,920
And then it will print four, four,
four, four. Why?

1935
01:44:06,240 --> 01:44:10,000
Because now what are we printing
a print in the value of four

1936
01:44:11,160 --> 01:44:13,560
or one.

1937
01:44:13,560 --> 01:44:17,760
One, two, two, three, three, four, four.

1938
01:44:17,760 --> 01:44:20,600
In this form,
this it's important to understand

1939
01:44:21,400 --> 01:44:24,520
Rowe's columns and the rest.

1940
01:44:24,520 --> 01:44:25,680
You just need to think.

1941
01:44:25,680 --> 01:44:29,400
Okay, if I'm printing, right,
I'm still on the first rule.

1942
01:44:29,600 --> 01:44:31,320
My role is not changing, right?

1943
01:44:31,320 --> 01:44:32,920
My role is not changing.

1944
01:44:32,920 --> 01:44:33,800
What is the change

1945
01:44:33,800 --> 01:44:37,440
in the value of my Colin's
change in one, two, three four, five.

1946
01:44:37,560 --> 01:44:38,320
Right.

1947
01:44:38,320 --> 01:44:42,000
When you look into this bottom, right,
if you want to print a part of,

1948
01:44:42,320 --> 01:44:47,880
I don't know, one, one one, two, two,
two, three, three, three.

1949
01:44:48,040 --> 01:44:48,840
Right.

1950
01:44:49,240 --> 01:44:51,040
And let's do well.

1951
01:44:51,040 --> 01:44:52,840
Four, four, four.

1952
01:44:52,840 --> 01:44:58,680
So how many roles in here this,
how many rows.

1953
01:44:58,680 --> 01:45:00,240
Rows equals two four

1954
01:45:01,400 --> 01:45:05,080
columns.

1955
01:45:05,080 --> 01:45:07,200
Columns equals to three. Right.

1956
01:45:08,120 --> 01:45:13,440
So now all the while I'm on the first row,
I'm continuously printing

1957
01:45:13,440 --> 01:45:18,920
one, one, one one, I'm on my second row,
I'm continuously printing 2 to 2.

1958
01:45:19,440 --> 01:45:22,840
When I'm on the third row, I'm
continuously printing three, three, three.

1959
01:45:22,840 --> 01:45:30,280
So what we printing in here guys,
we have printing rows, right?

1960
01:45:30,520 --> 01:45:32,280
We are printing the value of my row.

1961
01:45:32,280 --> 01:45:34,480
I'm on the first one.
That's why I'm printing one, one, one.

1962
01:45:34,880 --> 01:45:36,880
I'm on the second one, two, two, two.

1963
01:45:36,880 --> 01:45:39,320
I'm on the third one printing 3D.

1964
01:45:39,320 --> 01:45:41,640
Okay, let's guess what.

1965
01:45:41,640 --> 01:45:43,680
If I'm going to ask you, right.

1966
01:45:43,880 --> 01:45:48,320
That's very two less ones
I want to ask you now.

1967
01:45:49,560 --> 01:45:51,560
A triangle you guys will take a look.

1968
01:45:51,560 --> 01:45:52,440
Okay. Triangle.

1969
01:45:52,440 --> 01:45:53,920
I'm not going to show you a triangle.

1970
01:45:53,920 --> 01:45:57,000
You guys can look with that.

1971
01:45:57,320 --> 01:45:58,560
I'll give you maybe the last.

1972
01:45:58,560 --> 01:46:00,760
But let's see, it's 1213. Okay.

1973
01:46:01,240 --> 01:46:05,640
What if right now, guys,
instead of printing, Instead of printing

1974
01:46:05,960 --> 01:46:08,680
one, one, one, two, two, two,
three, three, three, four, four, four.

1975
01:46:08,760 --> 01:46:11,640
What if I want to print?

1976
01:46:11,640 --> 01:46:14,480
I want to print five,

1977
01:46:15,080 --> 01:46:18,160
five, five, five

1978
01:46:19,120 --> 01:46:20,800
or four

1979
01:46:20,800 --> 01:46:25,520
or or three, three, three, three,
and then choose.

1980
01:46:25,520 --> 01:46:39,200
And once.

1981
01:46:39,200 --> 01:46:42,560
Okay, so the same thing days how many rows

1982
01:46:42,560 --> 01:46:43,400
we have

1983
01:46:49,320 --> 01:46:50,880
five rows

1984
01:46:51,120 --> 01:46:53,880
by rows, How many columns we have

1985
01:46:56,600 --> 01:46:59,360
columns are for right columns.

1986
01:46:59,360 --> 01:47:00,960
We have four

1987
01:47:01,320 --> 01:47:04,080
now columns four.

1988
01:47:04,080 --> 01:47:04,760
Right.

1989
01:47:04,920 --> 01:47:07,800
So now just instead of going from the

1990
01:47:08,880 --> 01:47:12,880
lower to the higher,
we are starting higher.

1991
01:47:12,880 --> 01:47:14,880
Going lower. Right.

1992
01:47:14,880 --> 01:47:16,960
But still, what are we printing guys.

1993
01:47:16,960 --> 01:47:18,720
What are we printing.

1994
01:47:18,720 --> 01:47:24,560
Are we printing rows of it,
printing columns?

1995
01:47:24,560 --> 01:47:25,960
We're still printing rows.

1996
01:47:25,960 --> 01:47:30,360
The only thing there, rows goes right now
in the descending order.

1997
01:47:30,480 --> 01:47:30,840
Right.

1998
01:47:30,840 --> 01:47:32,400
So can you guys do this thing?

1999
01:47:32,400 --> 01:47:41,880
Can print it for me.

2000
01:47:41,880 --> 01:47:45,600
So you want to make sure you get five rows
and you want to make sure you

2001
01:47:45,600 --> 01:47:46,920
get four columns.

2002
01:47:46,920 --> 01:47:50,520
The only thing right now
rows you print in nor in the

2003
01:47:51,760 --> 01:47:55,000
nor in the increase from one, two, three,
four, five.

2004
01:47:55,000 --> 01:47:57,600
You print in it from five, four,
three, two, one

2005
01:48:26,760 --> 01:48:27,960
by two.

2006
01:48:27,960 --> 01:48:41,920
My can you run your loop.

2007
01:48:41,920 --> 01:48:47,560
Okay.

2008
01:48:47,560 --> 01:48:51,680
Like, you know, you need rows,
you know you need rows.

2009
01:48:51,840 --> 01:48:53,960
How many rows you need five. Right.

2010
01:48:54,360 --> 01:48:57,840
The only thing which you need,
you want to make sure

2011
01:48:57,840 --> 01:49:01,240
that rows goes from 5 to 1, right?

2012
01:49:01,560 --> 01:49:05,400
So it means what you're starting
point is five, right?

2013
01:49:05,560 --> 01:49:17,240
Your starting point is five.

2014
01:49:17,240 --> 01:49:19,920
What's your starting point?

2015
01:49:20,200 --> 01:49:21,400
What is my starting point?

2016
01:49:21,400 --> 01:49:23,600
My starting point in five. Right.

2017
01:49:23,600 --> 01:49:27,480
Or if you roll equals to five, I'm
starting from five.

2018
01:49:27,920 --> 01:49:31,040
I want to go all the way to one. Right?

2019
01:49:31,040 --> 01:49:32,880
I want to go all the way to one.

2020
01:49:32,880 --> 01:49:36,200
So from four one what happens?

2021
01:49:36,200 --> 01:49:38,240
We are from 4 to 1.

2022
01:49:38,240 --> 01:49:40,320
Are we incrementing
our discriminating dates

2023
01:49:44,800 --> 01:49:47,280
right from 4 to 1 for minus.

2024
01:49:47,280 --> 01:49:47,840
Minus.

2025
01:49:47,840 --> 01:49:50,880
Okay, so now you are saying, hey,

2026
01:49:50,880 --> 01:49:54,920
what I need, I need this condition
to be true five times.

2027
01:49:54,920 --> 01:49:57,600
Which operator you guys used?

2028
01:49:57,680 --> 01:49:59,880
I need to make sure my condition is true

2029
01:49:59,880 --> 01:50:01,280
five times

2030
01:50:04,240 --> 01:50:08,280
to make it true five times more or equal.

2031
01:50:09,000 --> 01:50:10,320
More or equal.

2032
01:50:10,320 --> 01:50:13,760
First them are equals
255 is more than one.

2033
01:50:14,000 --> 01:50:16,440
Decrement four is more than one.

2034
01:50:16,440 --> 01:50:18,200
Dickerman three more than one. Right.

2035
01:50:18,200 --> 01:50:20,160
Okay. Rows are good, right?

2036
01:50:20,160 --> 01:50:22,840
So now I need I need five.

2037
01:50:23,040 --> 01:50:24,360
Only four columns.

2038
01:50:24,360 --> 01:50:27,360
Do you care about the columns
that we print in columns?

2039
01:50:27,360 --> 01:50:31,720
Anywhere in here, guys, What we want.

2040
01:50:31,720 --> 01:50:33,880
Right.
So my columns can be whatever, right?

2041
01:50:33,920 --> 01:50:35,720
As long as I get how many problems?

2042
01:50:35,720 --> 01:50:38,760
As long as I get for columns,
As long as it gets

2043
01:50:39,000 --> 01:50:42,160
columns or, integers.

2044
01:50:42,160 --> 01:50:47,640
See if you want to be less
or equals than four.

2045
01:50:47,680 --> 01:50:48,120
Right.

2046
01:50:48,120 --> 01:50:55,360
And then C++.

2047
01:50:55,360 --> 01:50:57,720
And then when we say I want to print

2048
01:50:58,600 --> 01:51:01,800
all in one line
what I'm printed, I'm printing my rows,

2049
01:51:03,160 --> 01:51:06,720
I'm printing my rows enough to print rows

2050
01:51:06,880 --> 01:51:10,280
four times when creating a new one, I am

2051
01:51:21,880 --> 01:51:22,680
I go or we

2052
01:51:22,680 --> 01:51:26,280
get five, five, four,
four, three, three, two, two, one, one.

2053
01:51:26,400 --> 01:51:29,280
Right. So what happens? The same logic.

2054
01:51:29,520 --> 01:51:33,240
How many Rosa have one, two,
three or five.

2055
01:51:33,480 --> 01:51:34,960
Right. I need five rows.

2056
01:51:34,960 --> 01:51:36,600
The only thing my rows. Right.

2057
01:51:36,600 --> 01:51:40,800
I'm starting from the highest
to the lowest from 5 to 4.

2058
01:51:40,800 --> 01:51:43,920
What doing? I am discriminating right?

2059
01:51:44,320 --> 01:51:45,280
So now.

2060
01:51:45,280 --> 01:51:49,000
But I still need to create one,
two, three, four, five rows.

2061
01:51:49,000 --> 01:51:50,880
It means from 5 to 1.

2062
01:51:50,880 --> 01:51:54,360
I want to make sure my condition is true
five times.

2063
01:51:54,360 --> 01:51:58,680
How do I make make sure my conditions
to practice unusual are equal.

2064
01:51:58,720 --> 01:51:59,400
Right?

2065
01:51:59,400 --> 01:52:00,600
And then columns.

2066
01:52:00,600 --> 01:52:02,400
I don't care why I don't care.

2067
01:52:02,400 --> 01:52:06,640
I just want to make sure that I am able
to print one, two, three, four times.

2068
01:52:06,640 --> 01:52:07,120
Right.

2069
01:52:07,680 --> 01:52:10,760
I want to make sure
but that my either cycle repeated

2070
01:52:11,080 --> 01:52:13,720
one, two, three, four times. Right.

2071
01:52:14,040 --> 01:52:17,120
So that's why condition for inner cycle
two four times.

2072
01:52:17,120 --> 01:52:18,680
And then what?

2073
01:52:18,680 --> 01:52:21,920
I'm printed
on printing the value of R, right,

2074
01:52:22,200 --> 01:52:27,000
printing the value of books
going to the box here are RS five

2075
01:52:27,000 --> 01:52:30,360
five is more than one
condition is true when inside

2076
01:52:30,880 --> 01:52:33,560
C is one, C is less than four.

2077
01:52:33,560 --> 01:52:34,800
Yes, condition is true.

2078
01:52:34,800 --> 01:52:37,960
I am going inside
while I'm going to gain insight.

2079
01:52:37,960 --> 01:52:39,480
I'm thinking the value of R.

2080
01:52:39,480 --> 01:52:41,960
What is the value of R twice

2081
01:52:43,560 --> 01:52:46,160
going back C gives incremented.

2082
01:52:46,160 --> 01:52:48,840
Now C's equals to two
condition is still true.

2083
01:52:48,840 --> 01:52:51,720
Going inside printing another value of R.

2084
01:52:51,720 --> 01:52:54,160
What is the R? It's still five, right?

2085
01:52:55,040 --> 01:52:56,280
And then going again.

2086
01:52:56,280 --> 01:52:59,520
Now C will be equal to three condition

2087
01:53:00,120 --> 01:53:04,680
25 when increment C is equal to four,
condition is true,

2088
01:53:04,680 --> 01:53:08,840
but value of R is still life right now.

2089
01:53:08,880 --> 01:53:11,640
When the C becomes five,
condition is false.

2090
01:53:11,920 --> 01:53:13,040
We're existing.

2091
01:53:13,040 --> 01:53:15,800
So now our cursor moves to the new line.

2092
01:53:15,960 --> 01:53:16,600
Right?

2093
01:53:16,680 --> 01:53:20,360
And then you goes back
when your job goes back

2094
01:53:21,400 --> 01:53:24,320
in there, cycle resets, right?

2095
01:53:24,840 --> 01:53:27,440
And then R gives decrement

2096
01:53:27,440 --> 01:53:30,520
that now five minus one R become four.

2097
01:53:31,160 --> 01:53:34,040
Four is still more than one going
inside the loop.

2098
01:53:34,120 --> 01:53:34,960
Right.

2099
01:53:35,160 --> 01:53:37,800
As soon as I enter my r loop.

2100
01:53:38,080 --> 01:53:44,360
Right as soon there are a loop, I'm
seeing my for loop with this C variable.

2101
01:53:44,360 --> 01:53:46,520
Right. And then here cycle repeats.

2102
01:53:46,560 --> 01:53:49,960
Now going to print R, which is four
how many times

2103
01:53:49,960 --> 01:53:53,040
I'm going to print my R four times
y four times

2104
01:53:53,400 --> 01:53:57,800
because my inner loop gives me
a true condition four times.

2105
01:53:57,800 --> 01:53:58,480
Right?

2106
01:53:58,480 --> 01:54:04,920
And so.

2107
01:54:04,920 --> 01:54:06,280
All right. Can you show you could

2108
01:54:11,280 --> 01:54:14,280
and putting
my before you you were printing B

2109
01:54:14,280 --> 01:54:18,080
but you did not really print the b I
so I saw your quote somewhere

2110
01:54:18,280 --> 01:54:24,440
you didn't really need to be.

2111
01:54:24,440 --> 01:54:25,000
Okay.

2112
01:54:25,000 --> 01:54:28,120
So what you did in here,
you did the decrement, right?

2113
01:54:28,120 --> 01:54:29,080
You did the decrement.

2114
01:54:29,080 --> 01:54:33,200
So remember this in here for a C,
we can do it different ways, right?

2115
01:54:33,480 --> 01:54:36,000
I see.
What if I want to start C from ten again?

2116
01:54:36,000 --> 01:54:58,440
This time I c from ten days.

2117
01:54:58,440 --> 01:55:01,760
Mariam We're not, we're not printing line,
we just doing print.

2118
01:55:03,520 --> 01:55:07,520
I cannot start my C from ten.

2119
01:55:07,520 --> 01:55:10,680
Why not do
what is wrong for me starting from ten?

2120
01:55:12,360 --> 01:55:14,880
Okay, then how do I fix my condition

2121
01:55:14,880 --> 01:55:17,640
if I want my c to be ten

2122
01:55:26,960 --> 01:55:29,040
and then I get true.

2123
01:55:29,040 --> 01:55:30,000
So now what?

2124
01:55:30,000 --> 01:55:31,920
You guys have to remember, right?

2125
01:55:31,920 --> 01:55:36,280
How many columns
and then one, two, three, four.

2126
01:55:36,800 --> 01:55:42,120
And because in my situation
I am not printing columns,

2127
01:55:42,120 --> 01:55:45,840
but I'm not printing the variable variable

2128
01:55:45,840 --> 01:55:49,600
that refers to the columns,
I'm still creating four columns, right?

2129
01:55:49,800 --> 01:55:54,240
So it means I need my email loop
that controls my rows, right?

2130
01:55:54,240 --> 01:55:56,000
My inner loop control rows

2131
01:55:57,480 --> 01:56:01,080
and oh, sorry, control columns.

2132
01:56:01,080 --> 01:56:02,600
These are

2133
01:56:03,840 --> 01:56:06,000
unfolds right?

2134
01:56:06,000 --> 01:56:11,480
As long as make sure that my inner
loop is true four times, I'm okay.

2135
01:56:11,480 --> 01:56:12,920
I'm okay. Right.

2136
01:56:12,920 --> 01:56:13,880
Will it still work?

2137
01:56:13,880 --> 01:56:15,520
Yes, it's still work. Why?

2138
01:56:15,520 --> 01:56:20,320
Because I'm not printing C I'm printing R
So in your case, if you guys did,

2139
01:56:20,320 --> 01:56:24,080
if you started from four 1 to 1

2140
01:56:24,840 --> 01:56:27,120
and use the decrement, it's also fine.

2141
01:56:27,360 --> 01:56:28,800
It's also client, right?

2142
01:56:28,800 --> 01:56:32,400
Always saying what you to make sure
you're providing the right Operator.

2143
01:56:32,400 --> 01:56:36,760
So now if you want to start
from four going to one

2144
01:56:36,920 --> 01:56:39,160
using a decrement,
how do you want to make sure

2145
01:56:39,160 --> 01:56:40,920
that your condition is true four times?

2146
01:56:40,920 --> 01:56:43,200
Which operator is less or greater

2147
01:56:57,120 --> 01:56:59,600
or greater or equal

2148
01:57:01,320 --> 01:57:02,600
or equal rights.

2149
01:57:02,600 --> 01:57:06,400
So all it is right now
to make sure that your print statement

2150
01:57:06,400 --> 01:57:08,400
runs four times, that's okay.

2151
01:57:08,400 --> 01:57:11,280
And in order for print statement
to run four times,

2152
01:57:11,280 --> 01:57:13,960
you want to make sure you make condition
true four times.

2153
01:57:14,000 --> 01:57:14,480
Right?

2154
01:57:14,600 --> 01:57:18,480
So in this case,
we did not care about the columns, right.

2155
01:57:18,720 --> 01:57:23,760
We care that we need four times,
but whether we use increment or decrement

2156
01:57:23,760 --> 01:57:28,040
for my for my loop that controls
the columns, we did not really do.

2157
01:57:28,200 --> 01:57:31,440
Okay so in which situation we would care.

2158
01:57:31,440 --> 01:57:35,120
Girgis Give me a situation in which
I want to make sure

2159
01:57:35,120 --> 01:57:45,240
that my C goes in the increment.

2160
01:57:45,240 --> 01:57:51,080
Give me an example how if I'm going
to print, see how my quarter will look.

2161
01:57:51,080 --> 01:57:52,360
Right now, this is

2162
01:57:55,120 --> 01:57:56,000
if now

2163
01:57:56,000 --> 01:57:59,200
instead of the R, I'm going to print C,

2164
01:58:00,120 --> 01:58:12,280
how am I going to look like?

2165
01:58:12,280 --> 01:58:16,120
So I'm printing the value of see
what is the value of the first time this

2166
01:58:19,000 --> 01:58:20,840
or after that

2167
01:58:20,840 --> 01:58:24,600
it goes 3 to 1, right?

2168
01:58:25,120 --> 01:58:29,040
Going back our get decrement
and that's fine.

2169
01:58:29,040 --> 01:58:31,080
Our now becomes four.

2170
01:58:31,080 --> 01:58:35,640
Now you enter in the inner loop,
now your C resets and again

2171
01:58:35,640 --> 01:58:40,320
you went to print for 3 to 1 or three,

2172
01:58:40,480 --> 01:58:43,400
21432,

2173
01:58:43,560 --> 01:58:47,440
1432, one.

2174
01:58:47,440 --> 01:58:51,200
Let me copy this tube
so you guys will see the difference,

2175
01:58:51,200 --> 01:58:51,720
right

2176
01:58:59,400 --> 01:58:59,760
here.

2177
01:58:59,760 --> 01:59:02,120
I'm going to be right.

2178
01:59:02,280 --> 01:59:02,880
Okay.

2179
01:59:03,800 --> 01:59:05,000
It's actually

2180
01:59:05,280 --> 01:59:05,960
it's like

2181
01:59:05,960 --> 01:59:09,120
when I'm printing C, I'm getting four,
three, two, one, four, three, two,

2182
01:59:09,120 --> 01:59:11,520
one, four, three, two, one, four,
three, two, one, four, three, two, one.

2183
01:59:11,880 --> 01:59:13,520
When I'm printing rows.

2184
01:59:13,520 --> 01:59:15,240
Right. What. I'm printing them printing.

2185
01:59:15,240 --> 01:59:17,880
Five, five, four, four, three,
three, two, two, one, one. Okay.

2186
01:59:18,880 --> 01:59:21,600
With the, with, with this actual concept.

2187
01:59:21,600 --> 01:59:25,840
So you guys see
how you're actually in the loop

2188
01:59:26,040 --> 01:59:28,960
how your inner loop in our loop
relates to each other.

2189
01:59:28,960 --> 01:59:29,560
Right.

2190
01:59:29,560 --> 01:59:33,800
How your inner loop
has a dependency of the outer loop right.

2191
01:59:33,800 --> 01:59:37,200
How your inner loop repeats this cycle
until it completes

2192
01:59:37,200 --> 01:59:39,040
before it moves in here.

2193
01:59:39,040 --> 01:59:42,840
Here you also see in here
while I'm inside the inner

2194
01:59:42,840 --> 01:59:47,200
what happens with the variable of my R
and that my variable or my outlook

2195
01:59:47,200 --> 01:59:49,440
does not change, right? There's no change.

2196
01:59:49,880 --> 01:59:53,640
So this exercise, this once again
they there

2197
01:59:54,000 --> 01:59:57,840
just to build a logic, right
Just to build your

2198
01:59:59,280 --> 02:00:01,200
more practice, to build more practice,

2199
02:00:01,200 --> 02:00:04,600
to build more logic
when it comes to the nested to right.

2200
02:00:04,600 --> 02:00:06,600
So good way to practice them.

2201
02:00:06,600 --> 02:00:09,960
So just one thing is please, please,
please don't go too crazy

2202
02:00:09,960 --> 02:00:12,120
because the variation could be crazy,
right?

2203
02:00:12,120 --> 02:00:14,280
Because the variation could become crazy.

2204
02:00:14,280 --> 02:00:15,760
You can even print those.

2205
02:00:16,760 --> 02:00:17,840
How do you call this shape?

2206
02:00:17,840 --> 02:00:20,120
Right? There's a different type of shapes
you can print.

2207
02:00:20,120 --> 02:00:23,040
Okay, so all this will require

2208
02:00:23,760 --> 02:00:27,360
debugging
and analyze it in the first logic, right?

2209
02:00:27,360 --> 02:00:31,640
Then analyze it, then logic,
then debugging, right, then debugging.

2210
02:00:32,000 --> 02:00:34,120
But once again, don't go to crazy
guys, right?

2211
02:00:34,200 --> 02:00:37,440
Don't go too crazy y because this,

2212
02:00:37,440 --> 02:00:40,520
this things you are never going to use
in your daily life.

2213
02:00:40,520 --> 02:00:41,960
In your real life.

2214
02:00:41,960 --> 02:00:42,240
Right?

2215
02:00:42,240 --> 02:00:46,840
Once guys become an automation engineer
once again, this is strict

2216
02:00:46,840 --> 02:00:48,360
with strict
with strict with full practice.

2217
02:00:48,360 --> 02:00:49,920
So some of you get confused.

2218
02:00:49,920 --> 02:00:54,080
Guys try to go over it,
but try to go very simple once, right?

2219
02:00:54,160 --> 02:00:56,120
Try to go very simple once.

2220
02:00:56,120 --> 02:00:59,520
And then if you get an idea
how to print this square, right.

2221
02:00:59,520 --> 02:01:02,400
If you get an idea
of how to print a square

2222
02:01:02,680 --> 02:01:06,720
if you get an idea
how to print this values right.

2223
02:01:07,080 --> 02:01:09,560
How to print this values orders

2224
02:01:09,720 --> 02:01:12,720
more by learning
how to print these values.

2225
02:01:12,720 --> 02:01:13,440
Right?

2226
02:01:13,920 --> 02:01:15,200
Then that's what's in for.

2227
02:01:15,200 --> 02:01:16,480
That's what's important.

2228
02:01:16,480 --> 02:01:20,280
Let me actually copy these
and what I'm going to put in the column

2229
02:01:20,280 --> 02:01:22,920
so that see all different finds in here

2230
02:01:26,160 --> 02:01:26,760
that you

2231
02:01:26,760 --> 02:01:31,000
will see just by changing one
variable, outputs are different.

2232
02:01:31,120 --> 02:01:31,920
Right?

2233
02:01:33,200 --> 02:01:35,640
So what do you got in here?

2234
02:01:35,640 --> 02:01:39,000
You got all the ones
all the way to four here.

2235
02:01:39,000 --> 02:01:40,320
You got one, two, three, four, five.

2236
02:01:40,320 --> 02:01:42,480
One, two, three,
four, five. One, two, three, four, five.

2237
02:01:42,480 --> 02:01:43,560
Just by changing it.

2238
02:01:43,560 --> 02:01:45,680
Just by changing the printing
or one variable.

2239
02:01:45,840 --> 02:01:49,200
Okay. Triangle.

2240
02:01:49,200 --> 02:01:49,640
Yes. This.

2241
02:01:49,640 --> 02:01:52,360
You can do the triangles,
you can do more other stuff.

2242
02:01:52,360 --> 02:01:55,800
You guys can have fun with it
right in print and in the decrement

2243
02:01:55,800 --> 02:01:59,160
print in rows in the decrement,
printing columns

2244
02:02:09,280 --> 02:02:10,480
by Sebastian.

2245
02:02:10,480 --> 02:02:13,720
I think it happens to all of us

2246
02:02:14,160 --> 02:02:14,960
will happen.

2247
02:02:14,960 --> 02:02:16,800
All right.

2248
02:02:17,480 --> 02:02:20,160
Okay.

2249
02:02:20,160 --> 02:02:21,480
All right.

2250
02:02:21,480 --> 02:02:24,240
And you guys are going to have more prints

2251
02:02:25,360 --> 02:02:26,720
on repo.

2252
02:02:26,720 --> 02:02:29,040
And once again, with Asghar,
you guys go in.

2253
02:02:29,040 --> 02:02:32,680
He out, he will go over again,
those parties a little bit.

2254
02:02:33,000 --> 02:02:35,280
He probably will show the triangles.

2255
02:02:35,640 --> 02:02:39,680
And so this way you guys just can
continuously continue to practice.

2256
02:02:39,680 --> 02:02:40,200
Right?

2257
02:02:40,200 --> 02:02:45,040
By the one logic, always, always
remember this, whether it's a triangle,

2258
02:02:45,120 --> 02:02:49,320
whether it's reverse triangles,
square and numbers, whatever it is,

2259
02:02:49,320 --> 02:02:54,560
always look at it as a print in rows,
in all print in the columns.

2260
02:02:54,760 --> 02:02:57,760
Okay, So
any time you think of rows in the columns

2261
02:02:57,760 --> 02:03:03,600
or we need we need a nested nested
look will control your rows, right?

2262
02:03:03,600 --> 02:03:06,520
You will control your post
that goes in the horizontal way.

2263
02:03:06,520 --> 02:03:08,040
Right. Euros.

2264
02:03:08,040 --> 02:03:10,800
And there are so out of control your

2265
02:03:10,800 --> 02:03:14,280
your rows and the inner look will control
your columns.

2266
02:03:14,280 --> 02:03:16,360
Right will control your key.

2267
02:03:17,320 --> 02:03:18,480
And they are the difference.

2268
02:03:18,480 --> 02:03:21,600
Just which variable you're going to write.

2269
02:03:21,880 --> 02:03:24,400
Like in order to understand
which variable you're printing,

2270
02:03:24,680 --> 02:03:30,480
you just need to understand how the logic
your nested loop works, right?

2271
02:03:30,480 --> 02:03:36,240
So we know that inner loop
has to complete all cycles before it

2272
02:03:36,240 --> 02:03:40,720
exists and goes back and increments
the variable on the outer.

2273
02:03:41,040 --> 02:03:43,640
Look.

2274
02:03:43,640 --> 02:03:46,160
So very cool. Very, very fun stuff. Right?

2275
02:03:46,240 --> 02:03:49,000
If you guys, if you guys underspending
is probably fine.

2276
02:03:49,000 --> 02:03:52,440
If you're not underspending,
it's probably not too much fun.

2277
02:03:52,440 --> 02:03:56,200
But I hope at least you guys got an idea
at least how to print it,

2278
02:03:56,520 --> 02:03:57,760
how to print this course.

2279
02:03:57,760 --> 02:04:01,640
Okay,
so this will come with practice, right?

2280
02:04:01,640 --> 02:04:04,080
This will come as practice.

2281
02:04:04,560 --> 02:04:05,400
Okay.

2282
02:04:05,520 --> 02:04:07,560
Let me ask you guys who is confused?

2283
02:04:07,560 --> 02:04:10,800
Tell me who is confused in
on which loop in what

2284
02:04:10,800 --> 02:04:13,440
gives this output
or that output or this output?

2285
02:04:13,800 --> 02:04:16,200
Tell me guys,
I want to see who is confused

2286
02:04:24,960 --> 02:04:34,560
that I wanted to ask who is confused.

2287
02:04:34,560 --> 02:04:35,040
So to see.

2288
02:04:35,040 --> 02:04:37,560
Hopefully it will be less

2289
02:05:03,640 --> 02:05:04,080
good now.

2290
02:05:04,080 --> 02:05:06,080
So you forget.

2291
02:05:06,080 --> 02:05:08,600
So what I'm going to do guys,

2292
02:05:08,600 --> 02:05:09,640
my suggestion guys.

2293
02:05:09,640 --> 02:05:15,960
So I'm going to give you a of this pass
exact the same ones as we've done.

2294
02:05:16,120 --> 02:05:16,920
Okay.

2295
02:05:16,920 --> 02:05:19,440
My only suggestion guys, try to do them

2296
02:05:19,640 --> 02:05:22,880
after the class
without looking at the previous code

2297
02:05:23,040 --> 02:05:27,920
or maybe try to do them tomorrow
without looking at the class clock.

2298
02:05:27,920 --> 02:05:29,440
Right. And try to see try

2299
02:05:29,440 --> 02:05:33,200
try try to do it on your own
using your analysis in your logic.

2300
02:05:33,480 --> 02:05:35,520
And if you're able to do it on your own

2301
02:05:35,520 --> 02:05:39,240
after the class or tomorrow,
then you'll get

2302
02:05:39,240 --> 02:05:40,360
more attention.

2303
02:05:40,360 --> 02:05:42,480
You guys,
you guys have all the time in the world.

2304
02:05:42,640 --> 02:05:53,600
You guys have all the time in the world,
right?

2305
02:05:53,600 --> 02:05:56,600
Marianne So for a first for the first one,

2306
02:05:56,600 --> 02:06:00,600
you probably have some way of print,
right?

2307
02:06:01,200 --> 02:06:03,400
Let's see. You have screen, see

2308
02:06:05,880 --> 02:06:07,080
or because what happens?

2309
02:06:07,080 --> 02:06:10,240
Marianne If you look on your line 13,
look your line

2310
02:06:10,240 --> 02:06:15,200
13 one you trying to create a new line,
your line 13 is outside

2311
02:06:15,400 --> 02:06:17,040
of the nested loop.

2312
02:06:17,040 --> 02:06:19,200
You line 13 you put it in here.

2313
02:06:19,840 --> 02:06:23,640
So now if you put in here, right,
if you put it in in here

2314
02:06:23,680 --> 02:06:26,960
now for my chalkboard
always that's for my two code

2315
02:06:26,960 --> 02:06:30,600
now because your system that out
is outside of your loop.

2316
02:06:30,960 --> 02:06:32,880
That's
why it's not creating the line for you.

2317
02:06:32,880 --> 02:06:34,040
Right. This why is not created.

2318
02:06:34,040 --> 02:06:38,040
So you have to make sure it is inside
you are a loop, right?

2319
02:06:38,040 --> 02:06:40,400
It's at the end of your arrow.

2320
02:06:40,400 --> 02:06:44,000
Once you finish the row,
let me create a new line

2321
02:06:44,280 --> 02:06:50,960
with an extra.

2322
02:06:50,960 --> 02:06:52,520
You have to work after the class.

2323
02:06:52,520 --> 02:06:54,840
Well, try, try, try to squeeze. Right.

2324
02:06:54,840 --> 02:06:58,480
And I know guys, I keep reminding you,
but please, please, please

2325
02:06:58,480 --> 02:07:01,920
make sure right now
you guys are learning only Java, right?

2326
02:07:01,920 --> 02:07:06,480
Remember, you have to put 10 to 15 hours
on top of the classes.

2327
02:07:06,480 --> 02:07:10,600
If you just attending the classes,
doing the practice during the classes,

2328
02:07:10,600 --> 02:07:13,240
not going to work this,
you have to put time.

2329
02:07:13,240 --> 02:07:16,560
Okay. So every day, at least 1 to 2 hours.

2330
02:07:16,560 --> 02:07:20,040
If you cannot today,
make sure you put extra hour tomorrow

2331
02:07:20,800 --> 02:07:22,920
because next class and next week,
that's it.

2332
02:07:22,920 --> 02:07:26,000
You guys have all Java.
So there is no fun.

2333
02:07:26,280 --> 02:07:27,880
I mean, there is is still a fun. Right.

2334
02:07:27,880 --> 02:07:30,840
But in terms of there's no like testing.

2335
02:07:30,840 --> 02:07:32,880
There is no SDLC, Right.

2336
02:07:32,880 --> 02:07:35,600
So you will be all completely practical,
right?

2337
02:07:35,600 --> 02:07:40,000
So that's why please, please, please
make sure this 10 to 15 hours in,

2338
02:07:40,000 --> 02:07:43,440
you move in from Java guys,
once your selenium classes start,

2339
02:07:43,920 --> 02:07:47,360
then you will have to increase your time
more while you will have

2340
02:07:47,360 --> 02:07:48,480
to increase your time more.

2341
02:07:48,480 --> 02:07:51,680
Because besides Java,
a new concept is coming.

2342
02:07:51,680 --> 02:07:56,360
So then you guys have to make sure
you have a space in your brain

2343
02:07:56,360 --> 02:07:59,040
and you guys have time to study in

2344
02:07:59,400 --> 02:08:02,240
of that part right?

2345
02:08:02,240 --> 02:08:04,560
2 hours on top, outside of the class.

2346
02:08:04,760 --> 02:08:06,320
Outside of the class. Remember this?

2347
02:08:06,320 --> 02:08:09,320
That was our requirement
right when you joined because right now

2348
02:08:09,320 --> 02:08:12,080
requirement
is that you study 10 to 15 hours

2349
02:08:13,120 --> 02:08:14,360
outside of the time.

2350
02:08:14,360 --> 02:08:16,400
If that's includes your whole,
that's fine.

2351
02:08:16,400 --> 02:08:18,400
But just try to make sure
you practice all of it.

2352
02:08:18,680 --> 02:08:23,480
Because remember the concept art,
keep getting and more and more right

2353
02:08:24,400 --> 02:08:27,200
next week
you will be completely brand new concept

2354
02:08:27,200 --> 02:08:30,240
where you guys won't be touch in your
at the beginning,

2355
02:08:30,240 --> 02:08:32,920
you guys won't be touching their
and other stuff.

2356
02:08:32,920 --> 02:08:36,280
So you want to make sure you don't forget
you continuously practicing. Okay

2357
02:08:46,520 --> 02:08:51,200
well okay nice.

2358
02:08:51,200 --> 02:08:54,800
You have an issue with you
which try to close it and then reopen

2359
02:08:54,800 --> 02:08:59,360
it tried to close it and then we open.

2360
02:08:59,360 --> 02:09:00,320
All right.

2361
02:09:00,320 --> 02:09:01,520
Okay. This

2362
02:09:03,120 --> 02:09:05,400
and who want to teach selenium.

2363
02:09:05,400 --> 02:09:09,840
There will be different instructors, guys
that will be teaching your other topics.

2364
02:09:09,840 --> 02:09:10,440
Right.

2365
02:09:11,520 --> 02:09:19,040
Okay.

2366
02:09:19,040 --> 02:09:23,760
So one thing is,
when it comes to practicing websites,

2367
02:09:24,440 --> 02:09:26,760
it's a little bit I say

2368
02:09:26,880 --> 02:09:30,240
some of them are good, of them
are not that good. Why?

2369
02:09:30,640 --> 02:09:32,400
Because, look, whatever counts

2370
02:09:32,400 --> 02:09:35,400
when it comes to Java,
Java is a programing language.

2371
02:09:35,400 --> 02:09:38,160
Right? Then who is using this
language? Is a developer.

2372
02:09:38,160 --> 02:09:42,080
So some of those tasks
I'll share some of them guys.

2373
02:09:42,120 --> 02:09:43,480
But one thing I don't want you

2374
02:09:43,480 --> 02:09:47,240
to get scared because of
some of the exercises will be too complex.

2375
02:09:47,520 --> 02:09:50,920
They are because they are created
for developers, right?

2376
02:09:51,240 --> 02:09:54,120
And then in the days we are not trying
to become a developers, right?

2377
02:09:54,120 --> 02:09:55,160
We are testers, right?

2378
02:09:55,160 --> 02:09:57,720
We use in only this part of Java.

2379
02:09:57,720 --> 02:10:00,360
Don't need to learn all this
java that is in there. Right?

2380
02:10:00,360 --> 02:10:02,160
We just learning.

2381
02:10:02,160 --> 02:10:05,240
We learn in a good amount,
but we are not learning inside Java.

2382
02:10:05,240 --> 02:10:09,920
So that's why
when it comes to those different different

2383
02:10:10,320 --> 02:10:14,160
applications where you go, where you can
find, you know, those Java seminars,

2384
02:10:14,160 --> 02:10:17,280
some of them could be hard,
but I don't want you to scared them.

2385
02:10:17,280 --> 02:10:21,960
That's why what we do, guys, we teach,
we create our own ripple assignments.

2386
02:10:22,240 --> 02:10:25,080
So this way they match our curriculum.

2387
02:10:25,080 --> 02:10:29,280
In this way, we are there to practice
the skills that you need.

2388
02:10:29,400 --> 02:10:41,800
Okay, okay.

2389
02:10:42,640 --> 02:10:44,760
I'll share some of those.
I'll share some of those.

2390
02:10:44,760 --> 02:10:50,640
And the one thing is try to also go
to some of the applications, right.

2391
02:10:50,640 --> 02:10:53,800
To try to go to some websites
when you just, you know,

2392
02:10:54,600 --> 02:10:57,480
Java tutorials, right.

2393
02:10:57,480 --> 02:11:02,480
And to those waiting
sometimes is also gives you a good right.

2394
02:11:04,040 --> 02:11:05,280
So I'm glad to meet you too.

2395
02:11:05,280 --> 02:11:07,080
Is that right?

2396
02:11:07,080 --> 02:11:10,560
W three schools, I know
they have a practice in there, right.

2397
02:11:10,560 --> 02:11:13,200
So for example here, right.

2398
02:11:13,200 --> 02:11:14,040
What are we learning?

2399
02:11:14,040 --> 02:11:16,400
We are learning a little control, right?

2400
02:11:16,400 --> 02:11:17,480
Little control.

2401
02:11:17,480 --> 02:11:21,640
So you go in here, he read in here,
try to look into the some assignments

2402
02:11:21,640 --> 02:11:23,160
and then try to do them as well.

2403
02:11:23,160 --> 02:11:28,920
I try to do them as well.

2404
02:11:28,920 --> 02:11:30,440
Well, there's Java. Okay, guys.

2405
02:11:30,440 --> 02:11:34,360
Yes. 50% of the time
your interviews will be made.

2406
02:11:34,400 --> 02:11:37,560
Okay. Maybe not 50, maybe 40%.

2407
02:11:37,800 --> 02:11:41,320
You in 30, you will be related to Java,
but there will be different concepts.

2408
02:11:41,320 --> 02:11:43,200
Okay. Will they ask you to code? Yes.

2409
02:11:43,200 --> 02:11:44,880
Sometimes they will ask you to go to.

2410
02:11:44,880 --> 02:11:47,400
Okay, so.

2411
02:11:47,400 --> 02:11:51,120
But trust me, guys, if you fall
in the class, if you fall in the class,

2412
02:11:51,120 --> 02:11:55,200
if you do know the whole works,
and if you are practicing, trust me, guys.

2413
02:11:55,200 --> 02:11:59,720
And then of the course you will be very,
very comfortable doing those assignments.

2414
02:12:00,320 --> 02:12:02,400
And on top of that, you guys will have us.

2415
02:12:02,400 --> 02:12:03,960
So we always provide a help.

2416
02:12:03,960 --> 02:12:13,080
Okay, Melanie,
you are missing your brackets.

2417
02:12:13,080 --> 02:12:14,120
You're missing your break.

2418
02:12:14,120 --> 02:12:17,440
Is this Please pay attention
where your break is.

2419
02:12:17,440 --> 02:12:20,840
That opens your code for oh, for
what is your break is where it opens

2420
02:12:20,840 --> 02:12:23,480
the code for a in there for loop.

2421
02:12:23,920 --> 02:12:25,160
You end in your statements.

2422
02:12:25,160 --> 02:12:28,200
We not ending the statement
after we define the condition.

2423
02:12:28,320 --> 02:12:31,760
Okay.

2424
02:12:31,760 --> 02:12:32,440
Okay.

2425
02:12:32,920 --> 02:12:35,600
But usually the article by Novus,
it will be all mixed.

2426
02:12:35,600 --> 02:12:35,840
Okay?

2427
02:12:35,840 --> 02:12:40,920
It will be all mixed. And

2428
02:12:43,120 --> 02:12:43,960
our hardest to

2429
02:12:43,960 --> 02:12:47,040
do the testing all at the beginning.

2430
02:12:47,040 --> 02:12:49,440
Could be a little bit
depend on the company. Right.

2431
02:12:49,440 --> 02:12:52,120
But then you guys will get used to it.

2432
02:12:52,120 --> 02:12:52,520
Okay.

2433
02:12:54,200 --> 02:12:56,640
For me it was the hardest
part will be to get a job.

2434
02:12:56,640 --> 02:12:59,520
Once you land the job,
then then the part will be easy, guys.

2435
02:12:59,800 --> 02:13:02,440
Okay. All right.

2436
02:13:02,440 --> 02:13:04,840
But before they land the job,
we have to study, right?

2437
02:13:04,840 --> 02:13:05,840
We have to say.

2438
02:13:05,840 --> 02:13:09,240
Okay, So let me just

2439
02:13:09,240 --> 02:13:13,160
quickly repeat this part
when it comes to loops.

2440
02:13:13,160 --> 02:13:13,760
Right.

2441
02:13:14,520 --> 02:13:17,160
So in order for you to understand,
then this.

2442
02:13:17,160 --> 02:13:20,600
But look, of course,
what you guys have to make sure you guys

2443
02:13:20,600 --> 02:13:24,760
have to make sure that you understand
the concept of the basic right,

2444
02:13:24,800 --> 02:13:27,480
that you understand
the concept of the basic work.

2445
02:13:27,840 --> 02:13:31,600
And once you understand the concept,
when the logic of the basic loop,

2446
02:13:31,920 --> 02:13:35,200
then you can test one, two, three, four,
five loops.

2447
02:13:35,200 --> 02:13:37,920
You guys will be able to understand
no matter what, right?

2448
02:13:38,280 --> 02:13:41,320
So Luke once again goes the way for loop

2449
02:13:41,800 --> 02:13:45,200
initialization happens,
first condition happens.

2450
02:13:45,200 --> 02:13:51,080
Second, going inside, executing the code
after that we don't stop.

2451
02:13:51,360 --> 02:13:54,400
We go back and then we do the increment.

2452
02:13:54,400 --> 02:13:54,680
Right.

2453
02:13:54,680 --> 02:13:58,240
Then we do this increment
and then cycle repeats increment

2454
02:13:58,680 --> 02:14:03,040
check the condition going inside,
executing the code, going back

2455
02:14:03,600 --> 02:14:06,000
incrementing, checking the condition,

2456
02:14:06,280 --> 02:14:09,400
going back,
executing the block of spot right.

2457
02:14:09,400 --> 02:14:11,680
Can we do more to this?
We will have more exercise.

2458
02:14:12,120 --> 02:14:13,200
Maybe not for that.

2459
02:14:14,320 --> 02:14:16,600
Not or

2460
02:14:16,600 --> 02:14:20,120
not for what we called it
four quarters, right.

2461
02:14:20,280 --> 02:14:23,440
Because quarters
we just bring us just for a little fun.

2462
02:14:23,440 --> 02:14:24,000
Right.

2463
02:14:24,240 --> 02:14:27,080
So now when you add the nested loop,

2464
02:14:27,280 --> 02:14:29,760
a cycle is exact exactly the same, right?

2465
02:14:30,320 --> 02:14:35,280
Checking the condition, initializing,
checking the condition, going inside.

2466
02:14:35,840 --> 02:14:39,280
Now your job is another for initialize.

2467
02:14:39,280 --> 02:14:39,520
Check.

2468
02:14:39,520 --> 02:14:44,520
The condition Going inside
is an only condition is true.

2469
02:14:44,520 --> 02:14:45,160
Right?

2470
02:14:45,200 --> 02:14:47,840
Then this cycle repeats how many times

2471
02:14:47,840 --> 02:14:50,800
this cycle will repeat
based on your conditions.

2472
02:14:50,880 --> 02:14:56,120
How many times a value of j will be less
or equal than two three times right?

2473
02:14:56,360 --> 02:15:00,720
When the j equals three zero,
when the equals to one one equals two

2474
02:15:01,560 --> 02:15:02,520
three times.

2475
02:15:02,520 --> 02:15:05,600
So you in there
look will repeat this cycle three times

2476
02:15:05,880 --> 02:15:09,240
in only
and only then your java goes back to you.

2477
02:15:09,480 --> 02:15:10,640
Our look,

2478
02:15:11,680 --> 02:15:14,320
then the java goes to the

2479
02:15:14,840 --> 02:15:17,760
bridge to always, always remember
that logic is in place.

2480
02:15:17,760 --> 02:15:19,800
Please make sure you do a debugging.

2481
02:15:19,800 --> 02:15:21,840
Now we going to learn Java methods. Yes.

2482
02:15:21,840 --> 02:15:24,960
After you guys start learning. Oops.

2483
02:15:24,960 --> 02:15:27,560
Only then we learn all that fun stuff
about Joe.

2484
02:15:27,720 --> 02:15:31,800
Okay, this is just the beginning
as we learn in the basics, right?

2485
02:15:31,800 --> 02:15:34,760
This we're learning the basics,
which is common among

2486
02:15:35,640 --> 02:15:38,280
most of the programing languages, right?

2487
02:15:38,280 --> 02:15:40,480
And then when it comes to Java,

2488
02:15:40,680 --> 02:15:45,840
Java is an object oriented,
object oriented language, right?

2489
02:15:45,840 --> 02:15:50,640
So there's a concept that that stays
behind this object oriented programing.

2490
02:15:50,640 --> 02:15:53,880
There's some principles on which Java

2491
02:15:53,880 --> 02:15:56,880
has been built,
and those principles are important, right?

2492
02:15:57,160 --> 02:15:58,720
So those principles, guys,

2493
02:15:58,720 --> 02:16:01,800
from starting from Wednesday,
you guys or starting from

2494
02:16:02,640 --> 02:16:05,120
starting from
whether you guys will continue learning

2495
02:16:05,200 --> 02:16:08,480
after that for the next 2025 classes.

2496
02:16:08,480 --> 02:16:10,880
Okay. That concept is very amazing,

2497
02:16:10,920 --> 02:16:14,200
very interesting
and very beautiful concept.

2498
02:16:14,360 --> 02:16:15,600
Okay.

2499
02:16:15,600 --> 02:16:18,920
And then All right,

2500
02:16:18,920 --> 02:16:22,760
now when it comes to nested loops,
you guys all,

2501
02:16:23,120 --> 02:16:26,880
when it comes to us that loops,
we will give you guys more ripple.

2502
02:16:27,080 --> 02:16:28,560
It will give more ripple.

2503
02:16:29,640 --> 02:16:31,200
All the tasks we have done.

2504
02:16:31,200 --> 02:16:33,640
And I will ask you guys
to repeat all this part

2505
02:16:33,640 --> 02:16:36,200
and I'll send you them as a homework.
And once again, this.

2506
02:16:36,200 --> 02:16:39,120
Please don't look at this
and the solutions

2507
02:16:39,120 --> 02:16:42,320
look only only in the questions
and try to do them.

2508
02:16:42,480 --> 02:16:44,760
Okay?

2509
02:16:44,760 --> 02:16:54,120
If we on which level we will learn

2510
02:16:54,120 --> 02:16:58,080
Java or you will learn a very,
very good amount of Java.

2511
02:16:58,080 --> 02:17:00,560
This you will be with starting is basics.

2512
02:17:00,560 --> 02:17:04,440
You will be learning main oops concept
and then we will be learning advanced

2513
02:17:04,440 --> 02:17:07,520
concepts of Java, how to read our

2514
02:17:07,880 --> 02:17:10,840
How to read Excel files,
how to do different, different stuff.

2515
02:17:10,960 --> 02:17:14,400
Okay, so you guys trust me that you will
learn a lot when it comes to Java.

2516
02:17:14,400 --> 02:17:16,320
You guys will be very, very strong. Okay,

2517
02:17:18,160 --> 02:17:20,520
This is we call them basics.

2518
02:17:20,520 --> 02:17:21,240
I will call them.

2519
02:17:21,240 --> 02:17:22,960
Maybe it's not the right word.

2520
02:17:22,960 --> 02:17:25,320
You call the basics, but this is basics.

2521
02:17:25,320 --> 02:17:29,200
Why we call it because these basics exist
in every programing language, right?

2522
02:17:29,520 --> 02:17:31,360
And this is basics.

2523
02:17:31,360 --> 02:17:34,080
And oops, they will be completely two
different parts.

2524
02:17:34,160 --> 02:17:38,600
Okay, So here
we deal with variables and we deal with

2525
02:17:39,440 --> 02:17:41,560
if conditions and all that stuff.

2526
02:17:41,840 --> 02:17:45,280
When it comes to ops, you guys
will be dealing with something different.

2527
02:17:45,280 --> 02:17:46,160
Is this object.

2528
02:17:46,160 --> 02:17:48,040
There's a classes, there's a net does

2529
02:17:48,040 --> 02:17:51,760
there's a different principles
and they are different.

2530
02:17:52,000 --> 02:17:53,160
They are different. Okay.

2531
02:17:53,160 --> 02:17:55,880
So some students find

2532
02:17:55,880 --> 02:17:59,600
oops concept easier compared to what
they learned The beginning

2533
02:17:59,880 --> 02:18:02,680
actually majority of the students, that's
what they find it is.

2534
02:18:02,800 --> 02:18:03,360
Okay.

2535
02:18:03,600 --> 02:18:05,160
So you guys will tell me.

2536
02:18:05,160 --> 02:18:06,120
You guys will tell me.

2537
02:18:07,280 --> 02:18:08,320
All right.

2538
02:18:08,320 --> 02:18:12,360
So today, our main topic,
that's what I would like to start

2539
02:18:12,640 --> 02:18:16,760
and this is one of the last topics
that we guys will be covering

2540
02:18:18,040 --> 02:18:21,000
when it comes to learning together is our
if conditions

2541
02:18:21,000 --> 02:18:25,760
and loops and all that part,
we will be looking into a race.

2542
02:18:26,400 --> 02:18:29,040
We will be looking our race,

2543
02:18:29,040 --> 02:18:29,680
right.

2544
02:18:29,680 --> 02:18:32,640
So before we move into the objects
and classes

2545
02:18:32,640 --> 02:18:35,840
and all the strings
and all, all other other different stuff,

2546
02:18:35,840 --> 02:18:39,040
this is one of the last stuff
that we're going to look

2547
02:18:39,040 --> 02:18:41,200
and there's a different variations over
it's fake.

2548
02:18:41,800 --> 02:18:45,160
So now I ask you guys yesterday
to take a look at their race.

2549
02:18:45,160 --> 02:18:46,280
What did you guys love?

2550
02:18:46,280 --> 02:18:49,440
What did you guys learn about a race

2551
02:18:55,720 --> 02:18:56,680
dominance?

2552
02:18:56,680 --> 02:19:00,360
I want to know what you learn.

2553
02:19:00,360 --> 02:19:08,320
Besides that, they have fun, right?

2554
02:19:08,320 --> 02:19:12,120
I say, okay, erase this same data type.

2555
02:19:12,120 --> 02:19:12,600
Okay.

2556
02:19:12,600 --> 02:19:16,080
It can hold values of same data type.

2557
02:19:16,080 --> 02:19:22,040
Okay.

2558
02:19:22,040 --> 02:19:23,640
Election of similar narrative.

2559
02:19:23,640 --> 02:19:25,560
That's it. That's a good point.

2560
02:19:25,560 --> 02:19:26,040
Great.

2561
02:19:26,040 --> 02:19:31,920
Cause the same type of elements
look similar to this by using a case

2562
02:19:32,000 --> 02:19:34,880
using the
now we will bring our square brackets

2563
02:19:35,000 --> 02:19:41,560
right.

2564
02:19:41,560 --> 02:19:41,840
Okay.

2565
02:19:43,320 --> 02:19:43,760
What else?

2566
02:19:43,760 --> 02:19:51,240
What else did you guys learn?

2567
02:19:51,240 --> 02:19:53,040
You guys should go. Look.

2568
02:19:53,040 --> 02:19:54,880
It will be used in square brackets.

2569
02:19:54,880 --> 02:19:56,440
Okay?

2570
02:19:56,440 --> 02:20:00,240
It's it will it technically a variable

2571
02:20:00,240 --> 02:20:04,160
that will allow us to store
multiple values inside?

2572
02:20:04,160 --> 02:20:07,720
Okay, that's good.

2573
02:20:07,720 --> 02:20:16,200
So busy with clock.

2574
02:20:16,200 --> 02:20:18,240
It has a size. Okay, that's good.

2575
02:20:18,400 --> 02:20:19,760
It has a size where we call.

2576
02:20:19,760 --> 02:20:23,080
We will call let. Okay.

2577
02:20:23,080 --> 02:20:24,880
All right, let me look.

2578
02:20:24,880 --> 02:20:26,960
So arrays in jump. Right.

2579
02:20:26,960 --> 02:20:31,160
So whenever we just started
with our Java, right?

2580
02:20:31,160 --> 02:20:33,600
Whenever we just started with Java.

2581
02:20:33,600 --> 02:20:36,760
Let me see class.

2582
02:20:36,760 --> 02:20:42,320
Sorry.

2583
02:20:42,320 --> 02:20:57,000
Oh, array store to use multiple values
in this single variable,

2584
02:20:57,080 --> 02:20:59,600
they go instead of declaring as separate
variables.

2585
02:20:59,600 --> 02:21:02,280
That's right
So what do we learn? This, right?

2586
02:21:02,280 --> 02:21:05,680
We learn that, hey, in Java
we have variables, right?

2587
02:21:05,840 --> 02:21:09,880
In Java we have variables. Yep.

2588
02:21:09,880 --> 02:21:11,680
Inside the arrays, of course,

2589
02:21:11,680 --> 02:21:16,320
there has to be a particular location
of have to sign right now.

2590
02:21:16,360 --> 02:21:19,240
Inside one variable
we learned that we can hold.

2591
02:21:19,240 --> 02:21:21,160
We can store one value, right?

2592
02:21:21,160 --> 02:21:23,360
That we can store one value.

2593
02:21:23,360 --> 02:21:27,560
So we said, Hey, I cannot store ten and
then the live one and then 12 and then 13.

2594
02:21:27,560 --> 02:21:31,280
I cannot store all this values
inside one variable.

2595
02:21:31,280 --> 02:21:32,600
Right? So what do we say?

2596
02:21:32,600 --> 02:21:35,840
One variable, One single variable

2597
02:21:36,080 --> 02:21:39,760
can hold only one single now, Right?

2598
02:21:39,760 --> 02:21:41,840
That's what we already know.

2599
02:21:41,840 --> 02:21:44,240
So now there could be a situation.

2600
02:21:44,240 --> 02:21:46,760
Think of the situation
that's for example, right?

2601
02:21:47,840 --> 02:21:49,040
For example.

2602
02:21:49,040 --> 02:21:54,120
Now I have all of you right now,
for example, let's think of the scenario.

2603
02:21:54,200 --> 02:21:56,440
Let's let's think of the scenario where,

2604
02:21:57,760 --> 02:22:02,320
for example, what I have to do,
I have to calculate you race, right?

2605
02:22:02,320 --> 02:22:09,920
I have to calculate
where was your joke was one.

2606
02:22:09,920 --> 02:22:13,120
Let's say I have to calculate your all
your grades, right?

2607
02:22:13,120 --> 02:22:15,120
I want to calculate the average.

2608
02:22:15,600 --> 02:22:18,680
I want to see how you guys are doing
right.

2609
02:22:18,680 --> 02:22:20,600
I want to see how you guys are doing.

2610
02:22:20,600 --> 02:22:22,920
So now what I will have to do,

2611
02:22:23,280 --> 02:22:28,200
I have to store the value
right of student, right?

2612
02:22:28,200 --> 02:22:31,760
The score of each student I have to store.

2613
02:22:32,080 --> 02:22:35,840
And then in order for me
to find the average,

2614
02:22:35,840 --> 02:22:38,840
what I will have to do,
I will have to add all of it

2615
02:22:38,840 --> 02:22:41,240
and then divide it
by the number of people. Right?

2616
02:22:41,520 --> 02:22:45,720
So now think, okay, guys,
how many variables I would have to create?

2617
02:22:45,720 --> 02:22:47,880
I will have to create one, two,
three, four.

2618
02:22:47,880 --> 02:22:51,520
I will have to create a thousand
tons of variables.

2619
02:22:51,520 --> 02:22:52,320
Right?

2620
02:22:52,320 --> 02:22:56,160
So now first 50 lines of code will just

2621
02:22:56,160 --> 02:23:00,720
consist of me declaring the variables
and storing the values.

2622
02:23:00,720 --> 02:23:02,440
Right now

2623
02:23:03,400 --> 02:23:04,880
it cannot work.

2624
02:23:04,880 --> 02:23:05,800
Yes, it can work.

2625
02:23:05,800 --> 02:23:06,640
What now?

2626
02:23:06,640 --> 02:23:09,400
Java gives us a better approach.

2627
02:23:09,480 --> 02:23:10,800
Better approach, right?

2628
02:23:10,800 --> 02:23:14,600
So now, when it comes to storing
your grades, right.

2629
02:23:14,840 --> 02:23:18,760
40, 13, 14, 13, 15, 11, eight.

2630
02:23:19,080 --> 02:23:23,520
So now they are integer type of values,
right?

2631
02:23:23,560 --> 02:23:25,840
They are integer type of values that.

2632
02:23:25,840 --> 02:23:28,240
I'm storing inside different variables.

2633
02:23:28,520 --> 02:23:32,760
Now, Java is he whenever you have

2634
02:23:33,360 --> 02:23:37,720
this same type of values, my in my case
it will be integer.

2635
02:23:37,720 --> 02:23:38,680
Right. Okay.

2636
02:23:38,680 --> 02:23:43,400
Whenever you have the same type of values,
what are you can do?

2637
02:23:43,640 --> 02:23:47,440
You can store them inside one variable

2638
02:23:48,120 --> 02:23:51,520
and this variable
will be a very huge container.

2639
02:23:51,840 --> 02:23:54,040
It will be a very huge container.

2640
02:23:54,040 --> 02:23:57,600
So now how do we how we will

2641
02:23:57,600 --> 02:24:02,000
be able to now
how can this store ten, 12, 13, 14, eight.

2642
02:24:02,000 --> 02:24:03,040
Right. All of those.

2643
02:24:03,040 --> 02:24:07,240
And now Java gives us a concept of a race.

2644
02:24:07,240 --> 02:24:09,600
Right. So if we're going to look

2645
02:24:11,400 --> 02:24:15,280
at this point, we're going to look.

2646
02:24:15,280 --> 02:24:19,680
So now before this is my variable, right
this material of integer null

2647
02:24:20,000 --> 02:24:22,880
and it has a it takes this phase, right?

2648
02:24:23,120 --> 02:24:26,200
So it was holding value of ten, right.

2649
02:24:26,480 --> 02:24:28,600
One variable, Right.

2650
02:24:28,600 --> 02:24:30,600
One variable and one value.

2651
02:24:30,600 --> 02:24:33,440
Right. One variable
that holds want value. Right.

2652
02:24:33,440 --> 02:24:35,040
What is the value ten?

2653
02:24:35,040 --> 02:24:37,080
What is the name of my variable Numb.

2654
02:24:37,080 --> 02:24:39,080
What type of L equals integer?

2655
02:24:39,080 --> 02:24:41,280
Hey now it would be great.

2656
02:24:41,280 --> 02:24:45,240
Hey, what I have now inside one
variable, right?

2657
02:24:46,640 --> 02:24:48,520
What if inside one variable I'm one.

2658
02:24:48,520 --> 02:24:56,080
Let me make it a little bit bigger.

2659
02:24:56,080 --> 02:25:00,000
Hey now I think it would be cool
if inside one of you are able.

2660
02:25:00,040 --> 02:25:00,720
Right?

2661
02:25:00,720 --> 02:25:05,160
I get inside, I can store these values,
I can store ten

2662
02:25:05,160 --> 02:25:09,560
and then we so 12, 13 and then maybe 14.

2663
02:25:09,920 --> 02:25:12,120
And let me bring maybe one more in here.

2664
02:25:12,120 --> 02:25:14,240
I don't think 12 right here.

2665
02:25:14,240 --> 02:25:17,840
It would be cool
if I can have one container

2666
02:25:18,160 --> 02:25:23,760
in which I can store all this
values will be pretty, pretty cool, right?

2667
02:25:23,760 --> 02:25:24,960
Will be pretty cool.

2668
02:25:24,960 --> 02:25:28,200
Okay, so now is this possible in Java?

2669
02:25:28,200 --> 02:25:29,400
Yes, it is possible.

2670
02:25:29,400 --> 02:25:34,760
How is it possible it passed a book
with the help of arrays, right?

2671
02:25:34,760 --> 02:25:36,400
With the help of arrays.

2672
02:25:36,400 --> 02:25:40,680
So now how am I going to define that?

2673
02:25:40,680 --> 02:25:45,000
This variable now, when you look right
now, when you look in here and

2674
02:25:45,720 --> 02:25:47,040
now when we look in here,

2675
02:25:48,040 --> 02:25:48,960
ready one

2676
02:25:48,960 --> 02:25:52,680
when you look in here, this is a variable
that holds single value.

2677
02:25:52,960 --> 02:25:56,080
Now, this variable
that holds multiple values, right?

2678
02:25:56,400 --> 02:26:00,040
But those values of which type,
those values are still

2679
02:26:00,040 --> 02:26:03,080
of the integer type, right Integer type.

2680
02:26:03,360 --> 02:26:04,520
Now, the same thing.

2681
02:26:04,520 --> 02:26:07,280
I have to give a name for my variable,
right?

2682
02:26:07,600 --> 02:26:08,920
The role of the variable.

2683
02:26:08,920 --> 02:26:12,920
You have to give me the name
and then tell me what are your story.

2684
02:26:13,000 --> 02:26:15,640
Right? So now I can say integer.

2685
02:26:15,640 --> 02:26:17,240
All right, so now what?

2686
02:26:17,240 --> 02:26:22,080
I'm just going to click on create this
and say integer are equals to 12.

2687
02:26:22,080 --> 02:26:25,760
Then 1314 my Java is going to complain.

2688
02:26:25,760 --> 02:26:28,080
My compiler will give me the error.

2689
02:26:28,080 --> 02:26:30,720
Now how do I identify?

2690
02:26:30,720 --> 02:26:35,720
I have a collection of values
inside this variable.

2691
02:26:35,720 --> 02:26:38,080
We have to specify that it's in there,
right?

2692
02:26:38,400 --> 02:26:44,000
To specify that you're variable holds
array or integer.

2693
02:26:44,000 --> 02:26:46,240
We will add the square bracket.

2694
02:26:46,240 --> 02:26:47,800
We will add the square brackets.

2695
02:26:47,800 --> 02:26:52,800
And now as soon as you going to add
the square brackets, your java is fine.

2696
02:26:53,240 --> 02:26:55,640
So now your java knows, okay,

2697
02:26:55,840 --> 02:26:59,840
you have a variable
which is a are this variable

2698
02:27:00,640 --> 02:27:02,960
a numbers integer type of values.

2699
02:27:02,960 --> 02:27:07,920
But what it holds,
it holds in the way it holds a collection

2700
02:27:07,920 --> 02:27:11,080
of those integer type of values.

2701
02:27:11,320 --> 02:27:14,880
Now, when you think of,
think of it as when you guys

2702
02:27:14,880 --> 02:27:17,160
are going to take a big box, right?

2703
02:27:17,160 --> 02:27:20,520
So now before you store only value,

2704
02:27:20,720 --> 02:27:23,880
you can easily access it
right When you store one thing.

2705
02:27:24,160 --> 02:27:28,680
Now think there will be a big box and you
going to throw many things inside, right?

2706
02:27:29,160 --> 02:27:31,280
It's going, no, no, no.

2707
02:27:31,280 --> 02:27:34,240
Remember,
the variable can be any, any, any name.

2708
02:27:36,040 --> 02:27:36,680
Any name.

2709
02:27:36,680 --> 02:27:37,760
Right. Any name.

2710
02:27:37,760 --> 02:27:40,040
So that's why I just named Air. Okay.

2711
02:27:40,440 --> 02:27:44,800
So now when you think of the big variable
and the one

2712
02:27:44,800 --> 02:27:47,800
you want to draw, just everything
like that, it will be a mess.

2713
02:27:48,160 --> 02:27:48,880
It will be a mess.

2714
02:27:48,880 --> 02:27:52,800
Then How can you find something
that you throw in there?

2715
02:27:52,800 --> 02:27:53,600
Right?

2716
02:27:53,640 --> 02:27:59,320
So if there is no order, then
there will be a big issue in Java says,

2717
02:27:59,320 --> 02:28:03,040
Hey, no problem, I'll give you a variable

2718
02:28:03,040 --> 02:28:05,640
in which you can store multiple values.

2719
02:28:06,040 --> 02:28:07,800
You want to store ten values inside.

2720
02:28:07,800 --> 02:28:09,680
That will probably want to store 20.

2721
02:28:09,680 --> 02:28:12,440
They'll probably want to store 1000,
no problem.

2722
02:28:12,800 --> 02:28:17,640
But Java says, Hey, you know,
how am I going to store those values?

2723
02:28:18,000 --> 02:28:21,240
Because The purpose of the variable
we store in the values

2724
02:28:21,560 --> 02:28:23,760
and then we want to access them, right?

2725
02:28:23,760 --> 02:28:24,920
So in order for you

2726
02:28:24,920 --> 02:28:29,080
to be easy to access them,
they have to be stored in order, right?

2727
02:28:29,080 --> 02:28:31,080
They have to be stored in order.

2728
02:28:31,080 --> 02:28:33,680
So now which order

2729
02:28:33,680 --> 02:28:37,400
we are following in here, the way array

2730
02:28:37,520 --> 02:28:43,240
the array stores, the data, it's storage,
the data based on the images.

2731
02:28:43,240 --> 02:28:45,280
Right. Based on the indexes.

2732
02:28:45,280 --> 02:28:48,520
So now indexes in Java, okay.

2733
02:28:49,480 --> 02:28:50,040
In those

2734
02:28:50,040 --> 02:28:54,600
indexes
is Java always always starts from zero.

2735
02:28:54,680 --> 02:28:55,120
Okay.

2736
02:28:55,120 --> 02:29:01,000
So now the way Java will say, okay,
this is my variable inside here.

2737
02:29:01,080 --> 02:29:02,800
Now you throw four values.

2738
02:29:02,800 --> 02:29:04,920
Now how they will be put.

2739
02:29:05,400 --> 02:29:08,760
So now what I'm going to say,
hey inside the variable, right,

2740
02:29:09,320 --> 02:29:12,880
with the index zero

2741
02:29:12,880 --> 02:29:14,120
inside the variable. Right.

2742
02:29:14,120 --> 02:29:18,320
So now what you have, it's like you,
you guys have your draw, right?

2743
02:29:18,320 --> 02:29:20,600
You guys have you draw inside the draw.

2744
02:29:20,600 --> 02:29:23,400
You have those multiple,
multiple boxes inside, Right.

2745
02:29:23,400 --> 02:29:24,800
So how you call this, Right.

2746
02:29:24,800 --> 02:29:27,920
So now you know what
you put the first one second one third,

2747
02:29:27,920 --> 02:29:31,120
one fourth, one fifth one,
but it's still one draw, right?

2748
02:29:31,120 --> 02:29:32,280
Is still one. Right.

2749
02:29:32,280 --> 02:29:33,840
So the same thing in here.

2750
02:29:33,840 --> 02:29:36,720
What do you have? Hey,
I have a big cabinets right.

2751
02:29:36,760 --> 02:29:38,040
I have a big cabinets.

2752
02:29:38,040 --> 02:29:41,320
Now, inside my first one,
I stored about 12.

2753
02:29:41,840 --> 02:29:45,120
Inside my second one I stored it

2754
02:29:45,120 --> 02:29:49,360
value of ten inside
my third one are stored it.

2755
02:29:49,880 --> 02:29:50,200
Whoops,

2756
02:29:51,800 --> 02:29:57,960
it inside my door, one

2757
02:29:58,600 --> 02:30:04,120
that's stored at 13 inside my fourth one,
I store 14.

2758
02:30:04,120 --> 02:30:04,840
Right.

2759
02:30:04,920 --> 02:30:10,440
So now, basically now
when you have this big box, what happened?

2760
02:30:10,440 --> 02:30:15,440
This big box is being split
it into small parts, right?

2761
02:30:15,840 --> 02:30:18,520
And small parts small boxes inside.

2762
02:30:18,600 --> 02:30:19,200
Right.

2763
02:30:19,280 --> 02:30:24,200
So now how those values, those are stored
in the organized matter, because

2764
02:30:24,320 --> 02:30:27,560
they won't be in the organized because
there's no way you can access them.

2765
02:30:28,040 --> 02:30:28,560
Right.

2766
02:30:28,560 --> 02:30:32,160
So how they store the store
in the form of indexes,

2767
02:30:32,640 --> 02:30:36,840
any programing language you go guys
indexes always start from zero.

2768
02:30:36,920 --> 02:30:39,440
Okay, indexes start from zero.

2769
02:30:39,440 --> 02:30:41,240
So now

2770
02:30:41,960 --> 02:30:43,520
in my variable

2771
02:30:43,520 --> 02:30:46,920
with the index zero,
now I stored the value 12

2772
02:30:47,440 --> 02:30:51,120
inside my variable with the index one
I store the value of ten

2773
02:30:51,120 --> 02:30:52,920
inside my variable with the index.

2774
02:30:52,920 --> 02:30:58,640
Two I stored the value of the value of 13
and my variable with the index.

2775
02:30:59,640 --> 02:31:02,120
Three are stored value of 14.

2776
02:31:02,240 --> 02:31:03,200
Okay, so now what?

2777
02:31:03,200 --> 02:31:08,000
I'm evil, I'm able to store inside
my variable eight

2778
02:31:08,000 --> 02:31:11,040
are able to store

2779
02:31:11,440 --> 02:31:14,720
an array of integer values. Right?

2780
02:31:14,760 --> 02:31:16,960
I store 12, ten, 13, 14.

2781
02:31:16,960 --> 02:31:20,880
So what I'm storing,
I'm storing integer values.

2782
02:31:20,880 --> 02:31:24,080
So those values, these values
guys in Java,

2783
02:31:24,080 --> 02:31:27,080
we call them elements

2784
02:31:27,200 --> 02:31:28,280
elements.

2785
02:31:28,280 --> 02:31:30,760
So now we are sitting here.

2786
02:31:31,120 --> 02:31:34,920
My variable array consists
of how many elements this

2787
02:31:34,920 --> 02:31:37,160
how many elements I have

2788
02:31:38,760 --> 02:31:39,640
four elements.

2789
02:31:39,640 --> 02:31:40,240
Right?

2790
02:31:40,320 --> 02:31:45,000
So now we're saying,
Hey, what is the size of my array?

2791
02:31:45,360 --> 02:31:50,160
Size of my array conceives stuff
or elements?

2792
02:31:50,400 --> 02:31:52,040
Okay, what elements?

2793
02:31:52,040 --> 02:31:56,960
And there are elements
of all the elements of this same type

2794
02:31:57,520 --> 02:32:02,400
always arrays allow us to have elements
of the same types.

2795
02:32:02,400 --> 02:32:03,080
Right.

2796
02:32:03,080 --> 02:32:04,200
And how do you know?

2797
02:32:04,200 --> 02:32:07,520
Here, you see, I have an array of what?

2798
02:32:07,800 --> 02:32:09,000
What's integer values.

2799
02:32:09,000 --> 02:32:12,840
Right.

2800
02:32:12,840 --> 02:32:13,280
Okay.

2801
02:32:13,280 --> 02:32:17,240
Are maybe okay, but majority majority
of others guys, they do start from zero.

2802
02:32:17,280 --> 02:32:17,600
Okay.

2803
02:32:17,600 --> 02:32:21,120
Programmers, they live in different
worlds, especially from zero.

2804
02:32:21,120 --> 02:32:22,080
Right. Okay.

2805
02:32:22,080 --> 02:32:23,840
So now let's see.

2806
02:32:23,840 --> 02:32:26,000
How are we going to take it in coding?

2807
02:32:26,080 --> 02:32:28,000
Okay, let's see,
how are we going to take it?

2808
02:32:29,800 --> 02:32:32,400
So now here we said one variable.

2809
02:32:33,160 --> 02:32:35,760
One variable holds one value.

2810
02:32:36,280 --> 02:32:40,800
Now I want to create an array variable,
right?

2811
02:32:40,800 --> 02:32:42,480
I want to create an array.

2812
02:32:42,480 --> 02:32:45,160
So this same thing where we start,
we start with sun

2813
02:32:46,920 --> 02:32:48,360
variable name.

2814
02:32:48,360 --> 02:32:50,960
Then what type of values want to store?

2815
02:32:50,960 --> 02:32:54,480
I want to store integer type of values,
but I don't want to store

2816
02:32:54,480 --> 02:32:55,600
just one integer.

2817
02:32:55,600 --> 02:32:58,520
I want to store every integers. Right?

2818
02:32:58,680 --> 02:33:00,960
So all you need to specify
era when teachers.

2819
02:33:01,480 --> 02:33:05,240
Now when it comes to the arrays,
when it comes to the array

2820
02:33:06,600 --> 02:33:10,360
arrays, we call them,
they are six in size.

2821
02:33:10,360 --> 02:33:12,960
So when we are creating in the array.

2822
02:33:13,360 --> 02:33:16,520
So you guys will have to specify new

2823
02:33:16,760 --> 02:33:20,400
and then each year new,
you guys will learn as you guys see new.

2824
02:33:20,520 --> 02:33:22,840
It's a keyword, right? New It's a keyword.

2825
02:33:22,840 --> 02:33:26,760
So there's something is getting created
which you guys are doing in the

2826
02:33:27,800 --> 02:33:28,840
following classes.

2827
02:33:28,840 --> 02:33:33,240
So now inside here I have to specify, Hey,

2828
02:33:33,680 --> 02:33:39,040
I am creating an array of integer values,
array of integer values

2829
02:33:39,040 --> 02:33:42,840
that I'm trying store inside this box
right now.

2830
02:33:42,840 --> 02:33:47,400
When you are creating an array,
you guys have to specify the size, right?

2831
02:33:47,400 --> 02:33:49,800
You guys have to specify this size.

2832
02:33:49,800 --> 02:33:51,240
So what was our size?

2833
02:33:51,240 --> 02:33:57,360
This is how many elements we try to store.

2834
02:33:57,360 --> 02:33:59,760
We try to store four elements.

2835
02:33:59,760 --> 02:34:02,520
We try to store four elements, right?

2836
02:34:02,880 --> 02:34:07,920
So now what will happen
this will happen there in the Java memory.

2837
02:34:07,920 --> 02:34:10,720
What will happen there is this container.

2838
02:34:11,000 --> 02:34:13,640
This container will get created.

2839
02:34:13,640 --> 02:34:18,160
And what will have
it will have four spaces.

2840
02:34:19,080 --> 02:34:20,600
It'll have for space.

2841
02:34:20,600 --> 02:34:22,920
Empty container is there and right.

2842
02:34:23,360 --> 02:34:26,040
So now you store the elements.

2843
02:34:26,040 --> 02:34:28,360
Right now we're going to store exactly
the same elements.

2844
02:34:28,680 --> 02:34:31,200
What we start 12, ten, 13, 14. Right.

2845
02:34:31,640 --> 02:34:36,880
So now we can just say right now
array equals to 12, right? Why?

2846
02:34:37,200 --> 02:34:42,120
Because now this is a variable
that holds in the right or integer values.

2847
02:34:42,120 --> 02:34:44,960
Now you have to specify, Hey value.

2848
02:34:44,960 --> 02:34:51,000
12 I want to store with the index zero
right value ten.

2849
02:34:51,000 --> 02:34:54,400
I want to store with the index one.

2850
02:34:54,400 --> 02:34:58,800
So yes, if you need ten elements,
you store ten elements, if you need four.

2851
02:34:58,800 --> 02:35:01,880
So here we always put
how many elements, right?

2852
02:35:01,880 --> 02:35:04,200
And we humans start counting one, right?

2853
02:35:04,200 --> 02:35:05,320
How many elements I want.

2854
02:35:05,320 --> 02:35:08,400
I want one, two, three, four elements.

2855
02:35:08,400 --> 02:35:10,560
Right. We are humans counting from one.

2856
02:35:10,560 --> 02:35:15,720
But when it comes to indexes, right
how Jacqui's going to store it right?

2857
02:35:15,720 --> 02:35:17,400
How Joe is going to store it.

2858
02:35:17,400 --> 02:35:19,920
Joe needs to store it
in the form of index.

2859
02:35:19,960 --> 02:35:20,160
Right?

2860
02:35:20,160 --> 02:35:25,680
So notice in his the value 12 will go to
array is the index zero. Yep.

2861
02:35:26,040 --> 02:35:28,240
And then array

2862
02:35:28,680 --> 02:35:31,960
with the index one right
area is the index.

2863
02:35:31,960 --> 02:35:34,800
One will hold a value of ten. Right.

2864
02:35:34,800 --> 02:35:36,120
So hold the value of this

2865
02:35:38,000 --> 02:35:39,960
now array

2866
02:35:39,960 --> 02:35:42,560
or with the index to

2867
02:35:43,760 --> 02:35:46,920
hold the value of 1313

2868
02:35:48,840 --> 02:35:52,920
and then array with the index three.

2869
02:35:53,080 --> 02:35:55,880
Right. Hold the value of 14. Right.

2870
02:35:56,400 --> 02:36:01,000
So now how many elements did we store?

2871
02:36:01,240 --> 02:36:02,800
We said we want to store four.

2872
02:36:02,800 --> 02:36:05,920
So we need one, two, three, four.

2873
02:36:06,160 --> 02:36:10,200
We store four elements of the integer type

2874
02:36:10,320 --> 02:36:14,560
inside my variable array,
right inside the right.

2875
02:36:14,880 --> 02:36:19,080
But how we were able to store them,
you were able to store them on the index.

2876
02:36:19,080 --> 02:36:24,640
This index is tight from 01230123.

2877
02:36:25,680 --> 02:36:27,320
So now

2878
02:36:27,840 --> 02:36:32,400
let's see.

2879
02:36:32,400 --> 02:36:34,200
We can we can try the scanner in here

2880
02:36:34,200 --> 02:36:36,520
and then we can
we will draw all these conditions.

2881
02:36:36,520 --> 02:36:37,000
Right.

2882
02:36:37,200 --> 02:36:41,880
So now remember, this is the way we store
values inside the variable.

2883
02:36:42,160 --> 02:36:44,160
Then we are trying to access them.

2884
02:36:44,160 --> 02:36:46,000
Right then we were trying to extend them.

2885
02:36:46,000 --> 02:36:49,200
In here, for example,
you access my value at ten.

2886
02:36:49,520 --> 02:36:51,720
I was just printing none, right?

2887
02:36:51,720 --> 02:36:53,640
I was just printing them.

2888
02:36:53,640 --> 02:36:55,800
What if other variations
be the little guys?

2889
02:36:56,040 --> 02:36:58,400
What if I'm not going to follow the order?

2890
02:36:58,560 --> 02:37:00,160
What if I'm going to add more?

2891
02:37:00,160 --> 02:37:02,200
What if I'm going to
unless we will look into that.

2892
02:37:02,200 --> 02:37:05,520
Okay, so now variable a single

2893
02:37:05,520 --> 02:37:09,080
variable stores
a single value to access the value.

2894
02:37:09,080 --> 02:37:11,520
Inside this variable,
we just referring to the

2895
02:37:12,120 --> 02:37:14,800
we were just referring
to the variable, right?

2896
02:37:15,000 --> 02:37:19,800
So now if you are storing elements,
if you are storing elements

2897
02:37:19,800 --> 02:37:23,600
based on the indexes now you can access

2898
02:37:23,600 --> 02:37:26,560
a values also based on indexes.

2899
02:37:26,920 --> 02:37:32,680
Tell me that is, if I want you print 13,
I want you print 13.

2900
02:37:32,680 --> 02:37:34,000
What should I specify?

2901
02:37:34,000 --> 02:37:37,760
The in the case?

2902
02:37:37,760 --> 02:37:41,400
I want you access the value
13 where the value 13

2903
02:37:41,400 --> 02:37:43,200
will store it will store inside.

2904
02:37:43,200 --> 02:37:45,120
Might arrange the index. Two okay,

2905
02:37:46,120 --> 02:37:48,520
thank You right

2906
02:37:48,840 --> 02:37:50,800
now I have 13, right?

2907
02:37:50,800 --> 02:37:51,680
That's what I have.

2908
02:37:51,680 --> 02:37:53,360
I have 13

2909
02:37:54,520 --> 02:37:56,920
lines in here. So

2910
02:38:00,280 --> 02:38:03,440
I mean from single

2911
02:38:04,000 --> 02:38:05,440
13, right.

2912
02:38:05,440 --> 02:38:05,960
Okay.

2913
02:38:05,960 --> 02:38:09,840
So remember, guys, what are this
thing will happen if I'll do this

2914
02:38:10,360 --> 02:38:13,320
array two plus every

2915
02:38:15,800 --> 02:38:17,880
two or zero.

2916
02:38:18,200 --> 02:38:19,720
What do you guys think will be the output?

2917
02:38:19,720 --> 02:38:30,280
What will happen?

2918
02:38:30,280 --> 02:38:34,920
So when we work with variables, guys,
we work with these values inside.

2919
02:38:35,280 --> 02:38:36,120
What is it now?

2920
02:38:36,120 --> 02:38:39,720
Inside array to the valley inside
array to its 13.

2921
02:38:40,440 --> 02:38:41,880
What is the value inside?

2922
02:38:41,880 --> 02:38:45,120
Inside array zero zero is 12 right?

2923
02:38:45,480 --> 02:38:50,800
So I have integer valid,
I have integer value 12.

2924
02:38:51,120 --> 02:38:54,960
Now I'm using
plus plus between two numbers

2925
02:38:55,240 --> 02:38:59,440
works as an archetype
operator works as an arithmetic operator.

2926
02:39:00,120 --> 02:39:02,760
You go 2524 right.

2927
02:39:03,840 --> 02:39:07,000
So arrays, right arrays are

2928
02:39:08,520 --> 02:39:11,200
the container that holds

2929
02:39:11,520 --> 02:39:15,520
values
of what values of same type analysis

2930
02:39:16,320 --> 02:39:20,760
I now look at as
if I'm going to try to do 1499.

2931
02:39:21,240 --> 02:39:22,520
So now what will happen?

2932
02:39:22,520 --> 02:39:24,200
Your compiler will give you the error.

2933
02:39:24,200 --> 02:39:27,880
Compiler will tell you, Hey,
I cannot count the word

2934
02:39:28,360 --> 02:39:31,200
from the table into the integer.

2935
02:39:31,200 --> 02:39:33,120
Right? Why?

2936
02:39:33,120 --> 02:39:37,000
Because in here
when you were just creating you array,

2937
02:39:37,000 --> 02:39:42,520
you said, Hey, I have a variable
that will be whole array, right?

2938
02:39:42,520 --> 02:39:43,200
A variable?

2939
02:39:43,200 --> 02:39:47,760
It's array variable that holds
what are holds integer type of values.

2940
02:39:47,760 --> 02:39:49,960
So Java, remember, is very strict, right?

2941
02:39:49,960 --> 02:39:50,240
Java.

2942
02:39:50,240 --> 02:39:50,640
Say, hey,

2943
02:39:50,640 --> 02:39:54,680
if you told me you want to store integer,
make sure store only integers right.

2944
02:39:54,680 --> 02:39:58,800
Make sure you still only integer
tackle values don't store double.

2945
02:39:58,920 --> 02:40:00,120
Can you do the question?

2946
02:40:00,120 --> 02:40:01,920
Yes, of course
we can do the question. Right.

2947
02:40:01,920 --> 02:40:04,000
So if I want to do the question
for the integer,

2948
02:40:04,000 --> 02:40:14,280
how are you guys going to do it?

2949
02:40:14,280 --> 02:40:16,560
This is just just just to recap, right?

2950
02:40:16,920 --> 02:40:20,600
So what you will do,
you'll say, hey, to which you mean

2951
02:40:20,680 --> 02:40:21,880
to which data type you want.

2952
02:40:21,880 --> 02:40:22,600
You can write.

2953
02:40:22,600 --> 02:40:24,880
I want you convert to the integer, right?

2954
02:40:24,960 --> 02:40:27,040
I want you to the integer.

2955
02:40:27,040 --> 02:40:28,680
Now, if I'm going to print

2956
02:40:29,680 --> 02:40:30,880
an array

2957
02:40:30,880 --> 02:40:34,360
is being three, what will be output

2958
02:40:36,880 --> 02:40:38,840
will be 14 different.

2959
02:40:38,840 --> 02:40:39,280
Right.

2960
02:40:39,280 --> 02:40:41,880
So what we're saying hey Right.

2961
02:40:43,320 --> 02:40:46,760
That's what I was saying,
that Arrays are collection

2962
02:40:47,160 --> 02:40:50,640
of values of fruit, of the same type.

2963
02:40:50,640 --> 02:40:53,080
Right. I'm not going to keep it in here.

2964
02:40:53,200 --> 02:40:58,440
So not to confuse, you know that
they can hold primitive and non primitive.

2965
02:40:58,440 --> 02:41:01,560
And of course you guys will learn once
you start learning non primitive,

2966
02:41:01,560 --> 02:41:04,560
then you guys will be able
to add it inside the array. Get

2967
02:41:05,680 --> 02:41:07,320
that in there. Right. Okay.

2968
02:41:07,320 --> 02:41:12,920
So this is was area what this is
was an array of integer values.

2969
02:41:12,920 --> 02:41:15,040
Right. This was array of the integer.

2970
02:41:15,680 --> 02:41:16,160
So now.

2971
02:41:16,160 --> 02:41:18,920
Okay guys, let's say so let's see.

2972
02:41:18,920 --> 02:41:20,160
That's a good question, guys.

2973
02:41:20,160 --> 02:41:25,760
So what if I want
I need to create an array

2974
02:41:26,800 --> 02:41:30,080
that will hold

2975
02:41:32,640 --> 02:41:34,360
the elements.

2976
02:41:34,400 --> 02:41:39,360
Elements, all of

2977
02:41:40,680 --> 02:41:44,400
that type of values, right?

2978
02:41:44,760 --> 02:41:45,640
That will tackle those.

2979
02:41:45,640 --> 02:41:50,520
So now what I want to store, I want to
store elements in is the decimals, Right?

2980
02:41:50,520 --> 02:41:51,240
Okay.

2981
02:41:51,240 --> 02:41:54,480
So now I need to have a variable, right?

2982
02:41:54,480 --> 02:41:55,560
I need to have a variable.

2983
02:41:55,560 --> 02:41:58,680
And when I'm making the enemy,
it can be any name, right?

2984
02:41:59,120 --> 02:42:01,880
So if you go in from
if you want to, let's say

2985
02:42:03,400 --> 02:42:07,440
under that name, it's
I don't know, for example.

2986
02:42:07,440 --> 02:42:08,040
Right.

2987
02:42:08,040 --> 02:42:11,800
So now this variable,
I want it to be a variable

2988
02:42:11,800 --> 02:42:13,680
that will hold

2989
02:42:14,800 --> 02:42:16,560
integer type of values up.

2990
02:42:16,560 --> 02:42:19,760
So sorry array,
but array of error, double,

2991
02:42:20,760 --> 02:42:23,120
double, double figure.

2992
02:42:23,520 --> 02:42:26,480
So now array of double check of values.

2993
02:42:26,480 --> 02:42:31,080
What is the name of my variable eight
R And I want to store three elements.

2994
02:42:31,320 --> 02:42:35,000
How can I want to store
three elements or double of those

2995
02:42:40,360 --> 02:42:41,400
equals new?

2996
02:42:41,400 --> 02:42:42,680
And then what?

2997
02:42:43,200 --> 02:42:44,320
You double right?

2998
02:42:44,320 --> 02:42:46,680
And then how many elements?

2999
02:42:46,680 --> 02:42:48,400
Three elements.

3000
02:42:48,400 --> 02:42:49,360
Elements.

3001
02:42:49,680 --> 02:42:54,440
The now how are we going to place them?

3002
02:42:54,440 --> 02:42:55,480
Three We always do.

3003
02:42:55,480 --> 02:42:59,440
So we always specify the size

3004
02:43:00,520 --> 02:43:08,360
three element.

3005
02:43:08,360 --> 02:43:12,640
We have the name.

3006
02:43:15,440 --> 02:43:16,800
Okay, so how are we going?

3007
02:43:16,800 --> 02:43:19,000
So we're sending you take a variable.

3008
02:43:19,320 --> 02:43:22,440
Now, this variable will have indexes
the in the zero

3009
02:43:22,800 --> 02:43:28,080
and whichever value one right 11 9999

3010
02:43:28,440 --> 02:43:31,400
and then array is the index one

3011
02:43:31,760 --> 02:43:36,920
will hold the value of 109
something in the array

3012
02:43:36,960 --> 02:43:47,840
with the index
two four hold the value of 3081.

3013
02:43:47,840 --> 02:43:49,880
Okay. All right.

3014
02:43:51,280 --> 02:43:53,120
So let me ask you this. Right.

3015
02:43:53,120 --> 02:43:54,360
So what do you guys think?

3016
02:43:54,360 --> 02:43:56,560
Can they replace

3017
02:43:56,680 --> 02:43:59,360
in replace

3018
02:43:59,360 --> 02:44:01,920
now live from an array

3019
02:44:06,920 --> 02:44:07,560
or is I can.

3020
02:44:07,560 --> 02:44:09,840
Right. I guess it's a variable, right?

3021
02:44:09,840 --> 02:44:14,480
So when we say say a variable, it's
a temporary placeholder.

3022
02:44:14,480 --> 02:44:15,080
Right.

3023
02:44:15,080 --> 02:44:21,200
So now, for example, hey, instead of
one or nine, I want to have 199.

3024
02:44:21,240 --> 02:44:23,160
I want to have 199.

3025
02:44:23,160 --> 02:44:24,680
How can I replace the guys?

3026
02:44:24,680 --> 02:44:27,560
How can I replace it
four instead of one or nine?

3027
02:44:27,560 --> 02:44:29,160
I want to have 199

3028
02:44:37,160 --> 02:44:38,160
we just reassign.

3029
02:44:38,160 --> 02:44:41,520
And how are we going to reassigning this

3030
02:44:42,000 --> 02:44:42,480
option now?

3031
02:44:42,480 --> 02:44:44,920
Is it okay where you want to store 199?

3032
02:44:44,920 --> 02:44:48,640
I want to store it inside
array with the index one.

3033
02:44:48,800 --> 02:44:49,400
Right.

3034
02:44:49,440 --> 02:44:53,240
So erase the index air.

3035
02:44:53,280 --> 02:44:55,240
Right. Meet the next one.

3036
02:44:55,240 --> 02:44:57,360
So now what will happen? Right.

3037
02:44:57,800 --> 02:45:00,800
So let's see what happens in this line

3038
02:45:01,000 --> 02:45:06,000
that that will have
three spaces will get created.

3039
02:45:06,240 --> 02:45:09,960
Right now

3040
02:45:12,120 --> 02:45:13,920
container with the three spaces.

3041
02:45:13,920 --> 02:45:14,240
Right.

3042
02:45:14,240 --> 02:45:17,400
You say because you said you store
you want to store three elements.

3043
02:45:17,400 --> 02:45:21,480
That's why you will get two spaces
for elements, right?

3044
02:45:21,480 --> 02:45:23,960
That's why we're saying that the

3045
02:45:24,480 --> 02:45:26,520
arrays, they are fixed in size.

3046
02:45:26,520 --> 02:45:28,000
You told me how many element. That's it.

3047
02:45:28,000 --> 02:45:29,880
That's
how many elements you want to store.

3048
02:45:29,880 --> 02:45:31,920
1199 will go in here.

3049
02:45:32,080 --> 02:45:35,960
One or nine will go inside here
and then three or nine will go in here.

3050
02:45:35,960 --> 02:45:36,520
Right.

3051
02:45:36,520 --> 02:45:37,840
So now you're saying, hey,

3052
02:45:37,840 --> 02:45:41,880
instead of one or nine, right,
I want have 299, no problem.

3053
02:45:41,880 --> 02:45:42,560
So what do you do?

3054
02:45:42,560 --> 02:45:47,280
You reassign so you will throw away
one or nine and you will place 199.

3055
02:45:47,400 --> 02:45:48,160
Right. So

3056
02:45:49,520 --> 02:45:52,320
let me check it for

3057
02:45:52,320 --> 02:45:55,080
now. Say you're right with the next one.

3058
02:45:55,320 --> 02:45:57,800
Then let's see what will be the

3059
02:46:00,160 --> 02:46:01,320
factors change.

3060
02:46:01,320 --> 02:46:03,800
And now we

3061
02:46:04,920 --> 02:46:12,960
open mega

3062
02:46:14,320 --> 02:46:16,400
and go after changing all of the elements.

3063
02:46:16,400 --> 02:46:20,400
And now what we got, we got 190, right?

3064
02:46:20,400 --> 02:46:22,000
100 and

3065
02:46:23,960 --> 02:46:28,360
so now let me ask you guys this.

3066
02:46:28,360 --> 02:46:30,080
Let me ask you this.

3067
02:46:30,080 --> 02:46:32,160
Okay?

3068
02:46:32,160 --> 02:46:35,680
I want to create I want to create

3069
02:46:38,640 --> 02:46:40,360
an array

3070
02:46:40,760 --> 02:46:43,200
that will store

3071
02:46:44,880 --> 02:46:46,080
colors,

3072
02:46:46,440 --> 02:46:49,560
that will store colors,
let's say how many colors I want that.

3073
02:46:49,560 --> 02:46:52,800
Just go for colors. Okay.

3074
02:46:52,800 --> 02:46:57,920
So now it will be an array of what
this tells me. Yes.

3075
02:46:57,920 --> 02:47:00,360
Now we will look into different
variations.

3076
02:47:00,360 --> 02:47:01,680
It's a stream, right?

3077
02:47:01,680 --> 02:47:05,640
So now what I have
I have an array of strings, Right?

3078
02:47:06,080 --> 02:47:07,560
And now what I'm trying to sell.

3079
02:47:07,560 --> 02:47:09,680
I'm trying to store colors. Okay.

3080
02:47:09,680 --> 02:47:11,760
And then what are we
going to type in? Here goes

3081
02:47:15,920 --> 02:47:18,920
new. New what?

3082
02:47:18,920 --> 02:47:19,760
New strength.

3083
02:47:19,760 --> 02:47:21,800
And then what I'm going to see.

3084
02:47:21,800 --> 02:47:23,840
So how many elements

3085
02:47:25,920 --> 02:47:28,160
or how many elements for.

3086
02:47:28,400 --> 02:47:29,240
Okay.

3087
02:47:29,240 --> 02:47:31,920
And now let's say
I'm going to store colors, right?

3088
02:47:31,920 --> 02:47:34,080
So with that in zero, right.

3089
02:47:34,080 --> 02:47:37,360
I'm going to store, let's say a

3090
02:47:37,360 --> 02:47:41,560
red and then colors with the index one.

3091
02:47:41,880 --> 02:47:45,600
I'm going to store a blue, Right.

3092
02:47:46,000 --> 02:47:50,960
And then colors with the index too, right?

3093
02:47:51,600 --> 02:47:51,920
Sure.

3094
02:47:51,920 --> 02:47:56,080
We store black and then right.

3095
02:47:56,080 --> 02:48:01,360
And then in here, let's store
colors with the index three.

3096
02:48:01,920 --> 02:48:03,760
I am going to score.

3097
02:48:03,760 --> 02:48:06,520
I don't know, yellow. Right. For example.

3098
02:48:06,840 --> 02:48:10,320
For example right now what I scored

3099
02:48:10,320 --> 02:48:14,680
I store for elements
of which type of the string type.

3100
02:48:14,680 --> 02:48:15,160
Right.

3101
02:48:15,160 --> 02:48:17,880
So how am I able to store
by identifying that?

3102
02:48:18,240 --> 02:48:20,720
Now I have array of strings, right?

3103
02:48:20,720 --> 02:48:21,840
The strings.

3104
02:48:21,840 --> 02:48:24,800
Okay, so now what will happen?

3105
02:48:24,800 --> 02:48:27,800
What will happen, Eve? Let's see.

3106
02:48:29,280 --> 02:48:30,640
Now, when I'm trying

3107
02:48:30,640 --> 02:48:34,440
to print
or even not trying to print right?

3108
02:48:34,440 --> 02:48:39,600
So let's say what will happen
if I go colors with

3109
02:48:42,360 --> 02:48:46,200
or equal to green, right?

3110
02:48:46,440 --> 02:48:47,880
Equals to green.

3111
02:48:47,880 --> 02:48:51,360
So my compiler is fine.

3112
02:48:51,360 --> 02:48:53,560
Oh, look at this. My compiler is fine.

3113
02:48:53,560 --> 02:48:54,520
Why am I compiler?

3114
02:48:54,520 --> 02:48:56,880
It's fine because my compiler checks
the syntax.

3115
02:48:57,040 --> 02:48:58,320
Syntax is correct.

3116
02:48:58,320 --> 02:48:58,800
Okay.

3117
02:48:58,800 --> 02:49:02,560
They declared an array of strings
they said they will be storing

3118
02:49:02,560 --> 02:49:03,720
four elements.

3119
02:49:03,720 --> 02:49:05,240
Did this store them correctly?

3120
02:49:05,240 --> 02:49:06,760
Is the store incorrectly right?

3121
02:49:06,760 --> 02:49:10,800
This sort of correctly
compiler does not give you any issue.

3122
02:49:10,800 --> 02:49:15,600
So now only when I'm going to try

3123
02:49:15,600 --> 02:49:18,520
to run my code,
I'm trying to run my code this.

3124
02:49:19,560 --> 02:49:24,360
So now when
I'm going to try to run my code now,

3125
02:49:24,360 --> 02:49:29,080
during run,
while Java was running our program,

3126
02:49:29,640 --> 02:49:35,360
our run into some issue,
a double ranking system.

3127
02:49:35,640 --> 02:49:37,920
So now it's important days.

3128
02:49:37,920 --> 02:49:42,720
So maybe from couple of classes
from now on, you guys will start

3129
02:49:42,720 --> 02:49:46,200
receiving this type of issue
and it's important to read them right.

3130
02:49:46,720 --> 02:49:48,480
So always read right.

3131
02:49:48,480 --> 02:49:49,280
So what is this?

3132
02:49:49,280 --> 02:49:58,680
This array interest array that enjoy
What is this based?

3133
02:49:58,680 --> 02:50:01,200
It's a name of our class. Right.

3134
02:50:01,760 --> 02:50:02,440
Array intro.

3135
02:50:02,440 --> 02:50:04,280
That's the name of my class.

3136
02:50:04,280 --> 02:50:06,960
It says, Hey, inside your class

3137
02:50:07,720 --> 02:50:11,160
on the line 43, you have the issue, right?

3138
02:50:11,440 --> 02:50:15,040
So all you see for this and as you can
just click in the array that you issue

3139
02:50:15,040 --> 02:50:19,160
got highlighted right
so always know where you issue comes

3140
02:50:19,160 --> 02:50:21,160
you issue comes on the line 43.

3141
02:50:21,160 --> 02:50:23,920
Now what is the issue?

3142
02:50:23,920 --> 02:50:29,400
Issue error
array index are one exception, right?

3143
02:50:29,400 --> 02:50:33,720
So it says hey
that you went out of the index

3144
02:50:33,920 --> 02:50:37,720
try to use the index four
which was out of bounds.

3145
02:50:37,720 --> 02:50:38,280
Right.

3146
02:50:38,280 --> 02:50:42,120
So basically
what happened right when you told Java.

3147
02:50:42,200 --> 02:50:42,560
Right.

3148
02:50:42,560 --> 02:50:45,120
Java was executed,
you put that to the bar.

3149
02:50:45,160 --> 02:50:49,360
Remember this line, what it happens,
it gives you a container

3150
02:50:49,600 --> 02:50:53,520
that has these four, four elements right?

3151
02:50:53,520 --> 02:50:57,320
So it store right in here,
one blue in here,

3152
02:50:57,320 --> 02:51:00,600
black in here, yellow in there right now.

3153
02:51:00,600 --> 02:51:02,560
You give it four spaces.

3154
02:51:02,560 --> 02:51:05,200
Now on the line, 43.

3155
02:51:05,640 --> 02:51:08,120
All of the sudden you said, Hey, Java,

3156
02:51:08,360 --> 02:51:12,480
can you add one more thing
and store green in there? No.

3157
02:51:12,640 --> 02:51:15,480
So now what is happening right now?

3158
02:51:15,480 --> 02:51:16,320
What is happening?

3159
02:51:16,320 --> 02:51:20,400
We're getting index
out of one exception. Why?

3160
02:51:20,680 --> 02:51:23,360
Because when you created a container

3161
02:51:23,880 --> 02:51:26,880
when you created
the container was four spaces.

3162
02:51:27,360 --> 02:51:30,520
That's what I guess
that's what Java your Java user,

3163
02:51:30,760 --> 02:51:34,840
your Java cannot while writing
look what all they need is a value.

3164
02:51:34,840 --> 02:51:36,520
Let me expanded all.

3165
02:51:36,520 --> 02:51:40,800
Let me know if you'd say
that you need four spaces.

3166
02:51:41,160 --> 02:51:43,160
I'll give you four spaces.

3167
02:51:43,160 --> 02:51:45,360
I will give you the four spaces.

3168
02:51:45,360 --> 02:51:47,880
So that's why in here
where you guys will get

3169
02:51:47,880 --> 02:51:52,880
you will get it right in the I don't want
that's what you guys will get.

3170
02:51:53,400 --> 02:51:55,760
If you guys going to repeat this right

3171
02:51:59,440 --> 02:52:03,360
now, it's
an exception you guys will get right

3172
02:52:03,360 --> 02:52:06,960
and I just get we can say exception
you guys will don't want an exception.

3173
02:52:06,960 --> 02:52:09,920
Right? So let's see

3174
02:52:09,960 --> 02:52:12,520
followed by

3175
02:52:12,520 --> 02:52:13,960
four. Right.

3176
02:52:14,520 --> 02:52:16,800
The same thing
when you say, hey, you want to

3177
02:52:17,240 --> 02:52:20,720
I want to access the value from the index

3178
02:52:20,720 --> 02:52:22,760
for right now same thing

3179
02:52:25,080 --> 02:52:28,800
pre represents what are we going to go
we will look into it right okay

3180
02:52:29,080 --> 02:52:34,320
so now we're trying to look what happens
if we do over what happens if we do over.

3181
02:52:34,320 --> 02:52:37,680
So let's say you don't want to store
you didn't want to store,

3182
02:52:37,680 --> 02:52:41,280
but now when you print out,
when you print out, what do you say?

3183
02:52:41,280 --> 02:52:44,040
Hey, I want to access the element

3184
02:52:44,440 --> 02:52:47,280
with the index for syntax is correct.

3185
02:52:47,600 --> 02:52:50,120
Compiler is headed by the same thing.

3186
02:52:50,120 --> 02:52:54,400
What happens when you execute in your code
right?

3187
02:52:54,960 --> 02:52:58,600
Java executed this line perfectly
because they work fine.

3188
02:52:58,600 --> 02:53:02,360
But then on which one on the line 45.

3189
02:53:02,360 --> 02:53:07,080
Right on the line
45 where the issue is you trying to access

3190
02:53:08,040 --> 02:53:08,640
element.

3191
02:53:08,640 --> 02:53:12,360
Why are you trying to tell me
that there is an index four which is not.

3192
02:53:12,600 --> 02:53:15,240
That's
why you get index out of one exception

3193
02:53:18,120 --> 02:53:18,960
index.

3194
02:53:19,120 --> 02:53:22,360
So the same thing,
this will give you a right index,

3195
02:53:23,640 --> 02:53:26,360
right? So

3196
02:53:26,360 --> 02:53:31,440
I was saying that the size of in
the rate is right.

3197
02:53:31,880 --> 02:53:32,800
Okay. Yeah.

3198
02:53:32,800 --> 02:53:36,120
Trying to access something that we never
we never created.

3199
02:53:36,240 --> 02:53:36,760
Right.

3200
02:53:37,040 --> 02:53:39,080
So now let's see what's going to happen.

3201
02:53:39,080 --> 02:53:41,640
Let's see what's going to happen.

3202
02:53:41,640 --> 02:53:44,760
Okay, stop now.

3203
02:53:44,760 --> 02:53:48,360
I hope it was
everything before is is is good and clean.

3204
02:53:48,360 --> 02:53:51,720
Guys.

3205
02:53:51,720 --> 02:53:52,480
Okay, good.

3206
02:53:52,480 --> 02:53:55,400
Okay, so now let me show you what happens.

3207
02:53:55,400 --> 02:53:58,120
Now we're looking into a variation
we know how to create.

3208
02:53:58,160 --> 02:54:01,040
And the reason we know
why need them, right?

3209
02:54:01,040 --> 02:54:04,800
We knew we need a
to store multiple values of the same time.

3210
02:54:04,960 --> 02:54:09,120
Right over the same time to keep our code
nice and clean that into easy access.

3211
02:54:09,120 --> 02:54:10,840
Those variables. Right.

3212
02:54:10,840 --> 02:54:14,360
So now you're saying inside the arrays
you can store values

3213
02:54:14,400 --> 02:54:16,400
with store of the integer type, right?

3214
02:54:16,800 --> 02:54:19,480
We store of the double type.

3215
02:54:19,480 --> 02:54:23,480
Now store values of elements
of the string type of values.

3216
02:54:24,040 --> 02:54:26,640
So before we were going in order, right.

3217
02:54:26,800 --> 02:54:28,920
We say that indexes start from zero.

3218
02:54:28,920 --> 02:54:32,720
So we started 012 here we started 012.

3219
02:54:32,720 --> 02:54:33,920
Hey, you know what?

3220
02:54:33,920 --> 02:54:36,240
What if I'll skip
one of the indexes, right?

3221
02:54:36,320 --> 02:54:38,560
So let me remove this. Let me remove this.

3222
02:54:39,240 --> 02:54:39,960
So Now

3223
02:54:41,040 --> 02:54:42,000
I step right.

3224
02:54:42,000 --> 02:54:44,320
It's important
you read your code days, right?

3225
02:54:44,840 --> 02:54:49,440
So now what I said, I said, Hey,
I want every

3226
02:54:49,600 --> 02:54:53,480
that will be holding for string elements.

3227
02:54:53,480 --> 02:54:55,160
Right? For string elements.

3228
02:54:55,160 --> 02:54:58,560
Now inside this array,
how many elements did you store this?

3229
02:54:58,600 --> 02:55:01,240
How many elements you store?

3230
02:55:01,640 --> 02:55:02,280
Three.

3231
02:55:02,280 --> 02:55:03,200
Now let me see.

3232
02:55:03,200 --> 02:55:07,000
Hey, now, if you want,

3233
02:55:07,040 --> 02:55:10,800
you find out if you want to find.

3234
02:55:10,800 --> 02:55:13,080
See how many elements

3235
02:55:14,320 --> 02:55:16,000
inside.

3236
02:55:16,240 --> 02:55:17,720
Right. Okay.

3237
02:55:17,720 --> 02:55:20,160
So if you want to find out
how many elements

3238
02:55:20,160 --> 02:55:23,560
you have inside the in the array,
what are we going to use?

3239
02:55:23,560 --> 02:55:26,520
We going to use one

3240
02:55:28,520 --> 02:55:31,520
one property,
One property that we call length.

3241
02:55:31,840 --> 02:55:36,320
So I'll take my array a see colors
and then I'll say that length

3242
02:55:37,560 --> 02:55:41,880
the now call that length,
what it will tell me,

3243
02:55:41,880 --> 02:55:47,160
it will tell me the size, it will tell you
how many elements inside the array.

3244
02:55:47,520 --> 02:55:55,440
Or we can how do we say
what is the size of the array?

3245
02:55:55,440 --> 02:55:57,400
What is inside the one? Right.

3246
02:55:57,400 --> 02:55:59,760
And let's see, let me put in here.

3247
02:56:00,840 --> 02:56:04,000
I rate

3248
02:56:04,000 --> 02:56:06,440
ease and let me get to meet.

3249
02:56:06,720 --> 02:56:09,960
Like if we go getting it
in, let's see what my size will give me.

3250
02:56:10,600 --> 02:56:13,760
Looks my size still say school, right?

3251
02:56:14,160 --> 02:56:15,000
My size.

3252
02:56:15,000 --> 02:56:18,600
You'll see for right
when I say colors that length,

3253
02:56:18,960 --> 02:56:22,800
it returns me the size of my array.

3254
02:56:23,160 --> 02:56:28,080
So now it tells me that my sizes for
because that's what you created

3255
02:56:28,480 --> 02:56:32,160
what you stored three elements
you stored elements.

3256
02:56:32,480 --> 02:56:33,760
Now let's see.

3257
02:56:33,760 --> 02:56:37,200
Hey you know what the store
with the index one.

3258
02:56:37,200 --> 02:56:38,640
You know what I saw with the index?

3259
02:56:38,640 --> 02:56:40,560
Do you know what is always the industry?

3260
02:56:40,560 --> 02:56:41,320
Now, let me.

3261
02:56:41,320 --> 02:56:45,240
See? Hey, what do I have on my index?

3262
02:56:45,240 --> 02:56:45,840
Zero.

3263
02:56:45,840 --> 02:56:48,080
Because that's the only thing
that you don't know.

3264
02:56:48,080 --> 02:56:48,800
Right.

3265
02:56:49,320 --> 02:56:51,840
Okay. What is there with the index? Zero.

3266
02:56:52,040 --> 02:56:53,040
What is there? Everything.

3267
02:56:53,040 --> 02:56:55,000
What are that thing will
be? There is the index. You

3268
02:56:58,440 --> 02:56:59,120
my thing.

3269
02:56:59,120 --> 02:57:00,240
Arrow empty.

3270
02:57:00,240 --> 02:57:15,800
What you getting will be there.

3271
02:57:15,800 --> 02:57:19,040
No, not ready.

3272
02:57:19,240 --> 02:57:21,720
You want me to running days

3273
02:57:24,920 --> 02:57:29,040
So now inside your

3274
02:57:30,480 --> 02:57:32,200
index zero.

3275
02:57:32,200 --> 02:57:33,960
You are having it now.

3276
02:57:33,960 --> 02:57:35,240
So what is in all this?

3277
02:57:35,240 --> 02:57:36,560
What is it? Not

3278
02:57:39,200 --> 02:57:40,800
now. It's not now.

3279
02:57:40,800 --> 02:57:42,440
Let's not empty this each.

3280
02:57:42,440 --> 02:57:45,480
It's a default value for a string.

3281
02:57:45,480 --> 02:57:46,160
Right?

3282
02:57:46,240 --> 02:57:51,200
So now here what happens is
why you say that this strings.

3283
02:57:51,200 --> 02:57:52,920
They're fixed in signs.

3284
02:57:52,920 --> 02:57:56,880
When you created a string,
you said that you need the space for.

3285
02:57:56,880 --> 02:57:58,400
For elements.

3286
02:57:58,400 --> 02:58:00,480
There's a space for four
elements was created.

3287
02:58:01,400 --> 02:58:02,240
Right?

3288
02:58:02,760 --> 02:58:06,840
So now whether you use it or not,
that's up to you.

3289
02:58:06,960 --> 02:58:07,200
Right?

3290
02:58:07,200 --> 02:58:10,200
That is up to you
by Java gives you that space.

3291
02:58:10,200 --> 02:58:11,960
It gives you space, Right.

3292
02:58:11,960 --> 02:58:14,360
Big container with all these indexes,

3293
02:58:15,880 --> 02:58:19,000
the no inside one here, you store blue,

3294
02:58:19,160 --> 02:58:23,440
right here you store black,
and here you store yellow.

3295
02:58:23,520 --> 02:58:24,360
Right?

3296
02:58:24,440 --> 02:58:29,080
So now you did not store anything,
but the space was occupied.

3297
02:58:29,480 --> 02:58:30,880
The space was acquired.

3298
02:58:30,880 --> 02:58:34,880
So what compiler did compiler support?

3299
02:58:35,280 --> 02:58:39,280
Default value
and the same default value for a string is

3300
02:58:39,280 --> 02:58:43,240
what is not okay is not okay.

3301
02:58:43,920 --> 02:58:44,880
So now think good.

3302
02:58:44,880 --> 02:58:46,720
What what is in there radius?

3303
02:58:46,720 --> 02:58:49,640
Think or when we have a classroom. Right.

3304
02:58:49,760 --> 02:58:52,160
Give an example of the classroom.

3305
02:58:52,160 --> 02:58:57,800
So when we have a classroom
now we prepare seeds 400 people, right?

3306
02:58:57,800 --> 02:58:58,360
We preparing.

3307
02:58:58,360 --> 02:59:01,200
This is 400 people now.

3308
02:59:02,080 --> 02:59:05,400
90 students shop, 90 students show up.

3309
02:59:05,400 --> 02:59:05,920
Right?

3310
02:59:06,040 --> 02:59:08,040
So what happens?

3311
02:59:08,040 --> 02:59:11,280
The rest of ten cheese was empty, right?

3312
02:59:11,280 --> 02:59:13,080
It wasn't empty, but it got wasted.

3313
02:59:13,080 --> 02:59:15,200
But they still in there.
They're still in the room.

3314
02:59:15,200 --> 02:59:17,520
We prepare 480 show up. Right.

3315
02:59:17,800 --> 02:59:20,160
So now those got wasted, right?

3316
02:59:20,520 --> 02:59:22,680
They are still there,
but they are not occupied.

3317
02:59:22,680 --> 02:59:24,000
They are wasted.

3318
02:59:24,000 --> 02:59:25,640
So now think good next time.

3319
02:59:25,640 --> 02:59:27,240
What happened you say we learn. Okay.

3320
02:59:27,240 --> 02:59:29,760
No, we're not going to do hundred anymore.

3321
02:59:29,960 --> 02:59:31,800
Let's put 90 chairs.

3322
02:59:31,800 --> 02:59:36,600
So now we put 90 chairs,
but 150 students show up.

3323
02:59:36,720 --> 02:59:37,240
Right.

3324
02:59:37,240 --> 02:59:39,800
So now what do we get when we have a

3325
02:59:40,080 --> 02:59:44,880
when we said, I want 90 cheers,
but then 150 show up.

3326
02:59:44,880 --> 02:59:46,200
So now what are we going to get?

3327
02:59:46,200 --> 02:59:50,160
We are going to get index
out of one exception. Why?

3328
02:59:50,160 --> 02:59:54,000
Because now we prepared full list,
but we try to store

3329
02:59:54,000 --> 02:59:56,760
more index of one exception.

3330
02:59:57,040 --> 03:00:02,040
But when we have when we said we would
you have hundred but let's show up

3331
03:00:02,160 --> 03:00:07,400
80 show up now 20 got wasted right
what I always that's why

3332
03:00:07,400 --> 03:00:10,920
we see an eraser fixed in size
Once you said that

3333
03:00:10,920 --> 03:00:15,000
you store in four elements,
it will give you space for four elements.

3334
03:00:15,000 --> 03:00:17,280
Now how do you use it?

3335
03:00:17,280 --> 03:00:19,520
Of course you have to use them
accordingly, right?

3336
03:00:19,560 --> 03:00:20,800
You have to use them.

3337
03:00:20,800 --> 03:00:24,400
That's why we always try to start
with this zero, right?

3338
03:00:24,400 --> 03:00:26,440
We always to start with you.

3339
03:00:26,800 --> 03:00:30,120
Otherwise, if you miss any of the indexes.

3340
03:00:30,120 --> 03:00:30,400
Okay,

3341
03:00:31,520 --> 03:00:35,120
if you put if you miss indexes, it

3342
03:00:35,120 --> 03:00:38,760
will your compiler will still fill
it will still fill it up.

3343
03:00:39,800 --> 03:00:41,400
I put three instead of the four.

3344
03:00:41,400 --> 03:00:42,120
Yes, of course.

3345
03:00:42,120 --> 03:00:45,800
So now if you said that you want
you have three values, right?

3346
03:00:45,800 --> 03:00:48,080
If you want,
you have the way we did it in here. Right.

3347
03:00:48,480 --> 03:00:51,360
So now if you said you want to have three,

3348
03:00:51,720 --> 03:00:54,680
but when you try to put that here

3349
03:00:54,680 --> 03:00:58,040
you said
but when you trying to add the extra one

3350
03:00:58,040 --> 03:01:01,480
with the index four,
you got a right index out of bond.

3351
03:01:01,920 --> 03:01:04,760
Right. So that's why it's in array fixes.

3352
03:01:04,760 --> 03:01:09,280
So you want to go more
sorry array on a rebounding exception

3353
03:01:09,480 --> 03:01:14,160
you trying to fit list compiler will
fill it up with the default values. Okay

3354
03:01:16,360 --> 03:01:19,920
all right in here

3355
03:01:22,960 --> 03:01:24,960
is there a limitation?

3356
03:01:24,960 --> 03:01:28,320
I think it has a limitation,
but is very, very, very huge number.

3357
03:01:28,680 --> 03:01:29,920
It's very huge.

3358
03:01:29,920 --> 03:01:32,000
I forgot which number is that? Okay.

3359
03:01:32,280 --> 03:01:37,200
The only thing you can specify also
a negative size goes for the negative.

3360
03:01:37,200 --> 03:01:40,600
It also will give you
syntax wise will be fine.

3361
03:01:40,680 --> 03:01:42,400
Syntax wise it will be fine.

3362
03:01:42,400 --> 03:01:46,560
But during the run you're in there on
your java will give you the error.

3363
03:01:46,640 --> 03:01:49,560
Where's the error on the line 37 right.

3364
03:01:49,560 --> 03:01:54,480
You cannot specify a negative,
but can you specify if you would want?

3365
03:01:54,480 --> 03:01:56,720
Yes, you can specify the huge one. Okay.

3366
03:01:56,920 --> 03:02:00,600
So I honestly I don't remember.

3367
03:02:00,600 --> 03:02:01,440
I don't remember the.

3368
03:02:01,440 --> 03:02:04,160
But it can help.
It can hold a lot a lot of doubts.

3369
03:02:04,360 --> 03:02:05,160
But just

3370
03:02:13,000 --> 03:02:14,160
to know how

3371
03:02:14,160 --> 03:02:17,440
many blocks lovers you want
if you want with the budget

3372
03:02:18,000 --> 03:02:20,520
gimmick, that guy's going to have the same
color skin.

3373
03:02:20,520 --> 03:02:22,440
I have two blue

3374
03:02:23,040 --> 03:02:26,440
and I have two blue colors.

3375
03:02:26,440 --> 03:02:27,960
Yes, I can have. Right.

3376
03:02:27,960 --> 03:02:31,440
So now, when it comes to white,
if you want into this sequence.

3377
03:02:31,440 --> 03:02:33,440
Right, that will be from 1 to 120.

3378
03:02:33,480 --> 03:02:35,960
But can you store duplicate values?

3379
03:02:35,960 --> 03:02:37,640
You can store duplicate values, right.

3380
03:02:37,640 --> 03:02:42,000
So that's why you want if you go for a
byte, right, Even if you go for Biden.

3381
03:02:42,000 --> 03:02:44,880
So you want to have white, right.

3382
03:02:44,880 --> 03:02:48,360
And then a small array, right.

3383
03:02:48,760 --> 03:02:52,600
That equal you might write down your store

3384
03:02:52,600 --> 03:02:57,960
inside this yellow store I don't know, 800
whatever elements, right? Yes.

3385
03:02:57,960 --> 03:03:03,640
You can store you can store
as long as long as those elements

3386
03:03:03,840 --> 03:03:07,040
will be
of what the buy table values. Right.

3387
03:03:07,280 --> 03:03:08,240
The white type about.

3388
03:03:08,240 --> 03:03:10,840
But can you store transfer
them you we can store tons of

3389
03:03:14,480 --> 03:03:17,480
white so

3390
03:03:18,520 --> 03:03:23,160
we'll look into how to store elements
which store the mission indexes.

3391
03:03:23,160 --> 03:03:25,320
We access them based on the indexes.

3392
03:03:25,760 --> 03:03:28,800
You find out. What is the size to find on

3393
03:03:28,800 --> 03:03:31,440
what is the value
whenever we use in that length?

3394
03:03:32,240 --> 03:03:33,200
Right.

3395
03:03:33,520 --> 03:03:36,880
Hey, if we are going to add extra values,

3396
03:03:36,880 --> 03:03:39,960
we're going to get a right
index out of one exception

3397
03:03:41,120 --> 03:03:43,400
if we're going to add less values.

3398
03:03:43,720 --> 03:03:44,040
Right?

3399
03:03:44,040 --> 03:03:46,560
So what are we going to get?

3400
03:03:46,560 --> 03:03:49,080
Some filer will fill up that space for us.

3401
03:03:49,080 --> 03:03:50,880
We what is the default?

3402
03:03:50,880 --> 03:04:02,200
That is the default values.

3403
03:04:02,200 --> 03:04:08,640
If two students can have the same spot,
right, Two students can that.

3404
03:04:08,640 --> 03:04:11,720
Okay. Any any questions for this?

3405
03:04:11,720 --> 03:04:15,000
Just interest
is the interest of the arrays gets

3406
03:04:18,040 --> 03:04:18,680
okay right.

3407
03:04:18,680 --> 03:04:22,000
We are not looking into how do we achieve

3408
03:04:22,000 --> 03:04:25,520
all the values for now
just one value and only one way.

3409
03:04:25,520 --> 03:04:26,120
Not yet.

3410
03:04:26,120 --> 03:04:26,720
Not the address.

3411
03:04:26,720 --> 03:04:29,080
Beginning
beginnings are always easy, right?

3412
03:04:30,600 --> 03:04:32,040
Okay, let's see.

3413
03:04:32,040 --> 03:04:37,080
What do we have on our slides?

3414
03:04:37,080 --> 03:04:38,440
Right? Arrays. What?

3415
03:04:38,440 --> 03:04:40,920
There is a collection of similar data
type, right?

3416
03:04:41,320 --> 03:04:42,840
It's a container object.

3417
03:04:42,840 --> 03:04:44,680
You guys will learn what is objects. Why?

3418
03:04:44,680 --> 03:04:46,640
It's a container that holds value.

3419
03:04:46,640 --> 03:04:48,040
So homogeneous types.

3420
03:04:48,040 --> 03:04:50,520
Homogeneous means the same types, right?

3421
03:04:50,520 --> 03:04:54,320
You cannot say, Hey,
I'm creating an array of strings,

3422
03:04:54,600 --> 03:04:58,320
and then all of the sudden
try to store an integer.

3423
03:04:58,440 --> 03:04:59,640
It's not going to work, right?

3424
03:04:59,640 --> 03:05:01,240
It's not going to work.

3425
03:05:01,760 --> 03:05:04,520
Okay.

3426
03:05:04,520 --> 03:05:06,240
It's fixed in size, right?

3427
03:05:06,240 --> 03:05:10,240
It means because your Java executes
called up to the bottom

3428
03:05:10,320 --> 03:05:13,760
right, you click on Run, right?

3429
03:05:13,760 --> 03:05:18,240
This is what we say during the runtime,
right after you click on Run.

3430
03:05:18,720 --> 03:05:22,880
And once you start,
once your Java start executing your code,

3431
03:05:22,880 --> 03:05:26,600
if you guys look right now right
here, what I have a variable.

3432
03:05:26,600 --> 03:05:28,560
I have a variable colors.

3433
03:05:28,560 --> 03:05:31,080
Now, at the beginning,
you see, that's what

3434
03:05:31,080 --> 03:05:34,680
it has the right there for you,

3435
03:05:34,720 --> 03:05:37,680
give you right away
space for four elements.

3436
03:05:37,920 --> 03:05:41,600
And because the string
they are on the null, right.

3437
03:05:41,600 --> 03:05:42,760
That's why they are not.

3438
03:05:42,760 --> 03:05:44,520
And if you want to extend it.

3439
03:05:44,520 --> 03:05:44,840
Right.

3440
03:05:44,840 --> 03:05:49,520
That's why it tells you hey,
with the index zero index one index two

3441
03:05:49,880 --> 03:05:51,120
in the right.

3442
03:05:51,120 --> 03:05:54,440
So that's why
we are seeing during the one time

3443
03:05:54,720 --> 03:05:59,160
Java because you set for once
it's created an array of four elements.

3444
03:05:59,160 --> 03:06:02,160
It cannot
automatic click, increase or decrease.

3445
03:06:02,160 --> 03:06:02,640
Right.

3446
03:06:02,760 --> 03:06:05,400
And then what
you guys will see happen here.

3447
03:06:05,480 --> 03:06:07,440
Now we store in blue.

3448
03:06:07,440 --> 03:06:11,040
Now a blue will come inside your array
with which index moves.

3449
03:06:11,040 --> 03:06:14,800
The index one, now another blue will come
and now yellow will come.

3450
03:06:14,960 --> 03:06:15,240
Right?

3451
03:06:16,360 --> 03:06:18,360
So now you have an array.

3452
03:06:18,360 --> 03:06:19,560
How do you know it's in there? Right.

3453
03:06:19,560 --> 03:06:21,600
It has this square brackets, right?

3454
03:06:21,600 --> 03:06:23,040
First values. No.

3455
03:06:23,040 --> 03:06:23,840
Second values.

3456
03:06:23,840 --> 03:06:25,560
Blue values blue.

3457
03:06:25,560 --> 03:06:28,680
What value is yellow, Right.

3458
03:06:28,680 --> 03:06:31,280
But values yellow and then color.

3459
03:06:31,360 --> 03:06:35,280
That length gives us
how many elements inside might it.

3460
03:06:35,280 --> 03:06:35,840
Right. Right.

3461
03:06:35,840 --> 03:06:36,720
How many elements?

3462
03:06:36,720 --> 03:06:40,040
One, two, three, four, three, four.

3463
03:06:40,920 --> 03:06:43,280
And then we're creating Big Red.

3464
03:06:43,280 --> 03:06:46,360
So now what you created,
you created in a small array, right?

3465
03:06:46,680 --> 03:06:49,960
Legacy and have all the 000000 instead.

3466
03:06:49,960 --> 03:06:50,480
Right.

3467
03:06:50,560 --> 03:06:57,640
It has it it's a huge array
that we created in there.

3468
03:06:57,640 --> 03:07:01,080
All right.

3469
03:07:01,440 --> 03:07:04,200
You stores values
based on the indexes, right?

3470
03:07:04,200 --> 03:07:08,400
The first or when a race starts
zero go right.

3471
03:07:08,600 --> 03:07:13,880
So declaring an array
we will go over that again so here right

3472
03:07:14,240 --> 03:07:18,160
every arrange is an object which you guys
will own in the following class.

3473
03:07:18,480 --> 03:07:22,240
That's why we started with the new keyword
indexation element

3474
03:07:22,240 --> 03:07:24,920
and we accessed in those elements
by index.

3475
03:07:25,800 --> 03:07:28,040
This note elements next each

3476
03:07:32,040 --> 03:07:33,720
how to
find the size or when they're ready.

3477
03:07:33,720 --> 03:07:37,160
We use index length
that we use in that length.

3478
03:07:37,840 --> 03:07:40,280
So now two different ways.

3479
03:07:40,280 --> 03:07:41,040
Okay.

3480
03:07:41,200 --> 03:07:44,320
So before doing that, I guess what

3481
03:07:44,400 --> 03:07:48,280
you guys do,
you give you just this exercise, right?

3482
03:07:48,280 --> 03:07:49,920
And I know it's a break time

3483
03:07:49,920 --> 03:07:52,680
and then I'll show you the other way
how to create in the

3484
03:07:53,920 --> 03:07:56,040
beginning
of this very quick assignment, guys.

3485
03:07:56,520 --> 03:08:01,680
So this way you can quit with practice
and then we'll take a break.

3486
03:08:01,680 --> 03:08:03,720
This what I want you to create.

3487
03:08:03,720 --> 03:08:08,280
I want you create create an array
to store char

3488
03:08:08,320 --> 03:08:13,160
type of elements, and they will be holding
the value of your great ABC the ETF.

3489
03:08:13,200 --> 03:08:13,760
Right.

3490
03:08:13,840 --> 03:08:18,080
And then I just want you to access one
great I want you just to print grade B

3491
03:08:18,720 --> 03:08:20,560
then you guys try quickly to do it.

3492
03:08:20,560 --> 03:12:09,600
I'm sure that will be able to do it quick
and then we will take a break.

3493
03:12:09,600 --> 03:12:12,000
Jimmy does not give the error.

3494
03:12:12,000 --> 03:12:13,400
It does not give the error.

3495
03:12:13,400 --> 03:12:18,480
But what it will give a compiler
will fill it up the empty space.

3496
03:12:18,480 --> 03:12:20,800
Right. You see in here
we did not start from zero.

3497
03:12:21,200 --> 03:12:22,800
We didn't write it.

3498
03:12:22,800 --> 03:12:23,400
My code run.

3499
03:12:23,400 --> 03:12:25,440
Fine, use my code, run fine. No issues.

3500
03:12:25,760 --> 03:12:27,360
But what happened?

3501
03:12:27,360 --> 03:12:32,440
It's now you trying to access the colors
with the in the zero compiler.

3502
03:12:32,480 --> 03:12:33,680
Put the default value.

3503
03:12:33,680 --> 03:13:02,680
There's no issue.

3504
03:13:02,680 --> 03:13:04,920
Okay. Do you mean now you want extra?

3505
03:13:05,000 --> 03:13:10,440
Remember when you specify letters
with the index six right.

3506
03:13:10,440 --> 03:13:14,280
Remember on the line eight.

3507
03:13:14,320 --> 03:13:15,600
Right on the line eight.

3508
03:13:15,600 --> 03:13:20,800
You said you want an array with six
elements, but the one you want in the room

3509
03:13:20,800 --> 03:13:24,760
is six elements, the highest index,
what will be the highest index?

3510
03:13:25,000 --> 03:13:26,240
And there will be six elements.

3511
03:13:26,240 --> 03:13:31,920
This six elements,

3512
03:13:31,920 --> 03:13:35,760
highest index,
highest index will be five, right?

3513
03:13:35,800 --> 03:13:40,720
Zero 1 to 1, two, three, right.

3514
03:13:41,160 --> 03:13:45,800
Four or six elements,
The highest index will go only, only five.

3515
03:13:46,120 --> 03:13:49,920
So that's why if you
even if you're going to skip zero, right.

3516
03:13:49,920 --> 03:13:54,480
Even if you want to skip zero,
if you're going to store something

3517
03:13:54,480 --> 03:13:58,080
with the index six,
you still running not out of want, right?

3518
03:13:58,520 --> 03:14:02,040
So it's your mistake
that you're not putting inside

3519
03:14:02,040 --> 03:14:05,680
something inside that in the Zero
write compiler still take it.

3520
03:14:05,680 --> 03:14:07,200
The excess base is still going

3521
03:14:07,200 --> 03:14:10,920
to pick up the Java memory right
and it's still going to take the memory.

3522
03:14:11,360 --> 03:14:11,600
Okay.

3523
03:14:11,600 --> 03:14:21,000
So that's what you issue in there.

3524
03:14:21,000 --> 03:14:23,520
So six elements always remember this.

3525
03:14:23,520 --> 03:14:25,760
The highest index will be Fine.

3526
03:14:26,200 --> 03:14:30,600
Okay, So now how are you going to store
where you want to store?

3527
03:14:30,880 --> 03:14:31,640
That's up to you.

3528
03:14:31,640 --> 03:14:34,920
But that's why we always
try to state the store in order, right?

3529
03:14:34,920 --> 03:14:39,120
We don't want to leave any empty buckets
in the empty cavities in the

3530
03:15:00,160 --> 03:15:02,800
well for now, just to practice
the different arrays.

3531
03:15:02,800 --> 03:15:05,040
This just to practice different arrays.

3532
03:15:05,280 --> 03:15:09,840
That's why I wanted to create
an array of chars right.

3533
03:15:09,840 --> 03:15:10,920
So just to practice.

3534
03:15:10,920 --> 03:15:12,960
So this way
you guys don't get used to string.

3535
03:15:13,000 --> 03:15:16,840
So this way, if you did this assignment
now you saw that you can store

3536
03:15:16,840 --> 03:15:19,680
integer type of values, that you can store

3537
03:15:19,840 --> 03:15:23,400
double type of values, used store
string type of values.

3538
03:15:23,400 --> 03:15:26,200
And now you
this are able to store it chart type of.

3539
03:15:26,200 --> 03:15:30,040
That's right.

3540
03:15:30,040 --> 03:15:31,680
If you start string, that's fine.

3541
03:15:31,680 --> 03:15:32,840
Mr.. That's fine.

3542
03:15:32,840 --> 03:15:35,800
Okay. Okay.

3543
03:15:36,240 --> 03:15:38,080
All right.
I guess the thing you guys all did.

3544
03:15:38,080 --> 03:15:39,200
That's good. Good job.

3545
03:15:39,200 --> 03:15:41,280
So let's take a break.

3546
03:15:41,280 --> 03:15:43,480
Let's take a break for 15 minutes.

3547
03:15:43,480 --> 03:15:46,080
Right and then I'll show you other things.

3548
03:15:46,680 --> 03:15:48,960
What we can do with in the race. Right.

3549
03:15:49,960 --> 03:15:51,600
Let's do a break.

3550
03:15:51,600 --> 03:15:55,040
You know, it's still 2:00.

3551
03:15:55,160 --> 03:15:57,800
Writing will be 2:00

3552
03:16:06,200 --> 03:16:07,560
recording.

3553
03:16:07,560 --> 03:16:17,840
Okay.

3554
03:16:17,840 --> 03:16:20,680
All right.

3555
03:16:20,680 --> 03:16:22,160
Your issue is the same thing, right?

3556
03:16:22,160 --> 03:16:25,560
So you said, hey,
you going to store four elements

3557
03:16:26,200 --> 03:16:31,280
and then it means that the highest element
was, the index, right?

3558
03:16:31,280 --> 03:16:33,400
If you're trying to store four elements.

3559
03:16:33,880 --> 03:16:36,040
One, two, three, four. Right.

3560
03:16:36,040 --> 03:16:37,800
You indexes start from zero.

3561
03:16:37,800 --> 03:16:43,560
Your highest index should be three
now you put in your index is five.

3562
03:16:43,560 --> 03:16:46,280
So that's why you get an index,
not a by an exception.

3563
03:16:47,520 --> 03:16:49,760
So you have to make sure you store

3564
03:16:49,880 --> 03:16:52,680
say you didn't start from zero,
you started with one.

3565
03:16:52,800 --> 03:16:57,040
Okay, so your first face was empty
and then you tried to store element,

3566
03:16:57,040 --> 03:17:01,400
but there's no space for that element.

3567
03:17:01,400 --> 03:17:02,160
All right.

3568
03:17:02,360 --> 03:17:02,600
Right.

3569
03:17:02,600 --> 03:17:05,640
So once again, today,
we're looking into the arrays, right?

3570
03:17:05,640 --> 03:17:07,280
So we're saying, hey, what is it? Right?

3571
03:17:07,280 --> 03:17:10,880
Is it is a collection of similar theater
type, Right.

3572
03:17:10,920 --> 03:17:12,960
Collection is of similar data type, Right.

3573
03:17:13,360 --> 03:17:16,080
Arrays are fixed in size in

3574
03:17:17,560 --> 03:17:19,160
the store values, right.

3575
03:17:19,160 --> 03:17:21,360
You store values of the same type.

3576
03:17:21,360 --> 03:17:24,280
And those values we call elements. Right.

3577
03:17:24,760 --> 03:17:28,320
We saw them based on the indexes
you guys see when on this structure.

3578
03:17:28,320 --> 03:17:28,560
Right.

3579
03:17:28,560 --> 03:17:31,160
What are we Hey array there.

3580
03:17:31,200 --> 03:17:32,520
What is the length of the array?

3581
03:17:32,520 --> 03:17:36,280
What is the size is ten,
but how many indexes it can fit?

3582
03:17:36,280 --> 03:17:39,720
It can fit
only up to the nine. Right? Why?

3583
03:17:39,920 --> 03:17:42,720
Because index is always starts from zero,
right?

3584
03:17:43,120 --> 03:17:45,840
Index is always best from zero.

3585
03:17:45,840 --> 03:17:49,680
And then if we store an element
based on the indexes,

3586
03:17:49,680 --> 03:17:54,320
then we can access those elements
based on the indexes as well.

3587
03:17:54,440 --> 03:17:57,000
Right. Based on the indexes.

3588
03:17:57,000 --> 03:17:59,760
So now I may show you guys

3589
03:17:59,760 --> 03:18:02,840
that first way
how to create in the White House.

3590
03:18:02,840 --> 03:18:06,120
First we have to create the memory. So no,

3591
03:18:07,960 --> 03:18:09,520
let think this exercise.

3592
03:18:09,520 --> 03:18:13,840
So let me take it inside the new cluster
segmenting this part

3593
03:18:23,520 --> 03:18:24,640
things

3594
03:18:29,720 --> 03:18:31,520
All right so this is what we had, right?

3595
03:18:31,520 --> 03:18:33,240
So this is what we have.

3596
03:18:33,240 --> 03:18:36,800
So I want you I wanted you to create
an array of chars, Right?

3597
03:18:36,800 --> 03:18:41,120
And then I want you to print a great big
I want to frame the great piece.

3598
03:18:41,360 --> 03:18:43,200
So I think that's what we do, right?

3599
03:18:43,200 --> 03:18:44,880
So this is what we did.

3600
03:18:44,880 --> 03:18:47,520
So you said Char great or great,

3601
03:18:49,360 --> 03:18:50,080
right?

3602
03:18:50,080 --> 03:18:52,320
So you're creating an array, right area.

3603
03:18:52,320 --> 03:18:57,000
What what array of charts,
How many elements we need to store?

3604
03:18:57,240 --> 03:18:59,320
We're planning to store five elements.

3605
03:18:59,320 --> 03:19:02,400
ABC TV, ABC,

3606
03:19:04,080 --> 03:19:06,600
one, two, three, four, five, six.

3607
03:19:06,800 --> 03:19:08,720
Okay, then you need six elements, right?

3608
03:19:08,720 --> 03:19:10,440
We need six elements.

3609
03:19:10,440 --> 03:19:12,960
ABC e f at six elements.

3610
03:19:12,960 --> 03:19:17,840
But then your highest element,
what will be your highest elements?

3611
03:19:17,840 --> 03:19:22,280
The highest elements will be store
and the index price in excess.

3612
03:19:22,480 --> 03:19:25,120
And then we said, Hey,
what are we trying to access?

3613
03:19:25,120 --> 03:19:27,480
We tried to access that, right?

3614
03:19:28,240 --> 03:19:32,120
So the element of me which will be element

3615
03:19:33,240 --> 03:19:36,640
right?

3616
03:19:36,640 --> 03:19:40,000
So now this is a in

3617
03:19:40,000 --> 03:19:43,000
one way of creating and this is one way

3618
03:19:43,000 --> 03:19:46,960
of creating in there rich and this is a
we do an all in one.

3619
03:19:47,040 --> 03:19:50,000
So let me guess
the way we had a variable, right?

3620
03:19:50,280 --> 03:19:56,640
So remember this one, we have a variable
genome, right equals to test equal system.

3621
03:19:56,640 --> 03:19:58,760
So what are we doing?

3622
03:19:58,880 --> 03:20:01,440
We are initializing that right

3623
03:20:02,120 --> 03:20:05,200
and doing declaration at the same time.

3624
03:20:05,440 --> 03:20:06,840
Right at the same time.

3625
03:20:06,840 --> 03:20:08,680
So what are we doing in here?
The same thing.

3626
03:20:08,680 --> 03:20:13,000
We declared an array
and we initializing the size right.

3627
03:20:13,000 --> 03:20:15,720
So this steps can be done in
two steps as well.

3628
03:20:15,720 --> 03:20:16,920
That's the way we do.

3629
03:20:16,920 --> 03:20:19,080
Integer now equals to ten, right?

3630
03:20:19,080 --> 03:20:20,400
Or what do we can do?

3631
03:20:20,400 --> 03:20:25,760
We can say, Hey, I need a variable
and later we're initialize height.

3632
03:20:25,800 --> 03:20:29,520
Later we will show the same things
we can do with our array,

3633
03:20:29,760 --> 03:20:32,360
the same things we can do with our arrays
right.

3634
03:20:32,360 --> 03:20:34,440
So let's say for example Char

3635
03:20:35,400 --> 03:20:35,720
Right.

3636
03:20:35,720 --> 03:20:38,440
And for example gender, right?

3637
03:20:38,920 --> 03:20:42,680
So now you can say, Hey,
you know what I'm declaring the way

3638
03:20:43,200 --> 03:20:46,360
I am declaring a variable, I'm
declaring a single variable

3639
03:20:46,360 --> 03:20:50,280
and deploying the variable
that will hold a right of balance,

3640
03:20:50,280 --> 03:20:54,640
right on the second line you initialize,
you know what we can do?

3641
03:20:54,640 --> 03:20:57,200
We can initialize in the second line
as well, right?

3642
03:20:57,200 --> 03:20:59,280
So now we can say gender

3643
03:21:00,480 --> 03:21:04,640
equals new and let's say you knew what.

3644
03:21:04,880 --> 03:21:06,000
Tell me, guess what will be new?

3645
03:21:06,000 --> 03:21:16,680
What neutral?

3646
03:21:17,320 --> 03:21:18,720
It will be neutral.

3647
03:21:18,720 --> 03:21:20,480
It will be neutral.

3648
03:21:20,480 --> 03:21:23,480
So for example,
I want to store two values.

3649
03:21:23,480 --> 03:21:28,320
When I objects do that right?

3650
03:21:28,320 --> 03:21:29,480
So the same thing.

3651
03:21:29,480 --> 03:21:32,200
This is what are we doing before another

3652
03:21:34,160 --> 03:21:39,760
initialize investment?

3653
03:21:39,760 --> 03:21:46,080
So know how many elements
will planning to store to sell things.

3654
03:21:46,120 --> 03:21:46,560
Right.

3655
03:21:46,560 --> 03:21:49,480
So this is just two
steps is just broken down.

3656
03:21:49,760 --> 03:21:53,880
You can go either two steps
or you can go either all in once,

3657
03:21:54,600 --> 03:21:58,480
all at once, the same thing as we did
for the variable, right?

3658
03:21:58,680 --> 03:22:01,120
You clear in the array and here
what are we doing?

3659
03:22:01,120 --> 03:22:04,040
Declaring in the variable,
I declare a variable

3660
03:22:07,080 --> 03:22:09,000
and then we do initial script

3661
03:22:09,000 --> 03:22:15,160
and then we place initial that.

3662
03:22:15,160 --> 03:22:17,480
And now this is
when it comes to the erase, Right?

3663
03:22:17,480 --> 03:22:20,520
And this is the first way
how we can create an array.

3664
03:22:20,880 --> 03:22:24,720
So if you fall in this way somewhere,
you guys might see.

3665
03:22:25,080 --> 03:22:30,400
So when you guys might see that
in the rate ID and sometimes people place

3666
03:22:31,160 --> 03:22:34,640
next to the variable,
so we place this weight.

3667
03:22:34,800 --> 03:22:36,560
Yes, it can be place, right?

3668
03:22:36,560 --> 03:22:40,560
So now when you deploy the variable,
instead of placing this array,

3669
03:22:40,560 --> 03:22:44,840
identify that it's an array of chars
or you can just put it in here

3670
03:22:46,040 --> 03:22:48,000
again, it's going to be done.

3671
03:22:48,000 --> 03:22:51,600
Yes, it can be done,
but majority, majority of the times

3672
03:22:51,880 --> 03:22:57,760
and more preferable way goes to define
you used next to your data type

3673
03:22:58,200 --> 03:23:02,360
next do not after the variable,
but next to your data type.

3674
03:23:02,360 --> 03:23:05,280
Okay. So it can be done
this way. Yes, it can be done.

3675
03:23:05,280 --> 03:23:08,120
This one more preferable way is this way.

3676
03:23:08,440 --> 03:23:10,160
That's normally what I'm having.

3677
03:23:10,160 --> 03:23:11,880
I'm having an array of charms.

3678
03:23:11,880 --> 03:23:14,400
I'm having an array of charts. Right.

3679
03:23:14,400 --> 03:23:16,320
And then just your variable.

3680
03:23:16,320 --> 03:23:19,680
Okay, You guys have all this information
in slides, right?

3681
03:23:20,160 --> 03:23:22,840
And this is was the first way, right?

3682
03:23:22,840 --> 03:23:24,120
So what is this?

3683
03:23:24,120 --> 03:23:28,840
It's the first way
or one way of creating an array.

3684
03:23:30,280 --> 03:23:30,960
Now there's

3685
03:23:30,960 --> 03:23:34,080
another way of how we can create an array.

3686
03:23:34,880 --> 03:23:38,040
There's a second way of creating an array.

3687
03:23:38,280 --> 03:23:41,520
Well, it's a shorter way.

3688
03:23:42,160 --> 03:23:44,320
It's more useful way.

3689
03:23:44,440 --> 03:23:48,320
Probably not more useful,
but more commonly used here.

3690
03:23:48,400 --> 03:23:50,600
More commonly used.

3691
03:23:50,600 --> 03:23:55,840
So I'm going to create exactly the same
array, but use in a different way.

3692
03:23:56,000 --> 03:24:00,600
Okay, So now what I have
I do have array of chars.

3693
03:24:00,720 --> 03:24:02,760
I still have an array of chars.

3694
03:24:02,760 --> 03:24:04,640
Now I want to give it a name.

3695
03:24:04,640 --> 03:24:07,160
I don't already.

3696
03:24:07,160 --> 03:24:09,320
I don't know where it's

3697
03:24:10,920 --> 03:24:11,520
going.

3698
03:24:11,720 --> 03:24:12,240
Right.

3699
03:24:12,480 --> 03:24:15,360
So now instead of this specifying

3700
03:24:15,360 --> 03:24:19,640
instead of initialize in my size,
what can do,

3701
03:24:20,480 --> 03:24:22,880
I can directly place

3702
03:24:22,880 --> 03:24:26,640
the values inside
and how I'm going to place the values.

3703
03:24:26,760 --> 03:24:29,240
Just specify like it's a block of code.

3704
03:24:29,240 --> 03:24:29,920
Right?

3705
03:24:29,920 --> 03:24:34,360
So now what I want to store
I want to store array of chars.

3706
03:24:34,400 --> 03:24:34,800
Okay.

3707
03:24:34,800 --> 03:24:39,360
If it's chars then just for eight
and then guess with them.

3708
03:24:40,280 --> 03:24:41,680
Just with the call me

3709
03:24:47,280 --> 03:24:48,080
pointer.

3710
03:24:48,920 --> 03:24:49,320
Right.

3711
03:24:49,320 --> 03:24:52,720
For example. Now still,
what is this thing?

3712
03:24:52,720 --> 03:24:55,920
If I'm going say I'm going to say C, so

3713
03:24:57,480 --> 03:25:01,080
I'm going to say grades

3714
03:25:02,720 --> 03:25:04,320
grade that length.

3715
03:25:04,320 --> 03:25:06,200
What are that thing will be the output.

3716
03:25:06,200 --> 03:25:08,360
What of this thing
will be the output of my C, So

3717
03:25:13,280 --> 03:25:14,160
before, right.

3718
03:25:14,160 --> 03:25:17,800
It's still before
because how many elements I have?

3719
03:25:18,240 --> 03:25:20,680
I have four elements, right?

3720
03:25:20,680 --> 03:25:22,320
I have four elements.

3721
03:25:22,320 --> 03:25:23,160
What are this thing?

3722
03:25:23,160 --> 03:25:26,760
If I want to access now, I want to access

3723
03:25:26,760 --> 03:25:30,240
my element C I want to access my values.

3724
03:25:30,240 --> 03:25:33,120
See how can access that this

3725
03:25:40,680 --> 03:25:42,400
access my C

3726
03:25:44,040 --> 03:25:48,160
So now this, regardless of which way

3727
03:25:49,200 --> 03:25:51,360
in your code you created an array.

3728
03:25:51,800 --> 03:25:55,640
I just feel what it does now is still

3729
03:25:55,640 --> 03:25:59,320
array is exact the same array
we just created a different way.

3730
03:25:59,760 --> 03:26:02,520
You just created different
ways and now it store a

3731
03:26:04,080 --> 03:26:06,560
c d, it's

3732
03:26:06,680 --> 03:26:10,280
still stored based on the index is zero
one, two, three.

3733
03:26:10,280 --> 03:26:13,400
Right.
And now what is the name of my array.

3734
03:26:13,400 --> 03:26:15,480
This is the name of my right. Right.

3735
03:26:15,720 --> 03:26:18,840
So now how can you access that value of C?

3736
03:26:18,840 --> 03:26:20,720
You're still take the variable, right?

3737
03:26:20,720 --> 03:26:26,440
You still take your variable rates.

3738
03:26:26,440 --> 03:26:28,800
Right. Right, right.

3739
03:26:28,800 --> 03:26:31,440
An index was what index?

3740
03:26:31,800 --> 03:26:33,960
The index

3741
03:26:35,240 --> 03:26:35,440
right.

3742
03:26:36,160 --> 03:26:37,400
Now, what are we getting.

3743
03:26:37,400 --> 03:26:38,720
We didn't see. Right.

3744
03:26:38,720 --> 03:26:40,040
We get it's

3745
03:26:54,240 --> 03:26:57,440
from the school element

3746
03:26:57,440 --> 03:27:00,280
is withstand still is C you will see

3747
03:27:00,760 --> 03:27:03,720
so whether you create array

3748
03:27:04,120 --> 03:27:07,040
this way whether you create a longer way.

3749
03:27:07,040 --> 03:27:07,760
Right.

3750
03:27:07,920 --> 03:27:11,280
Is this same thing this the same thing
what happens

3751
03:27:11,400 --> 03:27:15,000
we still creating
then there we find the memory.

3752
03:27:15,000 --> 03:27:19,040
There's a still a big container
that still will have the index.

3753
03:27:19,040 --> 03:27:21,240
This will be create will be quick.

3754
03:27:21,640 --> 03:27:24,280
Can you do a string of
you guys can go to string.

3755
03:27:24,360 --> 03:27:27,640
Now let's store our names. Right.

3756
03:27:27,640 --> 03:27:29,840
Let me create an array of names. Right.

3757
03:27:29,840 --> 03:27:34,160
So how am I going
to create the memory of this?

3758
03:27:34,160 --> 03:27:36,120
Does it matter? No, it has No matter.

3759
03:27:36,120 --> 03:27:41,640
But the concept of street or of array
still will be the same right now.

3760
03:27:41,640 --> 03:27:41,960
Let Me.

3761
03:27:41,960 --> 03:27:45,080
See, I want to have array of strings,
right?

3762
03:27:45,080 --> 03:27:47,920
I be storing needs right now.
What do you do?

3763
03:27:47,920 --> 03:27:50,240
You just bought it right
away. And here. Right.

3764
03:27:50,240 --> 03:27:51,840
So now, because you have a string.

3765
03:27:51,840 --> 03:27:58,920
What do we have to specify?

3766
03:27:58,920 --> 03:28:01,440
You have to specify
a double quotations, right?

3767
03:28:01,440 --> 03:28:03,880
You just have to specify
the double quotation.

3768
03:28:03,880 --> 03:28:04,600
Right.

3769
03:28:04,600 --> 03:28:07,680
And then let's see
who your House member has.

3770
03:28:08,120 --> 03:28:08,560
Right.

3771
03:28:08,560 --> 03:28:16,400
And then for having there,
I guess I have a Emelia.

3772
03:28:16,400 --> 03:28:18,480
Sorry.
I hope I champion them first. Right.

3773
03:28:18,480 --> 03:28:19,720
And all you need is in there.

3774
03:28:19,720 --> 03:28:20,240
No. Yeah.

3775
03:28:20,240 --> 03:28:23,560
Having the right.

3776
03:28:23,560 --> 03:28:25,200
So now still I have one.

3777
03:28:25,200 --> 03:28:26,880
I have a right array.

3778
03:28:26,880 --> 03:28:28,360
What about extreme elements?

3779
03:28:28,360 --> 03:28:33,200
How many elements I have right now
I store four elements.

3780
03:28:33,200 --> 03:28:34,760
I store four elements.

3781
03:28:34,760 --> 03:28:35,960
So now let's look.

3782
03:28:35,960 --> 03:28:38,240
If I store four elements now

3783
03:28:39,400 --> 03:28:42,840
one one.

3784
03:28:43,640 --> 03:28:45,120
Not downside, right?

3785
03:28:45,120 --> 03:28:46,560
I'm not going to see any downside.

3786
03:28:46,560 --> 03:28:51,640
So now what happens is that because you
create in an array all in one line, right

3787
03:28:52,000 --> 03:28:54,920
and there is still an array,
the concept does not change.

3788
03:28:55,320 --> 03:28:57,680
Array is still fixed in size. Right.

3789
03:28:57,720 --> 03:29:00,920
For example, now I want to replace. Right.

3790
03:29:00,920 --> 03:29:05,200
For example, instead of the Alexander
I want to put

3791
03:29:06,480 --> 03:29:07,640
pre I want to put you.

3792
03:29:07,640 --> 03:29:11,120
So now how can I do this
instead of Alexander I want to put three.

3793
03:29:11,160 --> 03:29:12,760
How can I do it

3794
03:29:14,160 --> 03:29:16,160
if I hope say two correctly, Right.

3795
03:29:16,160 --> 03:29:17,000
Three

3796
03:29:18,120 --> 03:29:19,080
do right.

3797
03:29:19,080 --> 03:29:21,800
So how can I do it based?

3798
03:29:21,800 --> 03:29:23,920
I change it to you right now

3799
03:29:23,920 --> 03:29:27,840
I say Hey, before with the initial zero
I had Alexander.

3800
03:29:28,120 --> 03:29:31,160
Now right now I want to change.

3801
03:29:31,160 --> 03:29:33,480
Can I do it? Yes, I can do it right.

3802
03:29:33,480 --> 03:29:35,320
So now let me try to print now

3803
03:29:36,640 --> 03:29:36,960
with.

3804
03:29:37,120 --> 03:29:39,000
All right.

3805
03:29:39,000 --> 03:29:40,440
It's all

3806
03:29:41,480 --> 03:29:42,320
change.

3807
03:29:43,800 --> 03:29:44,760
Change.

3808
03:29:44,760 --> 03:29:49,280
Now you look at

3809
03:29:50,400 --> 03:29:52,600
me next.

3810
03:29:52,600 --> 03:29:53,920
Yeah.

3811
03:29:53,920 --> 03:29:57,240
Now let me go in my name. Get replaced.

3812
03:29:57,440 --> 03:29:59,080
Yes, my name replaced.

3813
03:29:59,080 --> 03:30:03,360
But now let's see what's going to happen
if I'm going to try,

3814
03:30:03,360 --> 03:30:07,000
I'm going to say names with the index.

3815
03:30:07,400 --> 03:30:09,480
Four equals two.

3816
03:30:09,960 --> 03:30:10,440
I don't know.

3817
03:30:10,440 --> 03:30:14,120
Let's say John, Let's put John in here.

3818
03:30:14,120 --> 03:30:25,320
What are the thing will happen?

3819
03:30:25,320 --> 03:30:28,200
Names with the index for

3820
03:30:42,160 --> 03:30:43,800
I am running

3821
03:30:43,800 --> 03:30:48,920
so why am I again say is a right index
out of one exception on the line 41.

3822
03:30:48,920 --> 03:30:50,760
Why am I getting that

3823
03:30:59,240 --> 03:31:01,120
so here.

3824
03:31:01,120 --> 03:31:03,280
This exact the same thing, right?

3825
03:31:03,440 --> 03:31:07,400
The only thing sure we did not specify
right here was specify

3826
03:31:07,400 --> 03:31:10,160
that I need an array
that stored two elements

3827
03:31:10,160 --> 03:31:12,480
and then you storing
two elements in there.

3828
03:31:12,480 --> 03:31:15,200
Right here. You hear what happens.

3829
03:31:15,480 --> 03:31:19,760
You are still creating in the array,
but when you place in the values

3830
03:31:19,760 --> 03:31:24,360
right away, it just gives you the places
for those four names.

3831
03:31:24,360 --> 03:31:25,080
That's it.

3832
03:31:25,080 --> 03:31:28,200
You put here. It will put me up here.

3833
03:31:28,400 --> 03:31:31,320
It put Emilia here
and it put nine in here.

3834
03:31:31,320 --> 03:31:33,240
Right. That's what happened.

3835
03:31:33,240 --> 03:31:35,840
So now how many index is Zero.

3836
03:31:35,880 --> 03:31:38,040
One, two, three.

3837
03:31:38,040 --> 03:31:40,200
Arrays are fixed in space.

3838
03:31:40,560 --> 03:31:42,240
You cannot increase them.

3839
03:31:42,240 --> 03:31:44,640
It is not increase
the size. Now using eight.

3840
03:31:44,640 --> 03:31:47,240
I want to the index. Four
I want to. I don't.

3841
03:31:47,520 --> 03:31:49,840
I'm sorry. There's no index four.

3842
03:31:49,840 --> 03:31:51,120
There's no index for why?

3843
03:31:51,120 --> 03:31:54,320
Because here you stored three string
you still four elements.

3844
03:31:54,560 --> 03:31:58,520
So the highest of the array one
it has four elements.

3845
03:31:58,520 --> 03:32:00,720
The highest index will be three.

3846
03:32:00,720 --> 03:32:01,920
That's it. Right.

3847
03:32:01,920 --> 03:32:04,200
So the concept is still the same.

3848
03:32:04,200 --> 03:32:06,640
You can not increase the size

3849
03:32:06,640 --> 03:32:09,480
of an array once it has been created.

3850
03:32:09,720 --> 03:32:11,640
Okay, Once it has been created.

3851
03:32:11,640 --> 03:32:15,120
So here you create the array
by storing for string elements.

3852
03:32:15,120 --> 03:32:17,920
It that's what you have
right now. That's what you

3853
03:32:20,280 --> 03:32:20,840
So here

3854
03:32:20,840 --> 03:32:24,680
will get three index out of one

3855
03:32:27,720 --> 03:32:28,520
and the same thing.

3856
03:32:28,520 --> 03:32:32,080
Even if I'm not going to go this way,
the same thing will get it right.

3857
03:32:32,080 --> 03:32:37,440
Index out of one exception.

3858
03:32:37,440 --> 03:32:41,880
Be quite an empty index until later.

3859
03:32:42,240 --> 03:32:44,440
Okay.

3860
03:32:44,440 --> 03:32:48,680
Like you mean to
have you mean to create this string.

3861
03:32:48,680 --> 03:32:49,400
Right.

3862
03:32:49,440 --> 03:32:52,840
So now there's you guys
will have to decide which way you go.

3863
03:32:52,840 --> 03:32:55,200
Right?
You guys have to decide which way you go.

3864
03:32:55,800 --> 03:33:01,080
If you want, you create an empty right
first and then store the values later.

3865
03:33:01,080 --> 03:33:02,040
That's fine.

3866
03:33:02,040 --> 03:33:03,440
That's fine. You can do it.

3867
03:33:03,440 --> 03:33:05,640
So this way you will have to go, right?

3868
03:33:05,640 --> 03:33:10,800
So if you want to create an array
and later stored the values,

3869
03:33:11,080 --> 03:33:15,360
then obviously you cannot go this way
you cannot go this way. Why?

3870
03:33:15,360 --> 03:33:20,520
Because when you go in this way,
you have to put the values right away.

3871
03:33:20,640 --> 03:33:21,080
Okay.

3872
03:33:21,240 --> 03:33:26,880
So, for example, you cannot say, hey,
I want to string, let's say cars.

3873
03:33:26,880 --> 03:33:28,440
I want to store cars, right?

3874
03:33:28,440 --> 03:33:33,560
I want to create a string
array of strings will hold cars.

3875
03:33:33,560 --> 03:33:33,880
Right?

3876
03:33:33,880 --> 03:33:38,840
You cannot say, hey, let me let
me just say that this will be my right.

3877
03:33:38,840 --> 03:33:40,880
And then I later add the values.

3878
03:33:41,040 --> 03:33:43,960
No, if you go in a shorter way,

3879
03:33:44,240 --> 03:33:47,720
you have to add the values right away.

3880
03:33:47,760 --> 03:33:49,800
Okay?
You have to add the values right away.

3881
03:33:49,800 --> 03:33:52,720
Because right now, if I'm going
if you want to leave it like that

3882
03:33:53,120 --> 03:33:58,000
and now I'm going to say cars
that linked, right.

3883
03:33:58,320 --> 03:34:00,480
So no cars, nothing will give me zero.

3884
03:34:01,080 --> 03:34:03,160
You did not add any elements.

3885
03:34:03,160 --> 03:34:05,520
Now, what is the size of my array.

3886
03:34:05,640 --> 03:34:07,720
The size of my errands. Right.

3887
03:34:08,160 --> 03:34:11,640
So now if you were right,
if in your situation

3888
03:34:12,120 --> 03:34:15,720
you want to first create
an array and later

3889
03:34:15,720 --> 03:34:19,120
add the values,
then you will have to go a longer way.

3890
03:34:19,480 --> 03:34:21,840
Then you will have to say string area.

3891
03:34:21,840 --> 03:34:24,040
What's the array of

3892
03:34:25,240 --> 03:34:26,320
final cars?

3893
03:34:26,320 --> 03:34:26,920
Right.

3894
03:34:27,400 --> 03:34:28,440
Are right.

3895
03:34:28,440 --> 03:34:31,560
Then can you go this way

3896
03:34:31,560 --> 03:34:32,480
and then?

3897
03:34:32,480 --> 03:34:35,240
But you have to specify the size here.

3898
03:34:35,240 --> 03:34:38,000
Compile is not going to give you a long
right compile.

3899
03:34:38,000 --> 03:34:39,000
No. Want to give you a look?

3900
03:34:39,000 --> 03:34:43,800
It will tell you
hey, you must provide this expression

3901
03:34:43,800 --> 03:34:47,160
for every initialize
your how many cars you would want.

3902
03:34:47,480 --> 03:34:51,200
I want to store three cars
now if you want to store them later.

3903
03:34:51,200 --> 03:34:53,600
And you could explain why. Just one.

3904
03:34:53,880 --> 03:34:56,000
Because the box with

3905
03:34:56,880 --> 03:34:59,280
three spaces will be in there.

3906
03:34:59,280 --> 03:35:01,320
So now can you go back to it in your time?

3907
03:35:01,320 --> 03:35:03,880
Yes, exactly
the same as one will remember this

3908
03:35:03,920 --> 03:35:07,840
when we had a variable and later
we were storing the dailies.

3909
03:35:07,840 --> 03:35:08,400
Right.

3910
03:35:08,800 --> 03:35:11,400
So this way you have to store values right
away.

3911
03:35:11,760 --> 03:35:13,760
This way,
if you want, you can store regardless.

3912
03:35:13,760 --> 03:35:17,200
If you.

3913
03:35:17,200 --> 03:35:18,360
So yes, enough.

3914
03:35:18,360 --> 03:35:20,280
Now you've got a point in here, right?

3915
03:35:20,280 --> 03:35:21,960
So now. Right.

3916
03:35:21,960 --> 03:35:24,800
Let me ask you first
this question for this.

3917
03:35:24,800 --> 03:35:27,360
A shorter what you create an array

3918
03:35:27,360 --> 03:35:32,240
the same thing, declaration declaration
on the left is exact the same way.

3919
03:35:32,640 --> 03:35:34,320
So what I have I have a variable.

3920
03:35:34,320 --> 03:35:37,080
This variable is what array of chars.

3921
03:35:37,080 --> 03:35:40,200
Now the only difference is initialization
part.

3922
03:35:40,560 --> 03:35:46,080
Instead of specifying how many elements
I have put in away those elements.

3923
03:35:46,440 --> 03:35:50,040
But regardless, if I'll go this way

3924
03:35:50,760 --> 03:35:54,840
or if I go
this way, it's still what happens.

3925
03:35:54,840 --> 03:35:57,720
Java gives me fixed sides here.

3926
03:35:57,720 --> 03:35:59,200
You said you want six elements.

3927
03:35:59,200 --> 03:35:59,840
Fine.

3928
03:35:59,840 --> 03:36:02,120
Here you store four elements right away.

3929
03:36:02,400 --> 03:36:03,200
That's it.

3930
03:36:03,200 --> 03:36:04,920
Java, fill up your box.

3931
03:36:04,920 --> 03:36:07,000
There's no more spaces you have.

3932
03:36:07,000 --> 03:36:11,120
You cannot add later or you cannot
you cannot remove.

3933
03:36:11,120 --> 03:36:11,400
Right?

3934
03:36:11,400 --> 03:36:14,200
If you have four spaces
and how those elements

3935
03:36:14,520 --> 03:36:18,200
elements stored
based on index is based on index

3936
03:36:19,840 --> 03:36:21,080
questions for a shorter way

3937
03:36:21,080 --> 03:36:50,640
against any questions for a shorter way.

3938
03:36:50,640 --> 03:36:51,720
Quick question. Sure.

3939
03:36:51,720 --> 03:36:54,560
Well, yeah, tell me those questions.

3940
03:36:54,560 --> 03:36:56,880
So regardless of which way

3941
03:36:57,360 --> 03:37:00,040
it's elements inside

3942
03:37:01,920 --> 03:37:04,280
all or

3943
03:37:05,400 --> 03:37:07,800
most of index

3944
03:37:07,800 --> 03:37:10,440
and what do we say about in this

3945
03:37:10,440 --> 03:37:20,280
next slides from the.

3946
03:37:20,280 --> 03:37:21,280
No, no, no, no.

3947
03:37:21,280 --> 03:37:23,440
Jimi, what do you want to be using?

3948
03:37:23,440 --> 03:37:26,120
See, so that was when I seen that.

3949
03:37:26,120 --> 03:37:29,400
Let's we just ask how many. Right?
How many?

3950
03:37:29,400 --> 03:37:31,560
It's a count. One, two, three, four, five.

3951
03:37:32,120 --> 03:37:32,400
What?

3952
03:37:32,400 --> 03:37:35,720
We did not learn yet
how to print all the values.

3953
03:37:35,720 --> 03:37:36,240
Right?

3954
03:37:36,240 --> 03:37:38,040
We printed how to access one.

3955
03:37:38,040 --> 03:37:40,920
Now we but we don't know how to access
all the values yet.

3956
03:37:40,960 --> 03:37:43,800
We will look into that. Okay.

3957
03:37:43,800 --> 03:38:06,480
Now what's your question question?

3958
03:38:06,480 --> 03:38:08,040
Yes, we are able. Why?

3959
03:38:08,040 --> 03:38:11,760
Because we specify correct
index regardless of which way

3960
03:38:12,360 --> 03:38:15,320
is always element
based on the index, always

3961
03:38:15,800 --> 03:38:19,480
index one index to an extreme index
for as long

3962
03:38:19,480 --> 03:38:23,080
as you specify correct index where good.

3963
03:38:23,400 --> 03:38:25,800
Why are we not able to store due one?

3964
03:38:25,800 --> 03:38:30,600
Because look, you try to store element
inside this array,

3965
03:38:30,600 --> 03:38:35,880
but element which element
element number five, right. Why?

3966
03:38:36,200 --> 03:38:41,640
Because this goes with the index for what
is the highest index inside this array.

3967
03:38:41,880 --> 03:38:47,240
Alexander takes index zero mathematics
index one Emilia.

3968
03:38:47,240 --> 03:38:50,040
Right. So I missed that.
Your name? Emily. It takes this.

3969
03:38:51,120 --> 03:38:52,960
Emily takes their place.

3970
03:38:52,960 --> 03:38:56,040
Index two now takes the index three.

3971
03:38:56,440 --> 03:38:57,360
That's it.

3972
03:38:57,360 --> 03:39:00,800
There is no index for this arrays created.

3973
03:39:01,280 --> 03:39:01,800
That's it.

3974
03:39:01,800 --> 03:39:04,440
With The four elements
being stored in there.

3975
03:39:04,440 --> 03:39:05,880
Right. Four elements.

3976
03:39:05,880 --> 03:39:09,720
Highest index will be three
soon as you were introduced to four.

3977
03:39:09,720 --> 03:39:12,400
That's it. It's out of index.

3978
03:39:12,400 --> 03:39:15,480
Things.

3979
03:39:15,480 --> 03:39:15,880
Okay,

3980
03:39:18,080 --> 03:39:20,160
So now the only

3981
03:39:24,440 --> 03:39:28,120
line 37.

3982
03:39:28,120 --> 03:39:30,800
So you replace an element within the zero
sorry

3983
03:39:31,320 --> 03:39:32,280
personal

3984
03:39:34,960 --> 03:39:35,760
love.

3985
03:39:36,360 --> 03:39:38,800
This is a very beautiful way

3986
03:39:38,800 --> 03:39:42,040
and most of the time
you will be storing it this week, right?

3987
03:39:42,040 --> 03:39:43,280
We will be storing this way.

3988
03:39:43,280 --> 03:39:46,440
Because also what happens
if you know the values,

3989
03:39:46,720 --> 03:39:48,880
if you know the values
that you want to put right,

3990
03:39:48,880 --> 03:39:52,280
if you know the values that you want
to put, this is the most easiest weight.

3991
03:39:52,640 --> 03:39:56,400
And then here
Java is not going to skip any index.

3992
03:39:56,400 --> 03:39:58,320
This is what you put them in order

3993
03:39:58,320 --> 03:40:01,000
in the zero index one and you do it
next day in this form.

3994
03:40:01,080 --> 03:40:02,040
That's it, right?

3995
03:40:02,040 --> 03:40:05,800
That's it is to create the box right away
and put the values there right away.

3996
03:40:05,840 --> 03:40:06,440
Right.

3997
03:40:06,560 --> 03:40:11,640
So what for example,
if you know that you want to store

3998
03:40:12,120 --> 03:40:15,240
values, right,
but you don't know them yet,

3999
03:40:15,600 --> 03:40:17,880
then you'll have to go
the longer work, of course.

4000
03:40:17,880 --> 03:40:23,040
And if you don't know the values right
away, you will have to go this longer.

4001
03:40:23,080 --> 03:40:25,320
We will have to go this one right.

4002
03:40:26,360 --> 03:40:27,160
And one thing.

4003
03:40:27,160 --> 03:40:30,600
When it comes to the shorter week,
it's one thing when it comes to shorter

4004
03:40:30,600 --> 03:40:34,920
with look in here,
you were able to declare in the array

4005
03:40:35,520 --> 03:40:38,840
what is on the line
12 where the client in there right

4006
03:40:39,200 --> 03:40:42,840
on the line 26 where initial lines right.

4007
03:40:43,320 --> 03:40:46,280
So now this part is available

4008
03:40:46,280 --> 03:40:49,480
only for a longer creation on the right.

4009
03:40:49,760 --> 03:40:55,680
If you trying to say, hey right I need
if you want to say hey you know what?

4010
03:40:55,680 --> 03:40:57,360
I want an array.

4011
03:40:57,360 --> 03:41:00,120
I want an array, for example,
integers, right?

4012
03:41:00,560 --> 03:41:02,600
I want an array of numbers.

4013
03:41:03,800 --> 03:41:08,400
Declaration is fine right now, Right.

4014
03:41:09,080 --> 03:41:10,920
I want an array.

4015
03:41:10,920 --> 03:41:13,320
I'm naming this as announced. Right.

4016
03:41:13,480 --> 03:41:19,320
And then later you want to say, Hey,
I want you now for values.

4017
03:41:19,320 --> 03:41:22,200
Right? I want now store values.

4018
03:41:22,360 --> 03:41:26,400
Okay, Now you want to store ten, 11,
whatever.

4019
03:41:26,400 --> 03:41:28,080
Right?

4020
03:41:28,080 --> 03:41:33,600
If you if you want to go a shorter way,
you can cannot split in two steps.

4021
03:41:33,800 --> 03:41:35,960
Okay?
You cannot split into two steps, right?

4022
03:41:36,240 --> 03:41:36,600
You can.

4023
03:41:36,600 --> 03:41:40,440
Let's with declaration
and then adding value in two steps.

4024
03:41:40,520 --> 03:41:40,800
Okay.

4025
03:41:41,800 --> 03:41:44,640
That's what that's what that's
what someone questions.

4026
03:41:44,680 --> 03:41:45,280
Okay.

4027
03:41:45,480 --> 03:41:49,160
So you declaration initialization.

4028
03:41:49,440 --> 03:41:54,120
If you want to go into shorter,
we must happen in one line.

4029
03:41:54,160 --> 03:41:57,320
It must happen in one. Okay.

4030
03:41:57,320 --> 03:42:00,600
So when you go in here, you will tell you

4031
03:42:02,000 --> 03:42:02,280
what.

4032
03:42:02,280 --> 03:42:03,400
So it says, Hey,

4033
03:42:03,400 --> 03:42:07,760
the values that you're trying to place
must be used as initial version part.

4034
03:42:07,920 --> 03:42:13,720
Okay, This is just us
trying different variations.

4035
03:42:13,720 --> 03:42:14,000
Right?

4036
03:42:14,000 --> 03:42:16,040
Let me come in here

4037
03:42:18,000 --> 03:42:25,640
right.

4038
03:42:25,640 --> 03:42:26,280
Right.

4039
03:42:26,640 --> 03:42:29,640
So what we are going to get,
we're going to get

4040
03:42:31,640 --> 03:42:34,680
we in not

4041
03:42:34,680 --> 03:42:36,520
be clear

4042
03:42:37,160 --> 03:42:42,000
in a way.

4043
03:42:42,000 --> 03:42:48,520
We need we want to

4044
03:42:49,680 --> 03:42:53,560
go round in order.

4045
03:42:54,000 --> 03:42:56,240
Think of it this way.

4046
03:42:56,240 --> 03:42:57,320
It's not going to work.

4047
03:42:57,320 --> 03:43:00,760
Declaration will be fine, but here
compiler will give it to

4048
03:43:01,920 --> 03:43:02,160
here.

4049
03:43:02,160 --> 03:43:06,560
You will get compiler will complete.

4050
03:43:06,560 --> 03:43:08,120
Compiler will

4051
03:43:09,480 --> 03:43:12,040
complain on

4052
03:43:12,040 --> 03:43:14,680
this one

4053
03:43:19,200 --> 03:43:20,280
and then it will be needed.

4054
03:43:20,280 --> 03:43:21,760
40. Okay.

4055
03:43:21,760 --> 03:43:26,640
So to match that, there is not a set
your way where you can delete the value

4056
03:43:26,640 --> 03:43:27,880
from in there. Right. Okay.

4057
03:43:27,880 --> 03:43:31,440
So they have to be put a lot
a lot of logic.

4058
03:43:31,440 --> 03:43:35,040
You cannot just say so
once you place the values, right.

4059
03:43:35,040 --> 03:43:37,440
So for example, now let me do integer

4060
03:43:39,000 --> 03:43:41,520
array of integers that have nums, right?

4061
03:43:41,960 --> 03:43:45,000
So once you place right, once you place,

4062
03:43:45,840 --> 03:43:50,400
let's say v place and 1256, for example.

4063
03:43:50,400 --> 03:43:51,000
Right.

4064
03:43:51,280 --> 03:43:54,120
You cannot just remove that value.

4065
03:43:54,120 --> 03:43:57,200
Can you replace it? Yes,
you can replace it.

4066
03:43:57,200 --> 03:44:01,160
Well, because what happens is
this box is being created, okay?

4067
03:44:02,200 --> 03:44:05,200
This box is being created
and those values are there.

4068
03:44:05,480 --> 03:44:07,440
Okay. Those values are there.

4069
03:44:07,440 --> 03:44:08,520
So it's in here.

4070
03:44:08,520 --> 03:44:11,240
Ten 1256 okay.

4071
03:44:11,640 --> 03:44:14,240
So in the array doesn't

4072
03:44:14,240 --> 03:44:17,520
give you an option to remove, right?

4073
03:44:17,680 --> 03:44:19,640
Remove completely.

4074
03:44:19,640 --> 03:44:21,720
So you cannot remove completely. Right.

4075
03:44:21,720 --> 03:44:23,880
Can you replace with other value.

4076
03:44:23,880 --> 03:44:26,040
Yes, you can replace because whatever

4077
03:44:26,080 --> 03:44:28,320
it is, it's still a variable,
but you can adjust.

4078
03:44:28,640 --> 03:44:31,240
It does not give you an option
that you remove.

4079
03:44:31,240 --> 03:44:36,440
But will there are you guys will learn
because of some operations

4080
03:44:36,440 --> 03:44:40,160
there are some loops we can throw inside,
some if conditions we can throw inside.

4081
03:44:40,160 --> 03:44:45,360
We can be able to remove that value
but inside another array,

4082
03:44:45,360 --> 03:44:46,720
because what happens?

4083
03:44:46,720 --> 03:44:49,120
This arrays are fixed in space.

4084
03:44:49,120 --> 03:44:52,400
Now once you pool, once you create
an array is trivial is

4085
03:44:52,400 --> 03:44:56,760
it has a space for three that has a space.

4086
03:44:56,760 --> 03:44:57,360
Okay.

4087
03:44:57,360 --> 03:44:59,840
That's why we are saying
arrays are fixed in size.

4088
03:45:00,040 --> 03:45:02,520
In fixed instance,
once you create it, it's there.

4089
03:45:02,520 --> 03:45:03,720
Right There is.

4090
03:45:03,720 --> 03:45:06,080
We don't have a ready option such as you

4091
03:45:06,880 --> 03:45:10,240
replace it
such as removal, remove other things.

4092
03:45:10,240 --> 03:45:14,160
There will be more data structures
that will you guys will be learning

4093
03:45:14,160 --> 03:45:15,520
towards the end of Java.

4094
03:45:15,520 --> 03:45:19,600
But these arrays that will be a limitation
with arrays does not have an option.

4095
03:45:19,600 --> 03:45:21,560
Such as, Hey,
you know what, let me just remove

4096
03:45:22,720 --> 03:45:27,880
just right, right.

4097
03:45:28,080 --> 03:45:31,800
So when you trying to store integer values
because the numbers

4098
03:45:32,280 --> 03:45:34,440
you just listed out this way, right.

4099
03:45:34,440 --> 03:45:38,000
Ten, 12, 15.

4100
03:45:38,000 --> 03:45:40,960
What do you guys want assignment
to do. Right.

4101
03:45:40,960 --> 03:45:44,360
One assignment to do and I want you to
And there is the other one.

4102
03:45:44,360 --> 03:45:46,080
I'll be okay.

4103
03:45:46,080 --> 03:45:48,560
So or okay. We already did names.

4104
03:45:48,640 --> 03:45:50,200
Okay, that's fine.

4105
03:45:50,520 --> 03:45:53,920
We already do three names.

4106
03:45:53,920 --> 03:45:55,120
Do we do names?

4107
03:45:55,120 --> 03:45:58,040
We need names in shorter. Wait.

4108
03:45:58,040 --> 03:45:59,280
That's fine. Okay.

4109
03:45:59,280 --> 03:46:00,720
So I can even do this. Weightings.

4110
03:46:00,720 --> 03:46:03,400
I want you to create an array.

4111
03:46:03,400 --> 03:46:05,360
I want you to coordinate. Create an array.

4112
03:46:05,360 --> 03:46:08,360
Whichever way you decide,
I want you to create array

4113
03:46:08,360 --> 03:46:11,640
awards,
and I want you to store Java Saturday.

4114
03:46:11,640 --> 03:46:14,760
Then they
then coding them each right in this order.

4115
03:46:15,240 --> 03:46:17,280
And then I want you from that right.

4116
03:46:17,280 --> 03:46:21,560
Come up with the sentence
saying Saturday is java coding D okay.

4117
03:46:21,840 --> 03:46:26,640
So while accessing the elements I want you
to access in the particular week.

4118
03:46:26,880 --> 03:46:29,080
So this way you will get this sentence.

4119
03:46:29,200 --> 03:46:31,200
Saturday is the Java coding day

4120
03:46:33,080 --> 03:46:33,800
applicable to

4121
03:46:33,800 --> 03:46:37,280
this and you can try store write.

4122
03:46:37,280 --> 03:46:38,280
How do you create?

4123
03:46:38,280 --> 03:46:42,160
Accessing is exactly the same way,
but how do you store the elements?

4124
03:46:42,160 --> 03:46:46,200
You can store in two different ones
so you guys can practice that?

4125
03:46:46,320 --> 03:46:52,880
So extended portion announcements, you

4126
03:50:42,760 --> 03:50:45,560
so you can change something
in your program that stack, right?

4127
03:50:45,560 --> 03:50:48,520
That's why it's, it's, it's browsing,
browsing, browsing. So

4128
03:50:49,600 --> 03:50:53,040
do you think you'll be able to quit,
try to quit your coach

4129
03:50:53,040 --> 03:50:55,760
and then try to reopen it

4130
03:54:15,560 --> 03:54:17,400
or I guess I hope you did it right.

4131
03:54:17,400 --> 03:54:19,880
So I hope you did it.

4132
03:54:19,880 --> 03:54:24,040
So the main concept on this
then the bar, the array right,

4133
03:54:24,120 --> 03:54:28,800
the main concept about array,
that array is a container

4134
03:54:29,240 --> 03:54:33,280
container that can hold the values
of what of similar type.

4135
03:54:33,280 --> 03:54:35,800
Right So you said, hey, I have a

4136
03:54:36,360 --> 03:54:39,600
I have a variable that holds an integer.

4137
03:54:40,760 --> 03:54:44,040
And the answer integer, that string

4138
03:54:44,040 --> 03:54:45,600
array of strings.

4139
03:54:45,600 --> 03:54:47,000
Right. The array of strings.

4140
03:54:47,000 --> 03:54:47,400
And here

4141
03:54:47,400 --> 03:54:51,600
you placing all string values and right,
you place it all string values in here.

4142
03:54:51,960 --> 03:54:56,080
So as soon as you try
and you put anything different, right.

4143
03:54:56,080 --> 03:54:57,360
You Java's completeness.

4144
03:54:57,360 --> 03:55:01,320
Why we've seen that array holds
a homogeneous type of false right.

4145
03:55:02,240 --> 03:55:03,880
Would you expect from that.

4146
03:55:03,880 --> 03:55:06,560
And now, regardless of which way

4147
03:55:06,720 --> 03:55:09,840
we create an array,
regardless of which way

4148
03:55:11,320 --> 03:55:15,960
element's always stored, is
what was indexes

4149
03:55:16,160 --> 03:55:21,920
in the new index
one index two index three index four.

4150
03:55:22,080 --> 03:55:22,920
Right.

4151
03:55:22,920 --> 03:55:27,280
So now if the elements right
the elements was stored

4152
03:55:27,280 --> 03:55:31,080
with the indexes
why they were always the indexes.

4153
03:55:31,080 --> 03:55:35,040
So we can easily the right
because if we can store

4154
03:55:35,040 --> 03:55:40,080
all elements in whichever order then we
how can we access them.

4155
03:55:40,080 --> 03:55:40,280
Right?

4156
03:55:40,280 --> 03:55:42,960
If we throw everything in one basket,
it will become a mess.

4157
03:55:42,960 --> 03:55:43,560
Right.

4158
03:55:43,720 --> 03:55:46,200
So that's why we sent array, right.

4159
03:55:46,240 --> 03:55:48,200
Array is a data structure.

4160
03:55:48,200 --> 03:55:49,240
What is a data structure?

4161
03:55:49,240 --> 03:55:51,320
Data structure is a particular way.

4162
03:55:51,320 --> 03:55:53,600
How data are being stored. Right.

4163
03:55:53,600 --> 03:55:56,200
So in this one we talk of the array.

4164
03:55:56,200 --> 03:55:59,520
You saying that data being stored
in the form of indexes

4165
03:55:59,840 --> 03:56:02,760
and indexes starting from zero, right?

4166
03:56:03,080 --> 03:56:08,760
So now it's storing data based on indexes,
then we can access

4167
03:56:08,760 --> 03:56:13,800
it also based on the indexes, and that's
what you guys been doing in the exercise.

4168
03:56:13,800 --> 03:56:14,360
Right.

4169
03:56:14,400 --> 03:56:18,200
So hey,
when I'm accessing the right to access the

4170
03:56:21,280 --> 03:56:21,960
access, the

4171
03:56:21,960 --> 03:56:25,160
value
right, I'm specifying the index, right?

4172
03:56:25,160 --> 03:56:29,040
I'm supposed to find the index. Like

4173
03:56:29,280 --> 03:56:32,040
for now I'm going to say, What's this?

4174
03:56:32,040 --> 03:56:35,040
What? What is the index zero. Right.

4175
03:56:35,040 --> 03:56:40,080
What was that in the you know, here
I'm accessing the first element.

4176
03:56:40,080 --> 03:56:40,680
Right?

4177
03:56:40,760 --> 03:56:42,960
Then I'm going to change to one.

4178
03:56:42,960 --> 03:56:45,000
I am a persistent second element.

4179
03:56:45,480 --> 03:56:47,720
Then I'm going to change to two.

4180
03:56:47,720 --> 03:56:52,640
I am access the third element
and so on and so on.

4181
03:56:52,840 --> 03:56:57,920
So you start in based on things
as indexes, you're able to retrieve them

4182
03:56:57,920 --> 03:57:01,240
based on indexes, but now want to me

4183
03:57:01,240 --> 03:57:03,840
logos now,

4184
03:57:04,320 --> 03:57:05,800
now one will look

4185
03:57:05,800 --> 03:57:08,440
how many elements
you are able to access right now.

4186
03:57:08,440 --> 03:57:16,760
Guess how elements we are able to access?

4187
03:57:16,760 --> 03:57:20,160
We are able to access,
but am I able to access all five

4188
03:57:20,160 --> 03:57:24,920
at the same time?

4189
03:57:24,920 --> 03:57:28,760
No, I'm accessing one element one by one.

4190
03:57:28,760 --> 03:57:29,000
Right.

4191
03:57:29,000 --> 03:57:32,680
So now if I want to access
all five elements,

4192
03:57:32,680 --> 03:57:34,960
right, what I'll have to do,
I'll have to do this with.

4193
03:57:35,760 --> 03:57:38,160
Right. So now I'll have to change one.

4194
03:57:38,400 --> 03:57:41,640
I'll have to change
two, I'll have to change three.

4195
03:57:41,640 --> 03:57:42,320
Right.

4196
03:57:42,320 --> 03:57:45,600
So one, two, three, four, five.

4197
03:57:45,600 --> 03:57:47,040
But I have five elements, right?

4198
03:57:47,040 --> 03:57:49,080
I have to go all the way to here.

4199
03:57:49,080 --> 03:57:49,400
Right?

4200
03:57:49,400 --> 03:57:51,800
I'll have to go all the way through here.

4201
03:57:51,800 --> 03:57:54,880
So now to access all the elements, right.

4202
03:57:54,880 --> 03:57:58,200
To access the all the elements,
what I'm doing is

4203
03:57:59,040 --> 03:58:01,720
I am repeating a block code.

4204
03:58:01,720 --> 03:58:02,520
And why not?

4205
03:58:02,520 --> 03:58:02,960
Is my

4206
03:58:02,960 --> 03:58:07,440
is my block of what is this same this
when you really look is it is it the same

4207
03:58:11,280 --> 03:58:12,640
in any

4208
03:58:14,560 --> 03:58:15,000
different?

4209
03:58:15,000 --> 03:58:23,240
But what is different?

4210
03:58:23,240 --> 03:58:26,760
So now when you look at right to access

4211
03:58:26,760 --> 03:58:30,200
five elements
this to access all five elements.

4212
03:58:30,200 --> 03:58:30,920
Right.

4213
03:58:30,960 --> 03:58:35,320
So I am technically repeating
this same block of quote.

4214
03:58:35,320 --> 03:58:38,120
I'm saying, hey, I need words,
I need words, I need words.

4215
03:58:38,120 --> 03:58:39,600
Any words? Any words.

4216
03:58:39,600 --> 03:58:43,240
The only thing what is changing my index.

4217
03:58:43,240 --> 03:58:46,720
It's changing right
when I'm accessing my elements.

4218
03:58:46,720 --> 03:58:48,360
So my index is changing.

4219
03:58:48,360 --> 03:58:54,000
I'm starting accessing my elements
from zero all the way to the element.

4220
03:58:54,000 --> 03:58:57,560
Who is the index for.
So now what I'm doing.

4221
03:58:57,560 --> 03:59:01,200
I am repeating, right,
I am repeating exact.

4222
03:59:01,200 --> 03:59:07,320
This same c is out with exact
the same name of my array variable right.

4223
03:59:07,320 --> 03:59:09,400
With the name of my variable.

4224
03:59:09,400 --> 03:59:13,000
And then the only thing that is change
is my index.

4225
03:59:13,000 --> 03:59:13,560
Right.

4226
03:59:13,800 --> 03:59:20,160
So now remember is when we said hey, in
programing whenever you have a repetition.

4227
03:59:20,160 --> 03:59:20,400
Right.

4228
03:59:20,400 --> 03:59:22,120
And we're repeating the same lines.

4229
03:59:22,120 --> 03:59:24,400
Yes, I am repeating the same ones. Right.

4230
03:59:24,680 --> 03:59:28,640
So now in order to implement made right,

4231
03:59:28,680 --> 03:59:32,760
in order to eliminate this code
redundancy, what do we use this?

4232
03:59:32,760 --> 03:59:42,880
What do we use?

4233
03:59:42,880 --> 03:59:44,240
We can use

4234
03:59:45,360 --> 03:59:48,000
that concatenation, but it's a longer buy.

4235
03:59:48,000 --> 03:59:50,360
What are we can use?
We can use a loop. Think of it.

4236
03:59:50,360 --> 03:59:55,120
What if you are going to have hundred
elements, you go and you print this out

4237
03:59:55,360 --> 03:59:57,920
and the only thing
what is going to change?

4238
03:59:58,200 --> 04:00:00,960
Going to change your index, right?

4239
04:00:01,280 --> 04:00:05,680
So now what we can do,
we can use a loop, right?

4240
04:00:05,680 --> 04:00:08,880
We can use a loop
to repeat the same action.

4241
04:00:09,320 --> 04:00:12,120
Now What do we need to identify it?

4242
04:00:12,120 --> 04:00:14,400
So now we have two type of loops, right?

4243
04:00:14,400 --> 04:00:16,120
We have two type of loops.

4244
04:00:16,120 --> 04:00:18,080
We have a four and we have while.

4245
04:00:18,080 --> 04:00:21,440
Right and therefore well, we have
so in which case do we go for four?

4246
04:00:22,000 --> 04:00:23,800
In which case do we go for While this

4247
04:00:38,080 --> 04:00:39,200
or we go one?

4248
04:00:39,200 --> 04:00:44,760
We know how many times
we have to repeat the block of code

4249
04:00:45,600 --> 04:00:54,600
and wow, when do we go for while?

4250
04:00:54,600 --> 04:00:56,120
When we don't know. Right?

4251
04:00:56,120 --> 04:01:01,200
So now the question stays right now
between four and between while right.

4252
04:01:01,520 --> 04:01:04,680
So now do you guys know

4253
04:01:04,920 --> 04:01:07,680
how many times
you want to retrieve the element?

4254
04:01:07,680 --> 04:01:12,400
Do you guys know?

4255
04:01:12,400 --> 04:01:13,520
Yes. You know. Right.

4256
04:01:13,520 --> 04:01:15,720
So right away we'll go for a for loop.

4257
04:01:15,720 --> 04:01:16,560
Right.

4258
04:01:16,560 --> 04:01:21,680
So now when you how many elements
how do you find out how many elements

4259
04:01:21,680 --> 04:01:22,360
you look?

4260
04:01:22,480 --> 04:01:27,800
How do you find out how many elements
you will pass?

4261
04:01:27,800 --> 04:01:30,240
How many elements you already has?

4262
04:01:30,240 --> 04:01:32,520
We can go that length, right?

4263
04:01:32,520 --> 04:01:34,520
We can go that length.

4264
04:01:34,520 --> 04:01:35,480
And then what?

4265
04:01:35,480 --> 04:01:39,400
We will be changing in just your variable
will be changing in years.

4266
04:01:39,480 --> 04:01:44,120
So now, instead of the having
the ugly code like that, right.

4267
04:01:44,280 --> 04:01:47,240
Which is not being wrong,
if you have only two three out,

4268
04:01:47,240 --> 04:01:50,160
but now when you have multiple values,
I will become an issue, right?

4269
04:01:50,560 --> 04:01:53,080
So now we will go for a foil loop, right?

4270
04:01:53,400 --> 04:01:56,280
So now actually let me keep this code.

4271
04:01:56,280 --> 04:01:58,520
So this way you see. Right.

4272
04:01:58,760 --> 04:02:00,840
So this way you will see. Right.

4273
04:02:00,840 --> 04:02:05,080
So now I want to start accessing elements

4274
04:02:05,080 --> 04:02:08,720
with the index zero with the index zero.

4275
04:02:09,000 --> 04:02:17,000
So what should I initialize my integer
I to?

4276
04:02:17,000 --> 04:02:21,880
If I want to access this first element,
then of course I have to start from zero.

4277
04:02:22,080 --> 04:02:23,880
Right. Okay.

4278
04:02:23,880 --> 04:02:29,200
So now I list or whatever you
we will define a commission.

4279
04:02:29,200 --> 04:02:30,600
So how far should I look?

4280
04:02:30,600 --> 04:02:36,440
This?

4281
04:02:36,440 --> 04:02:38,080
So for five. Right?

4282
04:02:38,080 --> 04:02:41,800
So what if I'm going to start more,
start adding more, I'm going to start

4283
04:02:41,800 --> 04:02:46,880
add more words love
and then and then happy and whatever.

4284
04:02:46,880 --> 04:02:49,440
Something else. Right. So now. Right.

4285
04:02:50,160 --> 04:02:52,400
Why do you want to go in conscious self.

4286
04:02:52,400 --> 04:02:55,800
One, two, three, four, five, six, seven.

4287
04:02:55,800 --> 04:02:57,600
Can you come? Yes, you can come.

4288
04:02:57,600 --> 04:02:59,640
But Java gives us an option.

4289
04:02:59,680 --> 04:03:04,480
Java gives us an option
that can give us the number of values.

4290
04:03:04,480 --> 04:03:04,800
Right.

4291
04:03:04,800 --> 04:03:07,920
So now how do you know how many indexes

4292
04:03:07,920 --> 04:03:12,600
I can go for words and use that length?

4293
04:03:12,600 --> 04:03:13,360
Right?

4294
04:03:13,480 --> 04:03:16,360
So now this one's that length.

4295
04:03:16,560 --> 04:03:18,880
What would develop the number
that it will return me.

4296
04:03:18,880 --> 04:03:20,760
Guess which number it will return me

4297
04:03:22,080 --> 04:03:24,680
or this particular string

4298
04:03:24,920 --> 04:03:30,480
for this particular array.

4299
04:03:30,480 --> 04:03:31,760
I read more. Okay, fine.

4300
04:03:31,760 --> 04:03:36,640
I added one one, two, three, four,
five, six, seven.

4301
04:03:36,640 --> 04:03:38,160
It will give me seven.

4302
04:03:38,160 --> 04:03:42,480
Okay, so then when we work,
it will give me a number seven.

4303
04:03:42,480 --> 04:03:42,840
Right?

4304
04:03:42,840 --> 04:03:46,880
I'll still specify what that length,
but technically it will give me seven

4305
04:03:47,520 --> 04:03:50,720
now and then of course, from 0 to 2.

4306
04:03:50,720 --> 04:03:58,080
And what are we doing This
we incrementing or discriminating?

4307
04:03:58,080 --> 04:04:01,200
We're incrementing I plus plus.

4308
04:04:01,320 --> 04:04:02,160
Okay.

4309
04:04:02,160 --> 04:04:06,680
And then inside my loop going to do hey,

4310
04:04:07,200 --> 04:04:10,080
give me my array

4311
04:04:11,400 --> 04:04:13,440
with what will be the index.

4312
04:04:13,440 --> 04:04:15,040
That's what will be the index.

4313
04:04:15,040 --> 04:04:25,640
Where so what?

4314
04:04:25,640 --> 04:04:32,840
So who is control in 01234.

4315
04:04:32,840 --> 04:04:38,160
Who is that?

4316
04:04:38,160 --> 04:04:39,000
My variable.

4317
04:04:39,000 --> 04:04:42,240
I, I am just going to justify my idea.

4318
04:04:42,360 --> 04:04:42,720
Right?

4319
04:04:42,720 --> 04:04:48,040
I'm going to specify my I
so now I'll go to C++

4320
04:04:48,280 --> 04:04:51,080
and then what I'm trying to access.

4321
04:04:51,080 --> 04:04:53,280
I'm trying to access words.

4322
04:04:53,280 --> 04:04:56,640
My words is an array in order for me

4323
04:04:56,640 --> 04:05:00,520
to access elements from the array,
I have to specify the index.

4324
04:05:00,800 --> 04:05:04,400
If I'm going to specify
zero is going to give me all the time.

4325
04:05:04,400 --> 04:05:05,080
Zeros.

4326
04:05:05,080 --> 04:05:10,320
Now want elements from index zero,
then one, then two, then three, then four.

4327
04:05:10,400 --> 04:05:10,960
Right.

4328
04:05:10,960 --> 04:05:15,800
So now who changes the values from 0 to 1
two, three, four?

4329
04:05:16,080 --> 04:05:18,000
Why did I write my variable?

4330
04:05:18,000 --> 04:05:20,040
I Okay, call my variable.

4331
04:05:20,480 --> 04:05:23,120
All right, so now the only thing you guys
will have to tell me

4332
04:05:23,120 --> 04:05:27,720
what will be condition
I is equals two zero words.

4333
04:05:27,720 --> 04:05:30,800
That length will give me a
how many elements?

4334
04:05:30,800 --> 04:05:32,960
How many elements? It's a number.

4335
04:05:32,960 --> 04:05:34,840
It's a numeric value.

4336
04:05:34,840 --> 04:05:39,720
And in our case it will be one,
two, three, four, five, six, seven.

4337
04:05:39,720 --> 04:05:40,800
It will be you, me, seven.

4338
04:05:40,800 --> 04:05:42,840
So what should we
do? What will be my operator

4339
04:05:45,480 --> 04:05:46,560
from one till seven?

4340
04:05:46,560 --> 04:05:48,880
We said incrementing.

4341
04:05:48,880 --> 04:05:51,800
Okay, less than seven.

4342
04:05:52,160 --> 04:05:54,120
That's fine. Less than seven.

4343
04:05:54,120 --> 04:05:54,880
Less than seven.

4344
04:05:54,880 --> 04:05:56,880
Let's take a look about what will happen.

4345
04:05:56,880 --> 04:05:59,720
Okay. Less or equal?
Less. Zero less. We're equals.

4346
04:05:59,720 --> 04:06:02,400
And now let me debugger, let me debug

4347
04:06:05,440 --> 04:06:05,920
that.

4348
04:06:08,960 --> 04:06:09,560
So here.

4349
04:06:09,560 --> 04:06:12,040
Right 19 this words.

4350
04:06:12,040 --> 04:06:16,440
I have an array of words
that has seven string elements, right?

4351
04:06:16,680 --> 04:06:20,120
One, two, three, four, five, six, seven.

4352
04:06:20,680 --> 04:06:22,440
What is my highest index?

4353
04:06:22,440 --> 04:06:24,720
I'm starting from zero going all the way.

4354
04:06:24,720 --> 04:06:27,720
Field six. Right. Okay.

4355
04:06:27,720 --> 04:06:29,640
That's what we go in right now. Right.

4356
04:06:29,640 --> 04:06:32,720
So now let's see how all of right
our loop works

4357
04:06:32,720 --> 04:06:35,680
because everything we so our look right.

4358
04:06:35,720 --> 04:06:39,720
What is that lens
What was that lens going to give me?

4359
04:06:39,720 --> 04:06:41,600
And number seven. Why?

4360
04:06:41,600 --> 04:06:44,320
Because I have seven elements.

4361
04:06:44,320 --> 04:06:48,040
One, two, three, four, five, six, seven.

4362
04:06:48,120 --> 04:06:48,680
Right.

4363
04:06:48,760 --> 04:06:51,280
What is the value of I now live I zero.

4364
04:06:51,400 --> 04:06:56,200
Hey, technically what we want
just 4p0 less than seven.

4365
04:06:56,480 --> 04:06:58,920
Yes. Condition is true. We'll go inside

4366
04:06:59,960 --> 04:07:01,640
Now. What are we going sign?

4367
04:07:01,640 --> 04:07:05,240
I'm saying,
hey, I want you print an array.

4368
04:07:05,240 --> 04:07:06,240
And what is that?

4369
04:07:06,240 --> 04:07:08,520
What is the value of
I at the current moment?

4370
04:07:08,520 --> 04:07:10,720
This is the current form. It

4371
04:07:14,800 --> 04:07:17,040
at current moment develop I zero.

4372
04:07:17,240 --> 04:07:20,000
So now, hey, what is the element within.

4373
04:07:20,000 --> 04:07:20,440
Did you.

4374
04:07:20,440 --> 04:07:21,680
Oh it is Java.

4375
04:07:21,680 --> 04:07:25,680
I'm going to print java for you
then what happens with my loop this

4376
04:07:25,680 --> 04:07:33,640
what happens with my loop?

4377
04:07:33,640 --> 04:07:36,560
My loop goes back,

4378
04:07:36,560 --> 04:07:38,280
I gets incremented

4379
04:07:38,280 --> 04:07:40,800
zero plus one equals to one.

4380
04:07:41,400 --> 04:07:47,480
And then again check in
the condition is one less or equal.

4381
04:07:47,480 --> 04:07:48,440
What is the worse.

4382
04:07:48,440 --> 04:07:50,800
That length, it's still seven, right?

4383
04:07:50,800 --> 04:07:55,440
It's still seven because there's a seven
element is one less than seven.

4384
04:07:55,440 --> 04:07:56,480
This condition is true.

4385
04:07:56,480 --> 04:07:59,320
I'm going inside
then I'm going to be accessing.

4386
04:07:59,320 --> 04:08:01,480
Hey, words with the index one.

4387
04:08:01,720 --> 04:08:05,640
Okay, it will be Saturday
and then next iteration works

4388
04:08:05,640 --> 04:08:08,640
with the index to with the index three

4389
04:08:08,640 --> 04:08:11,400
with the index, four with the index five.

4390
04:08:12,120 --> 04:08:14,480
What will be the element
that is the indexing.

4391
04:08:14,520 --> 04:08:16,920
This tell me what will be the
which value will.

4392
04:08:16,920 --> 04:08:19,120
Give me the index. Six. Tell me this

4393
04:08:24,600 --> 04:08:26,000
in my particular string.

4394
04:08:26,000 --> 04:08:28,920
You guys should see it in your right

4395
04:08:31,200 --> 04:08:33,960
now is the next six
you have seven elements

4396
04:08:33,960 --> 04:08:36,600
so it will give me happy right

4397
04:08:36,960 --> 04:08:40,680
element with the index six is happy right.

4398
04:08:41,120 --> 04:08:45,120
So here I access happy
it will me print me happy.

4399
04:08:45,600 --> 04:08:48,720
Now what happens this IFB was six
What happens

4400
04:09:03,600 --> 04:09:04,400
It goes up

4401
04:09:04,400 --> 04:09:08,400
it was six six plus one gives me seven.

4402
04:09:09,080 --> 04:09:12,360
So now I'm checking my condition
Hey is this seven?

4403
04:09:13,040 --> 04:09:14,760
What is the words that Les gives me?

4404
04:09:14,760 --> 04:09:15,400
Guess

4405
04:09:16,200 --> 04:09:19,440
what is the word that gives me

4406
04:09:19,800 --> 04:09:21,720
words that Les give me seven?

4407
04:09:21,720 --> 04:09:26,520
Is the condition true or false?

4408
04:09:26,520 --> 04:09:28,040
Condition is true.

4409
04:09:28,040 --> 04:09:32,280
So now when you go inside
and you will tell it, Hey,

4410
04:09:32,640 --> 04:09:37,360
my beautiful array,
give me the element with the index.

4411
04:09:37,360 --> 04:09:38,240
Seven.

4412
04:09:38,240 --> 04:09:40,760
Do you guys have
element with the index? Seven

4413
04:09:44,040 --> 04:09:47,920
No. So what are we going to give this

4414
04:09:51,160 --> 04:09:51,520
arrow?

4415
04:09:51,520 --> 04:09:59,520
Which arrow.

4416
04:09:59,520 --> 04:10:02,200
No. How guys here you index.

4417
04:10:02,200 --> 04:10:05,040
What is the max index. Max, this is six.

4418
04:10:05,400 --> 04:10:09,480
Now you're saying Hey Joshua, give me a
give me element is the index seven

4419
04:10:10,640 --> 04:10:11,960
are wondering. Right.

4420
04:10:11,960 --> 04:10:15,720
That's What are you guys going
to get You guys to get a boundary.

4421
04:10:15,720 --> 04:10:17,640
Right. So let me run quickly.

4422
04:10:17,640 --> 04:10:20,280
Let me first stop
and then we will do Ingeborg

4423
04:10:20,280 --> 04:10:22,680
and then we will fix it
right there. Right?

4424
04:10:22,680 --> 04:10:25,400
It says elements from array, right?

4425
04:10:25,640 --> 04:10:29,640
So online 18,
you have the arrow y on the line 18

4426
04:10:29,880 --> 04:10:32,520
you trying to access the element

4427
04:10:32,720 --> 04:10:36,600
with index seven
I'm sorry, that element does not exist.

4428
04:10:36,640 --> 04:10:37,160
Right.

4429
04:10:37,240 --> 04:10:45,200
So let's do debugging again.

4430
04:10:45,200 --> 04:10:48,280
Looking at

4431
04:10:50,800 --> 04:10:52,680
this here for

4432
04:10:52,680 --> 04:10:57,760
a few.

4433
04:10:57,760 --> 04:10:57,960
Yeah.

4434
04:11:01,200 --> 04:11:01,560
Right.

4435
04:11:01,800 --> 04:11:03,960
So declared an error. Right?

4436
04:11:03,960 --> 04:11:06,480
We declared the variable

4437
04:11:09,640 --> 04:11:10,480
declarative here.

4438
04:11:10,480 --> 04:11:12,520
Well that holds whole
array of strings. Right.

4439
04:11:12,520 --> 04:11:14,240
There is strings in here. Right.

4440
04:11:14,240 --> 04:11:18,240
That's your array of strings
that's how many elements you have.

4441
04:11:18,240 --> 04:11:18,840
Right.

4442
04:11:18,840 --> 04:11:23,560
So now words that blend
will give it the value of seven.

4443
04:11:23,640 --> 04:11:26,040
Right. What does that last will give you
that live seven.

4444
04:11:26,440 --> 04:11:29,600
Now what is the value of I values I zero.

4445
04:11:30,000 --> 04:11:33,720
Now I am access the element in the zero.

4446
04:11:33,920 --> 04:11:36,400
Now it will give me Java right?

4447
04:11:36,640 --> 04:11:41,280
It will give me job now moving next
I get increment

4448
04:11:41,280 --> 04:11:45,320
that right
I gets increment that the one needs me.

4449
04:11:45,320 --> 04:11:50,160
The element is the indexed one then
gives me the element with the index two.

4450
04:11:50,360 --> 04:11:50,760
Right.

4451
04:11:50,760 --> 04:11:55,440
And then gives me the element
with the index three and get a way

4452
04:11:58,800 --> 04:12:01,200
to do this. Now

4453
04:12:01,200 --> 04:12:01,920
one more

4454
04:12:02,680 --> 04:12:08,760
thing that my to find, right?

4455
04:12:09,000 --> 04:12:11,520
So now I am accessing that element.

4456
04:12:11,520 --> 04:12:15,280
I get to change the index four
and then the index five.

4457
04:12:15,280 --> 04:12:18,000
No problem. It still exists in this right.

4458
04:12:18,360 --> 04:12:21,000
And then I want the element with the index

4459
04:12:23,120 --> 04:12:24,520
fixed, which it's fine.

4460
04:12:24,520 --> 04:12:28,040
So what is the value of
I now live ise six.

4461
04:12:28,320 --> 04:12:31,040
What is the element
that is the index six now

4462
04:12:31,040 --> 04:12:35,600
we going to get p right
and this is the last element.

4463
04:12:35,880 --> 04:12:41,520
But what happens your java goes back you
I will get increment the till seven right.

4464
04:12:41,520 --> 04:12:46,760
So now you spend
give me element with the index seven.

4465
04:12:46,760 --> 04:12:49,360
I'm sorry there is no element of
is the index seven.

4466
04:12:49,680 --> 04:12:52,200
Why we are getting index of bond. Right.

4467
04:12:52,200 --> 04:12:53,520
So what should we think states.

4468
04:12:55,200 --> 04:12:56,280
No. Why don't need break.

4469
04:12:56,280 --> 04:13:01,280
What do do if things get easier fix.

4470
04:13:01,280 --> 04:13:03,480
Let's stick out Let's see.

4471
04:13:03,720 --> 04:13:06,840
What if we take up right there Here.

4472
04:13:07,080 --> 04:13:09,480
All your words are given to you right?

4473
04:13:09,480 --> 04:13:11,160
Your words are given to you.

4474
04:13:11,160 --> 04:13:13,680
So now, with the help of loop,

4475
04:13:14,200 --> 04:13:17,040
we were able to retrieve

4476
04:13:17,400 --> 04:13:20,280
all elements from my array.

4477
04:13:20,760 --> 04:13:22,920
All elements from one.

4478
04:13:22,920 --> 04:13:27,360
I Now, instead
of having all these redundant lines,

4479
04:13:27,720 --> 04:13:32,080
we put this line my loop,
we repeat in the same block.

4480
04:13:32,080 --> 04:13:33,400
Of course, how often?

4481
04:13:33,400 --> 04:13:37,840
How much time you repeated
as many as I have the elements in there.

4482
04:13:38,120 --> 04:13:40,880
As many I have the

4483
04:13:42,000 --> 04:13:45,120
know this do in order this Java Saturday

4484
04:13:45,360 --> 04:13:48,600
the coding is love copy

4485
04:13:49,080 --> 04:13:51,600
they retrieve from 0 to 1.

4486
04:13:52,000 --> 04:13:52,560
Okay.

4487
04:13:53,240 --> 04:13:55,400
What to know

4488
04:13:55,400 --> 04:13:59,160
how many elements we access be access
all seven ellipses.

4489
04:13:59,160 --> 04:14:00,760
All right.

4490
04:14:00,760 --> 04:14:03,120
Because what we started
with the in the zero

4491
04:14:03,440 --> 04:14:06,520
when all the way to the index six right

4492
04:14:08,280 --> 04:14:09,120
or yeah

4493
04:14:09,360 --> 04:14:11,880
no no no this is not related
to your exercise.

4494
04:14:11,880 --> 04:14:12,960
Your exercise was correct.

4495
04:14:12,960 --> 04:14:16,920
This is just for me to show
how to get all the values from on there.

4496
04:14:16,920 --> 04:14:19,600
Right. So let's do one more example.

4497
04:14:19,600 --> 04:14:21,200
This I want to do one more example,

4498
04:14:21,200 --> 04:14:25,840
and I want to show you one cool thing
very quickly.

4499
04:14:25,840 --> 04:14:27,360
Let's do another example.

4500
04:14:27,360 --> 04:14:30,960
Let's do another example.

4501
04:14:30,960 --> 04:14:32,520
Let me do

4502
04:14:33,000 --> 04:14:34,000
again

4503
04:14:35,400 --> 04:14:38,320
all from every

4504
04:14:43,520 --> 04:14:45,960
let me create an array of numbers, right?

4505
04:14:45,960 --> 04:14:48,640
Let me create an array of numbers.

4506
04:14:48,640 --> 04:14:49,120
Do not.

4507
04:14:49,120 --> 04:14:51,000
And we will to do the same thing.

4508
04:14:51,000 --> 04:14:53,160
That's right. Area one teachers

4509
04:14:54,400 --> 04:14:55,800
mum. Right.

4510
04:14:55,800 --> 04:14:59,520
And let me store a few numbers in here,

4511
04:14:59,520 --> 04:15:01,520
so I'm going to call

4512
04:15:02,520 --> 04:15:06,960
100, 200, 301 for example.

4513
04:15:07,080 --> 04:15:08,600
500. Right.

4514
04:15:08,600 --> 04:15:11,480
So now we said if I want to access

4515
04:15:11,480 --> 04:15:14,800
the elements,
I have to specify the index, right?

4516
04:15:15,160 --> 04:15:19,440
If I want to access the element,
I will have to specify the index.

4517
04:15:19,760 --> 04:15:22,040
We'll have to specify the right.

4518
04:15:22,080 --> 04:15:23,840
And it gives me that element.

4519
04:15:23,840 --> 04:15:25,720
It gives me that right.

4520
04:15:25,720 --> 04:15:28,560
So no, why do you miss?

4521
04:15:28,560 --> 04:15:31,200
I'm able to access only one element now.

4522
04:15:31,200 --> 04:15:35,960
If I want to access others,
I can simply change the index, right?

4523
04:15:36,120 --> 04:15:38,400
I can simply change the index.

4524
04:15:38,400 --> 04:15:40,760
You can simply change the index, right?

4525
04:15:40,760 --> 04:15:46,440
No. Once I was saying, Hey, what if I want
to access all the elements, right?

4526
04:15:46,440 --> 04:15:51,960
It means I have to continuously
repeating this same action which action

4527
04:15:52,320 --> 04:15:57,720
by specifying number zero,
not one, not two now three non four.

4528
04:15:57,760 --> 04:15:58,440
Right.

4529
04:15:58,440 --> 04:16:03,440
So any time we have the repetitive
we'll go for loop right.

4530
04:16:03,760 --> 04:16:04,640
In this case.

4531
04:16:04,640 --> 04:16:07,080
Do I know how many elements.

4532
04:16:07,080 --> 04:16:09,880
Yes I know how many elements. Right. Okay.

4533
04:16:09,880 --> 04:16:14,880
If I know how elements I have
I can easily go for loop.

4534
04:16:15,040 --> 04:16:15,280
Right.

4535
04:16:15,280 --> 04:16:19,520
So I will go for a for an integer I,

4536
04:16:19,960 --> 04:16:25,440
I always when I'm doing my loops,
I always start from the zero. Why?

4537
04:16:25,600 --> 04:16:29,920
Because the element, the first element
located with the index zero.

4538
04:16:30,120 --> 04:16:32,760
Right. And then how far I'll go.

4539
04:16:33,520 --> 04:16:35,440
I can specify a line myself.

4540
04:16:35,440 --> 04:16:39,240
I can say one, two, three or five.

4541
04:16:39,320 --> 04:16:39,920
Right.

4542
04:16:39,960 --> 04:16:42,480
My Current array has five elements.

4543
04:16:42,480 --> 04:16:44,440
Can I specify this way?

4544
04:16:44,440 --> 04:16:46,560
Yes, I can specify. Right.

4545
04:16:46,560 --> 04:16:48,240
And then I can do I plus plus.

4546
04:16:49,200 --> 04:16:51,560
Because for 1 to 5 we are increasing.

4547
04:16:51,560 --> 04:16:52,160
Right.

4548
04:16:52,440 --> 04:16:54,120
But okay.

4549
04:16:54,120 --> 04:16:57,480
When you erase small
you can calculate yourself.

4550
04:16:57,480 --> 04:17:00,760
But think of it when you guys
will be working with the massive arrays.

4551
04:17:00,760 --> 04:17:01,320
Right.

4552
04:17:01,440 --> 04:17:03,960
You cannot go to your quadrant calculated.

4553
04:17:03,960 --> 04:17:06,320
What if you you'll make a mistake. Right?

4554
04:17:06,760 --> 04:17:12,040
And plus now you know
one property of the of the array

4555
04:17:12,040 --> 04:17:15,960
so you don't have to calculate yourself
right Let it do a job.

4556
04:17:15,960 --> 04:17:18,000
So it's the same thing
if you have a calculator. Right.

4557
04:17:18,000 --> 04:17:19,560
Why do you want to calculate yourself?

4558
04:17:19,560 --> 04:17:21,160
If you have a calculator. Right.

4559
04:17:21,160 --> 04:17:23,880
Who can calculate
how many elements I have.

4560
04:17:24,320 --> 04:17:26,520
Oh, deep non that low.

4561
04:17:26,920 --> 04:17:29,400
What you calculate
it's not going to make a mistake.

4562
04:17:29,400 --> 04:17:31,880
Like Jack will find out how many words
a size.

4563
04:17:31,880 --> 04:17:35,600
I'm not going to tell it,
but Java will find out what is the length.

4564
04:17:35,600 --> 04:17:36,240
Right?

4565
04:17:36,760 --> 04:17:37,680
Yeah, we will find out.

4566
04:17:37,680 --> 04:17:41,480
And then what I do will see so
and I'll just say no.

4567
04:17:41,880 --> 04:17:45,720
And because the variable I, it's
constantly incremental

4568
04:17:45,720 --> 04:17:47,280
and constantly changing.

4569
04:17:47,280 --> 04:17:53,520
So now this variable I will take care
of my in the expected supply.

4570
04:17:53,520 --> 04:18:04,880
And if I want to print all in one line,
let me find all one line, all my alleys.

4571
04:18:05,080 --> 04:18:10,280
I retrieved all ones by
and everything looks beautiful.

4572
04:18:10,520 --> 04:18:14,120
I use my loop, I use the ones this out and

4573
04:18:14,120 --> 04:18:17,880
that's it. In

4574
04:18:27,440 --> 04:18:28,520
my or.

4575
04:18:28,520 --> 04:18:30,160
Any questions, guys? Any questions?

4576
04:18:30,160 --> 04:18:32,800
How would you retrieve
all elements from your loop

4577
04:18:38,960 --> 04:18:40,360
is the last.

4578
04:18:40,360 --> 04:18:42,560
How would you put the words
in order to me?

4579
04:18:43,200 --> 04:18:45,360
Okay, then we will just go for hide.

4580
04:18:45,360 --> 04:18:47,400
We will go the way we did, right?

4581
04:18:47,400 --> 04:18:48,520
We will go the way we did.

4582
04:18:48,520 --> 04:18:52,200
But if you want to use the loop,
then there is some.

4583
04:18:52,200 --> 04:18:55,760
If the if statements we probably will have
try it will be a little bit longer.

4584
04:18:55,760 --> 04:18:56,240
Wait,

4585
04:18:57,120 --> 04:18:57,960
how we sum them.

4586
04:18:57,960 --> 04:18:59,800
Alexander, that will be your homework.

4587
04:18:59,800 --> 04:19:02,240
Okay, That will be homework. But.

4588
04:19:02,240 --> 04:19:04,640
Okay.

4589
04:19:04,640 --> 04:19:05,160
Okay.

4590
04:19:08,200 --> 04:19:10,000
I actually want to just show you

4591
04:19:10,000 --> 04:19:14,600
one cool thing, guys, in all
because how your homework is based.

4592
04:19:14,600 --> 04:19:18,680
Okay, So great because I have a homework
where you guys would have to

4593
04:19:20,120 --> 04:19:20,400
write.

4594
04:19:20,400 --> 04:19:21,160
How do you find the

4595
04:19:21,160 --> 04:19:25,360
size right you did this
and then how do you print all the values?

4596
04:19:25,360 --> 04:19:27,800
You guys have this in slides, right?

4597
04:19:27,800 --> 04:19:29,880
And then you go over disadvantages.

4598
04:19:29,880 --> 04:19:31,640
But I wanted to show you one more loop

4599
04:19:31,640 --> 04:19:35,160
because that's how you guys
have your homework.

4600
04:19:35,280 --> 04:19:35,880
Okay?

4601
04:19:36,000 --> 04:19:38,240
That's how you guys have your homework.

4602
04:19:38,640 --> 04:19:41,880
I'm not going to give you the other one,
but I wanted to give you this one. Okay

4603
04:19:43,600 --> 04:19:45,480
It's actually very easy, guys.

4604
04:19:45,480 --> 04:19:46,320
You give me.

4605
04:19:46,320 --> 04:19:47,560
Give me five, 10 minutes.

4606
04:19:47,560 --> 04:19:49,720
I'll show you if you grasp that. Good.

4607
04:19:49,720 --> 04:19:53,040
If you not,
then I'll show it to you on Tuesday.

4608
04:19:53,080 --> 04:19:53,360
Okay?

4609
04:19:53,360 --> 04:19:54,920
I'll show again on Tuesday.

4610
04:19:54,920 --> 04:19:57,120
But it's very easy. It's.

4611
04:19:57,120 --> 04:19:58,760
It's very easy.

4612
04:19:58,760 --> 04:20:00,960
Okay, So

4613
04:20:02,160 --> 04:20:03,120
five more minutes. This.

4614
04:20:03,120 --> 04:20:04,200
Five more minutes, please.

4615
04:20:05,440 --> 04:20:06,440
All right.

4616
04:20:06,440 --> 04:20:09,360
No, I don't need it, actually. Guys. Good.

4617
04:20:09,360 --> 04:20:14,040
This comes up right now, so any
if there's an update for Java crumbs.

4618
04:20:14,040 --> 04:20:15,920
Guys, please don't update it.

4619
04:20:15,920 --> 04:20:18,440
Just give this version

4620
04:20:18,960 --> 04:20:19,760
standard.

4621
04:20:19,840 --> 04:20:24,480
All right, So now you access

4622
04:20:24,840 --> 04:20:28,480
all elements from an array.

4623
04:20:29,720 --> 04:20:33,200
There's another we can use,
and it's very beautiful.

4624
04:20:33,440 --> 04:20:34,040
Remember this?

4625
04:20:34,040 --> 04:20:37,080
We said that there's a for loops in Java,
but we looked into three.

4626
04:20:37,440 --> 04:20:40,680
So there's another loop that we can use

4627
04:20:40,880 --> 04:20:43,880
only and only for array, only for error.

4628
04:20:43,880 --> 04:20:44,800
Right. Okay.

4629
04:20:44,800 --> 04:20:46,920
So we cannot use it anywhere else.

4630
04:20:46,920 --> 04:20:50,360
It can be used only with array in.

4631
04:20:50,360 --> 04:20:52,280
Later
you guys will be learning collections.

4632
04:20:52,280 --> 04:20:53,560
Well now every time think go.

4633
04:20:53,560 --> 04:20:53,800
Okay.

4634
04:20:53,800 --> 04:20:56,480
If I have an array I can use.

4635
04:20:57,320 --> 04:20:57,720
Okay.

4636
04:20:57,720 --> 04:21:03,960
I, I can use my another Texas
or we can use

4637
04:21:04,640 --> 04:21:08,160
we can use equal for each.

4638
04:21:09,120 --> 04:21:10,080
I promise you guys,

4639
04:21:10,080 --> 04:21:13,080
you're going to like it
or we call it advanced

4640
04:21:13,920 --> 04:21:16,960
or loop or equal enhanced.

4641
04:21:17,240 --> 04:21:17,600
Okay.

4642
04:21:17,600 --> 04:21:21,560
So enhanced.

4643
04:21:21,560 --> 04:21:23,440
But something has been enhanced.

4644
04:21:23,440 --> 04:21:27,320
Something has been advanced so far
because it's still a four.

4645
04:21:27,360 --> 04:21:28,000
Right.

4646
04:21:28,000 --> 04:21:29,520
So when do we go for four?

4647
04:21:29,520 --> 04:21:32,480
When we know how many elements. Right.

4648
04:21:32,760 --> 04:21:33,600
So the same thing.

4649
04:21:33,600 --> 04:21:37,440
We will start with the four
then our parentheses.

4650
04:21:37,440 --> 04:21:37,760
Right.

4651
04:21:37,760 --> 04:21:40,040
And of course our block.

4652
04:21:40,040 --> 04:21:42,200
So now what do we specify in here?

4653
04:21:42,720 --> 04:21:46,520
So what we will have to specify
guys, what we will have to specify

4654
04:21:46,520 --> 04:21:49,640
minimum is what it will have to specify
exactly.

4655
04:21:49,640 --> 04:21:53,920
Same for here will be something
and the block of code.

4656
04:21:54,120 --> 04:21:57,720
So now inside of four
we put a semi column,

4657
04:21:58,920 --> 04:22:00,320
semi column.

4658
04:22:00,680 --> 04:22:06,200
So now on the right side, on
the right side, what are we going to put?

4659
04:22:06,200 --> 04:22:09,360
We're going to put then name of my array

4660
04:22:09,360 --> 04:22:17,080
what is in the name of my arrays,
name of my array,

4661
04:22:17,640 --> 04:22:20,160
name of my reason Them Okay, cool.

4662
04:22:20,920 --> 04:22:23,160
Now what do we put on the left side?

4663
04:22:23,160 --> 04:22:27,240
On the left side,
you need to tell me each element.

4664
04:22:28,320 --> 04:22:30,800
Each element inside your

4665
04:22:30,800 --> 04:22:35,080
array is of which type, each element
inside your arrays, of which type

4666
04:22:36,360 --> 04:22:37,720
of integer.

4667
04:22:37,720 --> 04:22:39,360
It's and then your right.

4668
04:22:39,360 --> 04:22:42,960
And then here it's of each element.

4669
04:22:42,960 --> 04:22:45,600
Inside you array is of the integer type.

4670
04:22:45,920 --> 04:22:48,360
And then in here we just give any in the

4671
04:22:48,920 --> 04:22:53,000
any name you'll give,
I'll give it variable name in.

4672
04:22:53,000 --> 04:22:56,360
And then what I'm going to do,
I'm going to print it.

4673
04:22:57,120 --> 04:22:59,320
So this is what's going to happen next.

4674
04:22:59,320 --> 04:23:03,200
When you work with the for each
look for look very smart grids

4675
04:23:03,600 --> 04:23:05,280
for each look very smart.

4676
04:23:05,280 --> 04:23:09,480
It works with the arrays,
which it knows as starting point.

4677
04:23:10,480 --> 04:23:12,520
It knows the end point.

4678
04:23:12,520 --> 04:23:15,800
So now why does it cool for each
So what it does?

4679
04:23:16,440 --> 04:23:19,840
Hey, I am looking through this array
which is an m

4680
04:23:20,760 --> 04:23:25,120
each element inside my normal right
is the of the integer type.

4681
04:23:25,320 --> 04:23:27,360
Yep, it is of the integer type.

4682
04:23:27,360 --> 04:23:30,280
So now what happens? Guess what happens?

4683
04:23:30,720 --> 04:23:36,840
You'll goes to your array mystery
and it starts from the beginning.

4684
04:23:36,840 --> 04:23:39,480
It takes each element

4685
04:23:40,640 --> 04:23:42,920
force inside this variable

4686
04:23:44,120 --> 04:23:45,640
and then prints.

4687
04:23:45,640 --> 04:23:47,400
First time it will be 100.

4688
04:23:47,400 --> 04:23:50,200
Right when it moves next.

4689
04:23:50,480 --> 04:23:53,040
When it moves next what it does, you

4690
04:23:53,640 --> 04:23:56,760
move to the next element from your array.

4691
04:23:57,360 --> 04:24:02,600
It moves to the next element
and then stores this your variable.

4692
04:24:02,920 --> 04:24:05,760
Now, next time you're variable

4693
04:24:05,760 --> 04:24:08,760
and holds the value of 200,

4694
04:24:10,320 --> 04:24:12,480
then you'll look
when your little goes back.

4695
04:24:13,320 --> 04:24:14,120
So what it does.

4696
04:24:14,120 --> 04:24:17,520
Hey, is there next element
inside your radius?

4697
04:24:18,000 --> 04:24:18,280
Okay.

4698
04:24:18,280 --> 04:24:21,080
If there is an x element, I'll move.

4699
04:24:21,080 --> 04:24:22,680
I'll move to 300.

4700
04:24:22,680 --> 04:24:26,400
Now I place element
inside this variable next.

4701
04:24:26,400 --> 04:24:28,400
Then it will be 300.

4702
04:24:29,280 --> 04:24:30,720
Then it goes again. It moves.

4703
04:24:30,720 --> 04:24:32,920
Hey, array, do you have more elements?

4704
04:24:32,920 --> 04:24:36,000
Yes, I do. Okay, then there will be 400.

4705
04:24:36,480 --> 04:24:42,120
400 will be stored inside and then printed
and then it goes back.

4706
04:24:42,120 --> 04:24:43,440
Will doesn't show up.

4707
04:24:43,440 --> 04:24:45,280
Hey, hey. Array.

4708
04:24:45,280 --> 04:24:46,000
Which array?

4709
04:24:46,000 --> 04:24:48,360
Array of numbers do
still have more elements?

4710
04:24:48,360 --> 04:24:49,320
Yes, I do.

4711
04:24:49,320 --> 04:24:52,520
Okay, let me go inside your element.

4712
04:24:52,880 --> 04:24:58,280
Each element I am taking,
I am storing it inside this variable.

4713
04:24:58,720 --> 04:25:01,440
And then I'm printing
now I'm going to print 500.

4714
04:25:01,800 --> 04:25:02,680
And then you look.

4715
04:25:02,680 --> 04:25:03,760
Goes back.

4716
04:25:03,760 --> 04:25:04,960
Goes back. Hey. Right.

4717
04:25:04,960 --> 04:25:06,400
Is there more elements?

4718
04:25:06,400 --> 04:25:08,720
No, I don't have more elements. Okay.

4719
04:25:08,720 --> 04:25:12,240
If you don't have more elements,
I'm like, I'm going to step it.

4720
04:25:12,360 --> 04:25:13,760
I'm going to step.

4721
04:25:13,760 --> 04:25:17,440
So this is how your enhanced for loop
works.

4722
04:25:18,000 --> 04:25:20,720
On the right side, you specify your array

4723
04:25:21,880 --> 04:25:22,760
on the left side.

4724
04:25:22,760 --> 04:25:25,680
Just tell me inside this array,
which is now

4725
04:25:26,720 --> 04:25:28,880
which elements you have my array

4726
04:25:29,000 --> 04:25:31,680
now is a type of integer.

4727
04:25:32,400 --> 04:25:33,840
It stars integers.

4728
04:25:33,840 --> 04:25:37,840
Okay, So now okay, each element,

4729
04:25:38,040 --> 04:25:40,560
each element from this array

4730
04:25:41,160 --> 04:25:44,840
I'm going to take and I'm going
to store inside this variable.

4731
04:25:45,560 --> 04:25:49,400
Each element I'm taking,
I'm storing inside this variable.

4732
04:25:49,520 --> 04:25:51,440
Okay, So let me see.

4733
04:25:51,440 --> 04:25:54,880
Is there any version
who is non love predefined

4734
04:25:55,920 --> 04:25:56,280
dimmer?

4735
04:25:56,280 --> 04:25:57,240
Can you specify?

4736
04:25:57,240 --> 04:25:59,400
What do you mean by not predefined array?

4737
04:26:00,840 --> 04:26:02,120
No. This is a same a column.

4738
04:26:02,120 --> 04:26:03,720
This this is a same a column now.

4739
04:26:03,720 --> 04:26:05,600
So now it's not a column on that.

4740
04:26:05,600 --> 04:26:07,520
It's the same column

4741
04:26:11,160 --> 04:26:12,040
in the advance.

4742
04:26:12,040 --> 04:26:14,160
And right now we are signing it.

4743
04:26:14,160 --> 04:26:16,880
We are signing each element
takes this element.

4744
04:26:16,880 --> 04:26:20,080
Then take this element
and stored inside this variable.

4745
04:26:20,200 --> 04:26:21,040
That's what it does.

4746
04:26:22,240 --> 04:26:22,640
That's what

4747
04:26:22,640 --> 04:26:27,360
it does.

4748
04:26:27,360 --> 04:26:30,600
Yes. You can even
you can create array using the loop.

4749
04:26:30,600 --> 04:26:34,640
You can you can use the loop after
array has been created. Yes.

4750
04:26:34,960 --> 04:26:35,440
Okay.

4751
04:26:36,360 --> 04:26:36,680
Not you.

4752
04:26:36,680 --> 04:26:38,320
Just a column is just a column.

4753
04:26:38,320 --> 04:26:41,800
This okay.

4754
04:26:41,800 --> 04:26:44,560
Sorry. A call in. That's simple. Okay.

4755
04:26:45,080 --> 04:26:47,880
So yes, advanced
loop works only only be zero.

4756
04:26:47,880 --> 04:26:49,800
It's always a race.

4757
04:26:49,800 --> 04:26:51,560
Okay, All of these are errors.

4758
04:26:51,560 --> 04:26:52,960
Let me quickly do one thing.

4759
04:26:52,960 --> 04:26:55,680
This let me see string

4760
04:26:55,680 --> 04:26:57,200
color. Right.

4761
04:26:57,200 --> 04:26:59,200
Just to show you an example.

4762
04:26:59,200 --> 04:27:00,840
So caller Right.

4763
04:27:00,840 --> 04:27:03,840
So what I'm going to have
when you have read,

4764
04:27:05,000 --> 04:27:08,120
for example, red and I'm going to have

4765
04:27:09,280 --> 04:27:11,120
blue and I'm going

4766
04:27:11,120 --> 04:27:15,000
to have waited for exams right now

4767
04:27:15,240 --> 04:27:20,120
if I want to access and I'm just going
to show you advanced for loop right again,

4768
04:27:20,120 --> 04:27:24,400
I want to access all the elements
I want to use my enhanced for.

4769
04:27:24,640 --> 04:27:26,000
It starts with the for

4770
04:27:27,200 --> 04:27:28,360
parenthesis.

4771
04:27:28,360 --> 04:27:32,240
Now what a column on the right side.

4772
04:27:32,240 --> 04:27:33,520
The name of my array.

4773
04:27:33,520 --> 04:27:36,600
What is the name of my array is

4774
04:27:39,880 --> 04:27:40,560
color

4775
04:27:41,240 --> 04:27:43,880
inside my array of colors.

4776
04:27:43,880 --> 04:27:45,720
Right. Or let me do colors right.

4777
04:27:45,720 --> 04:27:50,000
Let me put the colors inside
my array of colors.

4778
04:27:50,880 --> 04:27:53,440
What kind of elements I have,
What kind of elements?

4779
04:27:53,440 --> 04:27:54,040
I have

4780
04:27:54,840 --> 04:27:56,040
the string right?

4781
04:27:56,040 --> 04:27:57,520
They are string.

4782
04:27:57,520 --> 04:28:00,720
Okay, So now every string element,

4783
04:28:00,720 --> 04:28:04,080
I'll just give a whatever variable
and then any variable name.

4784
04:28:04,320 --> 04:28:06,040
Any variable name. Right?

4785
04:28:06,040 --> 04:28:10,000
And then what I'm doing,
I'm going to print just

4786
04:28:13,160 --> 04:28:15,720
what you what happens.

4787
04:28:15,960 --> 04:28:18,520
Your enhanced for a loop is very smart,

4788
04:28:19,320 --> 04:28:23,040
is very smart in those as long as you tell

4789
04:28:23,160 --> 04:28:27,000
the correct array,
as long as you said correct array.

4790
04:28:27,040 --> 04:28:30,400
So what you will
does it goes inside your array.

4791
04:28:30,440 --> 04:28:30,840
Right.

4792
04:28:30,840 --> 04:28:33,480
And it's always goes to the beginning.

4793
04:28:33,480 --> 04:28:36,480
So now it starts from very first element

4794
04:28:36,480 --> 04:28:39,440
takes rate stored inside this variable.

4795
04:28:40,000 --> 04:28:44,160
So basically right now what you're saying,
you saying, hey, string

4796
04:28:44,720 --> 04:28:47,600
call equals two, right?

4797
04:28:48,120 --> 04:28:49,480
That's what you said.

4798
04:28:49,480 --> 04:28:53,000
No. In here
you're to access the value of call

4799
04:28:53,400 --> 04:28:56,160
in first case it will be right.

4800
04:28:56,160 --> 04:28:58,320
Then your job goes back.

4801
04:28:58,320 --> 04:29:01,200
Hey, is there a next element
inside this array? Yes.

4802
04:29:01,200 --> 04:29:04,520
Okay. If there's next element, grab it

4803
04:29:05,720 --> 04:29:07,320
for it inside this variable.

4804
04:29:07,320 --> 04:29:10,440
So now you send string calls equals What

4805
04:29:10,800 --> 04:29:13,320
there are right now
holds the value of blue.

4806
04:29:13,760 --> 04:29:18,120
Now on the line 26
you print in the value of variable call.

4807
04:29:18,480 --> 04:29:21,120
And this case it will be blue.

4808
04:29:21,120 --> 04:29:23,840
Then it goes back moves next.

4809
04:29:24,040 --> 04:29:25,680
Hey is the next element

4810
04:29:25,680 --> 04:29:30,320
only know if there is next element,
then it moves, then it grabs.

4811
04:29:30,840 --> 04:29:33,720
Then it stored inside here
and then prints white.

4812
04:29:34,200 --> 04:29:37,200
And then when it goes back,
is there more elements?

4813
04:29:37,560 --> 04:29:39,640
No, there is no elements.

4814
04:29:39,640 --> 04:29:40,840
Condition becomes false.

4815
04:29:40,840 --> 04:29:42,000
Is there more?

4816
04:29:42,000 --> 04:29:44,000
No, there is more, not more.

4817
04:29:44,000 --> 04:29:45,640
We are going to get a false.

4818
04:29:45,640 --> 04:29:47,920
And that's when you start. Okay.

4819
04:29:47,920 --> 04:29:50,200
That's where you start

4820
04:29:52,560 --> 04:29:55,080
to know it's no good idea.

4821
04:29:55,080 --> 04:29:56,840
But I wanted to show you this.

4822
04:29:56,840 --> 04:29:59,640
I did not know that
we going to take a long time, right?

4823
04:29:59,680 --> 04:30:01,520
I didn't know
we're going to take that long,

4824
04:30:01,520 --> 04:30:04,040
so I'm going to push The Court okay.

4825
04:30:04,800 --> 04:30:07,920
I'm going to push the Court
So if you guys understood

4826
04:30:08,360 --> 04:30:14,160
the enhanced for loop, then this homework,
I'm going to send you guys back.

4827
04:30:14,640 --> 04:30:16,680
And this probably not.

4828
04:30:16,680 --> 04:30:17,520
I'll send you this.

4829
04:30:17,520 --> 04:30:21,600
Okay, so this
you guys will have to create in the array

4830
04:30:21,600 --> 04:30:24,000
and we in retrieve all the values.

4831
04:30:24,000 --> 04:30:26,600
If you understand, enhance for loop, do
two ways.

4832
04:30:26,600 --> 04:30:29,080
If you did not understanding
how in this world to do it.

4833
04:30:29,080 --> 04:30:33,840
One week and then two more assignments,
I will said okay, but

4834
04:30:34,800 --> 04:30:37,560
try to rewatch the video
and I believe you guys

4835
04:30:37,560 --> 04:30:41,880
will be able to understand right?

4836
04:30:41,880 --> 04:30:46,040
Well, your viewing hands for a loop
is never ever going to skip any elements.

4837
04:30:46,680 --> 04:30:47,160
Okay.

4838
04:30:47,160 --> 04:30:49,600
It starts beginning, ends at the end.

4839
04:30:49,640 --> 04:30:51,520
It's very, very smart loop. Okay.

4840
04:30:56,880 --> 04:30:57,680
All right.

4841
04:30:57,680 --> 04:30:59,720
Okay. So

4842
04:30:59,960 --> 04:31:02,400
one thing, guys, one thing, because

4843
04:31:03,760 --> 04:31:06,080
right now we are following a little bit,

4844
04:31:06,840 --> 04:31:09,200
not behind,
but because we did not have one plus.

4845
04:31:09,560 --> 04:31:11,760
So on to use the guys for Tuesday.

4846
04:31:11,760 --> 04:31:14,040
Please look over this advanced for a loop.

4847
04:31:14,040 --> 04:31:16,920
We're going to repeat it. Okay.

4848
04:31:16,920 --> 04:31:19,160
Yes. We control the condition
for your question there.

4849
04:31:19,160 --> 04:31:20,640
Yes, we can throw the conditions

4850
04:31:20,640 --> 04:31:24,240
on Tuesday, guys,
since they're doing the project today.

4851
04:31:24,560 --> 04:31:27,040
We are going to do the project on Tuesday.

4852
04:31:27,040 --> 04:31:27,640
Guess. Okay.

4853
04:31:27,640 --> 04:31:30,680
So please
make sure your team members are there.

4854
04:31:30,680 --> 04:31:34,440
And for Tuesday, guys, please
make sure you look over

4855
04:31:34,440 --> 04:31:36,760
a topic are equal to the arrays.

4856
04:31:37,880 --> 04:31:40,960
Advanced for loop and to the race.

4857
04:31:41,120 --> 04:31:41,680
Okay.

4858
04:31:41,680 --> 04:31:42,480
And when we go

4859
04:31:42,480 --> 04:31:46,560
and you have it from now on, guys
your Java classes are four days a week.

4860
04:31:46,560 --> 04:31:47,280
Okay?

4861
04:31:47,280 --> 04:31:51,560
So I'm going to see on Tuesdays
and now guys have a shorter time

4862
04:31:51,880 --> 04:31:57,160
to do your homework and sorry
for taking the little extra time,

4863
04:31:57,160 --> 04:32:00,600
but I hope it was useful
and I'm going to push the quote

4864
04:32:00,600 --> 04:32:04,200
I'm going to do to send you the homework
and just please try to do it.

4865
04:32:04,320 --> 04:32:10,440
Okay?

4866
04:32:10,440 --> 04:32:10,880
All right.

4867
04:32:10,880 --> 04:32:11,840
Thank you, guys.

4868
04:32:11,840 --> 04:32:15,120
I'll see all of you
in one day. In one day.

4869
04:32:15,480 --> 04:32:18,560
And Enjoy your Halloween. Have fun

4870
04:32:19,640 --> 04:32:21,480
If you don't have a team.

4871
04:32:21,480 --> 04:32:23,800
Guys, please
make sure you find the team by Tuesday.

4872
04:32:24,120 --> 04:32:27,240
Okay?

4873
04:32:27,240 --> 04:32:29,880
All right. Thank you, guys. Yes,
Homework will be in the course.

4874
04:32:30,000 --> 04:32:33,480
This. It's all right.

4875
04:32:33,600 --> 04:32:34,200
Hi, guys.
