1
00:00:05,240 --> 00:00:06,320
All right.

2
00:00:07,040 --> 00:00:09,200
So from today,

3
00:00:09,520 --> 00:00:13,920
we are going to start first Indy.

4
00:00:14,440 --> 00:00:17,160
Now, what is thingy?

5
00:00:17,160 --> 00:00:21,480
What are the advantages of this
and why we generally use just energy.

6
00:00:21,800 --> 00:00:22,560
Right.

7
00:00:22,800 --> 00:00:26,520
Why we can not Why we should not use
other tools and we should use test.

8
00:00:27,600 --> 00:00:31,360
What are the limitations
we had in our previous tools?

9
00:00:31,520 --> 00:00:32,360
Right.

10
00:00:32,640 --> 00:00:34,920
So that we have to adapt this new tool.

11
00:00:35,080 --> 00:00:36,240
All these things.

12
00:00:36,240 --> 00:00:38,400
First we are going to discuss.

13
00:00:38,400 --> 00:00:40,960
We will see the overview
of this particular tool.

14
00:00:41,400 --> 00:00:44,760
We will see all the practical applications
of this tool.

15
00:00:45,000 --> 00:00:47,800
And then we'll go ahead
and setup this tool

16
00:00:47,880 --> 00:00:50,120
in our intelligent idea.

17
00:00:51,320 --> 00:00:58,560
All right, fine.

18
00:01:00,000 --> 00:01:00,920
So far.

19
00:01:00,920 --> 00:01:03,040
Let me ask you one thing.

20
00:01:06,200 --> 00:01:08,760
This is your application, right?

21
00:01:08,760 --> 00:01:10,840
Let's say this is a project.

22
00:01:10,840 --> 00:01:13,600
Let's say you all got a job
and you have a project.

23
00:01:13,600 --> 00:01:15,640
You you're working on this
particular project.

24
00:01:15,640 --> 00:01:17,080
You go to one web application.

25
00:01:18,200 --> 00:01:21,360
On this web
application, you have to perform testing.

26
00:01:21,360 --> 00:01:25,320
You have to verify whether this
application is strictly working or not.

27
00:01:25,320 --> 00:01:28,320
When I say verify,
it means you have to test this

28
00:01:28,320 --> 00:01:30,320
applications, complete functionality,

29
00:01:31,360 --> 00:01:35,640
whatever the beautiful logo
and the symbols and the fields

30
00:01:35,640 --> 00:01:38,400
you are seeing here onto this
screen, Right.

31
00:01:38,640 --> 00:01:40,160
This is what

32
00:01:41,200 --> 00:01:43,120
this global this complete screen.

33
00:01:43,120 --> 00:01:45,560
What is this? This is UI, right?

34
00:01:45,960 --> 00:01:50,520
We also call it 20 days user interface,
front end.

35
00:01:51,040 --> 00:01:54,200
So here to try to interact with this

36
00:01:54,240 --> 00:01:59,680
UI to automate something on the frontend
which is available on the website.

37
00:01:59,760 --> 00:02:09,600
We have one tool, which tool is this?

38
00:02:09,600 --> 00:02:11,280
Selenium, right?

39
00:02:11,280 --> 00:02:14,560
We are using selenium
to automate out of application.

40
00:02:14,720 --> 00:02:17,240
Right now when I say yes, I mean

41
00:02:18,600 --> 00:02:20,760
I never thought of this word.

42
00:02:21,520 --> 00:02:24,000
I will implement it in my coming batches.

43
00:02:24,000 --> 00:02:26,760
So on this UI part,

44
00:02:26,800 --> 00:02:30,840
on this UI part where we can interact,
where we can interact

45
00:02:30,840 --> 00:02:34,600
with the web elements, with the web
application, we also collect them.

46
00:02:34,640 --> 00:02:39,360
Benedict as the UI has the right user
interface frontend testing.

47
00:02:40,000 --> 00:02:42,240
Now tell me one thing

48
00:02:42,360 --> 00:02:45,120
when I'm entering this data here, right?

49
00:02:45,400 --> 00:02:46,960
This data I'm entering

50
00:02:46,960 --> 00:02:50,160
when I'm entering the password here
and when I click on log in,

51
00:02:50,440 --> 00:02:53,880
it will redirect me to the homepage
to their dashboard page.

52
00:02:54,120 --> 00:02:54,920
Right.

53
00:02:55,360 --> 00:03:00,280
So when I see I'm passing username
and password and I click on log in button.

54
00:03:00,440 --> 00:03:03,480
So how this website knows that yes,

55
00:03:03,480 --> 00:03:07,320
this is their time to redirect
this particular user to dashboard page.

56
00:03:08,680 --> 00:03:11,240
So from
where this admin credentials are coming,

57
00:03:11,240 --> 00:03:15,120
this username, this password is coming
and with the information

58
00:03:15,160 --> 00:03:19,360
which is linked to this username is coming
and visible onto the screen

59
00:03:19,360 --> 00:03:23,280
from where we are getting the event,
what we are writing.

60
00:03:23,280 --> 00:03:26,880
That is also code from where
I'm seeing from where it is coming.

61
00:03:28,200 --> 00:03:29,400
Yes, exactly.

62
00:03:29,400 --> 00:03:31,200
From backend.

63
00:03:31,200 --> 00:03:33,200
Right. From database.

64
00:03:33,200 --> 00:03:37,680
We have stored this information
in the database right now.

65
00:03:37,680 --> 00:03:43,680
How we claim your database is connected to
where UI your UI is nothing.

66
00:03:43,880 --> 00:03:46,520
Your UI is just a user interface.

67
00:03:46,560 --> 00:03:48,040
What does it mean? Interface.

68
00:03:48,040 --> 00:03:52,760
We've already discussed this interface
gave game definition according to you.

69
00:03:52,760 --> 00:03:56,880
Give the body according to your own
requirement according to your own needs.

70
00:03:57,120 --> 00:03:57,760
Right.

71
00:03:57,760 --> 00:04:00,960
So you provide
admin username and password.

72
00:04:00,960 --> 00:04:03,200
When you provide
admin username and password.

73
00:04:03,440 --> 00:04:07,280
It will give you the data which is linked
to the admin username and password.

74
00:04:07,720 --> 00:04:11,840
At the same time, instead of admin,
if you enter with this form,

75
00:04:12,000 --> 00:04:13,440
this is available here,

76
00:04:13,440 --> 00:04:16,680
this user, then it will give you the data
which is linked to this file.

77
00:04:17,280 --> 00:04:19,880
Right. So the data is coming from making

78
00:04:20,920 --> 00:04:23,360
this video, performing this operation.

79
00:04:23,360 --> 00:04:26,000
It is fronting right now.

80
00:04:26,080 --> 00:04:29,960
You need one platform
where you can perform all of this

81
00:04:29,960 --> 00:04:32,040
operations together, right?

82
00:04:32,040 --> 00:04:34,560
Where you can perform
all of this operations together.

83
00:04:34,800 --> 00:04:39,240
You can verify and validate that data
which is coming from the database.

84
00:04:39,600 --> 00:04:40,120
Right.

85
00:04:40,120 --> 00:04:40,800
So obviously,

86
00:04:40,800 --> 00:04:44,400
the data which is coming from the database
will be available on the application.

87
00:04:44,760 --> 00:04:45,240
Right.

88
00:04:45,240 --> 00:04:49,560
So you have to verify and validate
this data from the application

89
00:04:50,400 --> 00:04:55,360
first requirement, the verification
and validation of the fields and the data.

90
00:04:55,640 --> 00:05:00,960
Second thing,
you need proper artifacts, proper proof.

91
00:05:01,240 --> 00:05:06,280
When I say proper proof, proper artifacts,
it means when you execute something,

92
00:05:06,400 --> 00:05:10,560
you must have something to show
that something is nothing but your report

93
00:05:11,760 --> 00:05:13,000
right now.

94
00:05:13,000 --> 00:05:15,320
Right now you are using selenium.

95
00:05:15,440 --> 00:05:25,040
Tell me which report
you are getting for the execution.

96
00:05:29,160 --> 00:05:31,560
No, the
screenshot is not the report surgery.

97
00:05:32,400 --> 00:05:34,680
If the report says this, my test

98
00:05:34,800 --> 00:05:37,680
says you have executed
this much discusses us

99
00:05:38,040 --> 00:05:40,880
this much just because this big this much
just to get this.

100
00:05:40,880 --> 00:05:43,760
Yes. Which console should right
but console is not the report.

101
00:05:43,920 --> 00:05:46,480
Let's say I am your client, right?

102
00:05:46,840 --> 00:05:50,880
I'm your client and I'm asking here,
should go ahead and send me the report.

103
00:05:50,920 --> 00:05:54,360
You said it's well,
I've executed 1000 scenarios yesterday.

104
00:05:54,360 --> 00:05:57,600
I'm asking for artifact
and you're sending me the console output.

105
00:05:57,880 --> 00:05:59,160
Would it work?

106
00:05:59,160 --> 00:06:00,760
No. Right.

107
00:06:00,760 --> 00:06:05,840
So at that point of time, if not, what
if you send me 1000 console screenshot?

108
00:06:05,840 --> 00:06:08,240
It will not work
because this is not a proper artifact.

109
00:06:08,240 --> 00:06:11,280
I need consolidated report which say, Hey,

110
00:06:11,760 --> 00:06:15,480
on this execution
out of 1000 scenarios, 500 pass

111
00:06:16,560 --> 00:06:19,760
fail.

112
00:06:19,760 --> 00:06:21,680
Or do you speak?

113
00:06:21,840 --> 00:06:22,440
Sure, sure.

114
00:06:22,440 --> 00:06:26,280
So that should definitely.

115
00:06:27,440 --> 00:06:31,520
So what I'm saying basically is yes.

116
00:06:31,560 --> 00:06:32,160
And if right.

117
00:06:32,160 --> 00:06:33,600
So that's what I'm trying to explain.

118
00:06:33,600 --> 00:06:35,720
This is just an overview I'm giving.

119
00:06:35,720 --> 00:06:40,400
So if you send one report,
it should say out of 1000 scenarios

120
00:06:41,040 --> 00:06:46,600
you have executed 500 past
to 50 fail proof of this.

121
00:06:46,600 --> 00:06:49,160
Get this this consolidated report.

122
00:06:49,200 --> 00:06:51,880
This is artifact that we need, right?

123
00:06:51,880 --> 00:06:54,000
Currently,
we do not have anything like this.

124
00:06:54,600 --> 00:06:57,000
So this is one
loophole in our current system.

125
00:06:57,600 --> 00:07:01,040
There are so many other loopholes
we have in our current system, right,

126
00:07:01,120 --> 00:07:02,560
in our current setup.

127
00:07:02,560 --> 00:07:07,480
And we have to throw but
we have to overcome all of those loopholes

128
00:07:07,720 --> 00:07:12,960
so that we have to adapt this
particular tool which we call test engine

129
00:07:15,480 --> 00:07:16,240
so far is

130
00:07:16,240 --> 00:07:24,720
this player.

131
00:07:29,080 --> 00:07:29,840
Great.

132
00:07:29,840 --> 00:07:32,480
Now, let's go for the let's

133
00:07:32,520 --> 00:07:34,920
start with the very first thing
and just light.

134
00:07:36,360 --> 00:07:39,280
Yep. Yeah, indeed.

135
00:07:39,600 --> 00:07:40,480
What is this?

136
00:07:40,480 --> 00:07:43,160
And now my question is for new ways.

137
00:07:43,840 --> 00:07:45,000
What is testing?

138
00:07:45,000 --> 00:07:48,680
Have you gone through some documentation,
some length or something?

139
00:07:49,560 --> 00:07:52,800
What is testing
next generation and distance for

140
00:07:52,840 --> 00:07:54,640
that is playing.

141
00:07:57,960 --> 00:07:58,840
Okay.

142
00:07:59,000 --> 00:08:02,280
Thumbs is it is a framework
then it says it is

143
00:08:02,280 --> 00:08:04,800
an annotation based tool or framework.

144
00:08:05,440 --> 00:08:06,240
All right.

145
00:08:06,880 --> 00:08:14,520
Let me tell you one thing, guys here.

146
00:08:14,520 --> 00:08:17,400
Whoever is saying whoever is saying

147
00:08:17,760 --> 00:08:21,480
it is a framework.

148
00:08:21,480 --> 00:08:23,840
Whoever is saying it is a tool

149
00:08:26,360 --> 00:08:27,080
because it is

150
00:08:27,080 --> 00:08:29,440
a tool as well is it is upstream, but

151
00:08:30,640 --> 00:08:33,720
first, we will learn best and soon

152
00:08:34,680 --> 00:08:37,200
we will learn its advantages.

153
00:08:37,200 --> 00:08:38,920
We will learn its method.

154
00:08:38,920 --> 00:08:40,640
We will learn its functions.

155
00:08:40,640 --> 00:08:41,240
Right.

156
00:08:41,240 --> 00:08:44,000
And the features of this particular tool.

157
00:08:44,480 --> 00:08:48,680
Once we are done with learning
of all this features of testing,

158
00:08:48,680 --> 00:08:51,760
then we will implement the
actual framework of testing.

159
00:08:53,400 --> 00:08:58,400
Getting my point.

160
00:08:58,400 --> 00:09:00,600
So the process right.

161
00:09:00,600 --> 00:09:03,880
First, we will learn testing as a tool

162
00:09:05,400 --> 00:09:07,400
again, I'm repeating myself.

163
00:09:07,400 --> 00:09:10,680
First we will learn and as a tool

164
00:09:11,160 --> 00:09:15,520
we will learn all the features
of this engine once we are done

165
00:09:15,520 --> 00:09:19,600
with learning and understanding
all the features, how we can use them.

166
00:09:19,800 --> 00:09:21,760
I'll be right then in the code.

167
00:09:21,760 --> 00:09:24,960
Then we will go
and we'll start creating a framework

168
00:09:24,960 --> 00:09:28,000
from scratch for testing you

169
00:09:28,000 --> 00:09:28,720
right

170
00:09:34,040 --> 00:09:37,000
by now.

171
00:09:37,440 --> 00:09:42,000
The process right now, what you are doing,
you mix it.

172
00:09:42,000 --> 00:09:44,560
You have one selenium class, right?

173
00:09:45,360 --> 00:09:48,560
If you want to execute
this particular class, I'm giving you

174
00:09:48,560 --> 00:09:49,720
this overview, Right.

175
00:09:49,720 --> 00:09:53,160
What would you get
once you're done with this test in Dubai?

176
00:09:53,720 --> 00:09:54,280
Right.

177
00:09:54,280 --> 00:09:58,160
So let me give you a first,
your current scenario and the scenario

178
00:09:58,200 --> 00:10:03,120
you will be having after learning testing
not only tool, but also a framework.

179
00:10:04,560 --> 00:10:06,520
Let's say you have one selenium class.

180
00:10:06,520 --> 00:10:06,960
What is.

181
00:10:06,960 --> 00:10:11,160
Next-Generation Basically,
this tool is developed, right?

182
00:10:11,160 --> 00:10:14,680
This tool has been developed
based on the concept of daily

183
00:10:15,840 --> 00:10:18,360
unit and in unit.

184
00:10:18,360 --> 00:10:21,200
When we talk about testing,

185
00:10:21,440 --> 00:10:24,480
we have created this tool
developer, developed this tool

186
00:10:24,600 --> 00:10:28,920
which is having all the properties
of the unit as well as having new features

187
00:10:29,160 --> 00:10:33,520
right in test index, five year
old properly next generation tool, right?

188
00:10:33,680 --> 00:10:35,160
Because it is an advanced it

189
00:10:35,160 --> 00:10:38,920
all which overcome all the previous issues
of selenium and other stuff.

190
00:10:39,240 --> 00:10:41,240
They give it name as a test engine.

191
00:10:41,240 --> 00:10:45,120
So test next generation right now
why they give the next generation.

192
00:10:45,440 --> 00:10:48,160
I think I should take a meeting
with those developers,

193
00:10:48,840 --> 00:10:50,640
but this is a need.

194
00:10:51,240 --> 00:10:53,320
What I think basically next generation is

195
00:10:54,080 --> 00:10:56,400
I will elevate you also.

196
00:10:56,400 --> 00:10:57,320
So basically,

197
00:10:58,440 --> 00:11:01,280
according to my understanding,
why they give it acceleration,

198
00:11:01,280 --> 00:11:04,360
because it is a latest one, right?

199
00:11:05,120 --> 00:11:07,560
If it is a Lakers tool, definitely
it is a next generation.

200
00:11:07,720 --> 00:11:10,080
That's why they give this name.

201
00:11:10,440 --> 00:11:10,920
All right.

202
00:11:10,920 --> 00:11:13,800
So now what I was asking basically is

203
00:11:14,520 --> 00:11:16,800
you have once an Indian class, right?

204
00:11:17,480 --> 00:11:20,920
And in this in Indian class,
you guys have written

205
00:11:20,920 --> 00:11:27,160
some piece of code.

206
00:11:27,160 --> 00:11:28,360
All right.

207
00:11:28,400 --> 00:11:30,800
But when you guys have written
one piece of code, if I

208
00:11:31,200 --> 00:11:34,760
if I asked you to execute
this particular code.

209
00:11:35,160 --> 00:11:35,640
Right.

210
00:11:35,640 --> 00:11:38,280
Which you have written inside one class,
how would you execute it

211
00:11:52,920 --> 00:11:56,160
will do anything when?

212
00:11:56,160 --> 00:11:56,880
All right.

213
00:11:56,880 --> 00:11:59,640
So now

214
00:12:00,120 --> 00:12:02,400
you have hundred classes, right?

215
00:12:02,400 --> 00:12:04,040
Selenium ones do.

216
00:12:04,040 --> 00:12:05,160
Selenium. Selenium.

217
00:12:05,160 --> 00:12:09,600
For If I asked you to execute
all of these classes,

218
00:12:09,720 --> 00:12:18,200
what do you have to do in this case?

219
00:12:18,200 --> 00:12:19,040
Right.

220
00:12:19,400 --> 00:12:21,280
You have to run 100 classes, Right.

221
00:12:21,280 --> 00:12:23,200
Selenium one, right click one by one.

222
00:12:24,880 --> 00:12:27,480
Is it a good idea to execute this?

223
00:12:27,480 --> 00:12:29,760
To get this, you have to click one by one.

224
00:12:31,480 --> 00:12:33,920
Let's say you have a big application right
there.

225
00:12:33,920 --> 00:12:36,400
You have 10,000 just to get this.

226
00:12:36,400 --> 00:12:38,640
Your client says, I need execution

227
00:12:38,640 --> 00:12:41,800
report by tomorrow morning
and it's already 4 p.m.

228
00:12:41,800 --> 00:12:44,640
in the evening.

229
00:12:44,640 --> 00:12:48,680
Where do you plan to sit In the office
for the whole night

230
00:12:48,680 --> 00:12:51,680
and execute every class one by one,
and then take this screenshot

231
00:12:51,680 --> 00:12:57,200
from the console
and send it by tomorrow morning.

232
00:12:57,200 --> 00:12:59,480
Right. Big time. Do this.

233
00:13:00,440 --> 00:13:02,880
So when we see all of these things.

234
00:13:02,960 --> 00:13:03,280
Right.

235
00:13:03,280 --> 00:13:06,280
And we see all of these things,
we need one tool

236
00:13:06,800 --> 00:13:09,080
from where we can overcome
all of these problems.

237
00:13:09,600 --> 00:13:10,440
Right?

238
00:13:10,920 --> 00:13:13,640
This is the scenario
you are having right now.

239
00:13:13,640 --> 00:13:14,400
Another thing,

240
00:13:15,360 --> 00:13:18,160
what if esi write your entire code,

241
00:13:19,120 --> 00:13:23,320
launching the application, maybe
get to the you are launching the browser,

242
00:13:23,320 --> 00:13:27,200
navigate to the you are in perform
logging admins enter username

243
00:13:27,360 --> 00:13:31,440
inter password, click on log in perform
all of this operation,

244
00:13:31,560 --> 00:13:35,920
but don't write amendment
I getting that question.

245
00:13:36,240 --> 00:13:41,080
What if I write your complete code
but don't write main method?

246
00:13:41,400 --> 00:13:59,760
Will it work? Yes.

247
00:13:59,760 --> 00:14:00,560
How did you write this?

248
00:14:00,560 --> 00:14:01,720
Then you can execute it.

249
00:14:01,720 --> 00:14:05,080
Java doesn't sound

250
00:14:05,080 --> 00:14:08,080
practical.

251
00:14:08,080 --> 00:14:09,720
Okay, fine.

252
00:14:09,720 --> 00:14:10,640
Right.

253
00:14:10,640 --> 00:14:13,200
I won't execute right?

254
00:14:13,200 --> 00:14:14,920
Correct. In Loza. Correct.

255
00:14:14,920 --> 00:14:17,200
So here first thing

256
00:14:17,680 --> 00:14:22,840
which we will be working on is
we will not use men

257
00:14:22,840 --> 00:14:27,160
method anymore for execution.

258
00:14:27,160 --> 00:14:30,360
You don't need a main method on first

259
00:14:32,320 --> 00:14:32,880
thing.

260
00:14:33,320 --> 00:14:38,720
You don't need to run your classes via right click this and this and this based on

261
00:14:39,960 --> 00:14:41,160
I am talking

262
00:14:41,160 --> 00:14:44,200
once you are done with destiny
learning right?

263
00:14:44,480 --> 00:14:45,360
No method.

264
00:14:45,360 --> 00:14:46,920
You need.

265
00:14:46,920 --> 00:14:49,800
You don't need to click on any other
class, right?

266
00:14:49,800 --> 00:14:52,680
Every single class right click
and then execute this.

267
00:14:53,080 --> 00:14:57,640
No, we will create executables.

268
00:14:57,680 --> 00:15:00,720
We will do some customizations.

269
00:15:00,720 --> 00:15:01,200
Right?

270
00:15:01,400 --> 00:15:05,320
If you say it is executable,
yes, then it's

271
00:15:10,600 --> 00:15:14,920
like I said,
it is a fresh beginning right.

272
00:15:14,920 --> 00:15:17,760
Third thing, I think

273
00:15:17,760 --> 00:15:19,040
let's say

274
00:15:19,680 --> 00:15:22,880
you have 50 test cases, right?

275
00:15:22,920 --> 00:15:25,680
50 selenium classes you have

276
00:15:25,680 --> 00:15:28,120
I want you to execute just 25

277
00:15:29,000 --> 00:15:31,440
and keep those 25 as it is.

278
00:15:31,440 --> 00:15:39,160
How would you do that?

279
00:15:39,160 --> 00:15:40,040
Yeah.

280
00:15:40,040 --> 00:15:40,840
Incorrect.

281
00:15:44,160 --> 00:15:45,080
No, no, no.

282
00:15:45,080 --> 00:15:47,000
Anybody disable nothing, Right?

283
00:15:47,000 --> 00:15:49,240
We don't need to do any enable
disable yet.

284
00:15:49,240 --> 00:15:50,920
We'll keep all of these classes.

285
00:15:50,920 --> 00:15:51,840
Like I said, hold

286
00:15:51,840 --> 00:15:55,840
your horses one by one we will enable
disable is an advanced concept.

287
00:15:56,280 --> 00:15:58,360
Priority annotation is advanced concept.

288
00:15:58,360 --> 00:16:01,240
I'm just talking about
simple customization part.

289
00:16:01,680 --> 00:16:02,280
Right?

290
00:16:02,440 --> 00:16:06,480
Currently what we have,
we do not have any setup

291
00:16:07,200 --> 00:16:10,160
in which we can perform
this kind of operations.

292
00:16:10,680 --> 00:16:11,320
Right.

293
00:16:11,320 --> 00:16:12,240
But if we really

294
00:16:12,240 --> 00:16:16,200
want to perform this type of operations,
which is quite practical, right?

295
00:16:16,320 --> 00:16:20,520
Let's say you have 1000 to get this
and I want you to execute on this.

296
00:16:20,520 --> 00:16:23,080
Look, this, this
which is having partnership of 18 or 20,

297
00:16:23,080 --> 00:16:24,960
this gives us
what would you do in that case?

298
00:16:26,680 --> 00:16:27,960
This is another thing, right?

299
00:16:27,960 --> 00:16:30,680
We need to look
from the practical perspective.

300
00:16:31,200 --> 00:16:31,960
All right.

301
00:16:31,960 --> 00:16:33,360
So all of these things,

302
00:16:33,360 --> 00:16:37,440
all of this things, whatever I'm
explaining right now, all of these things,

303
00:16:37,640 --> 00:16:41,000
we will be implementing in our test
engine portion

304
00:16:43,480 --> 00:16:44,360
already

305
00:16:52,000 --> 00:16:53,600
now here, see it.

306
00:16:53,600 --> 00:16:58,800
Since this is a testing tool,
it is a unique test framework.

307
00:16:58,800 --> 00:17:03,720
See, first it is a tool, then
it is a framework designed for testing.

308
00:17:03,800 --> 00:17:09,240
This system is designed to cover
all categories of test that is unit

309
00:17:09,240 --> 00:17:13,720
test functioning test integration test
and doing test every single thing.

310
00:17:13,720 --> 00:17:14,440
Fine.

311
00:17:14,600 --> 00:17:15,960
Now, let me ask one thing.

312
00:17:15,960 --> 00:17:21,400
All users, this tool,

313
00:17:21,400 --> 00:17:26,000
when I say testing is a tool and test
and it is also a framework

314
00:17:27,040 --> 00:17:30,560
fine board developer and testers

315
00:17:30,560 --> 00:17:34,200
can use this.

316
00:17:34,200 --> 00:17:39,440
Both developers and testers can use this
to know why developers can use this tool.

317
00:17:39,440 --> 00:17:40,440
Can somebody answer

318
00:17:53,240 --> 00:17:55,920
yes because they perform unique
testing correctly.

319
00:17:55,920 --> 00:17:56,760
Mom can.

320
00:17:56,760 --> 00:18:00,160
I told the Yeah.

321
00:18:00,560 --> 00:18:02,640
So that's what we called unit
testing. Right?

322
00:18:02,640 --> 00:18:08,520
They always perform unique testing.

323
00:18:08,520 --> 00:18:12,760
Once they are done with the unit testing,
then they only deploy the bid

324
00:18:13,120 --> 00:18:15,480
on to the other environment. Right.

325
00:18:15,480 --> 00:18:19,240
So to perform this unique testing,
they can also use this test in due

326
00:18:19,240 --> 00:18:20,800
to it, Right.

327
00:18:20,800 --> 00:18:23,160
Because testing is all about
customization.

328
00:18:23,400 --> 00:18:27,000
Testing is all about providing
the new features and the facility.

329
00:18:27,560 --> 00:18:28,200
Right?

330
00:18:28,200 --> 00:18:31,520
So both developers
and testers can use this particular tool.

331
00:18:32,400 --> 00:18:39,200
So far clear everyone.

332
00:18:39,200 --> 00:18:42,840
Now why why we developed this tool.

333
00:18:43,920 --> 00:18:47,960
It is inspired from unit
and you need to know what is Janee Tool

334
00:18:47,960 --> 00:18:50,480
they really discuss.
We will study this unit also.

335
00:18:50,640 --> 00:18:52,080
Don't worry about it.

336
00:18:52,080 --> 00:18:54,120
But just remember inheritance.

337
00:18:54,120 --> 00:18:57,440
We are learning right now
from G Unit and unique, right?

338
00:18:57,720 --> 00:19:02,280
We have inspired from these two
and we created Test and Orchestra Test

339
00:19:02,280 --> 00:19:08,280
and we inherited the properties of G unit
and unit and also test and D has its own

340
00:19:09,280 --> 00:19:11,240
specific features as well.

341
00:19:11,240 --> 00:19:11,880
Right.

342
00:19:12,840 --> 00:19:16,280
By adding new functionalities
which made this engine

343
00:19:16,280 --> 00:19:19,560
more powerful than other unit test
frameworks.

344
00:19:20,760 --> 00:19:27,800
Right now.

345
00:19:28,120 --> 00:19:32,520
After this, like I said,
it gives ability to write your more

346
00:19:32,640 --> 00:19:36,280
your code, more flexible,
your test gives this more flexible rate

347
00:19:36,480 --> 00:19:40,480
and it gives you more features
to execute the things right.

348
00:19:40,800 --> 00:19:45,040
For example, annotations,
grouping, sequencing,

349
00:19:45,320 --> 00:19:48,720
parameter sizing,
all of this things we will see one by one.

350
00:19:49,440 --> 00:19:51,840
One more guys.

351
00:19:51,840 --> 00:19:55,480
You have used Excel file
to pass the data, right?

352
00:19:56,040 --> 00:19:58,040
Everyone uses

353
00:20:00,360 --> 00:20:00,880
right?

354
00:20:00,880 --> 00:20:06,600
Everyone uses Excel Point.

355
00:20:06,600 --> 00:20:09,960
Have you gone through that bulkier code
Excel file

356
00:20:10,160 --> 00:20:14,480
your Excel file to pass the data?

357
00:20:14,480 --> 00:20:15,120
Right.

358
00:20:15,840 --> 00:20:19,280
Have you gone through that bulkier code

359
00:20:19,280 --> 00:20:22,480
inside
one for know your rating number of rules?

360
00:20:22,480 --> 00:20:25,920
The number of columns
then converting all the list.

361
00:20:25,960 --> 00:20:26,280
Right.

362
00:20:26,280 --> 00:20:27,600
All the maps into list

363
00:20:27,600 --> 00:20:30,360
and you're adding into the list
and they're calling the list. Right?

364
00:20:30,360 --> 00:20:30,960
Everything.

365
00:20:30,960 --> 00:20:32,400
I don't know how to read that code.

366
00:20:32,400 --> 00:20:35,080
I'm just explaining. All

367
00:20:36,040 --> 00:20:36,160
right.

368
00:20:36,280 --> 00:20:41,320
You know, all the bulkier correct list in
this is

369
00:20:41,680 --> 00:20:45,280
you don't need to parse any data
from your Excel file

370
00:20:45,280 --> 00:20:48,320
or you don't need to write
that much of code anywhere.

371
00:20:48,720 --> 00:20:51,120
I have my own personal feature.

372
00:20:51,440 --> 00:20:55,800
If you can use a personal feature,
your parameterization testing

373
00:20:55,800 --> 00:21:00,760
will be done inside this to excel.

374
00:21:00,760 --> 00:21:02,280
We don't have to use Excel.

375
00:21:02,280 --> 00:21:04,600
We don't have to use any of that file,
right?

376
00:21:04,800 --> 00:21:06,240
We just

377
00:21:08,760 --> 00:21:10,480
say we just need

378
00:21:10,480 --> 00:21:13,720
to provide our user name
and password inside test

379
00:21:13,720 --> 00:21:17,160
and it will take it as a parameter
and it will perform

380
00:21:17,160 --> 00:21:21,040
all of my testing.

381
00:21:21,040 --> 00:21:23,800
Another feature of testing, right?

382
00:21:24,000 --> 00:21:26,720
I'm just giving you one by one
and when we will implement,

383
00:21:26,880 --> 00:21:28,800
you will like it more, right?

384
00:21:28,800 --> 00:21:31,720
You will definitely like
it when we proceed for the

385
00:21:33,760 --> 00:21:35,240
now after this.

386
00:21:35,240 --> 00:21:37,160
After this one more exam.

387
00:21:37,160 --> 00:21:39,880
One more interesting points.

388
00:21:39,880 --> 00:21:42,240
Let's say you have been test cases.

389
00:21:42,240 --> 00:21:44,800
Right now, I'm just giving you
a very basic example, Right?

390
00:21:45,360 --> 00:21:49,720
You have test cases
and I asked you to execute this dentist.

391
00:21:49,840 --> 00:21:53,600
This as of now
with your current selenium classes.

392
00:21:53,600 --> 00:21:53,960
Right.

393
00:21:53,960 --> 00:21:56,680
I'm talking about those current classes.

394
00:21:57,680 --> 00:22:00,800
If I ask you should
if Abdul Oksana, Jameel.

395
00:22:01,080 --> 00:22:03,960
So one step, everyone. Jamal

396
00:22:03,960 --> 00:22:06,000
to execute this test, get this

397
00:22:06,000 --> 00:22:09,000
how much time
you guys need to execute them

398
00:22:09,240 --> 00:22:12,240
and what is the standard procedure
to execute

399
00:22:12,240 --> 00:22:20,720
which you will follow, right

400
00:22:21,000 --> 00:22:24,680
One by one.

401
00:22:24,680 --> 00:22:25,440
Exactly.

402
00:22:25,440 --> 00:22:28,440
Right click contain times
rate on ten different classes.

403
00:22:28,840 --> 00:22:30,800
That's all you need to run.

404
00:22:30,800 --> 00:22:33,920
Now, consider the same scenario for 100.

405
00:22:34,400 --> 00:22:37,320
Consider the same situation
for 100 scenario.

406
00:22:38,040 --> 00:22:44,880
What would happen?

407
00:22:44,880 --> 00:22:47,240
Yes, everyone's
everyone's thing that will hurt

408
00:22:48,800 --> 00:22:49,600
us thing.

409
00:22:49,600 --> 00:22:50,760
It takes more time.

410
00:22:50,760 --> 00:22:53,000
Second thing you will die. Correct?

411
00:22:53,600 --> 00:22:54,960
Third thing.

412
00:22:55,960 --> 00:22:59,520
Third thing is
you might miss some of the best.

413
00:22:59,720 --> 00:23:04,240
This right there you are more likely
to miss some of the test cases.

414
00:23:04,480 --> 00:23:09,520
If you are rigorously working on 100 test
cases, you're trying to execute them.

415
00:23:09,520 --> 00:23:10,400
One by one.

416
00:23:10,400 --> 00:23:13,560
There are high chances that you may meet
some of them.

417
00:23:13,920 --> 00:23:17,240
Correct.

418
00:23:17,240 --> 00:23:19,560
School test indices.

419
00:23:19,560 --> 00:23:24,480
Even if you have 100 test cases,
don't let me just run my one

420
00:23:24,480 --> 00:23:28,440
class and I will execute your hybrid test
guesses at one point of time.

421
00:23:29,400 --> 00:23:33,360
It means if your two test cases
are executing in one minute,

422
00:23:33,520 --> 00:23:42,200
your 100 test cases will also be executing
just one minute.

423
00:23:42,200 --> 00:23:43,240
Getting my point.

424
00:23:43,240 --> 00:23:46,240
This is what we call
parallel execution, right?

425
00:23:46,400 --> 00:23:49,440
It means what on multiple instances,
your test,

426
00:23:49,680 --> 00:23:52,800
you will execute
all of your test cases in a single shot.

427
00:23:53,400 --> 00:23:56,680
If you have five test cases,
it will execute in 5 seconds

428
00:23:57,160 --> 00:24:02,960
because it will execute them
firmly, not sequentially, one by one.

429
00:24:02,960 --> 00:24:03,320
Right.

430
00:24:03,720 --> 00:24:11,440
Or because better execution.

431
00:24:11,440 --> 00:24:12,400
Really?

432
00:24:12,400 --> 00:24:16,920
I wasn't aware of it.

433
00:24:16,920 --> 00:24:22,640
It seems like my MBA is working here.

434
00:24:22,640 --> 00:24:24,240
No, Jamal. No, never.

435
00:24:24,240 --> 00:24:25,640
That's what I'm seeing. Right.

436
00:24:25,640 --> 00:24:28,000
It is in Spence's, right?

437
00:24:28,000 --> 00:24:30,720
This is not a browser browser instances.

438
00:24:30,720 --> 00:24:31,480
Okay.

439
00:24:31,920 --> 00:24:32,600
What is this?

440
00:24:32,600 --> 00:24:35,640
When you said the chrome driver dot,
it's the right.

441
00:24:35,640 --> 00:24:36,800
This is web browser.

442
00:24:36,800 --> 00:24:42,120
This is the driver.

443
00:24:42,120 --> 00:24:44,000
The web driver.

444
00:24:44,000 --> 00:24:49,000
But what the driver does
Web driver gives you web browser.

445
00:24:49,000 --> 00:24:50,840
Have you ever noticed this point, guys?

446
00:24:50,840 --> 00:24:54,240
When you provide driver dot right
is equal to new chrome driver.

447
00:24:54,600 --> 00:24:58,360
Before that you provide chrome
driver, web driver or driver

448
00:24:58,440 --> 00:25:01,720
and then the part of driver
not exit. Right.

449
00:25:01,880 --> 00:25:06,000
This isn't executable
file of work of chrome driver,

450
00:25:06,360 --> 00:25:09,840
but when you launch this fight,
it gives you Chrome browser.

451
00:25:09,960 --> 00:25:12,120
So what is this Chrome browser?

452
00:25:12,120 --> 00:25:14,000
This is the instance, right?

453
00:25:14,000 --> 00:25:19,000
This is the image where you can see
whatever the operations you're performing.

454
00:25:19,000 --> 00:25:20,360
Remember, one more thing.

455
00:25:20,360 --> 00:25:23,640
Whenever you enter
any username, you enter any password.

456
00:25:23,640 --> 00:25:27,680
Whenever you try to click on
any of the button, you're always dealing,

457
00:25:27,680 --> 00:25:32,040
you always interacting with the Google
document object model, right?

458
00:25:32,200 --> 00:25:34,840
You're not dealing with this frame
or with this images.

459
00:25:34,960 --> 00:25:37,440
You are dealing with the document
object model.

460
00:25:37,440 --> 00:25:41,360
You're interacting with the web elements
which are available in the dome, correct?

461
00:25:41,760 --> 00:25:44,760
But on the instance on the image,

462
00:25:44,760 --> 00:25:48,560
you can see
what is going on in the picture.

463
00:25:48,560 --> 00:25:49,360
Getting my point

464
00:25:53,280 --> 00:25:53,760
right.

465
00:25:53,760 --> 00:25:57,720
So similarly.

466
00:25:57,720 --> 00:26:05,720
Yes, right.

467
00:26:05,720 --> 00:26:08,200
That is to make also one vaccination.

468
00:26:08,200 --> 00:26:08,920
Those

469
00:26:10,440 --> 00:26:14,760
along with this.

470
00:26:14,760 --> 00:26:15,600
All right.

471
00:26:15,680 --> 00:26:20,160
So what I was explaining
basically is when we talk about this

472
00:26:20,160 --> 00:26:24,000
type of scenarios, parallel
execution, it creates multiple instances.

473
00:26:24,000 --> 00:26:24,600
Right.

474
00:26:24,600 --> 00:26:28,840
So multiple instances of this need
I mean, if it is ten or 20 instance

475
00:26:28,840 --> 00:26:32,280
instances,
it will affect on your processor, fine.

476
00:26:32,280 --> 00:26:35,600
But as far as four or five cases
are concerned, in one shot,

477
00:26:35,720 --> 00:26:37,280
it will execute, right?

478
00:26:37,280 --> 00:26:38,400
It will execute.

479
00:26:38,400 --> 00:26:41,560
That's why developers always need
this kind of high

480
00:26:41,560 --> 00:26:45,000
configurations system, right?

481
00:26:45,000 --> 00:26:50,280
Ryzen seven processor or Intel i7
or I9 process or i5 11th generation

482
00:26:50,280 --> 00:26:54,160
processor OCTA core processor
with 16 traits.

483
00:26:54,160 --> 00:26:55,440
Why we need all of these things.

484
00:26:55,440 --> 00:27:00,120
We need SSD now, not HD 64 GB, RAM nor 16.

485
00:27:00,120 --> 00:27:03,600
Jimmy is more than enough
A and 16 GB RAM is more than enough

486
00:27:03,600 --> 00:27:07,920
as long as you have a very good processor
OCTA core processor basically

487
00:27:12,080 --> 00:27:12,920
already.

488
00:27:12,920 --> 00:27:15,200
So kernel execution.

489
00:27:15,200 --> 00:27:19,320
Now after this, let's say
you have to test this.

490
00:27:19,320 --> 00:27:24,000
You want to execute
all of them in a single shot, but you want

491
00:27:24,000 --> 00:27:25,120
to prioritize them.

492
00:27:25,120 --> 00:27:28,000
For example, the test
which you have written on number nine,

493
00:27:28,240 --> 00:27:31,240
you have to execute it first

494
00:27:31,800 --> 00:27:33,480
because you have written it number seven.

495
00:27:33,480 --> 00:27:35,680
You have to
you want to execute it on the second,

496
00:27:36,040 --> 00:27:38,840
the 10th one
you want to execute in on third.

497
00:27:38,840 --> 00:27:40,320
Is it possible in testing?

498
00:27:40,320 --> 00:27:42,480
So the answer is yes, it is possible.

499
00:27:42,480 --> 00:27:47,960
In testing you can prioritize your test
because this you can define the sequence

500
00:27:47,960 --> 00:27:49,120
of your test guesses

501
00:27:49,120 --> 00:27:52,840
and according to the sequence
which you have defined your test

502
00:27:52,840 --> 00:27:55,760
and you will execute
all of your test kits. It's

503
00:28:03,360 --> 00:28:04,080
right.

504
00:28:04,240 --> 00:28:06,360
Got to to

505
00:28:08,560 --> 00:28:12,280
right now the most important point I

506
00:28:16,640 --> 00:28:19,160
yeah, what I'm trying to detect also

507
00:28:21,600 --> 00:28:27,360
yeah really verify this.

508
00:28:27,360 --> 00:28:31,520
Yes correct sequential testing
so you're performing right now already.

509
00:28:31,520 --> 00:28:32,360
Right.

510
00:28:32,480 --> 00:28:33,600
So sequential testing.

511
00:28:33,600 --> 00:28:37,440
Also we will see here parallel testing
also we will see get both

512
00:28:37,440 --> 00:28:43,560
this things are possible in testing.

513
00:28:43,560 --> 00:28:43,960
All right.

514
00:28:43,960 --> 00:28:47,240
Now, let's talk about the most important
point here

515
00:28:53,680 --> 00:28:55,360
with testing.

516
00:28:55,360 --> 00:28:55,760
Right?

517
00:28:55,760 --> 00:29:00,080
You can have a very good colored HTML
report for all the test

518
00:29:00,080 --> 00:29:04,000
execution, right?

519
00:29:04,280 --> 00:29:06,640
It means now you will get this effect.

520
00:29:07,120 --> 00:29:10,920
The FDA will report,
you will get it right this time.

521
00:29:10,920 --> 00:29:14,520
When I said before,
you will see how many cases fast,

522
00:29:15,200 --> 00:29:18,200
how many test cases fail,
how many test cases,

523
00:29:19,040 --> 00:29:22,200
even if you want to see where it failed
right.

524
00:29:22,200 --> 00:29:24,240
So you're not get
those kind of exceptions. Right.

525
00:29:24,360 --> 00:29:27,840
Line number
Java 32 element not found exception,

526
00:29:27,840 --> 00:29:30,480
not if you will get the actual detail
or rate.

527
00:29:30,480 --> 00:29:33,960
Hey, this verification validation
point said go and check

528
00:29:34,360 --> 00:29:37,040
invite is great
because we got this particular value.

529
00:29:37,320 --> 00:29:39,080
We were expecting something else.

530
00:29:39,080 --> 00:29:41,080
We got something else right there.

531
00:29:41,080 --> 00:29:42,120
Also, you will see here,

532
00:29:44,080 --> 00:30:02,160
correct?

533
00:30:02,160 --> 00:30:03,640
Right. Mean correct.

534
00:30:03,640 --> 00:30:04,880
Correct. For smoke testing.

535
00:30:04,880 --> 00:30:07,200
You said some annotations
to one particular one. Right.

536
00:30:07,200 --> 00:30:09,120
And they didn't execute only that one.

537
00:30:09,120 --> 00:30:15,680
Not for the whole test.

538
00:30:15,680 --> 00:30:19,160
Fine. Let's proceed further.

539
00:30:19,360 --> 00:31:00,800
The not too much explanation,
but it is important.

540
00:31:00,800 --> 00:31:01,680
All right.

541
00:31:01,720 --> 00:31:05,120
Now, if you see here a number of benefits

542
00:31:05,600 --> 00:31:29,160
which we are going to check, we haven't
talked about here in that session.

543
00:31:29,520 --> 00:31:30,360
Great.

544
00:31:30,680 --> 00:31:31,120
Thank you.

545
00:31:31,120 --> 00:31:41,600
Was the right.

546
00:31:42,760 --> 00:31:50,240
So now let's proceed for that.

547
00:31:50,240 --> 00:31:52,320
What are the benefits
we are going to get? Right.

548
00:31:52,360 --> 00:31:54,440
We already discussed about the features.
Fine.

549
00:31:54,480 --> 00:31:58,040
That these are the functionalities and
these are the functions test in defense.

550
00:31:58,240 --> 00:32:01,680
And when we implemented,
we will utilize all of those features

551
00:32:02,000 --> 00:32:04,120
because of those features, right.

552
00:32:04,120 --> 00:32:07,200
Because of those functions,
because of those facilities,

553
00:32:07,320 --> 00:32:11,000
what all of the benefits we can get,
that's what we will going to see now.

554
00:32:11,760 --> 00:32:12,240
Right.

555
00:32:12,240 --> 00:32:16,520
The first one is this ability to produce
reports of execution.

556
00:32:16,800 --> 00:32:21,480
Earlier, we did not have any default rate,
which we can show to our client.

557
00:32:21,760 --> 00:32:26,920
Remember, guys, when you're working
in that industry, they're your client.

558
00:32:26,920 --> 00:32:29,240
Always need artifact.

559
00:32:29,240 --> 00:32:31,560
Your client always needs artifact, right?

560
00:32:31,720 --> 00:32:36,120
When I say artifacts,
it simply means proof.

561
00:32:36,120 --> 00:32:39,320
If Mike says, Hey, let's say I'm
your client

562
00:32:39,320 --> 00:32:42,400
and Mike
is still working on my project, Great.

563
00:32:42,440 --> 00:32:43,680
And if I'm asking him,

564
00:32:43,680 --> 00:32:47,640
tell me how many test cases
executed yesterday, What is the status?

565
00:32:47,840 --> 00:32:52,480
And Mike's is well,
I have executed 75 out of 75

566
00:32:52,480 --> 00:32:56,400
to 17:01 period seven escape.

567
00:32:56,960 --> 00:33:00,240
I'm not going to rely
on this information. Why?

568
00:33:00,480 --> 00:33:02,560
Because this is not documented anywhere.

569
00:33:03,480 --> 00:33:06,840
If I'm a client, even
I have to report to senior management.

570
00:33:06,840 --> 00:33:09,360
Right. For that
I need consolidated report.

571
00:33:09,600 --> 00:33:12,760
Everything should be documented
is the first rule

572
00:33:12,760 --> 00:33:15,640
of being a professional person
in the industry.

573
00:33:16,440 --> 00:33:18,720
Right? Everything should be documented.

574
00:33:18,880 --> 00:33:24,280
So when I say documentation right there,
we need report for all the execution part.

575
00:33:24,280 --> 00:33:25,120
The same thing.

576
00:33:25,120 --> 00:33:29,520
If I ask Mike Mike what you did yesterday,
Mike's is all right.

577
00:33:29,520 --> 00:33:31,160
I'm sending you the report. Fine.

578
00:33:31,160 --> 00:33:35,400
In that report, time is mentioned
that is mention number of test

579
00:33:35,400 --> 00:33:39,320
cases, mention name of test cases, mention
which one positive.

580
00:33:39,320 --> 00:33:41,520
Which one of these are not being paid.

581
00:33:41,520 --> 00:33:43,120
All of these things mentioned.

582
00:33:43,120 --> 00:33:45,360
So does he need to explain anything?

583
00:33:45,360 --> 00:33:45,840
He don't.

584
00:33:45,840 --> 00:33:47,760
He doesn't need to explain
anything. Right.

585
00:33:47,760 --> 00:33:50,040
The report says every single thing.

586
00:33:50,240 --> 00:33:53,120
So it gives you the ability
to produce this

587
00:33:53,120 --> 00:33:56,680
report, get it,

588
00:33:57,400 --> 00:34:02,000
get it right,
then annotations make Esther's life easy.

589
00:34:02,000 --> 00:34:05,440
Give this point aside right now,
what is annotations and how it makes

590
00:34:05,440 --> 00:34:07,520
our life easy? Events. This

591
00:34:08,520 --> 00:34:11,040
test cases can be grouped and prioritized.

592
00:34:11,120 --> 00:34:11,400
Right?

593
00:34:11,400 --> 00:34:14,680
I already told you
we can prioritize this things.

594
00:34:14,680 --> 00:34:17,120
We can say all over on execution order.

595
00:34:17,120 --> 00:34:20,040
We can state in order to execute
all of our test cases.

596
00:34:20,040 --> 00:34:20,440
Right?

597
00:34:20,480 --> 00:34:38,040
We can do all of this things.

598
00:34:38,040 --> 00:34:38,680
Fine.

599
00:34:39,000 --> 00:34:39,720
Now let's.

600
00:34:39,720 --> 00:34:40,720
I'm not good at it.

601
00:34:40,720 --> 00:34:43,680
You know, there's medicine in all Summit.

602
00:34:43,720 --> 00:34:45,920
I'm sorry for that.

603
00:34:45,920 --> 00:34:49,040
Even I'm having a bad headache
I can take anyway

604
00:34:50,600 --> 00:34:52,920
by now.

605
00:34:52,920 --> 00:34:55,160
Batch execution is also possible.

606
00:34:55,160 --> 00:34:57,320
Now, Vanessa, back to execution.
What does it mean?

607
00:34:57,320 --> 00:34:58,920
Guys, Remember,

608
00:34:58,920 --> 00:35:03,160
there is a difference in between parallel
execution and batch execution, right?

609
00:35:03,400 --> 00:35:08,240
Batch execution means executing 15
or 20 scenarios together,

610
00:35:08,240 --> 00:35:15,840
but in sequential form.

611
00:35:15,840 --> 00:35:17,560
Getting my point dates.

612
00:35:17,560 --> 00:35:21,360
If you have multiple scenarios,
let me just show you

613
00:35:21,360 --> 00:35:30,440
this example here.

614
00:35:30,440 --> 00:35:35,280
Let's say you have test one,

615
00:35:35,280 --> 00:35:38,720
test two, test three.

616
00:35:39,120 --> 00:35:41,600
You have three test, right?

617
00:35:41,600 --> 00:35:45,120
If you want to execute
all these three test together,

618
00:35:45,440 --> 00:35:49,080
right together
means on instance one browser, instance

619
00:35:49,080 --> 00:35:52,640
one this is executing
browser, instance two this is executing

620
00:35:52,920 --> 00:35:56,240
and on browser instance three
this one is executing, right.

621
00:35:56,560 --> 00:35:59,360
They all are executing at one
point of time.

622
00:35:59,560 --> 00:36:01,760
What example what time is it is 830.

623
00:36:02,200 --> 00:36:04,080
So it is executing at 813.

624
00:36:04,080 --> 00:36:06,680
It is also executing at 813. Right.

625
00:36:06,960 --> 00:36:09,440
And this one is also executing at 830.

626
00:36:10,760 --> 00:36:11,080
Right.

627
00:36:11,080 --> 00:36:15,240
In a single shot when you're executing
all of your test cases

628
00:36:15,240 --> 00:36:19,880
at same point of time
against multiple instances of the browser,

629
00:36:19,880 --> 00:36:21,240
we call it

630
00:36:27,920 --> 00:36:30,200
an execution, right?

631
00:36:30,200 --> 00:36:31,720
This is better than execution.

632
00:36:31,720 --> 00:36:32,880
Now, see,

633
00:36:34,760 --> 00:36:37,080
we have test one,

634
00:36:37,560 --> 00:36:39,200
test to

635
00:36:39,880 --> 00:36:41,320
test two, three.

636
00:36:41,560 --> 00:36:45,200
We're executing this test
right in a single shot.

637
00:36:45,200 --> 00:36:46,000
It means what?

638
00:36:46,000 --> 00:36:47,920
I have one file

639
00:36:48,120 --> 00:36:50,440
right?

640
00:36:50,440 --> 00:36:53,560
This is my digital pen. Actually,

641
00:36:53,800 --> 00:36:56,280
on my digital board,
I'm writing all of this thing

642
00:36:56,280 --> 00:37:00,960
so you guys can see.

643
00:37:00,960 --> 00:37:02,400
Right. Let me change it.

644
00:37:02,400 --> 00:37:05,280
So here, this is my test class,

645
00:37:05,280 --> 00:37:08,280
right from where
I'm having this three different test.

646
00:37:08,280 --> 00:37:10,800
When I'm executing that,
this one will execute first,

647
00:37:12,360 --> 00:37:14,680
let's see this one, execute second,

648
00:37:15,920 --> 00:37:18,440
this one execute third.

649
00:37:18,440 --> 00:37:19,120
Right.

650
00:37:19,320 --> 00:37:24,480
This is this is in
this is in sequential form, right?

651
00:37:24,480 --> 00:37:27,880
This is in sequential form
with executing one one.

652
00:37:28,200 --> 00:37:31,880
But because we're passing
them as a batch we call eight

653
00:37:36,480 --> 00:37:37,680
batch executions and

654
00:37:37,680 --> 00:37:41,320
say it's timing, it's 814,
this one would be 815.

655
00:37:41,320 --> 00:37:44,840
Let's in this one would be 816,
eight, 18 lives at different times.

656
00:37:45,000 --> 00:37:45,520
Right?

657
00:37:45,600 --> 00:37:49,040
But just one execution one
and it will execute

658
00:37:49,040 --> 00:37:51,680
all of this things

659
00:37:55,040 --> 00:37:57,760
guys understood the difference
in between batch

660
00:37:57,760 --> 00:38:07,040
execution and execution.

661
00:38:07,040 --> 00:38:14,880
Take now

662
00:38:15,480 --> 00:38:20,960
next thing here, assertions is possible.

663
00:38:20,960 --> 00:38:23,320
Thank you us thank you very much.

664
00:38:23,320 --> 00:38:24,720
Aspersions is possible.

665
00:38:24,720 --> 00:38:26,960
What is assertion?

666
00:38:27,680 --> 00:38:30,520
Assertion is nothing
but the verification check points.

667
00:38:30,520 --> 00:38:31,200
Right?

668
00:38:31,400 --> 00:38:33,760
When I say verification checkpoints,
what does it mean?

669
00:38:33,760 --> 00:38:37,760
Let me show you.

670
00:38:37,760 --> 00:38:39,440
I hope you guys have done this part.

671
00:38:39,440 --> 00:38:43,200
Also see you have your application
where are having your

672
00:38:44,680 --> 00:38:46,080
username

673
00:38:48,960 --> 00:38:50,280
password

674
00:38:52,320 --> 00:38:52,800
log in?

675
00:38:52,800 --> 00:38:53,440
Right?

676
00:38:55,760 --> 00:38:58,160
When I say verification,
it means I will check

677
00:38:58,160 --> 00:39:01,480
whether this username field is available
or my first thing.

678
00:39:02,280 --> 00:39:04,440
Even if this field is available.

679
00:39:04,520 --> 00:39:11,200
Even if this field is available.

680
00:39:11,200 --> 00:39:11,640
Right.

681
00:39:12,240 --> 00:39:17,000
Even if this field is definitely available
here, I have to check whether their text

682
00:39:17,000 --> 00:39:21,520
which is available is username
or something else.

683
00:39:21,840 --> 00:39:22,280
Negative.

684
00:39:22,280 --> 00:39:25,360
Well, is available
by text. Is username one.

685
00:39:25,800 --> 00:39:26,520
Is it correct

686
00:39:30,840 --> 00:39:34,640
then negates?

687
00:39:34,640 --> 00:39:39,000
No, it's not correct
because I'm verifying only not only field

688
00:39:39,200 --> 00:39:42,040
but also the text
which is available on this link.

689
00:39:42,120 --> 00:39:46,000
See, this is my username
so message should display as a username.

690
00:39:46,320 --> 00:39:47,040
Right?

691
00:39:47,080 --> 00:39:50,080
If field is available
like a message is username one.

692
00:39:51,120 --> 00:39:52,320
Is it correct?

693
00:39:52,320 --> 00:39:53,880
It is not correct. Right.

694
00:39:53,880 --> 00:39:58,280
So when I say assumptions
solutions, always make sure assertions

695
00:39:58,280 --> 00:40:03,000
always make sure that whatever the things
we want to verify,

696
00:40:03,080 --> 00:40:07,200
the things are actually present
in its actual expected form.

697
00:40:08,280 --> 00:40:08,840
Correct.

698
00:40:10,080 --> 00:40:12,640
So this then also provide facility

699
00:40:12,640 --> 00:40:15,920
of using assumptions. Yet

700
00:40:17,840 --> 00:40:20,400
this assertion was present in June.

701
00:40:20,400 --> 00:40:24,480
It also because it inherited
some properties of unique test

702
00:40:24,520 --> 00:40:28,160
and has its own assumptions as well.

703
00:40:28,160 --> 00:40:30,080
The next thing is data transfer.

704
00:40:30,080 --> 00:40:32,480
Data parameterization is also possible.

705
00:40:32,840 --> 00:40:33,880
What is this data pattern?

706
00:40:33,880 --> 00:40:37,600
Because basically
I just gave you one example right?

707
00:40:37,600 --> 00:40:42,120
Couple of minutes back,
I give you one example about using this

708
00:40:42,560 --> 00:40:44,400
Excel file, right?

709
00:40:44,400 --> 00:40:48,880
That bulkier piece of code
which you which you have written earlier,

710
00:40:49,200 --> 00:40:52,280
this tendency is you don't need to write
that piece of code.

711
00:40:52,560 --> 00:40:55,760
Instead, you can execute
and you can utilize

712
00:40:55,760 --> 00:40:59,520
my inbuilt function by using my feature.

713
00:40:59,520 --> 00:41:04,520
By using my function, you can perform
the data parameterization testing.

714
00:41:04,520 --> 00:41:08,160
You can force the parameters in my invoke
function.

715
00:41:08,520 --> 00:41:09,640
That's what we see.

716
00:41:09,640 --> 00:41:12,960
Data acquisition is possible. Indistinct.

717
00:41:14,600 --> 00:41:15,400
Now the best

718
00:41:15,400 --> 00:41:19,200
part is whatever the selenium
we have, right?

719
00:41:19,400 --> 00:41:22,440
The existing selenium
we have right now with this

720
00:41:23,040 --> 00:41:27,520
we can integrate, we can add,
we can make this test engine

721
00:41:27,520 --> 00:41:32,360
without selenium, without a cucumber,
without a maven, and so many other tools.

722
00:41:32,560 --> 00:41:33,160
Right?

723
00:41:33,160 --> 00:41:37,800
So testing this highly flexible,
adaptable tool currently in Selenium,

724
00:41:37,800 --> 00:41:41,640
we are facing so many issues that we are
not able to execute in a sequence.

725
00:41:41,640 --> 00:41:45,000
We do not have groupings,
we cannot get any,

726
00:41:45,000 --> 00:41:47,320
we are not getting into the force
or something. Right?

727
00:41:47,520 --> 00:41:49,480
So to overcome all of these issues,

728
00:41:49,480 --> 00:41:53,160
what simply we can do
is we can simply integrate this tool,

729
00:41:53,400 --> 00:41:58,160
the test into tool with that same book,
with that selenium, right?

730
00:41:58,320 --> 00:42:01,680
So in our selenium, but we will be having
our programing language

731
00:42:02,040 --> 00:42:03,960
are the best automation tools.

732
00:42:03,960 --> 00:42:06,680
Selenium are extended all together.

733
00:42:06,680 --> 00:42:11,040
Then we will get perfect combo right
then we will get perfect combo

734
00:42:11,120 --> 00:42:26,520
to get all that depends
to get all the artifacts here.

735
00:42:26,520 --> 00:42:29,760
Great. So far in this complete explanation

736
00:42:37,240 --> 00:42:38,200
of so

737
00:42:38,200 --> 00:42:41,960
far in this explanation,
whatever the things I've explained so far,

738
00:42:42,000 --> 00:42:46,000
do you guys have any question or anything
which you guys take?

739
00:42:46,040 --> 00:42:55,920
No, I'm not getting it.

740
00:42:55,920 --> 00:43:04,200
All right.

741
00:43:04,200 --> 00:43:06,200
Yes, definitely. All in. Definitely.

742
00:43:06,200 --> 00:43:08,200
But first explanation is important.

743
00:43:08,200 --> 00:43:11,080
Place assertion one more time short.

744
00:43:12,240 --> 00:43:16,240
So assertion
basically to verify the feeds,

745
00:43:16,960 --> 00:43:19,440
verify all the elements we have in

746
00:43:19,440 --> 00:43:23,400
its original stage
array might be possible.

747
00:43:23,400 --> 00:43:26,040
Sometimes it is available. Right.

748
00:43:26,240 --> 00:43:30,320
But this thing should show something else
and it is showing something else.

749
00:43:31,320 --> 00:43:32,880
If it is happening.

750
00:43:32,880 --> 00:43:35,960
Do we have anything protest? No.

751
00:43:36,680 --> 00:43:39,840
That's
why we need a solution to test, to verify

752
00:43:39,840 --> 00:43:44,560
the things in its actual form.

753
00:43:44,560 --> 00:43:45,720
Right. Exactly.

754
00:43:45,720 --> 00:43:48,280
Based on j unit and units getting.

755
00:43:50,040 --> 00:43:50,800
All right.

756
00:43:51,360 --> 00:43:55,600
Giving you this overall
overview was very important. Why?

757
00:43:55,600 --> 00:43:59,160
Because right now
you should have this understanding.

758
00:43:59,160 --> 00:43:59,520
Great.

759
00:43:59,520 --> 00:44:01,840
Why are we going to use this
particular tool

760
00:44:02,200 --> 00:44:05,480
Now when you have a complete understanding
what this tool is,

761
00:44:05,560 --> 00:44:06,720
what are the features?

762
00:44:06,720 --> 00:44:11,440
What are the benefits we can use, why
we are not going to use everything?

763
00:44:11,800 --> 00:44:16,400
Shall we proceed further
to create this DNG tool

764
00:44:16,400 --> 00:44:17,400
along with Selenium

765
00:44:17,400 --> 00:44:21,200
and integrate in download everything
so that we can run at least some test to

766
00:44:21,200 --> 00:44:21,800
get this Putting

767
00:44:24,560 --> 00:44:26,000
in cells call.

768
00:44:26,000 --> 00:44:29,840
We never discussed disadvantages of the

769
00:44:30,040 --> 00:44:30,880
right

770
00:44:38,760 --> 00:44:40,800
we can try known as will not try

771
00:44:40,800 --> 00:44:46,680
it will implement for sure.

772
00:44:46,680 --> 00:44:48,200
All right guys

773
00:44:48,680 --> 00:44:49,800
first thing

774
00:44:51,600 --> 00:44:53,600
great we all need

775
00:44:53,600 --> 00:44:55,920
the very first thing is

776
00:44:57,400 --> 00:44:59,440
selenium just like

777
00:45:03,080 --> 00:45:05,960
So to do that right, we need selenium

778
00:45:05,960 --> 00:45:09,520
just as well as we need to study
just these two jobs.

779
00:45:09,520 --> 00:45:14,520
We need correct.

780
00:45:14,520 --> 00:45:19,320
From there we need to download this job
files, go on to the MAVEN repository.

781
00:45:19,880 --> 00:45:23,080
Guys, this is the best place
to download everything right

782
00:45:23,080 --> 00:45:24,800
related to your job and everything.

783
00:45:24,800 --> 00:45:27,600
Going to have a repository here.

784
00:45:28,360 --> 00:45:30,800
You have to simply write,

785
00:45:30,800 --> 00:45:34,080
test and g and click.

786
00:45:34,080 --> 00:45:37,800
You will see on the first portion
on the first.

787
00:45:37,800 --> 00:45:38,840
Read the false links.

788
00:45:38,840 --> 00:45:41,040
This just indicates click. You

789
00:45:43,200 --> 00:45:44,920
and it gives you so many options.

790
00:45:44,920 --> 00:45:46,560
7.42.0.

791
00:45:46,560 --> 00:45:49,520
7.3.07.1.0.

792
00:45:49,800 --> 00:45:51,280
Which one you want to use?

793
00:45:51,280 --> 00:45:54,360
Let's say I'm going to use 7.4.0.

794
00:45:56,240 --> 00:45:56,880
All right.

795
00:45:56,880 --> 00:45:59,600
Let me quickly take once again

796
00:46:01,840 --> 00:46:03,880
the great American depository, everyone,

797
00:46:05,360 --> 00:46:07,240
and search for one repository

798
00:46:07,240 --> 00:46:13,840
for thing,

799
00:46:13,840 --> 00:46:18,040
guys, do what I am doing right now here.

800
00:46:18,640 --> 00:46:19,800
Are you guys done with this?

801
00:46:19,800 --> 00:46:21,600
What I'm doing, you

802
00:46:22,880 --> 00:46:25,840
in this point.

803
00:46:25,840 --> 00:46:28,960
Let me not if I'm going too fast

804
00:46:28,960 --> 00:46:32,240
now, write, test engineer

805
00:46:33,040 --> 00:46:35,800
and search for this just in

806
00:46:51,320 --> 00:46:53,160
everyone got this option as opposed to

807
00:46:53,160 --> 00:47:00,480
link is s on

808
00:47:03,640 --> 00:47:15,120
good day.

809
00:47:15,120 --> 00:47:18,360
Now let's click on this test and

810
00:47:18,600 --> 00:47:21,360
you will see
all of these different versions of

811
00:47:21,600 --> 00:47:23,840
and you can everyone see this

812
00:47:35,280 --> 00:47:39,800
great click on this first 17.4.0

813
00:47:42,640 --> 00:47:45,680
and here you'll see it says jar 907.

814
00:47:45,680 --> 00:47:46,040
Can we

815
00:47:47,160 --> 00:47:47,840
click on it?

816
00:47:47,840 --> 00:47:49,360
It will download everything.

817
00:47:49,360 --> 00:47:57,200
It will download your job, click on it.

818
00:47:57,200 --> 00:48:00,440
Once you download, it will show
you just like this test.

819
00:48:00,440 --> 00:48:00,920
Indeed.

820
00:48:00,920 --> 00:48:04,240
7.4.0.

821
00:48:04,240 --> 00:48:05,400
This chart

822
00:48:14,720 --> 00:48:15,680
is downloaded.

823
00:48:15,680 --> 00:48:18,840
Everyone.

824
00:48:18,840 --> 00:48:19,800
Abdul

825
00:48:29,000 --> 00:48:29,880
Great

826
00:48:31,760 --> 00:48:34,920
shirt and show.

827
00:48:34,920 --> 00:48:36,760
This is the job unit.

828
00:48:36,760 --> 00:48:37,920
Go down download

829
00:48:39,840 --> 00:48:42,960
now guys,
tell me how many of you bought is

830
00:48:43,000 --> 00:48:46,560
still
do not have selenium jars in your machine.

831
00:48:47,920 --> 00:49:02,280
Is there anyone?

832
00:49:02,280 --> 00:49:18,120
The last step is simply you need to
click here and it will download.

833
00:49:18,120 --> 00:49:24,680
Just click here
and it will download already.

834
00:49:24,680 --> 00:49:28,560
No, no, no, no, no.

835
00:49:28,560 --> 00:49:30,800
We don't need to call credence
and the name jars folder.

836
00:49:31,800 --> 00:49:35,320
Just download it.

837
00:49:35,320 --> 00:49:35,760
All right.

838
00:49:35,760 --> 00:49:39,080
Is there anyone who is still left
with downloading test and digest

839
00:49:39,120 --> 00:49:42,160
or everyone has downloaded

840
00:49:49,480 --> 00:49:49,840
or it?

841
00:49:49,840 --> 00:49:53,160
I want to make sure that everyone
is on the same page with me.

842
00:49:53,160 --> 00:49:53,800
Right.

843
00:49:53,840 --> 00:49:55,600
So the class is for everyone.

844
00:49:55,600 --> 00:49:58,320
I know some of you guys up very fast.

845
00:49:58,320 --> 00:50:01,120
Some of you guys are intermediate,
some of you guys are slow.

846
00:50:01,120 --> 00:50:02,160
That is fine.

847
00:50:02,160 --> 00:50:05,640
But we are here to take everyone
on the same page, Right?

848
00:50:05,800 --> 00:50:09,600
That's why I'm going slow now.

849
00:50:09,600 --> 00:50:10,520
That's great.

850
00:50:13,240 --> 00:50:13,800
All right.

851
00:50:13,800 --> 00:50:17,040
Now the next point is tell me, guys,
do you guys have

852
00:50:18,480 --> 00:50:21,040
is showing this files

853
00:50:23,400 --> 00:50:25,920
which one you have downloaded QWERTY.

854
00:50:27,560 --> 00:50:29,840
This one, if you just simply click on Jar

855
00:50:29,840 --> 00:50:34,520
File.

856
00:50:34,520 --> 00:50:34,840
Right.

857
00:50:34,840 --> 00:50:36,360
We do not need to open anything.

858
00:50:36,360 --> 00:50:38,400
Just download and keep it like this.

859
00:50:38,880 --> 00:50:53,880
It can be a single file only right?

860
00:50:53,880 --> 00:50:55,520
Okay. That's what I'm showing. Right.

861
00:50:55,520 --> 00:50:56,960
This is the jar file dates.

862
00:50:56,960 --> 00:50:59,720
Can you see it simply says jar 907.

863
00:50:59,720 --> 00:51:02,280
Give you this, just click on it
and it will download

864
00:51:09,000 --> 00:51:10,400
this one really good download.

865
00:51:10,400 --> 00:51:14,880
See simply click here.

866
00:51:14,880 --> 00:51:17,160
See it is giving me

867
00:51:22,680 --> 00:51:24,120
why is why it's not

868
00:51:24,120 --> 00:51:35,320
letting you download.

869
00:51:35,320 --> 00:51:38,080
If there is an option coming right
there is an option.

870
00:51:38,080 --> 00:51:38,880
Keep it right.

871
00:51:38,880 --> 00:51:59,840
Just click on this option.

872
00:52:05,640 --> 00:52:07,720
Unidentified Developer

873
00:52:07,720 --> 00:52:11,080
Can you please post the screenshot of this
which error?

874
00:52:11,640 --> 00:52:13,800
I just want to check that

875
00:52:28,440 --> 00:52:31,000
advances after download my behavior.

876
00:52:31,000 --> 00:52:31,880
This should not happen.

877
00:52:31,880 --> 00:52:45,000
Actually.

878
00:52:45,000 --> 00:52:45,960
All right.

879
00:52:45,960 --> 00:52:50,760
So just should events even mirror
has this equal rate and everyone

880
00:52:50,840 --> 00:53:02,160
that is good.

881
00:53:02,160 --> 00:53:03,480
All right, fine.

882
00:53:03,480 --> 00:53:05,400
Now let's talk about selenium.

883
00:53:05,400 --> 00:53:08,680
Just fine, as do you guys have already
downloaded selenium, your files

884
00:53:08,680 --> 00:53:17,880
in your system, or do you want me to go
download this in the game just for you?

885
00:53:17,880 --> 00:53:19,480
You do great.

886
00:53:19,680 --> 00:53:27,160
Already downloaded, great.

887
00:53:27,160 --> 00:53:28,160
No black? No.

888
00:53:28,160 --> 00:53:29,880
There is no new jobs.

889
00:53:29,880 --> 00:53:33,520
Don't worry about it.

890
00:53:33,520 --> 00:53:34,240
Fine.

891
00:53:35,160 --> 00:53:37,760
So what I'm going to do here is see,

892
00:53:38,440 --> 00:53:42,920
I'm going to create
a completely new project for testing.

893
00:53:42,920 --> 00:53:44,160
Already this

894
00:53:46,720 --> 00:53:49,560
a whole new project
and I have just created already.

895
00:53:49,560 --> 00:53:51,840
But I will show you
how to create a new project as well.

896
00:53:51,840 --> 00:53:52,880
Don't worry about receipt.

897
00:53:53,880 --> 00:53:55,800
Click on file.

898
00:53:55,800 --> 00:53:58,840
I hope you know this already,
but still I am showing you

899
00:54:01,800 --> 00:54:04,560
keep click on keep

900
00:54:05,880 --> 00:54:08,040
seems here have already downloaded one job

901
00:54:08,040 --> 00:54:14,440
because that's going to indicate a one.

902
00:54:14,440 --> 00:54:15,240
Yeah it is.

903
00:54:15,240 --> 00:54:17,160
It cannot be opened right.

904
00:54:17,160 --> 00:54:19,920
It must be downloaded already.

905
00:54:19,920 --> 00:54:22,760
So if I downloaded this file to the right
from this report

906
00:54:22,760 --> 00:54:24,000
so it is already downloaded.

907
00:54:24,000 --> 00:54:26,760
So in your machine it cannot be opened.

908
00:54:26,760 --> 00:54:28,080
You don't need to open it.

909
00:54:28,080 --> 00:54:31,520
Just keep it where it is already.

910
00:54:31,520 --> 00:54:46,960
It's already downloaded.

911
00:54:46,960 --> 00:54:48,240
All right. Please confirm.

912
00:54:48,240 --> 00:54:49,160
Very similar.

913
00:54:49,160 --> 00:54:52,200
Please confirm
so that we can proceed further.

914
00:54:52,200 --> 00:54:54,200
Imam Sayed Imam, just click on

915
00:54:54,200 --> 00:55:08,640
Keep.

916
00:55:08,640 --> 00:55:09,520
Great.

917
00:55:09,520 --> 00:55:09,840
Great.

918
00:55:09,840 --> 00:55:11,920
Said he has done

919
00:55:20,800 --> 00:55:21,600
Yeah Imam, great.

920
00:55:21,600 --> 00:55:27,480
I'm waiting
I'm waiting for your response to these.

921
00:55:27,480 --> 00:55:28,040
So Mira,

922
00:55:28,040 --> 00:55:32,000
when you're getting this error, it simply
means you're trying to open it, right?

923
00:55:32,040 --> 00:55:34,000
You don't need to open it.

924
00:55:35,160 --> 00:55:36,640
Correct?

925
00:55:36,640 --> 00:55:38,920
Yeah. Everyone has just one Java.

926
00:55:38,920 --> 00:55:41,400
Everyone has just one

927
00:55:43,040 --> 00:55:43,480
Guru.

928
00:55:44,400 --> 00:55:45,120
Correct.

929
00:55:45,720 --> 00:55:46,440
But I

930
00:56:05,240 --> 00:56:07,200
there is no next step after download.

931
00:56:07,200 --> 00:56:10,520
We are still waiting for everyone
to complete download process

932
00:56:10,520 --> 00:56:13,200
so that we can proceed for the

933
00:56:20,000 --> 00:56:26,800
correct.

934
00:56:26,800 --> 00:56:29,640
Now guys, if everyone is okay,

935
00:56:29,920 --> 00:56:33,080
shall we proceed further?

936
00:56:33,080 --> 00:56:40,600
Put your status in the check.

937
00:56:40,600 --> 00:56:41,360
Great.

938
00:56:41,920 --> 00:56:45,520
So now what are we going to do
is we are going to create

939
00:56:45,520 --> 00:56:51,080
a new Java project.

940
00:56:51,080 --> 00:56:54,920
Like I said, right in the end, even
having problems this post you equityzen

941
00:56:54,920 --> 00:56:59,040
the support right was I'm correct
these guys work and like I said, right.

942
00:56:59,360 --> 00:57:01,640
We are taking baby steps

943
00:57:03,120 --> 00:57:04,680
when I set my project.

944
00:57:04,680 --> 00:57:08,560
First we need to understand
what is testing right and after that

945
00:57:08,920 --> 00:57:13,600
we have to understand why
we use dependency and not use jar files.

946
00:57:14,000 --> 00:57:15,760
And then we will see the big tool.

947
00:57:15,760 --> 00:57:18,960
When we talk about the tool,
then we will implement the method.

948
00:57:19,200 --> 00:57:23,360
Like I said, we will learn for
testing as a tool and then we will create

949
00:57:23,360 --> 00:57:24,240
framework.

950
00:57:24,240 --> 00:57:27,240
So we will use this tool
to create a framework.

951
00:57:27,240 --> 00:57:30,080
That's
why right now we do not have dependency

952
00:57:30,080 --> 00:57:33,760
because we are not using mapping tool,
we are simply using Java project.

953
00:57:33,760 --> 00:57:36,480
So we are using checkpoints, we

954
00:57:44,240 --> 00:57:46,320
now to create nice.

955
00:57:46,320 --> 00:57:48,600
Tell me,
I don't know how to create a project.

956
00:57:48,600 --> 00:57:50,480
Where should I click

957
00:57:56,480 --> 00:57:57,480
click new?

958
00:57:57,480 --> 00:57:59,960
Thank you.

959
00:57:59,960 --> 00:58:01,320
All right then

960
00:58:08,640 --> 00:58:09,400
let me go ahead

961
00:58:09,400 --> 00:58:15,720
and do it.

962
00:58:15,720 --> 00:58:16,280
Fine,

963
00:58:17,480 --> 00:58:18,880
because it is my Java project.

964
00:58:18,880 --> 00:58:21,000
I don't need to select anything else.

965
00:58:21,000 --> 00:58:23,600
Simply I will click next

966
00:58:23,640 --> 00:58:24,240
right

967
00:58:28,200 --> 00:58:30,600
then next

968
00:58:30,600 --> 00:58:32,760
my project and then would be you can write

969
00:58:32,760 --> 00:58:33,920
as dict

970
00:58:37,680 --> 00:58:40,200
best team and test and

971
00:58:43,320 --> 00:58:49,080
correct.

972
00:58:49,080 --> 00:58:51,280
Simply click finish

973
00:58:52,160 --> 00:59:09,200
new window.

974
00:59:09,200 --> 00:59:10,160
You'll see

975
00:59:10,960 --> 00:59:13,960
again the steps shorter

976
00:59:13,960 --> 00:59:15,600
click on file

977
00:59:17,280 --> 00:59:18,880
Click on file

978
00:59:19,200 --> 00:59:21,440
Click on new iPhone file

979
00:59:23,920 --> 00:59:29,400
on Click on project

980
00:59:31,240 --> 00:59:33,600
after project Simply click next

981
00:59:34,680 --> 00:59:36,840
again Click next.

982
00:59:36,840 --> 00:59:41,240
Give the name of your project, the name
which I gave you as date back then.

983
00:59:41,240 --> 00:59:44,800
Test energy right.

984
00:59:44,800 --> 00:59:50,000
Once you give this name, simply click
finish.

985
00:59:50,680 --> 00:59:54,720
Once you finished,
you will see folder structure like this.

986
00:59:54,720 --> 00:59:58,000
Here.

987
00:59:58,000 --> 01:00:19,520
Now earlier Imam.

988
01:00:19,520 --> 01:00:20,080
Great.

989
01:00:20,120 --> 01:00:25,080
Now if you guys see one thing Java is by
default available in my project.

990
01:00:25,960 --> 01:00:28,080
Since I selected Java project,

991
01:00:28,080 --> 01:00:31,760
it gives me Java 1.8,
which is already pointing to my JDK.

992
01:00:32,240 --> 01:00:35,520
So my is available here right now.

993
01:00:35,520 --> 01:00:37,560
Let me give you the overview.

994
01:00:37,560 --> 01:00:48,000
Read the layout
which I'm going to implement here.

995
01:00:48,000 --> 01:00:50,640
So now we need what we need one

996
01:00:54,400 --> 01:00:58,280
programing language right?

997
01:00:58,280 --> 01:01:01,360
Which programing language
we are using here, Java.

998
01:01:01,360 --> 01:01:05,000
We already have a place.

999
01:01:05,000 --> 01:01:07,920
We need automation tool,

1000
01:01:07,920 --> 01:01:09,000
which tool we using.

1001
01:01:09,000 --> 01:01:13,440
I Selenium,

1002
01:01:13,440 --> 01:01:17,280
right.

1003
01:01:17,280 --> 01:01:19,480
We need one more tool, right?

1004
01:01:20,400 --> 01:01:23,960
We also call it integrated tool.

1005
01:01:23,960 --> 01:01:26,240
Why we need this particular tool

1006
01:01:26,240 --> 01:01:28,680
to overcome the issues

1007
01:01:28,680 --> 01:01:31,880
which I am having no pulse
I'm having in Selenium and Java.

1008
01:01:31,880 --> 01:01:34,840
We need the third thing,
which is this integrator today days

1009
01:01:36,360 --> 01:01:40,920
testing, obviously, right now

1010
01:01:41,240 --> 01:01:44,080
the project which I have created,

1011
01:01:44,080 --> 01:01:46,600
I already have Java

1012
01:01:46,760 --> 01:01:47,360
tool things.

1013
01:01:47,360 --> 01:01:50,080
I have to take selenium and test
and right.

1014
01:01:51,360 --> 01:01:54,280
Two things I have to selenium
and test in terms of what

1015
01:01:55,000 --> 01:01:57,280
in terms of Java, it's like

1016
01:01:57,280 --> 01:02:01,400
I have to a Java
so that I can utilize all the features

1017
01:02:01,400 --> 01:02:05,040
of this selenium as that is existing
in my complete project.

1018
01:02:05,480 --> 01:02:09,440
Java have already Selenium in testing
you are going to AG

1019
01:02:09,440 --> 01:02:13,200
now, so let's go ahead and do it.

1020
01:02:13,200 --> 01:02:14,000
How to add,

1021
01:02:15,360 --> 01:02:18,000
how to see,

1022
01:02:18,280 --> 01:02:19,840
click on find

1023
01:02:25,400 --> 01:02:28,720
Project structure.

1024
01:02:28,720 --> 01:02:30,480
Yeah, right, right.

1025
01:02:30,480 --> 01:02:32,440
There's project structure.

1026
01:02:32,440 --> 01:02:38,880
I've got to go into modules.

1027
01:02:38,880 --> 01:02:39,320
Okay.

1028
01:02:39,960 --> 01:02:42,480
Yes. If you guys are very intelligent,

1029
01:02:43,480 --> 01:02:46,360
sometimes
I think I don't need to teach you.

1030
01:02:46,360 --> 01:02:47,040
Great.

1031
01:02:48,000 --> 01:02:49,600
Now here,

1032
01:02:49,920 --> 01:02:54,000
here we have to add our selenium
as well as our test integers.

1033
01:02:54,200 --> 01:02:54,960
Right.

1034
01:02:55,520 --> 01:02:57,600
So get your test in D jar first.

1035
01:02:57,960 --> 01:03:01,560
Simply click on this plus sign.

1036
01:03:01,680 --> 01:03:04,560
It says jar directly.

1037
01:03:04,600 --> 01:03:07,920
It will ask your detectors
so that it is available

1038
01:03:15,320 --> 01:03:17,360
on my desktop.

1039
01:03:17,360 --> 01:03:21,320
And the things that's and that syntax.

1040
01:03:21,920 --> 01:03:24,040
This is my test. G Right.

1041
01:03:24,720 --> 01:03:27,720
So I am simply clicking. Okay,

1042
01:03:27,720 --> 01:03:30,640
You see my testing is available here

1043
01:03:30,640 --> 01:03:34,040
now I have to aid what I have to add
to my selenium.

1044
01:03:34,040 --> 01:03:36,000
Also, I will go here again.

1045
01:03:37,640 --> 01:03:40,200
Don't worry
guys, if you're not able to follow, right.

1046
01:03:40,200 --> 01:03:42,840
If someone is facing their difficulty
how to add files?

1047
01:03:43,080 --> 01:03:44,280
I will guide you.

1048
01:03:44,280 --> 01:03:46,440
Don't worry yet.

1049
01:03:47,560 --> 01:03:49,040
I will go.

1050
01:03:49,040 --> 01:03:51,360
Testing think takes

1051
01:03:52,440 --> 01:03:53,920
selenium

1052
01:03:56,960 --> 01:03:58,360
select to click.

1053
01:03:58,360 --> 01:04:01,560
Okay again go

1054
01:04:02,760 --> 01:04:04,680
your files

1055
01:04:19,680 --> 01:04:21,560
inside lives.

1056
01:04:21,560 --> 01:04:23,560
Whatever the jobs I have available

1057
01:04:24,480 --> 01:04:26,640
these four five jar files

1058
01:04:26,640 --> 01:04:28,840
I selected click okay.

1059
01:04:30,720 --> 01:04:31,360
Right.

1060
01:04:32,760 --> 01:04:33,520
We have to check.

1061
01:04:33,520 --> 01:04:45,960
All of them are compiling
it are in compilation stage.

1062
01:04:45,960 --> 01:04:46,400
Right.

1063
01:04:48,360 --> 01:04:49,240
Simple take.

1064
01:04:49,240 --> 01:04:49,960
Okay.

1065
01:04:50,760 --> 01:04:51,080
Right.

1066
01:04:51,120 --> 01:04:54,400
I again project structure

1067
01:04:54,400 --> 01:04:55,600
go here

1068
01:04:58,960 --> 01:05:02,920
you see all of these jobs how
to add these jobs again I'm showing you.

1069
01:05:03,480 --> 01:05:04,920
Let's sign.

1070
01:05:05,840 --> 01:05:07,920
Sure. So

1071
01:05:09,000 --> 01:05:11,000
click on jobs

1072
01:05:12,000 --> 01:05:13,320
go here

1073
01:05:16,800 --> 01:05:18,920
going to the top

1074
01:05:21,120 --> 01:05:21,520
ready.

1075
01:05:21,520 --> 01:05:23,400
You have your jobs available, right?

1076
01:05:23,400 --> 01:05:25,800
For example, mycelium dataset
available here.

1077
01:05:26,280 --> 01:05:28,720
So two jobs are this.

1078
01:05:28,720 --> 01:05:32,040
And by jobs inside this, right.

1079
01:05:32,520 --> 01:05:35,760
We need these five job files
as well as these two data points.

1080
01:05:35,760 --> 01:05:36,320
Right?

1081
01:05:36,600 --> 01:05:42,240
You have to select them.

1082
01:05:42,240 --> 01:05:42,600
Click.

1083
01:05:42,600 --> 01:05:48,320
Okay.

1084
01:05:48,320 --> 01:05:50,040
Okay, fine.

1085
01:05:50,040 --> 01:05:52,920
Got it.

1086
01:05:52,920 --> 01:05:57,520
Now I have testing jobs
as well as I have selenium jobs

1087
01:05:58,520 --> 01:05:59,160
clear

1088
01:06:07,760 --> 01:06:08,400
so far.

1089
01:06:08,400 --> 01:06:11,040
How many of
you guys have already downloaded this job?

1090
01:06:11,040 --> 01:06:14,680
Find it? Yes.

1091
01:06:14,680 --> 01:06:15,600
All break even.

1092
01:06:15,600 --> 01:06:18,560
If you try to correct connect,
try to select it.

1093
01:06:18,840 --> 01:06:23,360
It will get just one from the selenium
combines one source one so that is fine.

1094
01:06:24,760 --> 01:06:26,640
I'm not it. I am lost.

1095
01:06:26,640 --> 01:06:27,160
All right.

1096
01:06:27,160 --> 01:06:38,360
I'm like,
Would you please tell me where you lost?

1097
01:06:38,360 --> 01:06:40,320
Fine. This is mine.

1098
01:06:40,320 --> 01:06:42,720
External liability. No

1099
01:06:50,040 --> 01:06:50,640
adding jar

1100
01:06:50,640 --> 01:06:59,520
files right.

1101
01:06:59,520 --> 01:07:00,560
Got to correct.

1102
01:07:00,560 --> 01:07:03,360
So let me show you once again,
click on file

1103
01:07:04,160 --> 01:07:06,360
Project structure

1104
01:07:07,600 --> 01:07:11,400
whoever wants to 85 bit job
so you guys will be just I have

1105
01:07:11,400 --> 01:07:14,080
you can see here
you can check this jobs with me

1106
01:07:25,160 --> 01:07:28,240
that six jobs we are taking from selenium.

1107
01:07:29,600 --> 01:07:31,680
Where do I find all these jobs.

1108
01:07:31,680 --> 01:07:35,520
So one job I have already downloaded
right in front of you.

1109
01:07:36,120 --> 01:07:37,480
So contextual.

1110
01:07:37,480 --> 01:07:39,680
So Nick,
you have this just integers with you.

1111
01:07:41,000 --> 01:07:42,200
I just showed right how to

1112
01:07:42,200 --> 01:07:44,400
download this to do you have this job

1113
01:07:46,120 --> 01:07:47,280
right now?

1114
01:07:47,280 --> 01:07:50,240
The remaining jobs
we are taking from your selenium.

1115
01:07:50,360 --> 01:08:03,840
Have you downloaded them earlier?

1116
01:08:03,840 --> 01:08:07,760
Joining right now?

1117
01:08:07,760 --> 01:08:08,200
Fine.

1118
01:08:08,280 --> 01:08:12,760
So inside selenium jobs A right now
we are why we are not eating drivers

1119
01:08:12,760 --> 01:08:15,440
because we are not actually
executing the test case.

1120
01:08:15,480 --> 01:08:16,000
Right.

1121
01:08:16,040 --> 01:08:18,400
We are just implementing the test
and just setup

1122
01:08:19,200 --> 01:08:22,800
driver is a part of your script
not for testing this.

1123
01:08:23,040 --> 01:08:23,240
Right.

1124
01:08:23,240 --> 01:08:27,320
So we will add drivers also don't
worry about it, we will add everything.

1125
01:08:27,320 --> 01:08:29,120
Just don't worry about it.

1126
01:08:29,240 --> 01:08:33,000
Now, after this, the next thing
what we have to do basically

1127
01:08:33,000 --> 01:08:36,160
is, okay,

1128
01:08:36,160 --> 01:08:39,080
where do I find iPhone selenium,
just which files to add?

1129
01:08:39,440 --> 01:08:42,120
So if you go into your selenium,
let me show you

1130
01:08:42,440 --> 01:08:45,320
right.

1131
01:08:45,320 --> 01:08:46,560
Just click on selenium.

1132
01:08:46,560 --> 01:08:48,720
You'll see two files out here, right?

1133
01:08:48,800 --> 01:08:52,800
These two files and inside lives
you will find five find see it.

1134
01:08:53,680 --> 01:08:56,240
So these five files, plus

1135
01:08:56,240 --> 01:09:00,240
these two files
you have to egg in your project

1136
01:09:01,600 --> 01:09:19,200
here is clear.

1137
01:09:19,200 --> 01:09:20,160
So far

1138
01:09:24,000 --> 01:09:25,960
on the

1139
01:09:25,960 --> 01:09:29,200
please check once again
right in your download folder

1140
01:09:30,960 --> 01:09:32,520
because it should be there
in your download

1141
01:09:32,520 --> 01:09:47,360
folder.

1142
01:09:47,360 --> 01:09:49,320
How are you using Mac or windows?

1143
01:09:49,320 --> 01:09:51,080
Which one you are using

1144
01:09:58,320 --> 01:09:58,800
windows.

1145
01:09:58,800 --> 01:09:59,120
Right.

1146
01:09:59,120 --> 01:10:02,240
So just go and take in your downloads
folder.

1147
01:10:02,240 --> 01:10:04,280
It must be this

1148
01:10:15,920 --> 01:10:18,480
if we check

1149
01:10:18,480 --> 01:10:20,280
by waiting 4 minutes.

1150
01:10:20,280 --> 01:10:21,480
Bravo

1151
01:10:22,160 --> 01:10:24,120
file from this.

1152
01:10:24,120 --> 01:10:24,880
Got it

1153
01:10:26,280 --> 01:10:51,240
then in module perfect.

1154
01:10:51,240 --> 01:10:53,040
All right, so guys, so far so good.

1155
01:10:53,040 --> 01:10:54,560
Everyone clear

1156
01:10:55,000 --> 01:10:55,480
in there?

1157
01:10:55,480 --> 01:10:58,320
Anyone who has a still any by.

1158
01:10:58,320 --> 01:11:00,360
We don't have video to make it

1159
01:11:03,480 --> 01:11:05,200
Andrej because I personally feel

1160
01:11:05,200 --> 01:11:08,640
that it is always good
to give you a support.

1161
01:11:09,040 --> 01:11:13,000
If I asked you to download everything
with me here, it would be more easy

1162
01:11:13,000 --> 01:11:14,200
than watching any other thing.

1163
01:11:14,200 --> 01:11:19,120
It is just for reference right?

1164
01:11:19,120 --> 01:11:21,160
The already you have, right?

1165
01:11:21,160 --> 01:11:23,000
You have already added
all these things here.

1166
01:11:23,000 --> 01:11:25,320
The makeup is just somebody
that is operating.

1167
01:11:25,320 --> 01:11:27,680
Just one jar for you, right.

1168
01:11:27,680 --> 01:11:32,720
And just to I'm also telling you here
that you have to download with me.

1169
01:11:32,920 --> 01:11:36,200
So if you have any problem,
it is just a matter of adding one jar.

1170
01:11:36,200 --> 01:11:39,320
If you can do it here.

1171
01:11:39,320 --> 01:11:40,440
Yes, yes. No. Right.

1172
01:11:40,440 --> 01:11:42,760
These are selenium jobs. Correct.

1173
01:11:42,760 --> 01:11:45,200
And as far as selenium jobs are concerned.

1174
01:11:45,200 --> 01:11:45,440
Right.

1175
01:11:45,440 --> 01:11:47,640
You guys should have this video machine

1176
01:11:47,640 --> 01:11:50,400
because you guys have been
working on selenium from last two months.

1177
01:11:50,680 --> 01:11:55,360
So what I'm asking is.

1178
01:11:55,360 --> 01:11:56,160
Right. Exactly.

1179
01:11:56,160 --> 01:11:59,760
So adding the jobs, whether you are adding
selenium or you're adding testing

1180
01:12:00,000 --> 01:12:01,440
or your writing any other day.

1181
01:12:01,440 --> 01:12:05,560
So job files, the process,
the installation process is always seen.

1182
01:12:06,000 --> 01:12:07,480
It's not going to change anything

1183
01:12:17,120 --> 01:12:20,080
up on any after 11 minutes.

1184
01:12:20,320 --> 01:12:21,600
What do you think

1185
01:12:24,440 --> 01:12:26,680
by the time everyone will be okay
with this?

1186
01:12:28,200 --> 01:12:29,120
Yeah, that.

1187
01:12:29,120 --> 01:12:42,720
That's what I'm just making sure.

1188
01:12:42,720 --> 01:12:43,000
Yeah.

1189
01:12:43,000 --> 01:12:47,280
Andre, we will help you with the video,
then write it.

1190
01:12:47,280 --> 01:12:51,320
But again, saying
it is just a matter of one five and.

1191
01:12:51,360 --> 01:12:54,040
Right. You have to add
just one job fighting for that.

1192
01:12:54,160 --> 01:12:58,160
If you need video, then definitely great
to work on your installation

1193
01:12:58,200 --> 01:13:06,960
process and everything.

1194
01:13:06,960 --> 01:13:07,400
Right guys.

1195
01:13:07,400 --> 01:13:10,760
So I think students are asking for break
right?

1196
01:13:10,760 --> 01:13:13,000
So let's take a break for 15 minutes.

1197
01:13:13,000 --> 01:13:15,160
Maybe it's 15 minutes.

1198
01:13:15,160 --> 01:13:22,280
Okay.

1199
01:13:22,280 --> 01:13:25,240
So by the time others can also catch
of the things, right.

1200
01:13:25,680 --> 01:13:28,320
And connect you after 15 minutes.

1201
01:13:28,320 --> 01:13:32,960
So my time it's 12
and so the 850 here next connect nine five

1202
01:13:34,600 --> 01:13:35,320
after 15

1203
01:13:35,320 --> 01:13:56,440
minutes.

1204
01:13:56,440 --> 01:13:57,760
All right, guys.

1205
01:13:58,400 --> 01:14:01,640
So now what we have to do
basically is class wise,

1206
01:14:02,040 --> 01:14:03,480
we have to use them everything.

1207
01:14:03,480 --> 01:14:05,880
We have to understand all the features
one by one.

1208
01:14:05,880 --> 01:14:08,640
Right? So first, let's create a package.

1209
01:14:09,200 --> 01:14:12,920
So you'll see here it's our system
that I have right in my project.

1210
01:14:13,200 --> 01:14:16,120
And I'm going to create one package.

1211
01:14:16,120 --> 01:14:18,920
So simply right click,
go on to the package

1212
01:14:19,920 --> 01:14:23,040
right now, guys,
get me how we can create the package,

1213
01:14:23,040 --> 01:14:26,760
how we provide the of the packages

1214
01:14:37,240 --> 01:14:39,680
type.

1215
01:14:39,680 --> 01:14:42,480
I'm going to wait on dot syntax

1216
01:14:43,800 --> 01:14:49,720
simple back where do you it right.

1217
01:14:49,720 --> 01:14:53,160
And inside this package

1218
01:14:53,160 --> 01:14:55,280
I'm going to create

1219
01:14:55,360 --> 01:15:02,320
my new class for example,

1220
01:15:02,320 --> 01:15:05,400
let me put this name

1221
01:15:05,400 --> 01:15:07,320
box expert

1222
01:15:09,440 --> 01:15:10,680
plus one

1223
01:15:11,280 --> 01:15:11,960
right

1224
01:15:12,720 --> 01:15:13,920
inside package.

1225
01:15:13,920 --> 01:15:16,600
We have to create our classes right.

1226
01:15:16,600 --> 01:15:19,040
So I'm going to
write my first class called

1227
01:15:23,880 --> 01:15:25,520
simply First in class.

1228
01:15:25,520 --> 01:15:29,960
Right?

1229
01:15:29,960 --> 01:15:32,200
Normally class
without amendment. There. I see.

1230
01:15:32,880 --> 01:15:35,880
I'm not using any method inside
this class.

1231
01:15:36,360 --> 01:15:41,560
Correct.

1232
01:15:41,560 --> 01:15:43,320
That is so far clear.

1233
01:15:43,320 --> 01:15:44,520
What I did

1234
01:15:50,040 --> 01:15:52,160
Now, like I said, right.

1235
01:15:52,200 --> 01:15:56,480
Like I said, I'm going to write
my test in annotated methods.

1236
01:15:56,480 --> 01:15:56,680
Right.

1237
01:15:56,680 --> 01:16:03,120
So I'm going to use what here?

1238
01:16:03,120 --> 01:16:08,080
I'm going to use my first test
in annotation, which annotation.

1239
01:16:08,400 --> 01:16:21,680
Let me go here onto the slide.

1240
01:16:21,680 --> 01:16:24,400
They exist to execute test industry.

1241
01:16:24,600 --> 01:16:26,680
We don't have to write this separate
class.

1242
01:16:27,160 --> 01:16:29,680
We can use simple Java class, right?

1243
01:16:29,720 --> 01:16:35,520
We have used a simple Java class, but here
we will not write main method public

1244
01:16:35,520 --> 01:16:39,200
static white main because we are not going
to execute this from GB.

1245
01:16:39,320 --> 01:16:39,720
Fine.

1246
01:16:39,720 --> 01:16:43,560
So we are not using main method
we didn't implement.

1247
01:16:44,320 --> 01:16:48,480
It works best in it works with annotations
and annotation.

1248
01:16:48,480 --> 01:16:51,040
Can be represented by edit symbol.

1249
01:16:51,360 --> 01:16:52,080
All right.

1250
01:16:52,080 --> 01:16:57,240
So right now we have to take one
by beginner an octave method, right?

1251
01:16:57,240 --> 01:16:58,400
How we will write.

1252
01:16:58,400 --> 01:17:00,040
Let me show you this.

1253
01:17:00,040 --> 01:17:05,640
Annotation is a tag or a meta data
that provides additional information

1254
01:17:05,640 --> 01:17:09,760
about class interface,
automated interest in the member,

1255
01:17:10,160 --> 01:17:13,520
whether I'm going to use class
or interface or

1256
01:17:13,520 --> 01:17:17,560
meeting test in this annotation
indirect annotation for everything.

1257
01:17:17,560 --> 01:17:22,000
Right with this edit annotation
what all are the limitations they can use.

1258
01:17:22,120 --> 01:17:22,880
We will see that

1259
01:17:23,960 --> 01:17:24,800
like the insert

1260
01:17:24,800 --> 01:17:28,040
annotation based tool or annotation
based framework.

1261
01:17:28,040 --> 01:17:30,840
This is tested correct?

1262
01:17:30,840 --> 01:17:32,960
We have already discussed this case.

1263
01:17:32,960 --> 01:17:37,040
This is an annotation based tool or test
and is annotation

1264
01:17:37,320 --> 01:17:41,480
framework.

1265
01:17:41,480 --> 01:17:42,120
Right.

1266
01:17:42,120 --> 01:17:46,560
So annotations in both the methods
according to the invocation type.

1267
01:17:46,920 --> 01:17:50,280
Fine. What is this invocation?

1268
01:17:50,280 --> 01:17:56,000
Now see the request annotation in testing
did the most important annotation of this

1269
01:17:56,040 --> 01:17:59,920
and best annotation this the request.

1270
01:17:59,920 --> 01:18:02,920
This annotation mocks a method

1271
01:18:03,120 --> 01:18:06,960
or class as destined to test the member.

1272
01:18:06,960 --> 01:18:09,160
Now we are not using men method.

1273
01:18:09,160 --> 01:18:11,440
So what is the alternative to Metro?

1274
01:18:12,640 --> 01:18:14,680
We need something to execute, right?

1275
01:18:14,680 --> 01:18:19,400
We need one execution point from where
we can execute all of our piece of code.

1276
01:18:20,040 --> 01:18:23,480
So to execute our piece of code
we need one annotation.

1277
01:18:23,960 --> 01:18:27,000
Which annotation
is this annotation at best.

1278
01:18:27,440 --> 01:18:30,360
This is the bit we will write

1279
01:18:30,600 --> 01:18:34,560
all of our scenarios,
all of our test cases on our methods.

1280
01:18:35,000 --> 01:18:39,960
Clear.

1281
01:18:39,960 --> 01:18:40,560
Right.

1282
01:18:40,560 --> 01:18:45,640
And when I say request,
it always correspond to your one method.

1283
01:18:45,960 --> 01:18:49,120
Remember it always correspond to your one
method, right?

1284
01:18:49,160 --> 01:18:52,680
It means your menu test
next to your best guess.

1285
01:18:52,760 --> 01:18:55,560
So you will write at the request
and then the method

1286
01:18:55,680 --> 01:18:59,240
which will represent it
correspond to your one menu request.

1287
01:18:59,280 --> 01:19:03,760
Guess then at the request again it will
again go to second guess and so on.

1288
01:19:03,760 --> 01:19:04,280
Right.

1289
01:19:04,280 --> 01:19:07,280
So one by one we will see this parameter.

1290
01:19:07,280 --> 01:19:11,600
Also one by one we will see this kind of
customization, also implementation.

1291
01:19:11,600 --> 01:19:13,360
Also right now

1292
01:19:13,360 --> 01:19:17,760
we are going to use at the request
just for one method just to show you.

1293
01:19:17,760 --> 01:19:22,640
All right,
let me write here inside my main method,

1294
01:19:23,760 --> 01:19:26,800
I'm going to write edit

1295
01:19:27,000 --> 01:19:35,400
this.

1296
01:19:35,400 --> 01:19:38,080
It is giving me an error,
so I'm going to write public,

1297
01:19:39,080 --> 01:19:39,960
right?

1298
01:19:41,200 --> 01:19:44,160
Let's say my method name is

1299
01:19:51,360 --> 01:19:52,200
just the method.

1300
01:19:52,200 --> 01:19:55,200
Okay,
so I'm going to write a simple statement.

1301
01:19:55,200 --> 01:20:01,000
This is my first method.

1302
01:20:01,000 --> 01:20:04,560
Clear.

1303
01:20:04,560 --> 01:20:10,440
Right now I do not have main method,
so I'm using my at the request annotation.

1304
01:20:10,440 --> 01:20:14,440
You'll see it import from or do test
annotations

1305
01:20:14,440 --> 01:20:19,000
Don't test right so from India annotations

1306
01:20:19,080 --> 01:20:23,480
give an important test annotation
and this method.

1307
01:20:23,760 --> 01:20:29,320
So now this method will be considered
as one manual test scenario.

1308
01:20:29,320 --> 01:20:31,240
One manual test case. Right.

1309
01:20:31,240 --> 01:20:34,320
Whatever the logic I want to use,
I want to write.

1310
01:20:34,320 --> 01:20:37,680
I will write inside this particular
piece of code and can be

1311
01:20:38,000 --> 01:20:40,680
and then I test a notation, right?

1312
01:20:41,000 --> 01:20:44,200
It will be considered
as my single test case.

1313
01:20:45,360 --> 01:20:46,520
In your case

1314
01:20:48,880 --> 01:20:49,640
can be executed.

1315
01:20:49,640 --> 01:20:55,080
This.

1316
01:20:55,080 --> 01:20:58,680
Is there anyone who has missed anything
in this point

1317
01:21:00,880 --> 01:21:01,680
and read them?

1318
01:21:01,680 --> 01:21:02,640
All of them.

1319
01:21:03,480 --> 01:21:07,480
Are you guys here with me?

1320
01:21:07,480 --> 01:21:07,760
Sure.

1321
01:21:07,760 --> 01:21:13,160
So at the request annotation we are using

1322
01:21:13,400 --> 01:21:16,880
so it will be considered
as your one test case.

1323
01:21:17,080 --> 01:21:17,760
Right.

1324
01:21:17,760 --> 01:21:21,360
Whatever the test case
you are using that test case.

1325
01:21:21,360 --> 01:21:24,280
Right. You have to write inside your test.

1326
01:21:24,840 --> 01:21:27,960
So this time when you execute,
you do not have main method.

1327
01:21:28,200 --> 01:21:32,520
It will execute it
as far as per your request.

1328
01:21:32,520 --> 01:21:42,520
Annotation part.

1329
01:21:42,520 --> 01:21:44,760
Yeah, sure, sure.

1330
01:21:44,760 --> 01:21:49,360
No. So we can have
my simple test cases in one class, right?

1331
01:21:49,760 --> 01:21:51,920
We will go and we will look into part.

1332
01:21:52,040 --> 01:21:54,720
And so it's not an issue, right?

1333
01:21:54,720 --> 01:21:57,640
We will go and see how many test cases
we can have,

1334
01:21:57,920 --> 01:22:01,960
how this people behave inside one class.

1335
01:22:01,960 --> 01:22:03,280
We will see all of this.

1336
01:22:03,280 --> 01:22:05,880
I'm just trying to explain one thing here.

1337
01:22:05,880 --> 01:22:09,360
When I'm writing this one method
along with the right test.

1338
01:22:09,600 --> 01:22:12,880
So this one method will
be considered as one scenario

1339
01:22:17,600 --> 01:22:20,280
of No, not actually.

1340
01:22:20,280 --> 01:22:20,600
You have

1341
01:22:20,600 --> 01:22:24,920
to write and direct test three times
if you'll see the way I am writing here.

1342
01:22:24,920 --> 01:22:26,680
Right. You have to import it.

1343
01:22:26,680 --> 01:22:32,160
So import or gene test in annotation
start test would be in your import

1344
01:22:32,560 --> 01:22:38,760
and then you have to write a request here.

1345
01:22:38,760 --> 01:22:40,840
Let's go ahead and try to execute it

1346
01:22:42,600 --> 01:22:59,640
right now.

1347
01:23:00,560 --> 01:23:03,000
How many of you guys got this error
tell we

1348
01:23:09,080 --> 01:23:10,400
everyone got this right?

1349
01:23:10,400 --> 01:23:12,000
Intentionally. Intentionally.

1350
01:23:12,000 --> 01:23:15,080
I executed it because I knew everyone.

1351
01:23:15,080 --> 01:23:19,080
This error gone biased
did come under parameter exception.

1352
01:23:19,560 --> 01:23:20,400
Right?

1353
01:23:21,760 --> 01:23:25,280
That's the main advantage
of working together.

1354
01:23:25,280 --> 01:23:29,440
If we come across any error,
we'll go with the resolution part also.

1355
01:23:29,960 --> 01:23:30,560
Great.

1356
01:23:30,640 --> 01:23:32,760
Congratulations your test
and just so smart.

1357
01:23:33,560 --> 01:23:35,800
Your DNA is also fine.

1358
01:23:35,800 --> 01:23:36,520
Great.

1359
01:23:36,880 --> 01:23:40,480
Now guys who have got this error,

1360
01:23:40,480 --> 01:23:44,880
what we have to do, simple resolution.

1361
01:23:44,880 --> 01:23:46,840
If you go if you get this error

1362
01:23:46,840 --> 01:23:50,040
when you're practicing alone,
maybe you will spend hours and hours.

1363
01:23:51,000 --> 01:23:55,040
One thing we have to do is
we have to download one job here, right?

1364
01:23:55,400 --> 01:23:57,240
Which are we have to download.

1365
01:23:57,240 --> 01:23:59,160
We have to download. Take my job.

1366
01:24:00,400 --> 01:24:00,840
Let me

1367
01:24:00,840 --> 01:24:03,960
go and show you where you can find this
information.

1368
01:24:03,960 --> 01:24:09,000
Copy this.

1369
01:24:09,000 --> 01:24:10,920
And you

1370
01:24:13,120 --> 01:24:16,520
is going to stick overflow, right?

1371
01:24:17,240 --> 01:24:20,280
Just pasted and you will see four answers.

1372
01:24:20,280 --> 01:24:22,240
It says if you're using seven project.

1373
01:24:22,240 --> 01:24:25,360
So we are not using seven project. Right?

1374
01:24:25,360 --> 01:24:29,760
If you use a project without the map,
then you need to add this job

1375
01:24:29,880 --> 01:24:40,960
which it says Jake on my net 1.48. job.

1376
01:24:40,960 --> 01:24:44,040
No, as long as it is working fine,
you don't need two people

1377
01:24:44,040 --> 01:24:48,360
who have got this issue great.

1378
01:24:48,360 --> 01:24:51,000
Simple. Yeah, sure.

1379
01:24:51,000 --> 01:24:51,320
Jake.

1380
01:24:51,320 --> 01:24:54,920
Commander,
let me get this straight in the track.

1381
01:24:54,920 --> 01:25:04,920
The right.

1382
01:25:05,240 --> 01:25:08,760
So the error is this.

1383
01:25:08,760 --> 01:25:10,720
This is your end of gear.

1384
01:25:10,720 --> 01:25:12,720
It's this can be used, Jake.

1385
01:25:12,720 --> 01:25:14,840
Commander parameter exception.

1386
01:25:14,840 --> 01:25:16,920
No class definition found error

1387
01:25:17,880 --> 01:25:20,080
fixes exception in trade. Me.

1388
01:25:20,080 --> 01:25:23,600
Now people might be thinking
that we are not using men method

1389
01:25:23,640 --> 01:25:26,760
how it is saying exception in thread mean
right

1390
01:25:27,640 --> 01:25:30,600
because you guys might have
got this kind of error.

1391
01:25:30,600 --> 01:25:34,080
Somebody people straight.

1392
01:25:34,080 --> 01:25:35,360
Exactly exactly.

1393
01:25:35,360 --> 01:25:39,600
So when you got this added,
what is the resolution to this error.

1394
01:25:39,640 --> 01:25:41,640
This is the main question. Right?

1395
01:25:41,640 --> 01:25:45,360
So the resolution is once
we find this error,

1396
01:25:45,360 --> 01:25:48,640
once we try to search for this edit here,
we will

1397
01:25:49,880 --> 01:25:54,120
see for my project this dependency
we are not using right now.

1398
01:25:54,120 --> 01:25:56,160
Any moment. Project instance.

1399
01:25:56,160 --> 01:25:59,840
If you use project without amendment,
you have to add this job.

1400
01:25:59,960 --> 01:26:00,720
Fine.

1401
01:26:00,720 --> 01:26:03,440
So we are getting this job.

1402
01:26:03,440 --> 01:26:05,320
We will start with this job here.

1403
01:26:05,320 --> 01:26:07,560
It says go ahead and use this Java. Right.

1404
01:26:07,560 --> 01:26:09,120
So again, where we should go,

1405
01:26:10,680 --> 01:26:13,120
we should go into our MAVEN repository.

1406
01:26:13,840 --> 01:26:17,000
Then again,
just download this job file from here.

1407
01:26:17,280 --> 01:26:18,120
Okay?

1408
01:26:18,440 --> 01:26:20,600
When you download this java, right?

1409
01:26:20,840 --> 01:26:30,120
Sure.

1410
01:26:30,120 --> 01:26:31,440
I think it

1411
01:26:32,800 --> 01:26:35,160
is. Everyone got this

1412
01:26:35,520 --> 01:26:36,720
in the check.

1413
01:26:37,760 --> 01:26:42,840
The name of the job is a Japanese.

1414
01:26:42,840 --> 01:26:46,160
So now when you download the Java,
when you download

1415
01:26:46,160 --> 01:26:49,200
this job file yogurt, you will get this.

1416
01:26:49,200 --> 01:26:53,400
You are fine here like this
git commander 1.48

1417
01:26:54,600 --> 01:26:55,280
right.

1418
01:26:56,720 --> 01:26:59,520
This is your job by you.

1419
01:26:59,760 --> 01:27:13,680
Did you get it now?

1420
01:27:14,880 --> 01:27:15,240
Sure.

1421
01:27:15,240 --> 01:27:20,160
Why not show now again
the same procedure to add the java right

1422
01:27:20,800 --> 01:27:24,040
click on Project structure.

1423
01:27:24,040 --> 01:27:26,160
After clicking on the project structure,

1424
01:27:27,360 --> 01:27:29,560
right click on plus sign

1425
01:27:30,960 --> 01:27:33,600
jobs are directly

1426
01:27:39,960 --> 01:27:42,160
click on back Stop

1427
01:27:42,840 --> 01:27:46,040
right for me for you guys to get over
you have put

1428
01:27:46,040 --> 01:27:49,840
paid your job files
go to your git commander

1429
01:27:51,560 --> 01:27:52,120
select your

1430
01:27:52,120 --> 01:27:56,240
Jacob mine desktop and click
okay simple apply.

1431
01:27:57,200 --> 01:27:59,640
Fine.

1432
01:27:59,640 --> 01:28:03,480
Now how to git Commander
Java is everyone is working now.

1433
01:28:03,480 --> 01:28:06,960
This time if I try to run this

1434
01:28:19,440 --> 01:28:23,520
working by now.

1435
01:28:23,520 --> 01:28:23,880
Correct.

1436
01:28:23,880 --> 01:28:24,440
Should

1437
01:28:29,080 --> 01:28:31,320
everyone for everyone.

1438
01:28:31,320 --> 01:28:36,480
It is working now.

1439
01:28:36,480 --> 01:28:41,360
Great.

1440
01:28:41,360 --> 01:28:43,440
This is the benefit of working together
guys.

1441
01:28:44,040 --> 01:28:46,440
We are able to resolve issues right

1442
01:28:46,440 --> 01:28:48,880
in a fraction of a minute.

1443
01:28:48,880 --> 01:28:56,040
Please go ahead.

1444
01:28:56,040 --> 01:28:59,280
Yeah, it's on piecework

1445
01:29:15,240 --> 01:29:16,440
in work environment.

1446
01:29:16,440 --> 01:29:21,080
We will set up the PC.

1447
01:29:21,080 --> 01:29:23,280
All depends.

1448
01:29:23,280 --> 01:29:24,400
It depends. Right.

1449
01:29:24,400 --> 01:29:25,680
First thing,

1450
01:29:26,640 --> 01:29:30,240
if you are working right
and if you joined your organization

1451
01:29:30,240 --> 01:29:33,720
as a new employee and they're giving you
a new machine, completely new machine,

1452
01:29:34,200 --> 01:29:37,240
then you have to set your complete
we collect estimate

1453
01:29:37,880 --> 01:29:39,640
right in the professional environment.

1454
01:29:39,640 --> 01:29:41,120
We collect estimate.

1455
01:29:41,120 --> 01:29:43,560
So you have to set up their test
from scratch

1456
01:29:44,400 --> 01:29:46,960
sometimes, sometimes not all the time.

1457
01:29:47,240 --> 01:29:50,160
Sometimes you would be getting the system
where

1458
01:29:50,160 --> 01:29:52,440
all the softwares are already installed.

1459
01:29:53,160 --> 01:29:56,520
You just need to use them
or you just need to configure

1460
01:29:56,520 --> 01:29:59,840
the installation
and configuration different things.

1461
01:29:59,840 --> 01:30:00,360
Right?

1462
01:30:00,600 --> 01:30:03,720
Sometimes due to some security
firewalls issues or some

1463
01:30:04,400 --> 01:30:08,760
networking issues or something like that,
you just ask the networking team

1464
01:30:08,760 --> 01:30:11,280
and they will download everything
on your behalf, right?

1465
01:30:11,720 --> 01:30:13,440
They will give you the system ready.

1466
01:30:13,440 --> 01:30:15,520
You just need to configure them.

1467
01:30:15,520 --> 01:30:17,400
Okay, So it depends completely

1468
01:30:23,400 --> 01:30:23,760
correct.

1469
01:30:23,760 --> 01:30:25,440
Am I correct?

1470
01:30:26,520 --> 01:30:28,840
Now, if you'll see here the first thing is

1471
01:30:29,400 --> 01:30:34,240
it is totally test run,
one process, one failure, zero

1472
01:30:34,640 --> 01:30:36,800
zero rate

1473
01:30:39,160 --> 01:30:41,800
any if you want, I can

1474
01:30:43,560 --> 01:30:45,360
I can give you the complete

1475
01:30:45,360 --> 01:30:48,360
overview once again, don't worry,
we will repeat everything.

1476
01:30:48,720 --> 01:30:49,320
Okay.

1477
01:30:49,360 --> 01:30:52,840
So now, guys,
if you see here one thing for most is

1478
01:30:53,200 --> 01:30:55,920
you're getting very consolidated
output, right?

1479
01:30:56,480 --> 01:30:58,560
Nothing additional, nothing less,
Nothing more.

1480
01:30:58,560 --> 01:31:01,040
Right. It says defaults weak.

1481
01:31:01,040 --> 01:31:02,280
So test run.

1482
01:31:02,280 --> 01:31:06,280
Why it is giving you total test run one
because it will count

1483
01:31:06,280 --> 01:31:09,320
this at the request annotation.

1484
01:31:09,320 --> 01:31:10,320
All right.

1485
01:31:10,320 --> 01:31:13,160
When I say
it will count at the request annotation

1486
01:31:13,200 --> 01:31:16,200
it means one test at the rate
one at the request.

1487
01:31:16,560 --> 01:31:19,360
One annotation means one test,

1488
01:31:19,360 --> 01:31:21,720
one notations meant to test

1489
01:31:21,720 --> 01:31:25,040
right now on this pen and on this.

1490
01:31:25,200 --> 01:31:28,080
And if you see it says in this project,

1491
01:31:29,040 --> 01:31:31,520
this class will be executed

1492
01:31:31,520 --> 01:31:34,800
inside this class, this test
we have executed

1493
01:31:35,160 --> 01:31:42,160
correct.

1494
01:31:42,160 --> 01:31:42,880
Is this correct?

1495
01:31:42,880 --> 01:31:51,280
I hope you guys are understanding
what I am trying to explain here.

1496
01:31:51,280 --> 01:31:53,960
So that is still I am going to fast.

1497
01:31:53,960 --> 01:32:08,880
So it is fine. Now.

1498
01:32:08,880 --> 01:32:13,440
All right, fine.

1499
01:32:13,440 --> 01:32:22,560
Let's proceed further than now.

1500
01:32:22,560 --> 01:32:26,360
What I'm going to do
is I'm going to write another.

1501
01:32:26,360 --> 01:32:27,840
So I'm writing

1502
01:32:28,720 --> 01:32:31,320
oblique like

1503
01:32:35,720 --> 01:32:36,640
another matter.

1504
01:32:36,640 --> 01:32:39,840
So this is

1505
01:32:42,120 --> 01:32:44,880
another method in

1506
01:32:45,760 --> 01:32:49,680
this engine.

1507
01:32:49,680 --> 01:32:54,560
Now, tell me, guys,
if I execute this particular class right,

1508
01:32:55,400 --> 01:32:59,920
how many methods will be executed now
and what would be the result?

1509
01:32:59,920 --> 01:33:10,160
How many test cases will I get?

1510
01:33:10,160 --> 01:33:12,120
Only test method.

1511
01:33:12,800 --> 01:33:15,120
Why not this method

1512
01:33:18,280 --> 01:33:18,840
static?

1513
01:33:19,400 --> 01:33:22,040
Because you see here one thing, right?

1514
01:33:22,080 --> 01:33:28,840
Let me show you this first,
let me try to execute this class

1515
01:33:40,400 --> 01:33:42,880
because just one method this

1516
01:33:46,600 --> 01:33:49,240
it executes just one method.

1517
01:33:50,720 --> 01:33:53,600
Now you'll see here

1518
01:33:53,600 --> 01:33:57,240
this same right,
this one is execution for class.

1519
01:33:58,400 --> 01:34:02,400
This one is the execution
for a particular test rate.

1520
01:34:03,480 --> 01:34:06,680
Again, if I want to execute this one,
what I have to do,

1521
01:34:07,200 --> 01:34:10,880
I have to write a direct test
annotation here as well.

1522
01:34:12,040 --> 01:34:15,720
Now see, it is giving me this run
option here. Also

1523
01:34:17,080 --> 01:34:19,160
run option here also and here

1524
01:34:19,160 --> 01:34:21,840
also it means I can execute

1525
01:34:22,200 --> 01:34:24,240
particular test from my class

1526
01:34:25,560 --> 01:34:28,000
I can execute complete class here also.

1527
01:34:28,520 --> 01:34:28,840
Right.

1528
01:34:28,840 --> 01:34:32,040
Both these options are available this time
if I execute

1529
01:34:32,040 --> 01:34:44,280
this class.

1530
01:34:44,280 --> 01:34:46,280
Output changed right

1531
01:34:48,720 --> 01:34:50,880
guys, can you see output change now?

1532
01:34:50,880 --> 01:34:51,880
Totally test runs.

1533
01:34:51,880 --> 01:34:55,120
How much do

1534
01:34:55,320 --> 01:34:56,640
you guys can use it to do this?

1535
01:34:56,640 --> 01:34:58,200
How much do classes to

1536
01:34:59,280 --> 01:34:59,960
write?

1537
01:34:59,960 --> 01:35:01,280
And it is giving you both.

1538
01:35:01,280 --> 01:35:03,400
This method executes.

1539
01:35:03,400 --> 01:35:04,840
Let me do one more thing.

1540
01:35:04,840 --> 01:35:06,920
I want to show you something else
here. Now

1541
01:35:08,000 --> 01:35:10,640
I'm going to write Public void

1542
01:35:14,800 --> 01:35:16,840
last The method

1543
01:35:19,800 --> 01:35:23,800
and the last.

1544
01:35:23,800 --> 01:35:25,920
And that's empty

1545
01:35:28,080 --> 01:35:28,800
class

1546
01:35:30,280 --> 01:35:32,040
right now.

1547
01:35:32,280 --> 01:35:35,280
Understood that if I had run this

1548
01:35:35,720 --> 01:35:39,600
three outputs I will get
I total test run would be three.

1549
01:35:40,000 --> 01:35:40,440
Right.

1550
01:35:40,440 --> 01:35:44,360
If I execute this particular class

1551
01:35:44,400 --> 01:35:47,840
now if I could see it since to test run

1552
01:35:47,840 --> 01:35:51,920
three passes three failure zero
and it skips zero.

1553
01:35:52,120 --> 01:35:56,600
Correct bug.

1554
01:35:57,160 --> 01:35:59,880
But if I see here

1555
01:35:59,880 --> 01:36:02,760
first I wrote
this is my first method, right?

1556
01:36:02,760 --> 01:36:04,400
Best method.

1557
01:36:04,400 --> 01:36:07,760
Then I wrote another method
and then I wrote last method.

1558
01:36:08,480 --> 01:36:11,960
But if you see the order of execution
is supposed to be executed,

1559
01:36:11,960 --> 01:36:15,680
another method,
then it executed last method.

1560
01:36:16,440 --> 01:36:20,480
Then it executed test
method for the overall output.

1561
01:36:20,480 --> 01:36:23,840
If you see right here under default,

1562
01:36:23,840 --> 01:36:28,120
I'm getting this output opposed to
this one is okay

1563
01:36:28,960 --> 01:36:31,200
and this one is tied

1564
01:36:31,200 --> 01:36:46,560
right?

1565
01:36:46,560 --> 01:36:52,520
That's what my question, remember

1566
01:36:53,720 --> 01:36:55,240
by default

1567
01:36:55,240 --> 01:36:59,360
is to execute everything all the test

1568
01:37:01,040 --> 01:37:02,280
does is not

1569
01:37:03,160 --> 01:37:04,840
remember setup.

1570
01:37:04,960 --> 01:37:07,760
Parallel means it executes another method.

1571
01:37:07,760 --> 01:37:12,000
Last method method
all three equal one by the end

1572
01:37:12,000 --> 01:37:14,280
if you see it is executing one by one.

1573
01:37:15,200 --> 01:37:17,600
So this is sequential execution,

1574
01:37:17,600 --> 01:37:20,800
but here by default, test

1575
01:37:20,880 --> 01:37:25,320
indeed executes
multiple test cases in alphabetical order.

1576
01:37:26,320 --> 01:37:28,320
Okay. Right.

1577
01:37:28,320 --> 01:37:31,200
So if I write this, it
instead of being in last

1578
01:37:31,200 --> 01:37:33,360
method, I'm writing as being asked method.

1579
01:37:34,440 --> 01:37:37,240
And this one I'm writing is speed
estimate.

1580
01:37:37,560 --> 01:37:41,760
Now. See, or let me do one thing,

1581
01:37:41,760 --> 01:37:46,200
let me write e, b,

1582
01:37:47,760 --> 01:37:49,800
c, and this one is

1583
01:37:49,800 --> 01:37:53,040
intentionally
I'm just editing one word ab and see now

1584
01:37:53,040 --> 01:38:06,880
see how would execute.

1585
01:38:06,880 --> 01:38:10,840
I executed that method only.

1586
01:38:10,840 --> 01:38:12,800
I'm going to execute the complete class

1587
01:38:16,920 --> 01:38:17,960
now, see

1588
01:38:17,960 --> 01:38:20,760
A, B and C because it took alphabetically

1589
01:38:21,480 --> 01:38:25,200
right?

1590
01:38:25,200 --> 01:38:39,480
Guys can use your total test
run three passes, three. Yes.

1591
01:38:39,480 --> 01:38:42,760
We won't be want,
but this is the first class, right?

1592
01:38:43,080 --> 01:38:45,120
For that you have to wait for some time.

1593
01:38:45,480 --> 01:38:47,760
We will go proceed further
and then we will see

1594
01:38:48,000 --> 01:38:50,400
that we should not perform the right
click in execution.

1595
01:38:50,400 --> 01:38:52,320
Everything. Don't worry about it.

1596
01:38:52,320 --> 01:38:58,280
I will tell you that also.

1597
01:38:58,280 --> 01:39:06,160
All right,

1598
01:39:06,160 --> 01:39:08,400
Line 17,

1599
01:39:09,200 --> 01:39:11,400
You didn't put.

1600
01:39:11,400 --> 01:39:12,720
Yeah, that's fine.

1601
01:39:12,720 --> 01:39:14,640
That's fine.
Even if I remove this from here.

1602
01:39:14,640 --> 01:39:18,680
Also why we're using this parentheses,
I will tell you that also.

1603
01:39:18,680 --> 01:39:19,240
Don't worry.

1604
01:39:19,240 --> 01:39:26,160
The next topic is that one there
we will use.

1605
01:39:26,160 --> 01:39:30,360
That is what we did here.

1606
01:39:31,760 --> 01:39:33,960
No, no, this is not parallel execution.

1607
01:39:33,960 --> 01:39:35,920
This is batch execution. Right.

1608
01:39:36,960 --> 01:39:39,480
This is batch execution

1609
01:39:39,960 --> 01:39:40,920
right now.

1610
01:39:40,920 --> 01:39:42,600
I'm telling you why it is happening.

1611
01:39:42,600 --> 01:39:45,000
So you guys, if I'm clicking here,

1612
01:39:46,560 --> 01:39:49,000
see if I'm clicking here on my class name

1613
01:39:49,800 --> 01:39:53,240
and if I execute this class, see,

1614
01:39:53,240 --> 01:40:04,000
I'll show you different outputs here.

1615
01:40:04,000 --> 01:40:06,000
It indicates all the three methods. Right.

1616
01:40:07,680 --> 01:40:10,480
You see, if this to take this from three

1617
01:40:10,480 --> 01:40:13,120
boxes, three failures, zero gives.

1618
01:40:13,440 --> 01:40:14,240
Correct.

1619
01:40:15,440 --> 01:40:17,600
But if I run from here let's see,

1620
01:40:19,160 --> 01:40:21,880
I right click here
and then I'm performing.

1621
01:40:22,240 --> 01:40:25,120
I'm trying to execute
from here in the class.

1622
01:40:26,360 --> 01:40:28,360
You'll see it execute just one test.

1623
01:40:28,360 --> 01:40:31,560
It's not all the three, right?

1624
01:40:31,920 --> 01:40:34,480
Because I didn't execute my entire class.

1625
01:40:35,520 --> 01:40:37,960
I to one particular test.

1626
01:40:38,520 --> 01:40:39,120
Right.

1627
01:40:39,160 --> 01:40:42,920
How will you will identify this
when you click here right click

1628
01:40:42,920 --> 01:40:45,280
it gives you the class test in the class

1629
01:40:45,960 --> 01:40:48,480
but if you call here right click

1630
01:40:48,480 --> 01:40:52,880
and you try to run another method
just one method, it is fine to execute.

1631
01:40:53,520 --> 01:40:54,240
Right.

1632
01:40:54,280 --> 01:40:58,160
The same thing you can see here
on different execution points, right?

1633
01:40:59,040 --> 01:41:01,360
For the execution points, I can see

1634
01:41:01,360 --> 01:41:04,160
three for pretest
and one for entire class.

1635
01:41:05,040 --> 01:41:13,560
Right guys?

1636
01:41:13,560 --> 01:41:14,040
Got it

1637
01:41:15,040 --> 01:41:15,560
right.

1638
01:41:15,560 --> 01:41:18,000
So now see, so far

1639
01:41:18,560 --> 01:41:23,360
we have seen how to write at the request
annotated method,

1640
01:41:23,360 --> 01:41:26,000
which will be considered
as your one test case.

1641
01:41:27,200 --> 01:41:30,320
They can think how they can execute

1642
01:41:33,840 --> 01:41:35,760
knowing sign this is not a disadvantage.

1643
01:41:35,760 --> 01:41:39,960
But definitely if I don't want to execute
in the alphabetical order,

1644
01:41:40,240 --> 01:41:42,240
can I put my own order?

1645
01:41:42,240 --> 01:41:45,240
So the answer is yes,
I can put my own order is but

1646
01:41:46,320 --> 01:41:48,560
we will try to run that.

1647
01:41:48,600 --> 01:41:50,520
We will try to implement this also.

1648
01:41:50,520 --> 01:41:51,120
Right.

1649
01:41:51,280 --> 01:41:55,360
So far, answer to one of the students
question, right.

1650
01:41:55,520 --> 01:41:58,080
Someone was asking
how many tests we can write.

1651
01:41:58,400 --> 01:42:01,160
So you'll see here, so far
we have written three test

1652
01:42:01,160 --> 01:42:04,200
inside one class, right?

1653
01:42:04,200 --> 01:42:06,880
We have written three test inside
one class.

1654
01:42:07,200 --> 01:42:11,160
If you want to write a test inside
one class, you can write a test inside

1655
01:42:11,160 --> 01:42:11,640
one class.

1656
01:42:11,640 --> 01:42:14,760
Also, there is no issue at all clear

1657
01:42:17,520 --> 01:42:19,000
thing to by default.

1658
01:42:19,000 --> 01:42:21,920
If I have multiple test cases

1659
01:42:21,920 --> 01:42:26,720
by default, if I have multiple test cases,
I can execute all of this test.

1660
01:42:26,720 --> 01:42:29,800
Get this in alphabetical order
because test in D

1661
01:42:30,040 --> 01:42:33,600
by default executes all of your test cases
in alphabetical order.

1662
01:42:34,120 --> 01:42:43,040
Correct.

1663
01:42:43,040 --> 01:42:45,200
So that is so far in this part.

1664
01:42:45,440 --> 01:42:49,120
In this part, whatever
the things we have implemented, executed,

1665
01:42:49,280 --> 01:43:19,080
explained, and defined,
do you guys have any kind of question?

1666
01:43:19,080 --> 01:43:26,200
All right, let's proceed further then.

1667
01:43:26,200 --> 01:43:29,400
If we are done with this part,
we'll proceed

1668
01:43:29,400 --> 01:43:33,560
further.

1669
01:43:33,560 --> 01:43:35,400
Do we always have to write my test?

1670
01:43:35,400 --> 01:43:37,360
Yes. Correct. Correct.

1671
01:43:37,360 --> 01:43:40,640
Because we are using the tool
which is a notation business tool.

1672
01:43:40,640 --> 01:43:41,160
Right.

1673
01:43:41,160 --> 01:43:42,000
So Always.

1674
01:43:42,000 --> 01:43:45,400
We have to write numeric values
to our work with the order.

1675
01:43:45,800 --> 01:43:47,880
Right. Right. Numerical values.

1676
01:43:47,880 --> 01:43:49,360
This is what we call priority. So

1677
01:43:50,400 --> 01:43:51,120
we will see that.

1678
01:43:51,120 --> 01:44:03,120
Why don't we find

1679
01:44:08,880 --> 01:44:09,600
so now

1680
01:44:09,600 --> 01:44:14,280
at the request
a notation we can see now this is the task

1681
01:44:14,320 --> 01:44:18,720
created test with the unique test
method names and execute

1682
01:44:18,720 --> 01:44:24,640
all test methods.

1683
01:44:24,640 --> 01:44:26,680
Yeah, I can understand. I can understand.

1684
01:44:27,240 --> 01:44:29,480
Sometimes the terminology is different.

1685
01:44:29,480 --> 01:44:33,040
Annotations is something new,
A session is something new,

1686
01:44:33,480 --> 01:44:37,440
priority is something new that you guys
are listening this 31st time.

1687
01:44:37,440 --> 01:44:39,480
So I can totally the standing,

1688
01:44:39,480 --> 01:44:42,600
but it's not that confusing
when it comes to implementation.

1689
01:44:42,600 --> 01:44:45,800
It is very easy. Don't worry about it.

1690
01:44:45,800 --> 01:44:50,200
So now if you see guys it says
executing test using, iterate, test.

1691
01:44:50,200 --> 01:44:51,160
All right

1692
01:44:51,760 --> 01:44:54,520
create three test with unique method name

1693
01:44:54,880 --> 01:44:57,120
and execute all test metrics.

1694
01:44:58,240 --> 01:45:00,560
After the class, you will be having time.

1695
01:45:00,560 --> 01:45:04,760
You can go ahead and simply
utilize time rate in implementing

1696
01:45:04,760 --> 01:45:08,920
this piece of code here.

1697
01:45:08,920 --> 01:45:14,520
Now let's proceed further.

1698
01:45:14,520 --> 01:45:18,600
Now, tell me one thing.

1699
01:45:18,600 --> 01:45:20,520
Let me just keep it

1700
01:45:22,400 --> 01:45:30,640
simple.

1701
01:45:30,640 --> 01:45:31,240
Fine.

1702
01:45:34,680 --> 01:45:35,640
Let me ask you

1703
01:45:35,640 --> 01:45:40,680
one thing, guys.

1704
01:45:40,680 --> 01:45:42,680
Yes, you will get it.

1705
01:45:42,680 --> 01:45:43,480
You will go to sleep.

1706
01:45:43,480 --> 01:45:46,480
Don't worry.

1707
01:45:46,480 --> 01:45:49,240
Now, I see you have one test, right?

1708
01:45:50,160 --> 01:45:52,280
And then a test for, let's say, log in

1709
01:45:53,920 --> 01:45:54,920
verification.

1710
01:45:54,920 --> 01:45:59,040
Right.

1711
01:45:59,040 --> 01:46:01,600
You have another test

1712
01:46:01,680 --> 01:46:03,560
for next day

1713
01:46:13,080 --> 01:46:15,480
verification, right.

1714
01:46:15,480 --> 01:46:17,760
And you have another page.

1715
01:46:17,760 --> 01:46:19,160
Another test you have.

1716
01:46:19,160 --> 01:46:22,360
Right. See, this is right over here.

1717
01:46:22,400 --> 01:46:23,560
My very good.

1718
01:46:23,560 --> 01:46:24,920
I think you're my name.

1719
01:46:24,920 --> 01:46:26,640
So one is log in, one is homepage page.

1720
01:46:26,640 --> 01:46:33,840
The third one
I am thinking is, let's say an employee.

1721
01:46:33,840 --> 01:46:36,920
You want to execute
all of this three, right?

1722
01:46:36,920 --> 01:46:38,520
You want to execute all of these three.

1723
01:46:38,520 --> 01:46:40,920
But these three are of each other.

1724
01:46:41,880 --> 01:46:45,720
This one log in is not depending
on homepage and homepage is not depending

1725
01:46:45,720 --> 01:46:49,960
on employee and employers,
not depending on log in verification.

1726
01:46:49,960 --> 01:46:52,200
Correct.

1727
01:46:52,200 --> 01:46:54,520
These three are separate test this.

1728
01:46:56,120 --> 01:46:58,040
What can you think of something?

1729
01:46:58,040 --> 01:47:02,400
Can you think of something which is common
among these three test cases?

1730
01:47:02,640 --> 01:47:25,320
Can you think of that?

1731
01:47:25,320 --> 01:47:28,320
No, Blake, that's what I'm saying.

1732
01:47:28,320 --> 01:47:30,720
In order to be employed,
we have to follow these two.

1733
01:47:30,720 --> 01:47:31,920
That is fine.

1734
01:47:31,920 --> 01:47:33,400
Like the one best guess.

1735
01:47:33,400 --> 01:47:36,760
Only you have to follow
not only of the log in.

1736
01:47:37,360 --> 01:47:40,440
This means your test,
because it's very simple.

1737
01:47:40,440 --> 01:47:41,160
What is your test?

1738
01:47:41,160 --> 01:47:43,680
Guest Enter username.

1739
01:47:43,680 --> 01:47:47,040
Enter a password,
click on log in and verify.

1740
01:47:47,640 --> 01:47:48,360
Right.

1741
01:47:48,600 --> 01:47:52,080
This is one thing, right?

1742
01:47:52,360 --> 01:47:53,000
The same class.

1743
01:47:53,000 --> 01:47:56,080
So many questions, so many outputs. Great.

1744
01:47:56,080 --> 01:48:00,080
Now let me tell you one thing, right?

1745
01:48:00,680 --> 01:48:02,680
You need to go to the web page here
and maybe

1746
01:48:04,040 --> 01:48:06,120
I should get it.

1747
01:48:06,120 --> 01:48:08,280
So now, see, this is your first guest is

1748
01:48:11,040 --> 01:48:11,520
enter the

1749
01:48:11,520 --> 01:48:16,720
username, then

1750
01:48:20,000 --> 01:48:22,560
enter password, and then

1751
01:48:24,840 --> 01:48:25,520
click log in.

1752
01:48:25,520 --> 01:48:26,040
Right.

1753
01:48:26,400 --> 01:48:28,760
This is your verification of log in
and then verify

1754
01:48:29,640 --> 01:48:32,040
some X, y, z page

1755
01:48:33,320 --> 01:48:33,960
and employee.

1756
01:48:33,960 --> 01:48:37,480
See interlocking

1757
01:48:39,640 --> 01:48:40,920
and then an employee.

1758
01:48:40,920 --> 01:48:44,240
Simple.

1759
01:48:44,240 --> 01:48:44,880
Right?

1760
01:48:45,800 --> 01:48:49,240
But for this test one and four
this does to what is common.

1761
01:48:49,320 --> 01:48:51,640
That common is

1762
01:48:53,960 --> 01:48:56,880
non to browser

1763
01:48:58,320 --> 01:49:02,800
and navigate to you it right

1764
01:49:03,680 --> 01:49:06,720
well then you want to verify the log
in all.

1765
01:49:06,720 --> 01:49:09,720
You want to add the employee
the very first thing.

1766
01:49:09,720 --> 01:49:13,760
What you need to do is which is common
in between these two test kits

1767
01:49:13,800 --> 01:49:16,560
is all in between
all the test cases, right?

1768
01:49:17,000 --> 01:49:20,280
Is launching the browser
and navigating to the

1769
01:49:20,280 --> 01:49:27,160
you are correct.

1770
01:49:27,160 --> 01:49:33,080
Similarly similarly,
if I if I completed this test case

1771
01:49:33,120 --> 01:49:36,920
called verification of log
in, if I completed this test case,

1772
01:49:37,320 --> 01:49:41,640
I have to
I have to close my browser as well

1773
01:49:43,440 --> 01:49:45,000
right here.

1774
01:49:45,000 --> 01:49:48,040
Also, if I'm done with the employee,
I have to close

1775
01:49:48,040 --> 01:49:51,360
my browser as well.

1776
01:49:51,360 --> 01:49:55,440
Getting web one days.

1777
01:49:55,440 --> 01:49:59,880
So because this test case is independent,
so I have to launch the browser,

1778
01:50:00,360 --> 01:50:01,880
I have to navigate to are.

1779
01:50:01,880 --> 01:50:05,640
I have to perform this operation
and then I have to close the browser.

1780
01:50:05,640 --> 01:50:08,080
Then I can only see my test case.

1781
01:50:08,280 --> 01:50:11,720
B one is independent of this

1782
01:50:11,720 --> 01:50:13,600
player.

1783
01:50:13,600 --> 01:50:18,520
Similarly, if I want to execute
only this test case in in a case,

1784
01:50:18,760 --> 01:50:22,680
if I want to execute only people,
then it should also launch the browser,

1785
01:50:22,680 --> 01:50:27,480
navigate to you all, enter all the details
at the employee and close the browser.

1786
01:50:27,840 --> 01:50:28,560
Right.

1787
01:50:28,680 --> 01:50:31,080
It means we are getting one thing.

1788
01:50:31,240 --> 01:50:33,320
What this steps.

1789
01:50:33,320 --> 01:50:34,640
It could be any of that a step.

1790
01:50:34,640 --> 01:50:37,440
Guys, I'm
just giving one example from our project.

1791
01:50:37,800 --> 01:50:39,960
It could be any of that example.

1792
01:50:39,960 --> 01:50:45,240
Launching the browser, navigating to
you are a This is your precondition

1793
01:50:45,240 --> 01:50:48,720
for both the test cases
and close the browser.

1794
01:50:49,120 --> 01:50:49,480
Right.

1795
01:50:49,480 --> 01:50:52,640
Close the browser is your post condition.

1796
01:50:52,640 --> 01:50:56,400
So precondition
first condition for all the test.

1797
01:50:56,440 --> 01:50:57,400
Get this right

1798
01:50:58,880 --> 01:51:01,560
now test and this is

1799
01:51:01,560 --> 01:51:05,400
if you have three tests
and see if you have three test here

1800
01:51:06,000 --> 01:51:10,760
and you want to execute something
which is having a same precondition

1801
01:51:10,760 --> 01:51:15,040
for all that the same post condition
for all the three,

1802
01:51:15,400 --> 01:51:19,200
you don't need to write them multiple
times, three times, post three times

1803
01:51:19,800 --> 01:51:22,560
three times,
write post condition and precondition.

1804
01:51:22,880 --> 01:51:26,280
You have to use annotation, right?

1805
01:51:26,880 --> 01:51:28,960
You have to use annotation here.

1806
01:51:28,960 --> 01:51:30,960
So which annotation we have to use.

1807
01:51:30,960 --> 01:51:32,760
Let me tell you

1808
01:51:33,000 --> 01:51:35,280
first for defined pre and post condition,

1809
01:51:35,280 --> 01:51:38,800
I'm creating a class called

1810
01:51:46,800 --> 01:51:48,840
precondition and post condition.

1811
01:51:48,840 --> 01:51:49,440
Right?

1812
01:51:49,840 --> 01:51:54,040
So first I'm going to write my normal
annotated method.

1813
01:51:54,040 --> 01:51:57,600
So I'm going to write the public

1814
01:51:57,840 --> 01:51:58,880
void.

1815
01:52:00,120 --> 01:52:07,560
Let's see, was the method

1816
01:52:08,640 --> 01:52:09,520
right?

1817
01:52:10,280 --> 01:52:11,560
So this is my

1818
01:52:13,280 --> 01:52:16,480
first
method and then I'm writing here again.

1819
01:52:16,480 --> 01:52:19,720
One more my third call it that test

1820
01:52:19,720 --> 01:52:25,760
public void.

1821
01:52:25,760 --> 01:52:29,160
Second method.

1822
01:52:29,160 --> 01:52:32,240
This is my

1823
01:52:33,000 --> 01:52:33,760
second.

1824
01:52:34,000 --> 01:52:34,840
Correct.

1825
01:52:35,600 --> 01:52:36,920
Two things.

1826
01:52:37,880 --> 01:52:39,280
Now see?

1827
01:52:39,600 --> 01:52:41,560
Okay, let's take it one by one.

1828
01:52:41,560 --> 01:52:43,480
Right.

1829
01:52:43,480 --> 01:52:46,400
I'm going to write
one thing here called iterate

1830
01:52:50,080 --> 01:52:53,960
before method, right? Is

1831
01:52:56,400 --> 01:52:57,320
what I'm writing here

1832
01:52:57,320 --> 01:53:00,040
and direct before method point.

1833
01:53:00,640 --> 01:53:03,640
So in the before method, I am writing.

1834
01:53:03,640 --> 01:53:06,160
Enter it before method

1835
01:53:06,160 --> 01:53:08,800
public void

1836
01:53:13,320 --> 01:53:15,280
before automatic

1837
01:53:18,360 --> 01:53:21,840
and before method and

1838
01:53:23,080 --> 01:53:25,800
will execute before

1839
01:53:26,760 --> 01:53:30,000
every test.

1840
01:53:30,000 --> 01:53:31,760
This is my precondition.

1841
01:53:31,760 --> 01:53:34,640
This is my precondition. Now,

1842
01:53:35,760 --> 01:53:39,880
now. After this
I'm going to write my post condition.

1843
01:53:40,440 --> 01:53:42,840
So the post condition would be a direct

1844
01:53:43,560 --> 01:53:45,480
after method

1845
01:53:45,960 --> 01:53:48,000
public void

1846
01:53:55,400 --> 01:53:59,160
and after method

1847
01:54:01,120 --> 01:54:04,600
and will execute after

1848
01:54:09,480 --> 01:54:12,280
every test.

1849
01:54:12,280 --> 01:54:13,320
Right guys.

1850
01:54:14,040 --> 01:54:16,880
So now if you see I have written iterate

1851
01:54:17,040 --> 01:54:19,480
before method for my precondition

1852
01:54:20,120 --> 01:54:23,320
and added it
after method for my post condition.

1853
01:54:24,120 --> 01:54:26,720
Now if I try to execute this particular

1854
01:54:26,720 --> 01:54:31,080
class, see if I'm trying to execute
this particular class,

1855
01:54:31,320 --> 01:54:40,840
what I'm getting,
I just want to show you this.

1856
01:54:40,840 --> 01:54:49,160
So let's tell me
how many test cases once. So

1857
01:54:50,920 --> 01:54:51,520
right.

1858
01:54:51,920 --> 01:54:55,440
Why two when I'm having one, two, three,
four methods,

1859
01:54:55,520 --> 01:55:09,240
then why just two?

1860
01:55:09,240 --> 01:55:11,360
Correct.

1861
01:55:11,360 --> 01:55:17,040
Because like I said, the test
is your most important annotation, right?

1862
01:55:17,400 --> 01:55:21,880
Your best guess will be considered
based on your test annotation.

1863
01:55:22,400 --> 01:55:28,080
When I say iterate before method
after method, these are the conditions

1864
01:55:28,080 --> 01:55:33,200
in post condition and these conditions
not be considered as your test case.

1865
01:55:33,480 --> 01:55:34,200
Correct.

1866
01:55:34,200 --> 01:55:37,480
So test and you and just do a direct
consolidation here.

1867
01:55:38,080 --> 01:55:41,480
When we say just to request a notation,
it simply means

1868
01:55:41,680 --> 01:55:44,480
that it will execute just to test case.

1869
01:55:44,800 --> 01:55:48,480
And that's why we are getting now,
if I see the output here,

1870
01:55:49,560 --> 01:55:53,240
if I see the output here,
it says posted execute.

1871
01:55:53,240 --> 01:55:54,400
I am before method.

1872
01:55:54,400 --> 01:55:56,000
It means which method.

1873
01:55:56,000 --> 01:55:57,880
It executed this before my type,

1874
01:55:59,160 --> 01:56:00,800
then It says this is my false

1875
01:56:00,800 --> 01:56:05,920
two method means my first method
executing this method.

1876
01:56:06,840 --> 01:56:09,000
Then it says I am better method.

1877
01:56:09,000 --> 01:56:10,160
It means

1878
01:56:10,640 --> 01:56:13,120
before method executed before this test

1879
01:56:14,040 --> 01:56:18,000
after method executed
after this test again

1880
01:56:18,640 --> 01:56:23,360
executed before the method once again
by because I have another test.

1881
01:56:23,520 --> 01:56:26,640
If no,

1882
01:56:28,160 --> 01:56:34,560
no, there is no problem.

1883
01:56:34,560 --> 01:56:36,840
Now if you see in the second
method. Right.

1884
01:56:36,840 --> 01:56:39,960
Because I have to test the
my before method will execute.

1885
01:56:39,960 --> 01:56:48,480
How many times?

1886
01:56:48,480 --> 01:56:50,360
Two times. Right?

1887
01:56:50,360 --> 01:56:51,320
By two times.

1888
01:56:51,320 --> 01:56:54,880
Because my precondition
is for all the test cases.

1889
01:56:56,360 --> 01:56:58,680
My precondition is for all the test cases.

1890
01:56:59,040 --> 01:57:01,920
The test cases
I'm having examining five test case

1891
01:57:02,160 --> 01:57:05,040
and I am writing one precondition
before method.

1892
01:57:05,280 --> 01:57:08,760
So when I the data
before the method, this editor

1893
01:57:08,840 --> 01:57:12,920
before method will execute
before every single at the request gifts,

1894
01:57:13,720 --> 01:57:18,040
and then it ultimately will execute
after every single case.

1895
01:57:18,720 --> 01:57:20,720
All right, fine.

1896
01:57:20,720 --> 01:57:25,280
So here the order is first executed,
then my actual test,

1897
01:57:25,720 --> 01:57:28,200
then after method is my first condition,

1898
01:57:29,040 --> 01:57:33,120
then again precondition executed,
then my test case,

1899
01:57:33,360 --> 01:57:43,080
and then my 20.

1900
01:57:43,080 --> 01:57:43,640
Right.

1901
01:57:43,640 --> 01:57:47,360
So so that we generally use
this precondition imposed condition

1902
01:57:47,640 --> 01:57:52,440
to mention the pains,
for example, the situation, the condition

1903
01:57:52,680 --> 01:57:56,280
that requirement
which is same across all the test cases

1904
01:57:57,240 --> 01:58:00,800
right
next to you obtain test guess to execute

1905
01:58:01,200 --> 01:58:04,840
so you will not write, log in, log in, log
in, log in multiple times

1906
01:58:04,840 --> 01:58:06,840
for launching the browser,
launching the browser,

1907
01:58:06,840 --> 01:58:08,840
launching the browser everything test.

1908
01:58:08,840 --> 01:58:13,760
Guess this is what you guys are doing,
even if you are creating a single class,

1909
01:58:13,760 --> 01:58:17,600
what you're doing basically is
you are writing your this driver

1910
01:58:17,680 --> 01:58:22,200
or driver is equal to new chrome driver
all the time.

1911
01:58:22,200 --> 01:58:23,240
You don't need to do it.

1912
01:58:23,240 --> 01:58:27,320
You just write it at one place
and this one place is nothing.

1913
01:58:27,320 --> 01:58:31,600
But your precondition will execute
for all of your test cases.

1914
01:58:31,600 --> 01:58:35,400
So the code reusability concept
we are implementing here

1915
01:58:35,400 --> 01:58:38,640
with the help of before
method after method, also

1916
01:58:40,560 --> 01:58:42,400
Now, even if you have let's see,

1917
01:58:42,400 --> 01:58:47,640
I'm going to add I'm
going to add another method here.

1918
01:58:47,640 --> 01:58:50,240
So after second method,

1919
01:58:50,240 --> 01:58:53,120
I'm going to add here

1920
01:58:53,760 --> 01:58:55,200
automatic

1921
01:58:55,640 --> 01:58:57,880
and then I'm writing method.

1922
01:58:57,880 --> 01:59:00,440
Now, what would happen in this case

1923
01:59:00,440 --> 01:59:05,120
if I execute this particular class
where having three test cases

1924
01:59:05,280 --> 01:59:14,880
right, it executes total three test cases.

1925
01:59:14,960 --> 01:59:18,640
How many past three failures escape deal.

1926
01:59:19,040 --> 01:59:24,120
But if you see my before my third execute
one time to time

1927
01:59:24,640 --> 01:59:27,480
creating my after method, execute

1928
01:59:27,480 --> 01:59:30,640
the one time to time three time

1929
01:59:31,320 --> 01:59:33,720
and then my actual test gives executing.

1930
01:59:35,600 --> 01:59:36,520
So what does it mean?

1931
01:59:36,520 --> 01:59:39,960
I wrote it
one time but did execute it three times.

1932
01:59:40,480 --> 01:59:43,200
Code reusability. Correct.

1933
01:59:43,200 --> 01:59:46,080
So for example,
if you want to verify dashboard page,

1934
01:59:46,080 --> 01:59:50,120
you want to verify an employee page,
you want to verify login page, fine.

1935
01:59:50,400 --> 01:59:51,960
These are different scenarios.

1936
01:59:51,960 --> 01:59:54,880
For all of these scenarios,
you have to launch the browser

1937
01:59:54,880 --> 01:59:57,360
and maybe you are these four
things are common,

1938
01:59:57,720 --> 02:00:02,160
so you can put these two things
in your precondition or before method.

1939
02:00:02,360 --> 02:00:07,600
Right before every single test case, your
this same method will execute at the rate

1940
02:00:07,640 --> 02:00:10,720
before method will execute,
and you will be getting

1941
02:00:10,720 --> 02:00:14,080
the same piece of code
across all the methods clear.

1942
02:00:14,560 --> 02:00:15,920
Similarly, closing the browser.

1943
02:00:15,920 --> 02:00:17,880
Then you can put it in the post condition.

1944
02:00:17,880 --> 02:00:21,600
So after completion of all the test,
guess what you have to do basically is

1945
02:00:21,920 --> 02:00:23,680
you have to close your browser.

1946
02:00:23,680 --> 02:00:25,760
So this enter it after method,

1947
02:00:26,120 --> 02:00:30,000
but particular annotation
will help you to close your browser.

1948
02:00:31,680 --> 02:00:34,280
So right once use everywhere

1949
02:00:34,520 --> 02:00:37,720
go to usability
concept with the help of these annotations

1950
02:00:38,200 --> 02:00:41,280
and the read before method and direct
after method.

1951
02:00:41,520 --> 02:00:54,120
Is it clear to everyone guys,

1952
02:00:54,120 --> 02:01:18,080
why responses are getting slower?

1953
02:01:18,080 --> 02:01:19,800
What happened is

1954
02:01:26,760 --> 02:01:29,040
how can we document this test and

1955
02:01:33,000 --> 02:01:35,880
I didn't get your question.

1956
02:01:35,920 --> 02:01:36,360
Should

1957
02:01:45,360 --> 02:01:45,920
All right,

1958
02:01:45,920 --> 02:01:51,160
Mike, great.

1959
02:01:51,160 --> 02:01:51,720
All right.

1960
02:01:51,720 --> 02:01:54,200
Shall we proceed further now

1961
02:02:01,920 --> 02:02:05,120
let's create actual script, right.

1962
02:02:05,120 --> 02:02:07,760
With the help of a direct test
annotations.

1963
02:02:08,520 --> 02:02:11,280
So test and we are going to use.

1964
02:02:11,280 --> 02:02:14,360
So for example, let's say you go to one of

1965
02:02:16,320 --> 02:02:18,720
make more sites of your

1966
02:02:24,840 --> 02:02:26,000
inside these notes.

1967
02:02:26,000 --> 02:02:27,720
Let me write it right.

1968
02:02:27,720 --> 02:02:32,600
So first thing, let's say you're
working on one particular string, right?

1969
02:02:32,640 --> 02:02:34,720
You all right?

1970
02:02:34,720 --> 02:02:36,240
You all know what is this strange?

1971
02:02:36,240 --> 02:02:37,800
You all know what is a product?

1972
02:02:37,800 --> 02:02:39,480
The backlog, testing backlog.

1973
02:02:39,480 --> 02:02:43,640
If you need any clarification from my side
on this point, I can give you also.

1974
02:02:43,640 --> 02:02:48,680
But right now I am asking this thing
so you all know what is user story,

1975
02:02:49,000 --> 02:03:05,040
right, guys,

1976
02:03:06,360 --> 02:03:09,280
You have to kind of make locks, right?

1977
02:03:09,600 --> 02:03:10,440
What are these?

1978
02:03:10,440 --> 02:03:19,920
What are they?

1979
02:03:19,920 --> 02:03:21,320
What are the backlog?

1980
02:03:21,320 --> 02:03:24,040
Discrete backlog. Fine.

1981
02:03:24,040 --> 02:03:24,440
All right.

1982
02:03:24,440 --> 02:03:33,920
Which one is the bigger one product,
the one or the sprint one?

1983
02:03:33,920 --> 02:03:37,120
Yeah, we will look

1984
02:03:37,200 --> 02:03:39,240
at the backlog is the bigger one.

1985
02:03:39,240 --> 02:03:42,240
So let's say
you're working in your fifties

1986
02:03:42,240 --> 02:03:46,680
sprint trade, in your fifties,
you got one user story.

1987
02:03:47,040 --> 02:03:50,400
So this is illustrative story
when you're getting in this sprint fight

1988
02:03:50,760 --> 02:03:52,960
from where
you will be getting this user story,

1989
02:03:53,400 --> 02:03:55,960
you will be getting this
from your product backlog or

1990
02:03:55,960 --> 02:03:59,400
you'll be getting this
from your sprint backlog

1991
02:04:00,280 --> 02:04:05,240
of the sprint backlog right?

1992
02:04:05,240 --> 02:04:10,400
So let's go ahead and see if you get
a user story from the Sprint backlog.

1993
02:04:10,600 --> 02:04:11,240
Right.

1994
02:04:11,240 --> 02:04:15,360
So your user experiences, let's say user
number will be five,

1995
02:04:15,360 --> 02:04:16,440
four, three, two, one.

1996
02:04:16,440 --> 02:04:19,040
This would be your user study and it says

1997
02:04:20,040 --> 02:04:21,240
as in

1998
02:04:23,640 --> 02:04:29,240
admin user, you

1999
02:04:29,280 --> 02:04:32,280
should be able to you should be able to

2000
02:04:33,720 --> 02:04:35,760
log in with

2001
02:04:40,520 --> 02:04:42,080
valid credentials.

2002
02:04:42,080 --> 02:04:42,720
Right?

2003
02:04:43,000 --> 02:04:46,360
This is your results.

2004
02:04:46,360 --> 02:04:47,920
The race

2005
02:04:55,160 --> 02:04:58,440
now will try to implement this part here.

2006
02:04:58,440 --> 02:05:01,640
So I'm going to write new class by

2007
02:05:04,320 --> 02:05:05,640
logging test.

2008
02:05:05,640 --> 02:05:09,040
Simple.

2009
02:05:09,040 --> 02:05:11,560
Now, inside this class,
inside of this class,

2010
02:05:12,280 --> 02:05:14,640
I'm going to use my first thing.

2011
02:05:14,640 --> 02:05:18,160
This is a direct test

2012
02:05:20,160 --> 02:05:22,440
to write my actual test case.

2013
02:05:22,440 --> 02:05:28,280
Correct, because I do not have any method,
so I have to use my request.

2014
02:05:28,560 --> 02:05:29,200
Fine.

2015
02:05:29,480 --> 02:05:32,240
Let me write my request here.

2016
02:05:32,240 --> 02:05:35,640
So I'm going to write public void

2017
02:05:37,680 --> 02:05:40,280
by any log

2018
02:05:40,800 --> 02:05:47,240
database.

2019
02:05:47,240 --> 02:05:49,800
Now, tell me one thing

2020
02:05:49,800 --> 02:05:54,040
someone already had
someone was already working in this spring

2021
02:05:54,440 --> 02:05:58,760
and it's trained for in this particular
write in particular project.

2022
02:05:59,240 --> 02:06:00,440
So if he had added

2023
02:06:01,920 --> 02:06:05,040
up right now, if you want to use,
you can use no issues, right?

2024
02:06:05,640 --> 02:06:06,480
Why did you use.

2025
02:06:06,480 --> 02:06:10,320
Because we will use when you are going
to add a couple of features here

2026
02:06:13,680 --> 02:06:15,080
of parenthesis

2027
02:06:15,080 --> 02:06:18,320
we have to use, we must use
when we will use these features.

2028
02:06:18,360 --> 02:06:22,440
Right now, even if you don't use
it will not give you any error.

2029
02:06:22,440 --> 02:06:27,360
Now you got this 50 sprint,
but in the remaining for the sprint,

2030
02:06:27,360 --> 02:06:31,040
the previous sprint,
someone was also working on one task

2031
02:06:31,040 --> 02:06:35,480
right at the request
and he added one user story here.

2032
02:06:35,520 --> 02:06:36,120
Right.

2033
02:06:36,120 --> 02:06:38,760
That is, for example, public light system

2034
02:06:39,840 --> 02:06:40,880
as the user story.

2035
02:06:40,880 --> 02:06:42,240
I'm not adding anything yet.

2036
02:06:42,240 --> 02:06:45,520
I'm just writing this.

2037
02:06:45,520 --> 02:06:48,840
If you are going to add

2038
02:06:48,840 --> 02:06:52,600
this video, log in now
for both these things.

2039
02:06:52,600 --> 02:06:55,200
You guys are working on
single application, right?

2040
02:06:55,760 --> 02:06:59,680
So precondition and post condition,
let's say for both of you,

2041
02:06:59,800 --> 02:07:03,960
for both of these, just get this
both of these stories are seen right.

2042
02:07:04,240 --> 02:07:06,840
And what is that this is nothing

2043
02:07:07,080 --> 02:07:11,200
but you're launching the application
or launching the browser

2044
02:07:11,200 --> 02:07:15,240
and navigating the UI
or simply launching browser.

2045
02:07:15,240 --> 02:07:18,560
Not even you are in let's say
you guys are working on different

2046
02:07:18,560 --> 02:07:22,800
application, but launching
the browser is simple, both of you, Right?

2047
02:07:23,240 --> 02:07:26,480
So to do that, to do that, there is a,

2048
02:07:27,040 --> 02:07:31,560
there is an annotation we generally used
which annotation we use for precondition.

2049
02:07:31,560 --> 02:07:37,840
Those.

2050
02:07:37,840 --> 02:07:41,040
I'm going to write it
before my third DFA for public

2051
02:07:44,480 --> 02:07:46,400
void before my third.

2052
02:07:46,400 --> 02:07:48,000
This is the precondition.

2053
02:07:48,000 --> 02:07:50,680
So I'm going to write here

2054
02:07:54,240 --> 02:07:57,400
open the browser

2055
02:07:58,040 --> 02:08:01,080
simple. This

2056
02:08:04,520 --> 02:08:07,800
Now inside this for the browser

2057
02:08:09,040 --> 02:08:11,760
I have to write system dark

2058
02:08:14,040 --> 02:08:15,720
state property.

2059
02:08:16,440 --> 02:08:19,000
There's always the database

2060
02:08:24,400 --> 02:08:25,680
system to our state property.

2061
02:08:25,680 --> 02:08:27,360
I don't know how to read this quote.

2062
02:08:27,360 --> 02:08:29,000
You have to tell me

2063
02:08:29,600 --> 02:08:32,080
then here I think driver dark

2064
02:08:33,160 --> 02:08:35,280
chrome type

2065
02:08:36,120 --> 02:08:40,320
that.

2066
02:08:40,320 --> 02:08:44,920
And here, here
I have to provide the path of my chrome

2067
02:08:44,920 --> 02:08:47,200
driver dot xy

2068
02:08:50,800 --> 02:08:52,560
right.

2069
02:08:52,560 --> 02:08:54,840
So now let's do one thing.

2070
02:08:55,320 --> 02:08:59,320
When I'm creating this project
inside this project only

2071
02:08:59,600 --> 02:09:03,200
I will create one driver right
for the name drivers.

2072
02:09:03,360 --> 02:09:08,360
Right inside
this just right click on to see right

2073
02:09:08,360 --> 02:09:12,360
And inside this RC
you can create one directory for work.

2074
02:09:12,960 --> 02:09:16,440
You can create a directory
for your drivers, right?

2075
02:09:16,720 --> 02:09:20,080
And inside drivers
you can put your chrome driver dirty. It's

2076
02:09:21,200 --> 02:09:23,400
since I already had here with me,

2077
02:09:23,400 --> 02:09:27,200
I'm going to copy
simply from this project.

2078
02:09:27,200 --> 02:09:29,720
This is my driver state

2079
02:09:29,720 --> 02:09:31,720
or let me just copy my chrome driver

2080
02:09:31,720 --> 02:09:34,880
or to exit from here
and I will add it here.

2081
02:09:34,880 --> 02:09:39,520
So how I'm going to right click
right on my SLC

2082
02:09:40,920 --> 02:09:43,520
new package.

2083
02:09:43,520 --> 02:09:47,280
My package name would be drivers,
right guys,

2084
02:09:47,280 --> 02:09:51,480
what I'm doing, right
click on this RC new package.

2085
02:09:51,480 --> 02:09:55,440
My package name is Drivers
and inside these drivers

2086
02:09:55,440 --> 02:09:59,040
I'm going to post my chrome driver
dirty exit by

2087
02:10:00,200 --> 02:10:02,280
so here if you see this is my driver

2088
02:10:02,280 --> 02:10:03,560
got the exit

2089
02:10:08,120 --> 02:10:08,720
guide.

2090
02:10:09,720 --> 02:10:11,960
Is everyone on the same page with me

2091
02:10:11,960 --> 02:10:20,240
what I'm doing here.

2092
02:10:20,240 --> 02:10:21,680
Yes right.

2093
02:10:21,680 --> 02:10:26,160
It's RC right click new package.

2094
02:10:26,680 --> 02:10:28,240
Then you can edit these drivers

2095
02:10:29,320 --> 02:10:30,760
and their drivers.

2096
02:10:30,760 --> 02:10:36,600
You simply copy
paste your chrome driver to see.

2097
02:10:36,600 --> 02:10:39,600
I didn't provide any right
click, I'm just clicking here

2098
02:10:39,880 --> 02:10:41,880
and then this deep state.

2099
02:10:42,640 --> 02:10:45,480
So and you will get this option
for the moment.

2100
02:10:45,480 --> 02:10:48,360
You click paste,
it will give you this chrome driver

2101
02:10:48,560 --> 02:10:49,800
you see here

2102
02:10:53,200 --> 02:10:55,240
is everyone.

2103
02:10:55,240 --> 02:11:02,280
Until this point.

2104
02:11:02,280 --> 02:11:06,120
Okay, so now I'm going to provide
the party of support

2105
02:11:06,120 --> 02:11:08,400
would be my SRT

2106
02:11:10,200 --> 02:11:14,880
drivers.

2107
02:11:14,880 --> 02:11:16,920
Chrome Driver. It's correct.

2108
02:11:16,920 --> 02:11:18,480
This is my path

2109
02:11:18,800 --> 02:11:21,080
inside of my RC.

2110
02:11:21,080 --> 02:11:23,640
I'm getting these drivers of my drivers.

2111
02:11:23,640 --> 02:11:27,360
I'm getting chrome driver to exit

2112
02:11:29,440 --> 02:11:29,880
again.

2113
02:11:30,000 --> 02:11:40,520
So if I'm correct or not, let's
go ahead now.

2114
02:11:40,720 --> 02:11:43,640
I'm going to right here.

2115
02:11:43,640 --> 02:11:44,600
Web driver.

2116
02:11:44,600 --> 02:11:46,680
Driver is equal to nil

2117
02:11:48,240 --> 02:11:53,520
chrome driver.

2118
02:11:53,520 --> 02:11:53,920
All right.

2119
02:11:53,920 --> 02:11:54,720
The loser.

2120
02:11:54,720 --> 02:11:57,640
So for Chrome driver 30,
you see what you have to do.

2121
02:11:57,920 --> 02:12:02,040
Go here and write.

2122
02:12:02,040 --> 02:12:02,760
Download

2123
02:12:03,880 --> 02:12:05,440
Chrome Driver exit.

2124
02:12:05,440 --> 02:12:06,400
All right.

2125
02:12:06,720 --> 02:12:08,680
Simply click here

2126
02:12:10,440 --> 02:12:11,640
and you will get this option

2127
02:12:11,640 --> 02:12:14,320
if you're using Chrome was a 95 download
this.

2128
02:12:14,880 --> 02:12:17,000
Chrome was a 94 download this.

2129
02:12:17,360 --> 02:12:20,520
How would you get your chrome
driver virgin double

2130
02:12:21,840 --> 02:12:24,960
click here right? Help

2131
02:12:24,960 --> 02:12:27,600
this hamburger option click here

2132
02:12:28,800 --> 02:12:31,360
Going to hell about Google Chrome.

2133
02:12:32,240 --> 02:12:33,240
You will get this.

2134
02:12:33,240 --> 02:12:37,200
I'm using 94.

2135
02:12:37,200 --> 02:12:38,040
All right.

2136
02:12:38,080 --> 02:12:41,880
So the one which is compatible with 94,

2137
02:12:41,880 --> 02:12:44,440
it says if you're using 94,
download this one.

2138
02:12:44,880 --> 02:12:47,760
So similarly,
you can download this one from here,

2139
02:12:48,200 --> 02:12:52,440
correct.

2140
02:12:52,440 --> 02:12:54,840
Guys,
if you are having compatibility issue,

2141
02:12:54,840 --> 02:12:58,720
then do let me know because you might
be getting compatibility issues.

2142
02:12:58,720 --> 02:13:04,040
Some of you guys.

2143
02:13:04,040 --> 02:13:05,480
Right? Exactly.

2144
02:13:05,480 --> 02:13:08,120
It is for Windows only for your Mac.

2145
02:13:08,120 --> 02:13:18,360
I think it's simply
the part of Chrome driver not to up.

2146
02:13:18,360 --> 02:13:20,640
So shall we proceed further now then?

2147
02:13:20,640 --> 02:13:25,240
Those are all good.

2148
02:13:25,240 --> 02:13:25,520
Great.

2149
02:13:27,480 --> 02:13:29,000
Now what I'm going to do here

2150
02:13:29,000 --> 02:13:33,480
is to perform this value log in right.

2151
02:13:33,480 --> 02:13:34,200
Fine.

2152
02:13:34,760 --> 02:13:37,280
Let me right here Web driver.

2153
02:13:37,320 --> 02:13:38,280
Driver.

2154
02:13:38,280 --> 02:13:42,720
Because I'm going to use here
also my driver.

2155
02:13:42,720 --> 02:13:46,080
So I'm saying here, I'm going to use my

2156
02:13:49,120 --> 02:13:49,960
open browser.

2157
02:13:49,960 --> 02:13:53,560
So let's say
I'm going to write Driver Dark Gate

2158
02:13:54,760 --> 02:13:57,000
and then the you are not my application.

2159
02:13:57,000 --> 02:14:08,880
So that is that you are in there you go.

2160
02:14:08,880 --> 02:14:12,360
This is the you are I'm getting

2161
02:14:12,440 --> 02:14:13,760
I'm going to copy this.

2162
02:14:13,760 --> 02:14:16,320
You are only here first thing

2163
02:14:23,000 --> 02:14:26,600
all drivers chrome but I will see

2164
02:14:36,040 --> 02:14:38,040
I will tell you this

2165
02:14:38,600 --> 02:14:41,480
let me deleted from your for now okay.

2166
02:14:42,720 --> 02:14:45,360
Someone said I misspelled their driver

2167
02:14:45,360 --> 02:15:14,640
with.

2168
02:15:14,640 --> 02:15:18,080
Okay fine
now I'm going to write driver dot

2169
02:15:20,400 --> 02:15:21,360
when they start

2170
02:15:22,560 --> 02:15:23,160
bringing those

2171
02:15:23,160 --> 02:15:26,240
out maximize so maximize my window

2172
02:15:26,920 --> 02:15:30,480
and then let's put some quick right
to launch browser

2173
02:15:30,480 --> 02:15:34,800
and open this application
so driver dot manage start

2174
02:15:35,480 --> 02:15:39,880
I most out implicit wait
I am putting for 10 seconds right?

2175
02:15:39,880 --> 02:15:43,200
So it can be my time with it in

2176
02:15:43,200 --> 02:15:43,760
seconds.

2177
02:15:43,760 --> 02:15:46,760
I'm going to pull it guys.

2178
02:15:46,840 --> 02:15:53,200
This could clear to everyone.

2179
02:15:53,200 --> 02:15:55,080
You guys have written it
multiple times, right?

2180
02:15:55,080 --> 02:16:04,040
But still I'm asking.

2181
02:16:04,040 --> 02:16:04,880
Fine.

2182
02:16:05,640 --> 02:16:07,960
So now let's go ahead.

2183
02:16:07,960 --> 02:16:10,720
We are on after performing this

2184
02:16:10,720 --> 02:16:15,320
we are on application page.

2185
02:16:15,320 --> 02:16:18,800
I still can't paste their driver,
many of which

2186
02:16:20,000 --> 02:16:21,320
which one you're using.

2187
02:16:21,320 --> 02:16:24,600
Is it Windows or it is Mac

2188
02:16:27,320 --> 02:16:28,200
windows.

2189
02:16:28,200 --> 02:16:29,080
Okay.

2190
02:16:29,080 --> 02:16:31,240
By you are not able to get the driver
first.

2191
02:16:31,240 --> 02:16:33,600
You must be getting it in your folder.

2192
02:16:34,080 --> 02:16:36,560
You have to extract your zip folder.

2193
02:16:36,560 --> 02:16:40,840
Once you extracted after extraction
you will get one file dirty xy.

2194
02:16:41,240 --> 02:16:43,640
Then you have to copy this

2195
02:16:43,640 --> 02:16:46,720
if after the extraction
and then you will be able to press the

2196
02:16:52,000 --> 02:16:52,360
guys.

2197
02:16:52,360 --> 02:16:56,320
Make sure when you're sending this chrome
driver dirty exit to everyone.

2198
02:16:56,320 --> 02:16:56,880
Right.

2199
02:16:56,880 --> 02:17:01,160
Make sure these dirty zip
are compatible to their browsers

2200
02:17:01,720 --> 02:17:05,240
because it is not mandatory
that you're also using the same browser

2201
02:17:05,240 --> 02:17:06,760
they guys are using.

2202
02:17:06,760 --> 02:17:09,640
My you are using 94 or they're using 89.

2203
02:17:09,640 --> 02:17:10,240
Right?

2204
02:17:10,240 --> 02:17:10,960
So you're wrong.

2205
02:17:10,960 --> 02:17:14,040
Driver 47 not work for them. Okay.

2206
02:17:14,160 --> 02:17:19,080
So let them download everyone
according to their good browsers.

2207
02:17:19,080 --> 02:17:23,640
Otherwise then it will further
lead to an issue that we have to resolve.

2208
02:17:23,640 --> 02:17:34,560
You All right,

2209
02:17:35,560 --> 02:17:38,720
guys?

2210
02:17:38,720 --> 02:17:39,440
All, all.

2211
02:17:39,440 --> 02:17:48,240
Okay, everyone, are you correct?

2212
02:17:49,280 --> 02:17:49,680
Correct.

2213
02:17:49,680 --> 02:17:51,480
The browsers compatibility

2214
02:17:51,480 --> 02:17:54,800
in Melbourne, also in Melbourne
also you will get that issue.

2215
02:17:54,920 --> 02:17:57,560
But we have another way to overcome that.

2216
02:17:57,560 --> 02:18:00,000
Then we will not use
this compared to the event.

2217
02:18:00,000 --> 02:18:01,520
We will not use this drivers for you.

2218
02:18:01,520 --> 02:18:05,760
But after some time, don't worry with our
drivers we will execute everything.

2219
02:18:07,200 --> 02:18:09,880
We will not use these drivers,
we will not use this

2220
02:18:10,360 --> 02:18:14,480
main method, We will not use this system
because it property nothing we will use.

2221
02:18:14,640 --> 02:18:17,840
But still we will be able to execute
all of our test guesses.

2222
02:18:19,320 --> 02:18:20,680
That would be the final output.

2223
02:18:20,680 --> 02:18:27,600
Right of learning this towards
entering book.

2224
02:18:27,600 --> 02:18:28,560
All right.

2225
02:18:28,560 --> 02:18:31,520
So naturally, project for the race

2226
02:18:36,360 --> 02:18:37,840
and let's go ahead.

2227
02:18:37,840 --> 02:18:41,600
By the way, crucial precondition
class quotes can be quick

2228
02:18:43,080 --> 02:18:45,720
precondition.

2229
02:18:45,720 --> 02:18:47,680
Yeah. There you go.
This is a precondition.

2230
02:18:47,680 --> 02:18:48,520
You'll see

2231
02:19:00,840 --> 02:19:06,920
the previous one.

2232
02:19:06,920 --> 02:19:15,640
This one.

2233
02:19:15,640 --> 02:19:30,800
This is just a normal method, right?

2234
02:19:30,800 --> 02:19:31,160
Alright.

2235
02:19:31,160 --> 02:19:42,920
So that then.

2236
02:19:42,920 --> 02:19:46,640
Okay, so now we have to verify already.

2237
02:19:46,640 --> 02:19:48,720
Someone has already sent me this.

2238
02:19:49,080 --> 02:19:51,640
Thank you. All of us

2239
02:19:51,800 --> 02:19:53,680
for quickly printing 20

2240
02:19:53,680 --> 02:20:05,240
main.

2241
02:20:05,240 --> 02:20:07,400
Why it is not taking
the driver. They send me

2242
02:20:14,040 --> 02:20:16,200
guys it is not taking my driver by

2243
02:20:21,920 --> 02:20:24,000
no instance video will wait

2244
02:20:24,000 --> 02:20:26,680
and if I have to write across my test

2245
02:20:26,680 --> 02:20:29,080
then let me define this driver.

2246
02:20:30,080 --> 02:20:30,840
Right liquid.

2247
02:20:30,840 --> 02:20:33,280
Define this driver here.

2248
02:20:33,480 --> 02:20:34,320
Now tell me this.

2249
02:20:34,320 --> 02:20:35,040
What is this?

2250
02:20:35,040 --> 02:20:42,240
If I'm defining it, is it local
or it is instance?

2251
02:20:42,240 --> 02:20:45,480
Within instance,
what is the specialty of instance

2252
02:20:45,480 --> 02:20:46,320
video with

2253
02:20:56,520 --> 02:20:58,240
I can use it inside

2254
02:20:58,240 --> 02:21:01,440
throughout the my class
in all the metrics.

2255
02:21:01,720 --> 02:21:02,560
Right.

2256
02:21:02,560 --> 02:21:06,320
So again, I will define it at one place
so that I can use everywhere.

2257
02:21:06,720 --> 02:21:10,840
If I am defining it as a local variable,
then every time I have to define

2258
02:21:10,840 --> 02:21:15,960
because the scope of visibility will been
limited to my method only, right?

2259
02:21:16,320 --> 02:21:20,520
That's why I'm defining it here
on a class level as an instance variable

2260
02:21:20,800 --> 02:21:23,720
so that I can utilize
this particular instance

2261
02:21:24,160 --> 02:21:28,160
throughout my all methods.

2262
02:21:28,160 --> 02:21:28,760
Let's go ahead.

2263
02:21:30,680 --> 02:21:31,920
I'm going to write driver

2264
02:21:31,920 --> 02:21:36,880
defined element by default.

2265
02:21:36,880 --> 02:21:40,600
You shared this good one.

2266
02:21:40,600 --> 02:21:42,680
I point what is the idea?

2267
02:21:42,680 --> 02:21:44,320
So it is

2268
02:21:44,960 --> 02:21:51,040
the user name

2269
02:21:52,080 --> 02:21:57,280
point.

2270
02:21:57,280 --> 02:22:01,880
Then the second element
I'm getting would be mine.

2271
02:22:01,880 --> 02:22:05,400
So it is equal to driver dog.

2272
02:22:05,880 --> 02:22:10,440
I got I-80 and here on
so I'm getting the is

2273
02:22:12,240 --> 02:22:14,360
the it's the CoSport

2274
02:22:15,920 --> 02:22:18,480
the third element would be my dog
in Vietnam.

2275
02:22:18,480 --> 02:22:19,000
Right.

2276
02:22:20,040 --> 02:22:38,640
It would be mine.

2277
02:22:38,640 --> 02:22:40,880
Right now I have to parse their data.

2278
02:22:41,560 --> 02:22:44,760
So to parse their data,
we have a component called user

2279
02:22:44,760 --> 02:22:46,800
named person because

2280
02:22:47,600 --> 02:22:53,320
right,

2281
02:22:53,320 --> 02:22:55,840
this is my user name

2282
02:22:56,520 --> 02:22:58,440
and then I'm passing my password

2283
02:22:58,440 --> 02:23:09,280
dot send keys.

2284
02:23:09,280 --> 02:23:12,840
This is my password.

2285
02:23:12,840 --> 02:23:16,080
And then simple click right next.

2286
02:23:17,880 --> 02:23:25,480
This is my very log in.

2287
02:23:25,480 --> 02:23:28,080
Now, after this, tell me one thing.

2288
02:23:28,200 --> 02:23:31,440
Right
when I'm entering, I say, Well log it.

2289
02:23:31,760 --> 02:23:33,280
So is verification done?

2290
02:23:33,280 --> 02:23:37,880
I say to verify that the log user is able
to log in with valid credentials.

2291
02:23:38,280 --> 02:23:44,080
So is my verification done from here?

2292
02:23:44,080 --> 02:23:44,760
Yeah, that's fine.

2293
02:23:44,760 --> 02:23:46,680
Any I'm. I'll give you a time.

2294
02:23:46,680 --> 02:23:48,400
Don't worry about it, guys.

2295
02:23:48,400 --> 02:23:53,000
If I write into the username, enter
password and click on log in.

2296
02:23:53,320 --> 02:23:55,360
Right. So this is our first guest.

2297
02:23:55,360 --> 02:24:04,120
This is fine, but my verification done
audit is still pending.

2298
02:24:04,120 --> 02:24:05,200
No, we have to check.

2299
02:24:05,200 --> 02:24:07,520
But did we implement everything?

2300
02:24:07,520 --> 02:24:11,760
That's what I'm asking.

2301
02:24:11,760 --> 02:24:15,800
The answer is no,
we didn't implemented. Why?

2302
02:24:16,040 --> 02:24:18,600
Because let me show you again
the user story.

2303
02:24:18,800 --> 02:24:23,120
It says you should be able to log in
with valid credentials.

2304
02:24:23,920 --> 02:24:24,760
Right?

2305
02:24:24,880 --> 02:24:27,240
You should be able to log in
with political initials.

2306
02:24:27,280 --> 02:24:28,000
Fine.

2307
02:24:28,040 --> 02:24:29,600
So should be able.

2308
02:24:29,600 --> 02:24:32,040
It means we have to verify something.

2309
02:24:32,040 --> 02:24:34,240
Right. Some verification check points.

2310
02:24:34,240 --> 02:24:37,880
We need write how we do this
verification checkpoint.

2311
02:24:37,880 --> 02:24:38,640
Let me show you

2312
02:24:41,880 --> 02:24:43,280
that actually.

2313
02:24:44,200 --> 02:25:04,960
So let me write it in here.

2314
02:25:04,960 --> 02:25:06,600
Now, you'll see here

2315
02:25:06,600 --> 02:25:10,720
we can verify as many things
as you know, things which we see here.

2316
02:25:10,720 --> 02:25:11,880
These are unique.

2317
02:25:11,880 --> 02:25:14,200
We can verify all of them. Right.

2318
02:25:14,200 --> 02:25:18,800
But the most common thing, the most
common thing, which we can see here is

2319
02:25:19,800 --> 02:25:23,000
the most common thing Is this welcome text

2320
02:25:24,680 --> 02:25:27,120
correctly using cutting, right?

2321
02:25:27,480 --> 02:25:29,000
This welcome text.

2322
02:25:29,000 --> 02:25:31,680
So I'm going to get this
welcome text by PR,

2323
02:25:32,480 --> 02:25:34,800
how to identify,
how to inspect the element.

2324
02:25:34,800 --> 02:25:35,040
Right.

2325
02:25:35,040 --> 02:25:37,920
Still, I don't know

2326
02:25:38,840 --> 02:25:40,120
the status

2327
02:25:41,240 --> 02:25:42,560
is giving me one ID here.

2328
02:25:42,560 --> 02:25:43,160
Right.

2329
02:25:43,320 --> 02:25:46,920
So the best part is taking the I.D.

2330
02:25:47,360 --> 02:25:48,840
I'm taking the ID from here.

2331
02:25:48,840 --> 02:25:53,600
I can also take the text here right?

2332
02:25:53,600 --> 02:25:56,520
I can take the text here.
I can take the ID here.

2333
02:25:56,520 --> 02:26:01,440
I can take the link here
also by because anchor tag link

2334
02:26:01,720 --> 02:26:04,040
and the text
which is available as link text.

2335
02:26:04,480 --> 02:26:08,520
So three things I can take class also,
but for class I have to parse the index

2336
02:26:08,520 --> 02:26:09,720
and so many things.

2337
02:26:09,720 --> 02:26:13,320
So how many things we can get link
text I.D.

2338
02:26:13,920 --> 02:26:16,000
class, partial link text.

2339
02:26:16,080 --> 02:26:17,280
We can make export.

2340
02:26:17,280 --> 02:26:19,440
We can make the selector also. Right.

2341
02:26:19,920 --> 02:26:22,480
Remember the short
form of the selector for I.D.

2342
02:26:22,520 --> 02:26:25,120
it is hash
and then the value of class or hash.

2343
02:26:25,120 --> 02:26:28,760
Welcome would be a selector.

2344
02:26:28,760 --> 02:26:39,720
Then I'm just trying to brush
up your concept.

2345
02:26:39,720 --> 02:26:41,040
Okay, Final

2346
02:26:43,520 --> 02:26:46,120
now. So many options, right?

2347
02:26:47,160 --> 02:26:52,920
Let's go ahead and do it now.

2348
02:26:52,920 --> 02:26:53,280
Here.

2349
02:26:53,360 --> 02:26:55,520
I'm going to write this one more

2350
02:26:56,600 --> 02:26:57,880
Web element.

2351
02:26:57,880 --> 02:27:00,480
Very limited would be my

2352
02:27:01,880 --> 02:27:03,080
welcome attribute.

2353
02:27:03,080 --> 02:27:06,800
Right? So it would be my driver dog.

2354
02:27:06,800 --> 02:27:10,240
Find the element by dot export

2355
02:27:11,040 --> 02:27:13,480
and my spot would be double slave start.

2356
02:27:14,320 --> 02:27:16,080
And that ID I.D.

2357
02:27:16,080 --> 02:27:17,800
is equals to

2358
02:27:24,360 --> 02:27:24,840
welcome.

2359
02:27:24,840 --> 02:27:27,040
Right. If you want to cross check

2360
02:27:28,320 --> 02:27:32,320
copy, come here.

2361
02:27:32,920 --> 02:27:36,000
Let's take see.

2362
02:27:36,520 --> 02:27:39,600
It is just one right?

2363
02:27:39,600 --> 02:27:42,960
It is just one.

2364
02:27:42,960 --> 02:27:44,520
So now I'm writing here.

2365
02:27:44,520 --> 02:27:48,240
One thing I'm writing is if

2366
02:27:51,280 --> 02:27:55,920
if my welcome attribute is displayed, then

2367
02:27:57,480 --> 02:28:00,520
print one status coin

2368
02:28:01,120 --> 02:28:04,560
best guess is valid and USSD

2369
02:28:07,000 --> 02:28:08,480
otherwise

2370
02:28:08,480 --> 02:28:13,160
print else.

2371
02:28:13,160 --> 02:28:15,800
This case is

2372
02:28:16,280 --> 02:28:16,960
invalid.

2373
02:28:16,960 --> 02:28:21,360
Anything is.

2374
02:28:21,360 --> 02:28:24,480
This is my actual test

2375
02:28:25,800 --> 02:28:28,120
now precondition if you see here,

2376
02:28:29,600 --> 02:28:32,160
this is my precondition.

2377
02:28:32,160 --> 02:28:35,040
This is my actual test.

2378
02:28:35,040 --> 02:28:38,080
Now it's time to write my post condition.

2379
02:28:38,160 --> 02:28:38,880
Right?

2380
02:28:39,200 --> 02:28:42,480
So my post condition would be a detect
after method,

2381
02:28:43,640 --> 02:28:44,280
right

2382
02:28:45,280 --> 02:28:48,960
I'm going to write public void

2383
02:28:52,440 --> 02:28:52,680
here.

2384
02:28:52,680 --> 02:28:56,360
Don't buy it
because I'm going to write my driver

2385
02:28:56,360 --> 02:28:59,840
dog going.

2386
02:28:59,840 --> 02:29:02,160
I hope you guys know what is driver.

2387
02:29:02,160 --> 02:29:07,600
Sorry.

2388
02:29:07,600 --> 02:29:09,000
What is the difference in between?

2389
02:29:09,000 --> 02:29:11,200
Driver Great and Driver Not close.

2390
02:29:11,400 --> 02:29:12,160
Everyone knows it.

2391
02:29:12,160 --> 02:29:16,560
Great.

2392
02:29:16,560 --> 02:29:18,120
Got it.

2393
02:29:18,120 --> 02:29:21,080
All right, so now see

2394
02:29:22,440 --> 02:29:24,560
if I execute my test tickets here.

2395
02:29:24,920 --> 02:29:28,480
This is my first test.

2396
02:29:28,480 --> 02:29:29,320
Closed. Closes.

2397
02:29:29,320 --> 02:29:33,920
Dammit quick with the complete pros,
the content and all the instances.

2398
02:29:34,040 --> 02:29:37,280
This is a different point now. Liquidity.

2399
02:29:37,320 --> 02:29:40,320
This test is also I'm going to take
just one at the request

2400
02:29:40,880 --> 02:29:43,000
precondition and post condition.

2401
02:29:43,920 --> 02:29:54,840
Shall we execute this days?

2402
02:29:54,840 --> 02:29:55,320
Okay,

2403
02:29:56,680 --> 02:29:57,000
let's

2404
02:29:57,000 --> 02:30:15,080
see this.

2405
02:30:15,080 --> 02:30:17,240
It just open the browser.

2406
02:30:17,280 --> 02:30:27,920
Fine.

2407
02:30:27,920 --> 02:30:29,320
But it gave you an error.

2408
02:30:29,320 --> 02:30:36,720
Errors is null pointer exception.

2409
02:30:36,720 --> 02:30:37,200
All right.

2410
02:30:37,200 --> 02:30:40,320
Let me just complete this
and then I will help with that.

2411
02:30:40,760 --> 02:30:43,800
So guys see
it is giving me null point that exception

2412
02:30:44,160 --> 02:30:47,280
right inside my log in test accessible

2413
02:30:47,360 --> 02:30:49,760
need log in and down both are feed

2414
02:30:50,360 --> 02:30:53,680
right Sergio this works why yours works.

2415
02:30:53,680 --> 02:30:55,360
I think they do that

2416
02:30:55,720 --> 02:30:57,800
it is null point that exception

2417
02:30:57,800 --> 02:31:01,000
now let me give you one
point that exception see

2418
02:31:02,320 --> 02:31:04,680
we we have defined web driver
driver to you.

2419
02:31:05,600 --> 02:31:06,440
Right.

2420
02:31:07,600 --> 02:31:10,560
That is can you see on line number 15,

2421
02:31:10,880 --> 02:31:13,480
I have defined one instance
variable, right?

2422
02:31:13,480 --> 02:31:16,360
This is my driver. Driver

2423
02:31:16,360 --> 02:31:18,840
inside my method on line number 20.

2424
02:31:18,840 --> 02:31:20,520
Also, I have driver. Driver

2425
02:31:24,840 --> 02:31:26,200
guides here.

2426
02:31:26,200 --> 02:31:29,400
This is my local one there instance one.

2427
02:31:29,880 --> 02:31:33,240
Now selenium get confused

2428
02:31:33,240 --> 02:31:36,680
why you are calling the same thing
on an instance label

2429
02:31:36,840 --> 02:31:39,200
and then you are calling it
in a third level as well.

2430
02:31:39,720 --> 02:31:40,560
Right.

2431
02:31:40,560 --> 02:31:42,120
So do Driver.

2432
02:31:42,120 --> 02:31:44,200
We have defined on two different places.

2433
02:31:44,720 --> 02:31:46,880
This driver is coming from here.

2434
02:31:46,880 --> 02:31:49,320
You'll see that. That's
why we always have color.

2435
02:31:49,720 --> 02:31:52,320
Can you see all of this driver right
there?

2436
02:31:52,320 --> 02:31:54,920
Driver instance where we have used
this is in purple,

2437
02:31:55,320 --> 02:31:56,560
this one also in purple.

2438
02:31:56,560 --> 02:32:00,080
But this driver, when I'm using
this driver, are not purple.

2439
02:32:00,080 --> 02:32:02,280
This driver, white, white.

2440
02:32:02,280 --> 02:32:07,440
Because my instance variable, it should be
applicable throughout all the methods.

2441
02:32:07,440 --> 02:32:10,000
But this method
is calling for this local one.

2442
02:32:10,480 --> 02:32:14,520
So what I have to do,
I have to remove this driver from here.

2443
02:32:14,560 --> 02:32:20,280
Now see it
colors changed to purple, right?

2444
02:32:20,800 --> 02:32:21,800
So intentionally.

2445
02:32:21,800 --> 02:32:24,840
Remember, if you are asking
why I'm writing on line number

2446
02:32:24,840 --> 02:32:26,560
ten with Driver Driver.

2447
02:32:26,560 --> 02:32:28,640
That was the reason I was writing.

2448
02:32:28,640 --> 02:32:32,160
But then I decided show you
this error first and then write it.

2449
02:32:32,600 --> 02:32:34,600
Now I remove this red driver.

2450
02:32:34,600 --> 02:32:36,840
Driver right this time.

2451
02:32:37,400 --> 02:32:39,720
This time
let's go ahead and try to run this

2452
02:32:56,280 --> 02:32:58,200
yet. And I will.

2453
02:32:58,200 --> 02:33:00,200
I will share the complete code.
Don't worry.

2454
02:33:00,200 --> 02:33:14,920
I will give you the code.

2455
02:33:14,920 --> 02:33:17,320
Can you see if this case is valid?

2456
02:33:17,320 --> 02:33:26,200
Advised to take test one plus one.

2457
02:33:26,200 --> 02:33:27,240
All right.

2458
02:33:27,520 --> 02:33:28,840
Andre already sent the code.

2459
02:33:28,840 --> 02:33:30,680
Thank you so much entry.

2460
02:33:31,080 --> 02:33:36,960
So. So, guys,

2461
02:33:37,240 --> 02:33:39,600
everyone sees this code

2462
02:33:44,480 --> 02:33:46,920
working fine, but we want

2463
02:33:52,680 --> 02:33:53,280
experience.

2464
02:33:53,280 --> 02:33:54,480
Where are you

2465
02:33:58,440 --> 02:33:59,640
working for everyone or not?

2466
02:33:59,640 --> 02:34:07,480
Guys?

2467
02:34:07,480 --> 02:34:09,160
Okay. Any. Any.

2468
02:34:09,160 --> 02:34:10,840
You got the code in Detroit, right?

2469
02:34:10,840 --> 02:34:16,560
So what you can simply do is
you can take this code.

2470
02:34:16,560 --> 02:34:18,000
Just take this code.

2471
02:34:18,000 --> 02:34:21,000
Right? Use it. And No, that's fine.

2472
02:34:21,000 --> 02:34:21,600
That's fine.

2473
02:34:21,600 --> 02:34:25,120
I really appreciate that you don't
want to copy just for your difference.

2474
02:34:25,120 --> 02:34:31,560
You can take this code.

2475
02:34:31,560 --> 02:34:32,880
All right, I'll be fine.

2476
02:34:32,880 --> 02:34:36,120
So we don't need web driver.

2477
02:34:36,240 --> 02:34:39,120
So that part
we have not reached that point yet.

2478
02:34:39,120 --> 02:34:41,800
Great.

2479
02:34:41,800 --> 02:34:43,160
And next, what I am seeing.

2480
02:34:44,120 --> 02:34:46,120
You don't need to copy paste the code.

2481
02:34:46,120 --> 02:34:48,360
Just copy this code for your difference.

2482
02:34:48,520 --> 02:34:49,320
Right.

2483
02:34:49,320 --> 02:34:52,320
Whenever you read the code,
you can simply see this code.

2484
02:34:52,320 --> 02:34:54,360
All right. This is the code I am writing.

2485
02:34:54,480 --> 02:34:56,600
And in this code,
if I'm having any mistake,

2486
02:34:56,600 --> 02:34:58,720
I can check this as a difference
from that code.

2487
02:34:58,720 --> 02:34:59,600
That's it.

2488
02:34:59,600 --> 02:35:03,000
I'm not asking you to copy
paste it and never, ever advise

2489
02:35:03,000 --> 02:35:04,320
anyone to do this thing.

2490
02:35:04,320 --> 02:35:08,240
Okay, so Edwin, there
we will not use this web driver.

2491
02:35:08,560 --> 02:35:11,200
That part will come later in our later
sessions.

2492
02:35:11,200 --> 02:35:19,800
Not now.

2493
02:35:19,800 --> 02:35:22,200
All right, fine.

2494
02:35:22,200 --> 02:35:24,440
So, guys, so far, so good.

2495
02:35:24,440 --> 02:35:27,440
Task one,
what we did here is correct or not

2496
02:35:27,560 --> 02:35:28,920
for everyone

2497
02:35:45,080 --> 02:35:47,080
right now,

2498
02:35:47,080 --> 02:35:50,520
if we saw test
case is invalid, it will show

2499
02:35:51,680 --> 02:35:55,320
that we passed.

2500
02:35:55,320 --> 02:35:59,560
That part will come later strategy
when we will discuss about solutions.

2501
02:35:59,560 --> 02:36:01,600
This is the reason why
we will use our session

2502
02:36:03,360 --> 02:36:05,440
after method code this point.

2503
02:36:05,440 --> 02:36:08,520
So there you can see
this is the code for automatic.

2504
02:36:08,520 --> 02:36:11,440
You can simply write
it is just one nine in the automatic.

2505
02:36:11,920 --> 02:36:33,320
You can write it from here.

2506
02:36:33,320 --> 02:36:35,640
I think we have written so much code.

2507
02:36:35,640 --> 02:36:39,520
So this prudence I'm not able to follow
it seems right.

2508
02:36:41,120 --> 02:36:43,520
But still it ought to be going

2509
02:36:43,760 --> 02:36:50,280
with a gentle pace, guys,
so everyone can cope up with this.

2510
02:36:50,280 --> 02:37:10,360
The pace is fine, right? But

2511
02:37:14,200 --> 02:37:15,000
All right,

2512
02:37:15,240 --> 02:37:51,160
let me do one thing here.

2513
02:37:51,160 --> 02:37:55,200
Right.

2514
02:37:55,200 --> 02:38:08,560
I'm going to create a new repository here.

2515
02:38:08,560 --> 02:38:19,400
Fine.

2516
02:38:19,400 --> 02:38:21,080
I'm going to push this code. Right? Right.

2517
02:38:21,080 --> 02:38:25,520
So whatever the code we have written here,
this would be good for all of you.

2518
02:38:25,800 --> 02:38:29,000
Okay, You can get this code

2519
02:38:29,000 --> 02:39:14,720
from the repository.

2520
02:39:14,720 --> 02:39:15,520
Yeah, Yeah, sure.

2521
02:39:15,520 --> 02:39:18,480
And so that's why
I'm committing the code, right?

2522
02:39:18,640 --> 02:39:22,240
So once I committed, I mentioned this link
with all of you guys, so you

2523
02:39:22,240 --> 02:39:22,960
can use this

2524
02:39:25,720 --> 02:40:02,000
to you guys.

2525
02:40:02,160 --> 02:40:04,800
Code is available here right

2526
02:40:05,640 --> 02:40:07,200
inside this you go.

2527
02:40:07,200 --> 02:40:09,400
You will find this code right

2528
02:40:10,680 --> 02:40:13,920
now let me give you this URL
with all of you

2529
02:40:46,480 --> 02:40:46,800
guys.

2530
02:40:46,800 --> 02:40:49,800
Got it.

2531
02:40:49,800 --> 02:40:51,600
We have committed this code so far.

2532
02:40:51,600 --> 02:40:54,560
Whatever the code we have written,
it has been committed.

2533
02:40:54,560 --> 02:40:57,040
This link has been shared with all of you.

2534
02:40:57,360 --> 02:40:59,760
Get this code in your machine try to run.

2535
02:41:00,240 --> 02:41:01,120
All right.

2536
02:41:01,640 --> 02:41:02,880
Any for your reference.

2537
02:41:02,880 --> 02:41:04,760
Also the code is available.

2538
02:41:04,760 --> 02:41:08,520
We can use the same code.

2539
02:41:08,520 --> 02:41:16,520
All right, guys,
do you need a break from the public?

2540
02:41:17,280 --> 02:41:20,440
Because there the weather
is completely different for all.

2541
02:41:20,640 --> 02:41:24,520
So she might be feeling sleepy today.

2542
02:41:24,520 --> 02:41:31,920
All right, guys, Fine.

2543
02:41:32,160 --> 02:41:36,120
So let's take a break and
then we'll meet again after 20 minutes.

2544
02:41:36,240 --> 02:41:37,480
20 minutes would be okay.

2545
02:41:38,560 --> 02:41:39,000
Yeah.

2546
02:41:39,000 --> 02:41:41,240
If lunch break, I can totally understand.

2547
02:41:41,240 --> 02:41:44,200
It's lunchtime.

2548
02:41:44,200 --> 02:41:46,360
Any You don't need to. Don't worry, I.

2549
02:41:46,480 --> 02:41:48,560
Can we take my code in the repository?

2550
02:41:48,680 --> 02:41:52,200
Still, if you facing the issue
we are available in this intake support.

2551
02:41:52,560 --> 02:41:53,320
Right.

2552
02:41:53,400 --> 02:41:55,680
We give you support over there also.

2553
02:41:55,680 --> 02:41:59,920
Still, if you're not able to find anything
right after this, we'll do a quick zoom

2554
02:41:59,920 --> 02:42:02,280
in on that. Zoom
with all all of your credits.

2555
02:42:02,280 --> 02:42:03,240
One for you.

2556
02:42:03,240 --> 02:42:14,280
Okay.

2557
02:42:14,280 --> 02:42:15,680
All right.

2558
02:42:15,840 --> 02:42:17,120
So let's connect.

2559
02:42:17,120 --> 02:42:20,080
It's 20 to 36 here. 20 to 36.

2560
02:42:20,080 --> 02:42:26,120
Let's connect after 20 minutes.

2561
02:42:26,120 --> 02:42:26,600
Fine.

2562
02:42:27,160 --> 02:42:31,440
So before break,
we have seen log in test, right?

2563
02:42:31,440 --> 02:42:33,640
We have executed it all.

2564
02:42:33,640 --> 02:42:36,440
We have used annotations at the request.

2565
02:42:36,800 --> 02:42:39,000
That is obviously the main one

2566
02:42:39,520 --> 02:42:43,520
through which we execute our test case
and then iterated before test

2567
02:42:46,200 --> 02:42:48,760
and that
it before test it at the rate of greatest.

2568
02:42:49,320 --> 02:42:52,800
All right
so the enter it before method and edit

2569
02:42:52,880 --> 02:42:55,120
after method which executes as a pre

2570
02:42:56,120 --> 02:42:58,360
and post condition.

2571
02:42:58,360 --> 02:42:59,080
Correct.

2572
02:42:59,280 --> 02:43:01,040
We have executed this thing.

2573
02:43:01,040 --> 02:43:06,160
Now let's move further and let's talk
about the another annotation.

2574
02:43:06,400 --> 02:43:09,240
Right the another annotation
which we will be using here.

2575
02:43:10,120 --> 02:43:15,520
Fine.

2576
02:43:15,520 --> 02:43:18,960
So now now we have seen

2577
02:43:19,480 --> 02:43:21,360
this is our main

2578
02:43:27,360 --> 02:43:29,280
before method

2579
02:43:32,280 --> 02:43:33,000
Optimizer.

2580
02:43:33,000 --> 02:43:33,600
Right?

2581
02:43:33,680 --> 02:43:35,800
I'm going to write another one called

2582
02:43:40,960 --> 02:43:43,440
Before class

2583
02:43:44,040 --> 02:43:48,560
and After class

2584
02:43:49,920 --> 02:43:50,480
right

2585
02:43:52,440 --> 02:43:54,040
now. Tell me guys,

2586
02:43:54,040 --> 02:43:56,600
this is my execution flow rate.

2587
02:43:57,880 --> 02:44:00,480
At the request we have executed

2588
02:44:01,920 --> 02:44:04,160
before, method after method.

2589
02:44:04,160 --> 02:44:05,240
We are done

2590
02:44:05,760 --> 02:44:08,280
before class and after class.

2591
02:44:08,280 --> 02:44:12,080
We are going to focus on this part
before class and upper class.

2592
02:44:12,600 --> 02:44:14,400
Why this do annotations guys,

2593
02:44:16,200 --> 02:44:16,880
Can you think of

2594
02:44:16,880 --> 02:44:19,920
any practical example
or any practical explanation

2595
02:44:19,920 --> 02:44:32,080
why we should use
before class in upper class?

2596
02:44:32,080 --> 02:44:35,160
So this

2597
02:44:36,360 --> 02:44:42,880
can you give me.

2598
02:44:42,880 --> 02:44:44,320
All right, fine.

2599
02:44:44,840 --> 02:44:47,160
Let me give you one example.

2600
02:44:47,160 --> 02:44:48,920
Right.

2601
02:44:48,920 --> 02:44:52,560
You have, let's say, 20 or 30 test cases
and they

2602
02:44:54,600 --> 02:44:55,880
you want to use

2603
02:44:55,880 --> 02:44:59,920
some properties,
You want to use some data.

2604
02:45:00,280 --> 02:45:01,000
Right.

2605
02:45:01,000 --> 02:45:04,320
And you put the data inside one file.

2606
02:45:04,320 --> 02:45:08,880
It could be your file,
your JSON file, your Excel fight.

2607
02:45:08,880 --> 02:45:10,920
It could be anything

2608
02:45:11,120 --> 02:45:13,480
or even if it is,
your third property is fine.

2609
02:45:13,480 --> 02:45:15,840
Also Fine to date some properties

2610
02:45:17,040 --> 02:45:18,520
in your all that test.

2611
02:45:18,520 --> 02:45:19,560
Get this.

2612
02:45:20,400 --> 02:45:22,240
Yeah, it's been great to clear JVM,

2613
02:45:22,240 --> 02:45:25,960
but this is not a part of our testing,
right?

2614
02:45:26,040 --> 02:45:28,680
We can use it in a precondition. Now

2615
02:45:29,920 --> 02:45:32,120
thinking a think of this part, right?

2616
02:45:32,120 --> 02:45:36,000
What I see in your test case
or your 20 test case

2617
02:45:36,000 --> 02:45:38,600
or in your 30 test cases, right.

2618
02:45:39,200 --> 02:45:41,640
You have to redo data from one fight,

2619
02:45:42,240 --> 02:45:45,720
correct.

2620
02:45:45,720 --> 02:45:47,440
You are going to read the data.

2621
02:45:47,440 --> 02:45:50,360
So are you going to read this file again
and again?

2622
02:45:50,480 --> 02:45:53,760
All of your test gives us
no what you would do.

2623
02:45:54,120 --> 02:45:56,840
You will read it at one time, right?

2624
02:45:57,240 --> 02:45:59,120
That one will be executed.

2625
02:45:59,120 --> 02:46:03,720
It will be utilized
throughout your classes for all the test,

2626
02:46:03,720 --> 02:46:06,840
and then you will close it
in your after class situation.

2627
02:46:07,600 --> 02:46:11,480
So the situation, the requirement
which you need

2628
02:46:11,760 --> 02:46:16,000
just one time in your class
for all the test cases

2629
02:46:16,200 --> 02:46:20,520
before even starting the execution
of the test cases of your class,

2630
02:46:20,720 --> 02:46:24,000
you put that requirement in your
before class

2631
02:46:24,400 --> 02:46:27,200
and then you close
that requirement in your upper class.

2632
02:46:28,080 --> 02:46:28,360
Here.

2633
02:46:29,840 --> 02:46:30,480
Now let me

2634
02:46:30,480 --> 02:46:32,680
show you here the example of this.

2635
02:46:34,360 --> 02:46:36,160
If I come here

2636
02:46:37,000 --> 02:46:39,080
in my pre and post condition, I'm

2637
02:46:39,080 --> 02:46:41,640
going to write here at the rate

2638
02:46:43,440 --> 02:46:46,360
before class point

2639
02:46:46,360 --> 02:46:49,200
probably right

2640
02:46:52,000 --> 02:46:53,880
before class,

2641
02:46:53,880 --> 02:46:56,520
I'm going to write I am

2642
02:46:58,080 --> 02:47:00,200
before class.

2643
02:47:01,920 --> 02:47:04,840
And then another one I am using
is the rate

2644
02:47:06,800 --> 02:47:09,960
after class.

2645
02:47:09,960 --> 02:47:13,680
The public void

2646
02:47:18,600 --> 02:47:20,120
after class.

2647
02:47:20,120 --> 02:47:25,120
I am optiplex.

2648
02:47:25,120 --> 02:47:28,200
Now guys, tell me this before class

2649
02:47:28,560 --> 02:47:31,800
and after class,
how many time it will be executed

2650
02:47:32,960 --> 02:47:35,600
before, after method, before every test

2651
02:47:35,600 --> 02:47:39,480
and after every test it executed

2652
02:47:40,280 --> 02:47:41,600
one each.

2653
02:47:41,680 --> 02:47:42,400
All right.

2654
02:47:42,400 --> 02:47:43,240
Why one each?

2655
02:47:43,240 --> 02:47:46,040
Because we are executing it.

2656
02:47:46,200 --> 02:47:49,560
We are executing it on a class level.

2657
02:47:49,560 --> 02:47:54,800
And then it before class means before
starting the execution of actual class

2658
02:47:55,360 --> 02:47:59,200
and after class means after completion
of the execution of all test.

2659
02:47:59,200 --> 02:48:02,320
Because it's available inside that class,
it will execute.

2660
02:48:02,920 --> 02:48:04,960
Now, let me run this particular

2661
02:48:05,720 --> 02:48:22,760
code.

2662
02:48:22,760 --> 02:48:25,520
Fine.

2663
02:48:25,520 --> 02:48:27,720
It gives us three test cases.

2664
02:48:27,720 --> 02:48:28,960
Why? Because I have

2665
02:48:30,240 --> 02:48:31,600
one, two and three.

2666
02:48:31,600 --> 02:48:32,920
That is fine.

2667
02:48:33,480 --> 02:48:35,680
But if you see here

2668
02:48:41,560 --> 02:48:42,840
now, if you'll see here,

2669
02:48:42,840 --> 02:48:45,920
it says first execute I before class,

2670
02:48:47,000 --> 02:48:49,080
then I'm before my

2671
02:48:49,080 --> 02:48:52,360
then first class
first two method means my first test,

2672
02:48:53,200 --> 02:48:56,520
then after my third, then again
before method.

2673
02:48:57,960 --> 02:49:01,160
Right then second method.

2674
02:49:01,160 --> 02:49:04,600
So the after method before method,
second method and then after method.

2675
02:49:05,000 --> 02:49:05,640
Right.

2676
02:49:06,120 --> 02:49:10,120
If if we have to see this, the execution
flow.

2677
02:49:10,120 --> 02:49:10,920
Right.

2678
02:49:10,920 --> 02:49:15,440
Let me give you this execution
flow from here.

2679
02:49:15,440 --> 02:49:16,240
First one.

2680
02:49:16,240 --> 02:49:18,360
This will execute,

2681
02:49:18,360 --> 02:49:20,280
then this will execute.

2682
02:49:20,280 --> 02:49:22,560
Then you'll actually test execute. Right.

2683
02:49:22,800 --> 02:49:25,640
So one, two three

2684
02:49:26,520 --> 02:49:28,920
after this, After days

2685
02:49:29,600 --> 02:49:32,560
for one after method, we execute, then

2686
02:49:33,240 --> 02:49:35,480
fifth one again before, method execute

2687
02:49:36,440 --> 02:49:40,840
six the one, this one execute
7 to 1 after method execute,

2688
02:49:41,800 --> 02:49:43,880
then add the one again before method.

2689
02:49:43,880 --> 02:49:47,400
Execute mind one this test execute

2690
02:49:48,360 --> 02:49:52,480
end one this after method execute
and as the last statement

2691
02:49:52,520 --> 02:49:55,840
after class will execute
as the 11th is technique.

2692
02:49:56,360 --> 02:49:59,880
All right,
now let me show you all these elements.

2693
02:49:59,880 --> 02:50:01,200
Take me to

2694
02:50:01,800 --> 02:50:04,200
the first one before class

2695
02:50:04,560 --> 02:50:08,160
second one before method, third
one first method,

2696
02:50:08,920 --> 02:50:13,560
then fourth one again after method.

2697
02:50:13,560 --> 02:50:14,480
Yes. Correct.

2698
02:50:14,480 --> 02:50:14,960
Correct.

2699
02:50:14,960 --> 02:50:18,040
Order doesn't matter
because the annotation defines

2700
02:50:18,560 --> 02:50:21,120
the annotation states before class.

2701
02:50:21,360 --> 02:50:24,960
It is but obvious that will execute
before the class

2702
02:50:25,280 --> 02:50:28,000
if another patient sees it after class.

2703
02:50:28,280 --> 02:50:31,560
It is but obvious that yes,
it will execute after the class.

2704
02:50:31,560 --> 02:50:34,480
So you'll see three, three, three and two.

2705
02:50:34,560 --> 02:50:36,480
It means total 11 strict lengths.

2706
02:50:36,480 --> 02:50:40,400
Wait for three days
to get this three preconditions

2707
02:50:40,400 --> 02:50:42,200
for the red before three can be generated.

2708
02:50:42,200 --> 02:50:47,760
Right after method
33391 time ready for class one time.

2709
02:50:47,960 --> 02:50:50,600
I didn't get how to after class methods

2710
02:50:55,080 --> 02:50:57,080
after class method where

2711
02:50:57,080 --> 02:51:00,320
after class there is nothing like

2712
02:51:06,960 --> 02:51:10,720
as you're saying,
I didn't get how to after class method

2713
02:51:11,040 --> 02:51:18,040
so there is nothing after class
method right.

2714
02:51:18,040 --> 02:51:20,960
Guys, are you understanding this before
closing did

2715
02:51:21,080 --> 02:51:23,280
after class everyone

2716
02:51:23,960 --> 02:51:27,560
there are two after class method

2717
02:51:28,040 --> 02:51:29,880
two after class method just one.

2718
02:51:29,880 --> 02:51:37,080
I have an output also I have just one.

2719
02:51:37,080 --> 02:51:37,920
I am after class.

2720
02:51:37,920 --> 02:51:44,920
Very second one.

2721
02:51:44,920 --> 02:51:46,000
Can you see that?

2722
02:51:46,000 --> 02:51:48,960
I have two after class method

2723
02:51:50,080 --> 02:51:52,160
I don't see anywhere.

2724
02:51:52,160 --> 02:51:55,400
It's just after method,

2725
02:51:55,400 --> 02:51:59,680
before method, after class
and before class.

2726
02:51:59,680 --> 02:52:07,800
There is no two methods.

2727
02:52:07,800 --> 02:52:10,520
Is there any confusion on

2728
02:52:14,360 --> 02:52:18,000
where where you're getting confused? Tell

2729
02:52:20,040 --> 02:52:48,920
sure this is your console.

2730
02:52:48,920 --> 02:52:53,520
Yes it is thing I am after method
and second is I am after class.

2731
02:52:53,880 --> 02:52:55,320
These are two different things.

2732
02:52:55,320 --> 02:52:59,280
Right?

2733
02:52:59,280 --> 02:52:59,760
Sure. And

2734
02:53:08,080 --> 02:53:09,040
there you go.

2735
02:53:09,040 --> 02:53:10,720
This is the code

2736
02:53:18,960 --> 02:53:19,320
that I can

2737
02:53:19,320 --> 02:53:30,360
make. So

2738
02:53:31,400 --> 02:53:46,320
is it clear to everyone? No.

2739
02:53:46,320 --> 02:53:51,360
Great Lakes proceed further than fine.

2740
02:53:52,080 --> 02:53:55,880
So don't think about before testing
before switched as of now.

2741
02:53:56,480 --> 02:53:57,240
Right.

2742
02:53:57,440 --> 02:54:01,320
We will discuss this later.

2743
02:54:01,320 --> 02:54:03,520
Execution order we have already discussed.

2744
02:54:03,840 --> 02:54:04,600
Right.

2745
02:54:06,200 --> 02:54:07,240
This execution.

2746
02:54:07,240 --> 02:54:09,360
I already defined all those 11

2747
02:54:10,400 --> 02:54:14,480
where which method will print
the witness statement before class,

2748
02:54:14,480 --> 02:54:18,680
after class, before method after method
and the request annotations.

2749
02:54:18,960 --> 02:54:21,560
Right
all the 11 statements we have gone through

2750
02:54:21,760 --> 02:54:24,920
along with the execution order.

2751
02:54:24,920 --> 02:54:26,640
Now, here

2752
02:54:27,280 --> 02:54:30,000
it says this class based

2753
02:54:30,000 --> 02:54:33,400
on a class label
we see before class, after class nine,

2754
02:54:34,240 --> 02:54:35,720
before group after group.

2755
02:54:35,720 --> 02:54:40,320
We are not going to use this right now
because there is one more part

2756
02:54:40,320 --> 02:54:44,760
which we need to learn it first and then
we will be able to implement this toolbar.

2757
02:54:45,080 --> 02:54:47,720
So I'm not going to you anything right now
about this

2758
02:54:48,320 --> 02:54:51,920
before method after method
we have implemented at the request.

2759
02:54:51,920 --> 02:54:54,920
We are done with.

2760
02:54:54,920 --> 02:54:58,200
Now there's this test
and symbol based annotation.

2761
02:54:58,440 --> 02:55:03,520
So before we week after week before test
after test, when we will create this test

2762
02:55:03,520 --> 02:55:07,320
and do not take file,
then I will tell you how we used before.

2763
02:55:07,320 --> 02:55:12,400
So we end up this week quite okay.

2764
02:55:12,400 --> 02:55:16,640
Task is executing different instability
test and annotations.

2765
02:55:16,640 --> 02:55:19,960
Create class
that we'll have before and after class.

2766
02:55:19,960 --> 02:55:20,520
Annotation

2767
02:55:21,520 --> 02:55:22,240
before, after

2768
02:55:22,240 --> 02:55:26,160
method, before after class
and to my textbook test annotation,

2769
02:55:26,160 --> 02:55:47,040
let me give you
this task and the homework.

2770
02:55:47,040 --> 02:55:52,040
Now it's just best guess, but I think
from testing include the following steps.

2771
02:55:52,040 --> 02:55:54,560
So this is what we did guys.

2772
02:55:54,560 --> 02:55:55,360
What we did.

2773
02:55:55,360 --> 02:55:58,200
We took one user story
from the sprint backlog.

2774
02:55:58,240 --> 02:56:00,360
XS Right. The business logic of test.

2775
02:56:01,200 --> 02:56:05,040
So we written the business logic
of the test as an admin user.

2776
02:56:05,440 --> 02:56:08,360
User should be able to log in to the HRA

2777
02:56:08,600 --> 02:56:11,360
application with valid credentials.

2778
02:56:11,360 --> 02:56:12,240
Right.

2779
02:56:12,360 --> 02:56:16,800
This is the business logic insert
test in the annotations in your test.

2780
02:56:16,800 --> 02:56:19,120
We have used this annotation as well.

2781
02:56:19,120 --> 02:56:23,160
Added annotation information
like classes, methods and modify it.

2782
02:56:23,400 --> 02:56:26,480
This is not we are going to do right now
and execute test

2783
02:56:26,480 --> 02:56:29,720
and have executed it.

2784
02:56:29,720 --> 02:56:31,920
This is what we did right.

2785
02:56:32,080 --> 02:56:36,240
Your first tangible driver test case here.

2786
02:56:36,840 --> 02:56:39,240
This is what we did.

2787
02:56:39,240 --> 02:56:41,640
This is the part
you guys have to work upon.

2788
02:56:42,080 --> 02:56:43,400
So let me give you their task.

2789
02:56:43,400 --> 02:56:53,320
Also.

2790
02:56:53,320 --> 02:56:53,880
And I guess

2791
02:57:04,120 --> 02:57:08,400
I'll write like, fine.

2792
02:57:09,120 --> 02:57:13,040
So now
let's talk about a new topic, right?

2793
02:57:13,040 --> 02:57:19,080
The topic is test and attributes.

2794
02:57:19,080 --> 02:57:21,320
Now we are going deep dive, right?

2795
02:57:21,520 --> 02:57:24,440
We are going deep
dive into the concepts of this synergy.

2796
02:57:25,320 --> 02:57:30,840
We are working point two attributes now.

2797
02:57:30,840 --> 02:57:31,280
Fine.

2798
02:57:31,280 --> 02:57:36,640
So the first one, the first one
which I want to take is priority, right?

2799
02:57:36,680 --> 02:57:38,080
This is my first aggregate.

2800
02:57:38,080 --> 02:57:39,800
I want to take you

2801
02:57:39,800 --> 02:57:43,200
so many attributes we have,
but we will be taking them one by one.

2802
02:57:43,200 --> 02:57:43,800
Right?

2803
02:57:44,240 --> 02:57:45,160
So the first one

2804
02:57:45,160 --> 02:57:49,360
which I would be taking here is,
like I said, it is priority basis.

2805
02:57:49,360 --> 02:57:50,040
Okay.

2806
02:57:50,400 --> 02:57:54,600
So I'm going to start on priority.

2807
02:57:54,600 --> 02:57:58,240
Let me create one class.

2808
02:57:58,240 --> 02:58:01,440
My class would be its priority based.

2809
02:58:01,440 --> 02:58:08,840
So I'm going to create a
new class, existing priority

2810
02:58:14,040 --> 02:58:17,640
or simple priority

2811
02:58:18,640 --> 02:58:19,560
attribute.

2812
02:58:19,560 --> 02:58:26,040
Fine.

2813
02:58:26,040 --> 02:58:28,480
I'm going to use the priority one.

2814
02:58:28,480 --> 02:58:46,280
Now, we have seen.

2815
02:58:46,280 --> 02:58:56,600
Okay, this is my best guess.

2816
02:58:56,600 --> 02:58:58,960
Let's say I am writing public void.

2817
02:58:58,960 --> 02:59:03,480
My log

2818
02:59:03,880 --> 02:59:08,880
in method of

2819
02:59:10,680 --> 02:59:13,040
I am not getting method.

2820
02:59:14,480 --> 02:59:17,240
I'm going to create
another method called the request.

2821
02:59:18,360 --> 02:59:21,120
This method name would be public void

2822
02:59:28,960 --> 02:59:30,240
launch browser my third.

2823
02:59:30,240 --> 02:59:33,560
So I am writing. I am

2824
02:59:34,680 --> 02:59:35,880
launch browser.

2825
02:59:35,880 --> 02:59:36,720
Right?

2826
02:59:36,920 --> 02:59:39,600
And then I'm writing again and the request

2827
02:59:40,920 --> 02:59:43,920
public void

2828
02:59:48,200 --> 02:59:51,760
get you wanted and take

2829
02:59:53,160 --> 02:59:56,520
and maybe

2830
02:59:56,520 --> 02:59:59,960
get your ID.

2831
02:59:59,960 --> 03:00:03,720
Another method
I I'm writing is public void

2832
03:00:14,080 --> 03:00:15,120
Jones browser

2833
03:00:15,120 --> 03:00:21,160
right?

2834
03:00:21,160 --> 03:00:21,720
Right.

2835
03:00:23,280 --> 03:00:25,440
These are the metrics I have written.

2836
03:00:25,440 --> 03:00:26,880
All right.

2837
03:00:26,880 --> 03:00:28,960
Now if you see

2838
03:00:29,000 --> 03:00:31,880
Wall Street says log in,
then it says launch browser.

2839
03:00:31,880 --> 03:00:34,800
Then it says navigate.
You are then exist closed browser.

2840
03:00:36,000 --> 03:00:38,160
If I look the flow,

2841
03:00:38,160 --> 03:00:40,920
I don't think that this flow is cutting,
right?

2842
03:00:41,560 --> 03:00:43,440
I'm not able to log in first.

2843
03:00:43,440 --> 03:00:46,720
First,
I have to launch my browser and then it

2844
03:00:46,720 --> 03:00:52,760
goes, Hello.

2845
03:00:52,760 --> 03:00:53,360
Right.

2846
03:00:54,040 --> 03:00:56,880
I see here
something is wrong with the flow.

2847
03:00:57,560 --> 03:00:59,920
I have to first launch my browser.

2848
03:01:00,000 --> 03:01:02,880
This should be my first one.

2849
03:01:02,880 --> 03:01:06,680
So if I say this should be my first one,
what I have to write DFC.

2850
03:01:07,520 --> 03:01:09,280
I have to right now.

2851
03:01:09,280 --> 03:01:10,680
People were asking right?

2852
03:01:10,680 --> 03:01:15,920
Why we need this parentheses earlier
because we were not passing any attribute.

2853
03:01:16,200 --> 03:01:17,640
We didn't use parentheses.

2854
03:01:17,640 --> 03:01:19,280
That is fine here.

2855
03:01:19,280 --> 03:01:21,200
I have to use parentheses.

2856
03:01:21,200 --> 03:01:25,880
I'm going to provide one executed
and attributes is priority.

2857
03:01:26,640 --> 03:01:31,400
So let's say I want to do one by
because I want to execute that enforced.

2858
03:01:32,520 --> 03:01:33,240
Fine.

2859
03:01:33,520 --> 03:01:35,560
Then navigate the URL is the second one.

2860
03:01:35,560 --> 03:01:37,200
So I'm going to write

2861
03:01:38,120 --> 03:01:41,360
priority is equals to do

2862
03:01:41,560 --> 03:01:42,920
or launching the

2863
03:01:42,920 --> 03:01:46,120
you are in I'm going to write

2864
03:01:46,120 --> 03:01:49,280
priority is equals to three.

2865
03:01:49,280 --> 03:01:52,920
And then for closing the browser,
I'm going to write priorities

2866
03:01:52,960 --> 03:01:54,600
equals to for

2867
03:01:57,760 --> 03:02:01,120
now, see your alphabetical order.

2868
03:02:01,680 --> 03:02:05,520
Yes. Benji doesn't care

2869
03:02:05,680 --> 03:02:10,400
if it comes to your priority part
by default,

2870
03:02:10,680 --> 03:02:14,400
the priority of every single method
is zero

2871
03:02:15,480 --> 03:02:17,760
by default, every single

2872
03:02:17,760 --> 03:02:20,240
the request annotation rate,
annotated method.

2873
03:02:20,520 --> 03:02:24,800
Every single method has, by default
zero priority.

2874
03:02:24,800 --> 03:02:26,880
It means what it executes

2875
03:02:26,880 --> 03:02:30,280
not based on the priority,
based on the alphabetical order.

2876
03:02:30,960 --> 03:02:31,640
Right.

2877
03:02:31,640 --> 03:02:36,120
If every single one has the same priority,
then how fast and you will decide

2878
03:02:36,360 --> 03:02:39,640
which one we should execute first,
which one we should execute later.

2879
03:02:40,080 --> 03:02:43,240
Write it based on only alphabetical order.

2880
03:02:43,560 --> 03:02:45,160
Now, alphabetic order is gone.

2881
03:02:46,200 --> 03:02:47,720
No other order is gone, right?

2882
03:02:47,720 --> 03:02:50,040
Not that order exist anymore. Why?

2883
03:02:50,320 --> 03:02:53,040
Doesn't matter whether you write
your script or your method.

2884
03:02:53,040 --> 03:02:55,480
Victim place If you want to execute it.

2885
03:02:55,480 --> 03:02:57,880
Good. First place simply prioritize it.

2886
03:02:58,560 --> 03:02:59,280
Right.

2887
03:02:59,360 --> 03:03:03,720
If I'm going to prioritize
and then I am going to run this code,

2888
03:03:03,720 --> 03:03:06,080
see what would happen then right

2889
03:03:38,480 --> 03:03:39,560
now. See

2890
03:03:40,680 --> 03:03:44,080
it execute first launch browser method.

2891
03:03:45,000 --> 03:03:45,760
Right.

2892
03:03:46,360 --> 03:03:48,880
So the priority is for launch browser.

2893
03:03:49,680 --> 03:03:51,720
Then it executes navigate you on

2894
03:03:52,760 --> 03:03:54,640
priority to its navigate.

2895
03:03:54,640 --> 03:03:57,520
You want it,
then it executes log in method.

2896
03:03:58,680 --> 03:04:01,200
You'll see priority
three is log in method.

2897
03:04:02,760 --> 03:04:04,960
Now it's this close browser,

2898
03:04:04,960 --> 03:04:08,480
so you'll see closed
browser is the priority for correct

2899
03:04:12,680 --> 03:04:12,960
there.

2900
03:04:12,960 --> 03:04:18,640
So we defined the flow and we execute it
according to our own priority.

2901
03:04:19,680 --> 03:04:23,120
All metrics
we can arrange, we can customize, right?

2902
03:04:23,120 --> 03:04:26,080
We can prioritize them
according to our priority

2903
03:04:26,200 --> 03:04:29,920
and in the same format,
in the same sequence, in the same order

2904
03:04:30,200 --> 03:04:34,040
testing will execute of all our methods

2905
03:04:36,680 --> 03:04:40,400
so far clear everything

2906
03:04:49,440 --> 03:04:52,560
they provide
just for five days are responding via.

2907
03:04:52,560 --> 03:04:55,920
Those are not simple.

2908
03:04:55,920 --> 03:04:56,520
Right.

2909
03:04:57,920 --> 03:04:58,480
Okay.

2910
03:04:58,480 --> 03:05:00,600
I know the class is the bigger one.

2911
03:05:00,880 --> 03:05:03,120
I can totally understand that.
And it's a weekend.

2912
03:05:03,480 --> 03:05:06,720
But again, guys, like I said,
this is a fresh beginning.

2913
03:05:07,000 --> 03:05:10,400
So many things we have to learn,
so we should spend time.

2914
03:05:10,880 --> 03:05:12,120
It's up to you guys either

2915
03:05:12,120 --> 03:05:15,600
spend five months on your learning
and then enjoy your entire

2916
03:05:16,960 --> 03:05:20,600
or five months of enjoying
and then learning your entire life.

2917
03:05:20,600 --> 03:05:27,480
It's up to you.

2918
03:05:27,480 --> 03:05:32,480
Great.

2919
03:05:32,480 --> 03:05:36,400
Just trying to figure out why I can't
import my common methods from selenium.

2920
03:05:37,440 --> 03:05:38,400
Which common method you're

2921
03:05:38,400 --> 03:05:40,120
talking about German

2922
03:05:55,880 --> 03:06:00,400
is close browser.

2923
03:06:00,400 --> 03:06:16,200
That's fine, but these eight months
will give you a lifetime joy.

2924
03:06:16,200 --> 03:06:20,280
We created common mistakes in selenium
so we don't have to manually each time.

2925
03:06:20,600 --> 03:06:25,920
Right now we are not extending
any common methods right?

2926
03:06:25,920 --> 03:06:27,920
Because I'm not using any extents.

2927
03:06:28,440 --> 03:06:30,360
You have to use extents, common methods.

2928
03:06:30,360 --> 03:06:33,000
Then only you would be able
to use them. Right?

2929
03:06:33,000 --> 03:06:34,280
Concept of inheritance.

2930
03:06:34,280 --> 03:06:41,680
Here we are not using that.

2931
03:06:41,680 --> 03:06:44,240
So here
I'm simply writing simple methods. Right?

2932
03:06:44,280 --> 03:06:46,640
These methods are not common
methods of something.

2933
03:06:46,880 --> 03:06:51,840
I am writing this method on my own
because the logic behind this is

2934
03:06:51,840 --> 03:06:54,800
I want to write these methods
just to show the priority.

2935
03:06:55,280 --> 03:06:58,440
I'm not extending any methods
or cutting any methods

2936
03:06:58,440 --> 03:07:01,800
from selling right.

2937
03:07:01,800 --> 03:07:04,160
If you are doing it, I'm not sure

2938
03:07:04,160 --> 03:07:08,080
which project you're following,
but right now I'm not doing it right.

2939
03:07:08,080 --> 03:07:10,120
So that's why I'm just keeping it simple.

2940
03:07:10,120 --> 03:07:11,520
We will definitely do it.

2941
03:07:11,520 --> 03:07:19,080
We will extend our common methods
in an upcoming part.

2942
03:07:19,080 --> 03:07:22,920
Great.

2943
03:07:22,920 --> 03:07:26,600
All right, guys.

2944
03:07:26,600 --> 03:07:32,440
So now let me give you one practical
example of priority bytes rate.

2945
03:07:32,600 --> 03:07:33,600
For example, see

2946
03:07:44,160 --> 03:07:45,560
here, let's Lexy.

2947
03:07:45,560 --> 03:07:49,200
Someone came, right?

2948
03:07:49,200 --> 03:07:50,800
Someone came and someone right.

2949
03:07:50,800 --> 03:07:51,640
One more party.

2950
03:07:51,640 --> 03:07:54,880
Great.

2951
03:07:54,880 --> 03:07:57,400
What is that? One more part.

2952
03:07:57,400 --> 03:08:01,440
Someone has written one more description.

2953
03:08:01,440 --> 03:08:01,800
Yeah.

2954
03:08:01,800 --> 03:08:07,760
And of course, short.

2955
03:08:07,760 --> 03:08:09,800
So what are we going to do now?

2956
03:08:09,800 --> 03:08:12,000
Let's say you have written
this particular class.

2957
03:08:12,160 --> 03:08:14,120
You have written all the metrics.

2958
03:08:14,120 --> 03:08:18,360
Someone came and someone has written
another method before your method.

2959
03:08:19,120 --> 03:08:22,680
So he has written Let's the Public Boy

2960
03:08:24,280 --> 03:08:25,600
validate

2961
03:08:30,600 --> 03:08:34,200
basic board page.

2962
03:08:34,200 --> 03:08:34,920
Fine.

2963
03:08:36,080 --> 03:08:38,920
Whatever the code, let's say
it would be anything

2964
03:08:39,720 --> 03:08:41,880
verifying the

2965
03:08:43,200 --> 03:08:46,840
Facebook page.

2966
03:08:46,840 --> 03:08:49,360
Now, if you see here

2967
03:08:50,040 --> 03:08:50,720
right

2968
03:08:51,240 --> 03:08:58,480
alphabetically, alphabetically, you'll see

2969
03:08:59,520 --> 03:09:01,560
this method will execute later.

2970
03:09:01,560 --> 03:09:04,160
This method will execute first, right?

2971
03:09:05,240 --> 03:09:07,200
Intimately. According to the standard.

2972
03:09:07,200 --> 03:09:10,160
According to my understanding,
what should happen is

2973
03:09:11,280 --> 03:09:15,360
first, because the before method will work
for what this test gives us.

2974
03:09:15,920 --> 03:09:18,840
So it will launch the browser,
it will launch the browser,

2975
03:09:18,880 --> 03:09:22,240
navigate the on, but then before log

2976
03:09:22,240 --> 03:09:24,400
in, it will ask for validate dashboard.

2977
03:09:25,320 --> 03:09:26,880
Right. This should not happen.

2978
03:09:26,880 --> 03:09:31,680
I want to execute my this test first
and then this test gets taken.

2979
03:09:32,000 --> 03:09:34,120
So what I would say I will see. All right.

2980
03:09:34,120 --> 03:09:37,680
Hey developer, do one thing in this test.

2981
03:09:37,680 --> 03:09:38,160
Guess is

2982
03:09:39,320 --> 03:09:40,560
whatever that is because you

2983
03:09:40,560 --> 03:09:44,880
are writing,
give them as a priority to level test.

2984
03:09:44,880 --> 03:09:47,800
Guess in the test case,
which we already have,

2985
03:09:48,160 --> 03:09:50,880
keep that test as a priority
one test gets.

2986
03:09:51,400 --> 03:09:52,360
All right

2987
03:09:52,960 --> 03:09:57,720
in this way, even if you are editing
or someone else is editing the test case

2988
03:09:57,720 --> 03:10:01,520
according to the priority
and the importance and the functionality

2989
03:10:01,760 --> 03:10:05,280
you can better take your test
because this in your DNA project this but

2990
03:10:06,480 --> 03:10:07,200
clear

2991
03:10:15,960 --> 03:10:16,560
grade.

2992
03:10:16,560 --> 03:10:21,320
So what it will do, it will again execute
your test cases based on the importance,

2993
03:10:21,320 --> 03:10:24,840
based on the criticality,
and based on the priority point.

2994
03:10:25,880 --> 03:10:30,320
Now, let's go ahead and let me create
another one, because another attribute

2995
03:10:30,320 --> 03:10:33,440
we are going to learn, I'm
going to write here is

2996
03:10:42,480 --> 03:10:43,440
another attribute

2997
03:10:43,440 --> 03:10:47,280
which I'm going to do
is enable and disable attribute.

2998
03:10:47,680 --> 03:10:48,000
Right

2999
03:10:49,080 --> 03:10:49,840
now, what is this

3000
03:10:49,840 --> 03:10:52,800
enable and disable attribute,
we need to understand this,

3001
03:10:54,000 --> 03:10:55,440
guys. See,

3002
03:10:56,360 --> 03:11:03,000
let's see, can we take this logging

3003
03:11:03,000 --> 03:11:13,360
this right.

3004
03:11:13,360 --> 03:11:15,840
Let me copy
the code from my log in test here.

3005
03:11:16,440 --> 03:11:19,040
I am writing this code here

3006
03:11:19,400 --> 03:11:24,160
by correct?

3007
03:11:24,760 --> 03:11:25,400
Correct.

3008
03:11:25,920 --> 03:11:28,160
So now see, I have

3009
03:11:29,600 --> 03:11:33,000
I don't have any priority as of now,

3010
03:11:33,000 --> 03:11:34,600
I'm simply writing my test.

3011
03:11:34,600 --> 03:11:36,640
And so it says fine.

3012
03:11:36,640 --> 03:11:39,040
Validation to validate
they support is also fine.

3013
03:11:39,920 --> 03:11:42,000
Let me take the third one third one since

3014
03:11:43,360 --> 03:11:44,560
validate

3015
03:11:45,800 --> 03:11:46,840
global right.

3016
03:11:46,840 --> 03:11:48,160
So we define

3017
03:11:51,120 --> 03:11:53,760
then another one I'm getting is let's see

3018
03:11:56,760 --> 03:11:58,920
this time validate

3019
03:12:02,720 --> 03:12:03,840
log out

3020
03:12:04,680 --> 03:12:07,760
verifying log.

3021
03:12:09,640 --> 03:12:11,680
But then me

3022
03:12:12,000 --> 03:12:14,560
from this part, right

3023
03:12:14,720 --> 03:12:17,960
You have four five days to get this right.

3024
03:12:17,960 --> 03:12:21,600
How many test kits this
you think as a part of small

3025
03:12:21,720 --> 03:12:25,360
you can execute
you have this discuses right now with you.

3026
03:12:25,360 --> 03:12:27,000
Okay.

3027
03:12:27,000 --> 03:12:30,240
You want to execute
only two or three from them

3028
03:12:31,480 --> 03:12:31,960
radius.

3029
03:12:31,960 --> 03:12:34,320
What is a smoke? Testing, basically.

3030
03:12:34,320 --> 03:12:36,120
Can somebody tell me

3031
03:12:47,120 --> 03:12:47,760
what is the smoke?

3032
03:12:47,760 --> 03:12:48,400
Testing

3033
03:12:52,600 --> 03:12:54,360
everyday routine Critical test.

3034
03:12:54,360 --> 03:12:57,320
Not on the top of my head.

3035
03:12:57,320 --> 03:12:59,160
Right.

3036
03:12:59,160 --> 03:13:00,120
Everyday routine.

3037
03:13:00,120 --> 03:13:01,760
So tell me one thing.

3038
03:13:01,760 --> 03:13:03,960
If I have tested something today,

3039
03:13:03,960 --> 03:13:10,120
why would I need to test
the same thing to model?

3040
03:13:10,120 --> 03:13:12,560
I hope you all are getting my questions
right.

3041
03:13:13,560 --> 03:13:17,440
If you think I am going fast,
do let me know.

3042
03:13:17,440 --> 03:13:20,200
If you are not understanding anything,
do let me know.

3043
03:13:20,360 --> 03:13:26,440
Otherwise, please respond.

3044
03:13:26,440 --> 03:13:29,880
It is just you know
to revise your concept, to brush up

3045
03:13:29,880 --> 03:13:45,000
your concepts.

3046
03:13:45,000 --> 03:13:45,640
Fine.

3047
03:13:45,640 --> 03:13:48,400
So guys, you don't need to write anything
from here, right?

3048
03:13:48,440 --> 03:13:49,160
From this code.

3049
03:13:49,160 --> 03:13:52,640
You don't need to write
whatever the code I am writing.

3050
03:13:52,800 --> 03:13:55,920
I've already committed in the repository
and still,

3051
03:13:56,040 --> 03:14:00,600
after completion of this, I will again
commit the same code in the repository.

3052
03:14:00,720 --> 03:14:01,560
All right.

3053
03:14:01,560 --> 03:14:04,080
So you don't need to be worried
about the code right?

3054
03:14:04,080 --> 03:14:06,440
Just listen. Everything like a story.

3055
03:14:06,440 --> 03:14:10,160
Just observe everything here you will get
in the end all the code, right?

3056
03:14:10,200 --> 03:14:12,240
As long as you understood the concept.

3057
03:14:12,240 --> 03:14:15,800
This is important.

3058
03:14:15,800 --> 03:14:19,160
We use a smoke testing to develop
the new functionality of smoke testing.

3059
03:14:20,520 --> 03:14:20,880
Correct.

3060
03:14:20,880 --> 03:14:23,960
Mike knows that basically, see

3061
03:14:25,920 --> 03:14:30,160
if your application is working
fine, You need to check every day.

3062
03:14:30,160 --> 03:14:32,720
You never know what tomorrow
brings, right?

3063
03:14:33,440 --> 03:14:34,840
You never know what tomorrow brings.

3064
03:14:34,840 --> 03:14:35,920
Get application.

3065
03:14:35,920 --> 03:14:39,080
So every day we need to check that.

3066
03:14:39,080 --> 03:14:42,600
Yes, my application is up
and it is running.

3067
03:14:42,800 --> 03:14:46,200
And the critical functionality,
for example, log in functionality,

3068
03:14:46,400 --> 03:14:50,160
low load functionality
or some other important test cases.

3069
03:14:50,160 --> 03:14:50,640
Right.

3070
03:14:50,720 --> 03:14:53,400
We need to perform
those test execution there.

3071
03:14:53,720 --> 03:14:54,720
Just to check

3072
03:14:54,720 --> 03:14:58,840
whether my application is up to the server
and it is working extremely fine.

3073
03:14:59,000 --> 03:15:00,720
So other users when come

3074
03:15:00,720 --> 03:15:04,560
and when they want to use this website,
they are able to use it.

3075
03:15:04,560 --> 03:15:08,280
They should be able to use my website
to do all of these things.

3076
03:15:08,280 --> 03:15:10,480
We perform smoke testing.

3077
03:15:10,480 --> 03:15:14,520
So obviously if you have 15, 20, 20

3078
03:15:15,000 --> 03:15:17,760
or 30 test cases in your one class,

3079
03:15:18,000 --> 03:15:20,960
you will not execute
all of them in your smoke,

3080
03:15:22,520 --> 03:15:22,840
right?

3081
03:15:22,840 --> 03:15:25,520
You will not use that is for sure
what you will do.

3082
03:15:25,520 --> 03:15:28,120
In that case,
you will execute some of them.

3083
03:15:28,640 --> 03:15:30,800
You will need some of them.

3084
03:15:30,800 --> 03:15:31,560
Right?

3085
03:15:32,880 --> 03:15:34,680
So when I say you will leave

3086
03:15:34,680 --> 03:15:37,840
some of them one be.

3087
03:15:37,840 --> 03:15:40,120
Exactly, exactly correct.

3088
03:15:40,120 --> 03:15:42,720
So one way to do this is

3089
03:15:43,040 --> 03:15:45,840
obviously you
you're not going to delete, right.

3090
03:15:45,840 --> 03:15:47,600
If I say we don't need it for now.

3091
03:15:47,600 --> 03:15:51,360
So you cannot believe that
you have to keep them as it is in there.

3092
03:15:51,360 --> 03:15:55,560
Also, we have to disable them.

3093
03:15:55,560 --> 03:16:01,240
One way to do
this is to make them disable.

3094
03:16:01,240 --> 03:16:04,880
Yeah, if we come out, then again
it is a big 80, right?

3095
03:16:05,280 --> 03:16:08,840
So we don't need to

3096
03:16:08,840 --> 03:16:12,280
execute all of them
but we need to keep them inside our code.

3097
03:16:12,520 --> 03:16:17,160
So what we can do is just in this case,
go ahead, enable whatever

3098
03:16:17,160 --> 03:16:20,560
that is because you want to execute
and disable remaining ones.

3099
03:16:20,920 --> 03:16:24,600
So for example from this for validate
they support local

3100
03:16:24,640 --> 03:16:27,600
null golden logging for validation
set here.

3101
03:16:28,320 --> 03:16:30,680
I think valid logging logo.

3102
03:16:30,720 --> 03:16:33,280
These two are the crucial one. Right?

3103
03:16:33,760 --> 03:16:36,200
Even if Noah is not available,
I can consider

3104
03:16:36,920 --> 03:16:38,400
and this is a dashboard page.

3105
03:16:38,400 --> 03:16:40,200
Also I can consider. Right.

3106
03:16:40,200 --> 03:16:42,200
So coming out fine.

3107
03:16:42,200 --> 03:16:45,560
So I will use another great day.

3108
03:16:45,560 --> 03:16:48,440
Tag is see how can I write this date?

3109
03:16:48,880 --> 03:16:50,680
I'm going to write here as

3110
03:16:57,280 --> 03:17:00,120
enabled equals to do

3111
03:17:00,680 --> 03:17:02,760
it means I want to execute this

3112
03:17:04,560 --> 03:17:08,160
enabled so

3113
03:17:09,720 --> 03:17:12,480
enable equals through right

3114
03:17:13,080 --> 03:17:17,040
by default By default every single method

3115
03:17:17,320 --> 03:17:21,120
which is I mean at the request annotation
every single method

3116
03:17:21,360 --> 03:17:24,880
at the request annotation by default
every single one is true.

3117
03:17:25,680 --> 03:17:28,760
You'll see again, I'm writing here

3118
03:17:31,440 --> 03:17:32,000
enabled

3119
03:17:32,000 --> 03:17:35,680
see by default
what it enabled is equal to two.

3120
03:17:35,680 --> 03:17:37,760
It means by default everything is true.

3121
03:17:38,200 --> 03:17:43,160
If I want to make it disable, I will write
enable is equals to false right?

3122
03:17:43,160 --> 03:17:48,760
And then I will write again to enable
is equals to false

3123
03:17:49,840 --> 03:17:53,280
let me put this one on
so as enabled is equal to false.

3124
03:17:53,920 --> 03:17:56,640
So now it's
the opposite of boolean default.

3125
03:17:57,040 --> 03:17:59,280
Correct.

3126
03:17:59,280 --> 03:18:03,480
So now you see these three
I have made false this one.

3127
03:18:03,480 --> 03:18:06,080
I made it to just one. I made it two.

3128
03:18:06,680 --> 03:18:09,840
So this before my third
and after my third will execute.

3129
03:18:09,840 --> 03:18:15,360
How many times guys, the actually this is
the next thing which we are going to do.

3130
03:18:15,360 --> 03:18:17,640
Don't worry. This is the next
thing which we are going to

3131
03:18:20,880 --> 03:18:23,800
didn't I just enable is equal to false.

3132
03:18:23,800 --> 03:18:27,240
I wrote it here,
but still I have four test.

3133
03:18:27,880 --> 03:18:31,640
So my editor before my edit after method,

3134
03:18:31,880 --> 03:18:34,960
my precondition
and post condition will execute

3135
03:18:34,960 --> 03:18:36,600
how many bytes

3136
03:18:38,720 --> 03:18:41,720
only once by

3137
03:18:44,000 --> 03:18:45,720
based going to correct?

3138
03:18:45,720 --> 03:18:46,240
Correct.

3139
03:18:46,240 --> 03:18:48,720
Because my enable test case is just one.

3140
03:18:49,920 --> 03:18:51,760
Even though I have 1000 test scores

3141
03:18:51,760 --> 03:18:55,960
as if I made nine 999 in a disabled

3142
03:18:56,600 --> 03:19:01,160
fine mind before my after
method will not work with those nine nine.

3143
03:19:01,520 --> 03:19:04,360
It will work only with the one
which is enabled, right?

3144
03:19:06,000 --> 03:19:06,880
Correct. Correct.

3145
03:19:06,880 --> 03:19:11,600
So let me go ahead and execute this part
first, enable it to say, look, see

3146
03:19:11,880 --> 03:19:52,280
how many test it's going to execute.

3147
03:19:52,280 --> 03:19:53,240
It works fine.

3148
03:19:53,240 --> 03:19:55,080
All right.

3149
03:19:55,120 --> 03:19:57,880
How many test kits is executed? Just one.

3150
03:19:59,240 --> 03:20:00,200
Why one?

3151
03:20:00,200 --> 03:20:02,480
Because only one was enabled.

3152
03:20:02,640 --> 03:20:06,040
You'll see. Right?

3153
03:20:06,040 --> 03:20:08,400
You'll see here out of all this.

3154
03:20:08,680 --> 03:20:11,400
Now I'm going to make this one also to

3155
03:20:12,480 --> 03:20:16,680
this one also to find.

3156
03:20:16,680 --> 03:20:19,760
Right? This one also true.

3157
03:20:19,760 --> 03:20:21,680
Now, tell me, guys,

3158
03:20:22,080 --> 03:20:24,360
if I have to test this here.

3159
03:20:24,360 --> 03:20:25,080
Right.

3160
03:20:25,080 --> 03:20:29,960
Obviously, my precondition and post
condition will work for both the test.

3161
03:20:30,440 --> 03:20:33,760
Right now it's up to me
which one I want to execute first.

3162
03:20:33,760 --> 03:20:36,080
Which one I want to execute second. Right.

3163
03:20:36,280 --> 03:20:39,800
So shrimp
answer to your question, generate

3164
03:20:39,880 --> 03:20:46,040
priority and enable disable
these two attributes together.

3165
03:20:46,040 --> 03:20:49,000
So the answer is yes, I can do it. How

3166
03:20:50,800 --> 03:20:54,280
the right priority is equal to next to
for this one

3167
03:20:55,320 --> 03:20:59,400
and comma separated

3168
03:20:59,400 --> 03:21:04,040
priority is equal to one for this one.

3169
03:21:04,040 --> 03:21:06,920
So first this will execute very log in.

3170
03:21:07,240 --> 03:21:09,520
Second
this will execute validate, log out,

3171
03:21:10,560 --> 03:21:12,720
go ahead and execute this once again.

3172
03:21:12,720 --> 03:21:15,000
Now see the difference in the output.

3173
03:21:15,480 --> 03:21:18,840
My browser will close two times,
Web browser

3174
03:21:18,840 --> 03:21:22,760
will open two times my true test
because this will execute.

3175
03:21:22,760 --> 03:21:25,920
It will open the browser
to lose the browser two times

3176
03:21:26,280 --> 03:21:32,280
because my post condition and precondition
will work for both the test cases.

3177
03:21:32,280 --> 03:21:42,720
Correct?

3178
03:21:42,720 --> 03:21:43,000
Yeah.

3179
03:21:43,000 --> 03:21:44,200
And I sure

3180
03:21:47,880 --> 03:21:51,640
now see again
it will open the browser the second time.

3181
03:21:51,640 --> 03:21:54,960
Also it will open the browser. Right.

3182
03:21:54,960 --> 03:21:57,120
It opened the browser a second time. Also

3183
03:21:59,760 --> 03:22:01,720
it closed it a second time also.

3184
03:22:01,720 --> 03:22:03,000
Now see

3185
03:22:04,480 --> 03:22:05,880
it is giving you valid log

3186
03:22:05,880 --> 03:22:10,320
in invalid logout right.

3187
03:22:10,320 --> 03:22:12,280
Thank you Francisco

3188
03:22:13,000 --> 03:22:15,600
you'll see enable disable very valid.

3189
03:22:16,080 --> 03:22:17,240
Now see

3190
03:22:20,960 --> 03:22:23,480
my value log out having the priority two.

3191
03:22:23,520 --> 03:22:25,640
So that's right. Executed on second time.

3192
03:22:26,920 --> 03:22:28,800
It is priority

3193
03:22:28,800 --> 03:22:30,960
when it log into it executed it forced

3194
03:22:34,200 --> 03:22:43,760
it gets.

3195
03:22:43,760 --> 03:22:47,360
I hope your understanding of the thing

3196
03:22:55,400 --> 03:22:56,160
great

3197
03:22:56,640 --> 03:22:59,200
and I hope it's not hectic at all for you.

3198
03:22:59,200 --> 03:23:10,040
All know it doesn't matter.

3199
03:23:10,080 --> 03:23:14,640
It doesn't matter even if you put priority
second, no issues at all.

3200
03:23:14,680 --> 03:23:21,360
See, not giving you

3201
03:23:21,360 --> 03:23:22,720
any elevate

3202
03:23:24,960 --> 03:23:26,200
by default.

3203
03:23:26,200 --> 03:23:27,240
I just said right.

3204
03:23:27,240 --> 03:23:32,280
By default the priority is zero
for all the methods, right?

3205
03:23:32,760 --> 03:23:34,160
By default is.

3206
03:23:34,160 --> 03:23:37,360
So if it is by default zero,
then obviously we have to start from

3207
03:23:39,520 --> 03:23:42,040
one. Right?

3208
03:23:42,480 --> 03:23:43,160
And it

3209
03:23:45,120 --> 03:23:48,200
similarly,
when it comes to enable and disable

3210
03:23:48,440 --> 03:23:52,600
by default everyone is enabled
is equal to two by default.

3211
03:23:52,600 --> 03:23:56,440
Everything you don't need to write
to specifically if you want to mention

3212
03:23:56,680 --> 03:23:59,080
you have to mention
enable is equal to false.

3213
03:23:59,280 --> 03:24:01,760
See, let me show you this once again.
Right.

3214
03:24:02,160 --> 03:24:03,840
I'm going to delete it from here and.

3215
03:24:03,840 --> 03:24:05,840
I'm writing enabling right?

3216
03:24:05,840 --> 03:24:09,000
The moment that it enabled you to default.

3217
03:24:09,960 --> 03:24:12,040
Right? Enable is equal to false.

3218
03:24:12,040 --> 03:24:13,360
Is this one? Can you see

3219
03:24:20,440 --> 03:24:22,600
after now we use two of the attributes.

3220
03:24:22,600 --> 03:24:24,040
We have a couple more. Correct.

3221
03:24:24,040 --> 03:24:28,320
And it's going to we have a couple
of more women then will use all of them.

3222
03:24:28,320 --> 03:24:31,560
Don't worry.

3223
03:24:31,560 --> 03:24:34,080
I hope whatever
the things you have implemented so far,

3224
03:24:34,080 --> 03:24:35,480
you guys are learning them.

3225
03:24:35,480 --> 03:24:37,360
You guys are understanding them.

3226
03:24:37,360 --> 03:24:39,000
This is more important.

3227
03:24:39,000 --> 03:24:43,360
Doesn't matter
how many of attributes we are learning.

3228
03:24:43,360 --> 03:24:46,200
If you are not getting all of them,
it is of no use.

3229
03:24:46,600 --> 03:24:49,720
But instead of ten,
if you are learning five in a session

3230
03:24:49,840 --> 03:24:55,400
and you are understanding all five,
this is important.

3231
03:24:55,400 --> 03:24:56,760
I want you to do well.

3232
03:24:56,760 --> 03:24:57,600
So look

3233
03:25:07,960 --> 03:25:08,280
right.

3234
03:25:08,640 --> 03:25:13,240
If we leave one at the rate test
without priority indication, okay,

3235
03:25:13,360 --> 03:25:14,840
then it will execute. In the last

3236
03:25:17,640 --> 03:25:19,320
like this is this is what?

3237
03:25:19,320 --> 03:25:21,000
This is what see,

3238
03:25:21,040 --> 03:25:24,320
when it comes to priority,
when it comes to provide the priority.

3239
03:25:24,320 --> 03:25:25,200
Right.

3240
03:25:25,200 --> 03:25:27,360
So let's say you have 500 test this.

3241
03:25:28,240 --> 03:25:29,640
Do you have that much of time

3242
03:25:29,640 --> 03:25:33,160
to provide the priority one,
two, three, four, 562513.

3243
03:25:33,600 --> 03:25:36,760
Do you have that much of time
or do we have that much of time?

3244
03:25:37,200 --> 03:25:41,520
When you work on 18 projects,
no one has this much of time, right?

3245
03:25:42,000 --> 03:25:44,320
So again, this is a problem

3246
03:25:44,320 --> 03:25:47,440
since this is the feature
that is the attribute of test.

3247
03:25:47,440 --> 03:25:49,600
Indeed, we are learning.

3248
03:25:49,600 --> 03:25:53,280
But in future, in the longer term,
we have some more better ways

3249
03:25:53,280 --> 03:25:56,720
to execute, customize
our overall execution process

3250
03:25:58,200 --> 03:25:59,760
right now.

3251
03:25:59,760 --> 03:26:03,720
Just to just to refresh every one of you,
every one of your eight days.

3252
03:26:03,720 --> 03:26:04,240
Attention.

3253
03:26:04,240 --> 03:26:09,720
What I'm saying now, what I'm saying is

3254
03:26:10,760 --> 03:26:11,840
earlier you use

3255
03:26:11,840 --> 03:26:14,640
to execute your test
gives us work with men method.

3256
03:26:15,160 --> 03:26:17,040
You're not using men method right now.

3257
03:26:17,040 --> 03:26:17,840
Correct.

3258
03:26:18,240 --> 03:26:21,440
I'm giving you one very good
you know booster. Yes.

3259
03:26:22,680 --> 03:26:26,480
We are not using men method.

3260
03:26:26,480 --> 03:26:28,600
In future we will not use Java project

3261
03:26:31,840 --> 03:26:35,080
in future we will not use your data files

3262
03:26:36,360 --> 03:26:38,400
in future We will not use your chrome

3263
03:26:38,400 --> 03:26:41,520
driver or the XY file.

3264
03:26:41,520 --> 03:26:44,240
All right.

3265
03:26:44,240 --> 03:26:45,120
Java Project.

3266
03:26:45,120 --> 03:26:47,360
The Java project will be there.

3267
03:26:47,360 --> 03:26:49,560
I'm not going to teach your new language.

3268
03:26:49,560 --> 03:26:51,280
Java language will be there.

3269
03:26:51,280 --> 03:26:52,760
We will not use Java project.

3270
03:26:52,760 --> 03:26:55,360
There will be some other project
we will use.

3271
03:26:55,360 --> 03:26:59,160
So in future we will not write
this program word or the portion.

3272
03:26:59,160 --> 03:27:02,680
Also right after completion

3273
03:27:02,680 --> 03:27:06,440
of both test cases,
right after completion of both

3274
03:27:06,440 --> 03:27:10,360
the frameworks test engine cucumber,
you will learn

3275
03:27:10,680 --> 03:27:13,360
how you can execute your test cases

3276
03:27:13,400 --> 03:27:22,920
even without this intelligent.

3277
03:27:22,920 --> 03:27:24,240
It is very important. Why?

3278
03:27:24,240 --> 03:27:27,840
Because if we give you the end product,
then we will not give you the cons

3279
03:27:27,840 --> 03:27:30,040
of all these things,
the pros of all these things.

3280
03:27:30,320 --> 03:27:31,480
How would you understand?

3281
03:27:31,480 --> 03:27:36,400
Why are we implementing
those things in the project?

3282
03:27:36,400 --> 03:27:37,800
So getting my point,

3283
03:27:37,800 --> 03:27:40,800
if we give you the solution
and we will not give you the problem,

3284
03:27:40,920 --> 03:27:42,960
how would you know
this is the solution of what?

3285
03:27:43,720 --> 03:27:47,400
So first we will learn this
when we come across the program.

3286
03:27:47,400 --> 03:27:48,600
When we come across the

3287
03:27:50,320 --> 03:27:51,320
problems

3288
03:27:51,320 --> 03:27:54,520
right then we will prepare
proposed a good solution for them.

3289
03:27:54,760 --> 03:27:55,480
Okay.

3290
03:27:55,480 --> 03:27:58,240
There's is the flow of learning

3291
03:28:01,360 --> 03:28:03,160
it, right?

3292
03:28:03,160 --> 03:28:07,800
So after some time we will teach you
and you will be executing your test

3293
03:28:08,040 --> 03:28:10,240
without using your intelligent idea.

3294
03:28:11,560 --> 03:28:12,400
All right.

3295
03:28:12,520 --> 03:28:15,280
You will not use this idea

3296
03:28:15,280 --> 03:28:16,600
after some time.

3297
03:28:16,600 --> 03:28:19,800
After some time you,
even if you do not have

3298
03:28:19,800 --> 03:28:23,080
your system with you, is still
you will be able to execute.

3299
03:28:23,080 --> 03:28:25,000
Your test gives us

3300
03:28:27,240 --> 03:28:30,040
your code, will do everything for you.

3301
03:28:30,040 --> 03:28:32,040
It will execute your test cases.

3302
03:28:32,040 --> 03:28:33,680
It will give you the reports.

3303
03:28:33,680 --> 03:28:35,520
Reports will come to your email.

3304
03:28:35,520 --> 03:28:38,400
It will identify
all the loopholes in your system.

3305
03:28:38,400 --> 03:28:42,080
It will give you how many test cases
you have executed, how much time

3306
03:28:42,080 --> 03:28:45,960
it has taken in every single thing
you will be learning.

3307
03:28:45,960 --> 03:28:48,920
All of this things in this classic clear.

3308
03:28:49,800 --> 03:28:51,360
Was it a booster for all of you

3309
03:28:54,840 --> 03:28:58,400
that to my every single

3310
03:29:02,040 --> 03:29:06,400
there's not much jokes today not much fun

3311
03:29:06,720 --> 03:29:22,080
more focus on explanation part.

3312
03:29:22,080 --> 03:29:23,000
All right

3313
03:29:24,760 --> 03:29:26,800
please proceed for the guys

3314
03:29:26,800 --> 03:29:44,520
If it is a booster for you
for next 45 minutes.

3315
03:29:44,520 --> 03:29:45,080
All right.

3316
03:29:45,080 --> 03:29:49,320
Bye. Octet, enable and disable.

3317
03:29:49,320 --> 03:29:51,880
Let's go ahead for the other tests. Right.

3318
03:29:52,080 --> 03:29:58,920
What I'm going to do
is now see, I'm going to create my.

3319
03:29:59,800 --> 03:30:05,160
Well, let me open this.

3320
03:30:05,160 --> 03:30:07,920
So here priority,

3321
03:30:08,240 --> 03:30:12,280
the priority for this test
method enabled and disables.

3322
03:30:12,280 --> 03:30:17,000
We have seen this
also this attribute right?

3323
03:30:17,000 --> 03:30:19,400
This gives prioritization, right?

3324
03:30:19,400 --> 03:30:20,480
We are done

3325
03:30:22,680 --> 03:30:23,080
there.

3326
03:30:23,120 --> 03:30:24,920
So we generally define the priority.

3327
03:30:24,920 --> 03:30:27,000
We are done with this

3328
03:30:27,680 --> 03:30:28,680
enable disable.

3329
03:30:28,680 --> 03:30:32,840
We are done with this.

3330
03:30:32,840 --> 03:30:37,560
This is what we are going to work
upon, not a solution part right now.

3331
03:30:37,560 --> 03:30:38,760
Let me show you one thing

3332
03:30:57,800 --> 03:30:58,440
I'm going to

3333
03:30:58,440 --> 03:31:04,440
right here.

3334
03:31:04,440 --> 03:31:05,120
Fine.

3335
03:31:06,480 --> 03:31:08,520
This is my another class,
which I'm writing,

3336
03:31:08,680 --> 03:31:11,720
the associate class.

3337
03:31:11,720 --> 03:31:13,040
And here

3338
03:31:13,800 --> 03:31:17,280
I'm going to copy this score
right from my log in class.

3339
03:31:17,440 --> 03:31:29,200
That is my log in disk.

3340
03:31:29,200 --> 03:31:32,760
I'm going to copy my log latest

3341
03:31:33,600 --> 03:31:35,840
now I see in my log

3342
03:31:36,320 --> 03:31:51,320
right?

3343
03:31:51,320 --> 03:31:56,960
No, no, we are not done yet.

3344
03:31:56,960 --> 03:31:57,800
All right,

3345
03:31:58,200 --> 03:32:02,720
So now what I am going to do is
this is my log in the first one priority.

3346
03:32:02,880 --> 03:32:03,520
Right?

3347
03:32:03,840 --> 03:32:05,880
Another one I'm going to add here.

3348
03:32:05,880 --> 03:32:08,320
Another one. I'm going to add the request.

3349
03:32:09,120 --> 03:32:11,600
I'm going to add public void

3350
03:32:13,920 --> 03:32:14,760
validation

3351
03:32:14,760 --> 03:32:20,320
of title, Right?

3352
03:32:21,240 --> 03:32:24,080
I'm going to validate
the title of this application.

3353
03:32:24,480 --> 03:32:26,440
This is what I'm going to do.

3354
03:32:26,440 --> 03:32:30,120
So to validate the title,
validate the title,

3355
03:32:30,120 --> 03:32:46,080
what I have to do first.

3356
03:32:46,080 --> 03:32:46,520
First,

3357
03:32:47,560 --> 03:32:50,800
I have to pass the value

3358
03:32:50,800 --> 03:32:51,160
first.

3359
03:32:51,160 --> 03:32:54,440
I have to pass the value right,
which will I have to pass

3360
03:32:55,400 --> 03:32:57,760
the value which I want, right?

3361
03:32:58,120 --> 03:33:03,600
So I'm getting this value,
the actual value.

3362
03:33:03,600 --> 03:33:07,080
So the actual value would be
what is the title of my page guys?

3363
03:33:07,400 --> 03:33:10,200
If since the human

3364
03:33:10,360 --> 03:33:13,400
management system
is there, take this data,

3365
03:33:13,640 --> 03:33:15,920
let me go and show you this title

3366
03:33:17,720 --> 03:33:18,000
here.

3367
03:33:18,000 --> 03:33:21,160
This is what we call title,
the Human Management System.

3368
03:33:21,160 --> 03:33:25,720
Right?

3369
03:33:25,720 --> 03:33:28,200
The human management system.

3370
03:33:28,200 --> 03:33:30,120
This is their title.

3371
03:33:30,120 --> 03:33:32,400
Now, why do you guys think that

3372
03:33:32,400 --> 03:33:35,040
I have to take the locator
to get the title?

3373
03:33:36,080 --> 03:33:40,680
Do you really think
that we need to get the data?

3374
03:33:40,680 --> 03:33:42,800
We have a method,
right, Diverter to get title,

3375
03:33:44,400 --> 03:33:45,640
so we don't need any locator.

3376
03:33:45,640 --> 03:33:46,800
In that case,

3377
03:33:46,800 --> 03:33:50,520
what I'm going to write is here,
I'm going to write another string. My

3378
03:33:53,200 --> 03:33:56,040
expected text is equal to

3379
03:34:02,000 --> 03:34:06,720
driver or to get title right.

3380
03:34:06,720 --> 03:34:14,320
This is my text.

3381
03:34:14,320 --> 03:34:15,520
Is this correct or not?

3382
03:34:15,520 --> 03:34:23,280
Tell me now

3383
03:34:26,640 --> 03:34:27,480
that right.

3384
03:34:27,480 --> 03:34:32,160
So I'm going to write what if condition my
if conditions sees if my

3385
03:34:34,440 --> 03:34:37,880
if my this the actual value right is

3386
03:34:40,280 --> 03:34:42,080
equal to

3387
03:34:50,160 --> 03:34:51,760
expected value

3388
03:34:51,760 --> 03:34:53,800
then go ahead and write my

3389
03:35:01,680 --> 03:35:14,920
end right.

3390
03:35:14,920 --> 03:35:16,760
It is not like

3391
03:35:18,760 --> 03:35:21,120
let me put this this

3392
03:35:21,120 --> 03:35:23,840
priority is equal to two

3393
03:35:23,840 --> 03:35:24,800
comma

3394
03:35:25,880 --> 03:35:28,840
enable is equals good.

3395
03:35:28,840 --> 03:35:32,880
This one is priority is equals to one
and enable is equals to again

3396
03:35:33,000 --> 03:35:38,040
this to find to test
gives it's intentionally.

3397
03:35:38,040 --> 03:35:41,680
I'm going to make this one fail
intentionally.

3398
03:35:41,680 --> 03:35:43,200
I'm going to make this one fail.

3399
03:35:43,200 --> 03:35:45,200
So I am writing human management.

3400
03:35:45,200 --> 03:35:47,360
This.

3401
03:35:47,360 --> 03:35:51,040
I just want to show you something.

3402
03:35:51,040 --> 03:35:54,800
Now let me execute this particular
piece of code here. See?

3403
03:35:56,160 --> 03:35:56,520
Right.

3404
03:35:56,560 --> 03:35:59,640
Remember intentionally, I'm making it okay

3405
03:36:45,400 --> 03:36:49,200
because I have four different IDs, right?

3406
03:36:49,800 --> 03:36:53,160
And so many test cases working fine.

3407
03:36:53,160 --> 03:36:57,280
I mean, multiple classes,
multiple methods by them.

3408
03:36:57,280 --> 03:37:02,880
I have Visual Studio code for JavaScript,
I have for Java, I have Eclipse, Java,

3409
03:37:02,880 --> 03:37:06,080
having Village Idea,
all these things I have, that's

3410
03:37:06,080 --> 03:37:07,080
a problem

3411
03:37:24,640 --> 03:37:26,600
by now.

3412
03:37:26,600 --> 03:37:32,320
If you see guys here right,

3413
03:37:32,320 --> 03:37:35,400
it is giving me it is not correct.

3414
03:37:35,400 --> 03:37:36,200
Right.

3415
03:37:36,840 --> 03:37:38,600
What it gives it is not correct.

3416
03:37:38,600 --> 03:37:42,480
Why it is not correct
because you see it is not correct.

3417
03:37:42,800 --> 03:37:43,520
Fine.

3418
03:37:43,800 --> 03:37:46,120
So my condition called filter plus

3419
03:37:51,680 --> 03:37:52,520
students.

3420
03:37:52,520 --> 03:37:53,960
It is big.

3421
03:37:54,920 --> 03:37:57,680
Now see one interesting point
here it is the idea.

3422
03:37:57,680 --> 03:37:58,320
Right.

3423
03:37:58,920 --> 03:38:01,080
But validation of title, if you see

3424
03:38:01,240 --> 03:38:04,360
here it is saying pass.

3425
03:38:04,360 --> 03:38:05,080
Can you see this

3426
03:38:12,160 --> 03:38:14,280
is indeed a problem

3427
03:38:14,280 --> 03:38:17,800
if I'm using this,
if it's condition, don't you see that

3428
03:38:17,880 --> 03:38:23,640
this is the problem?

3429
03:38:23,640 --> 03:38:24,440
Correct.

3430
03:38:25,800 --> 03:38:28,800
Then what is the resolution
of this problem?

3431
03:38:28,800 --> 03:38:31,800
That's why
we should not use this defense condition.

3432
03:38:32,400 --> 03:38:34,320
I'm building this one more method.

3433
03:38:34,320 --> 03:38:37,400
We should not use this else condition.

3434
03:38:37,400 --> 03:38:38,080
Fine.

3435
03:38:38,080 --> 03:38:42,560
Then you will ask if we are not using a
false condition, then what we have to do?

3436
03:38:42,960 --> 03:38:44,960
There is a solution.

3437
03:38:45,240 --> 03:38:47,240
We have a solution.

3438
03:38:47,240 --> 03:38:49,440
We have from this thing.

3439
03:38:49,440 --> 03:38:49,840
Right?

3440
03:38:49,840 --> 03:38:53,400
You'll It says a solution
from testing sucks, right?

3441
03:38:54,280 --> 03:38:57,720
So just use this assert doc,

3442
03:38:58,960 --> 03:39:01,080
there are plenty of methods, right?

3443
03:39:01,080 --> 03:39:02,880
I'm not going to use this
method right now.

3444
03:39:02,880 --> 03:39:05,680
First let me go to slide
so I can show you this part

3445
03:39:11,320 --> 03:39:12,960
why it didn't work at all.

3446
03:39:12,960 --> 03:39:17,200
Because I intentionally made it fade
right?

3447
03:39:17,200 --> 03:39:17,640
You'll see.

3448
03:39:17,640 --> 03:39:21,600
I'm writing human management system
here at this point of time.

3449
03:39:21,600 --> 03:39:24,160
If you're looking into the things
that I'm writing,

3450
03:39:24,160 --> 03:39:26,040
this human management system is fail

3451
03:39:27,320 --> 03:39:29,080
human management system, human management.

3452
03:39:29,080 --> 03:39:31,240
Since I have paused,
that's why it is fake.

3453
03:39:32,360 --> 03:39:34,800
I made it intentionally just to show you

3454
03:39:34,960 --> 03:39:38,400
that we are getting this problem
and we are getting this problem.

3455
03:39:39,000 --> 03:39:39,920
Yeah, right.

3456
03:39:39,920 --> 03:39:42,760
So this is the problem
with the false condition in testing.

3457
03:39:44,000 --> 03:39:46,200
If even the condition

3458
03:39:46,200 --> 03:39:49,560
is a positive test case, Why?

3459
03:39:49,560 --> 03:39:51,040
Because it says testing.

3460
03:39:51,040 --> 03:39:54,520
This is I have my own verification
and validation check points.

3461
03:39:54,760 --> 03:39:57,960
And for that
you have to use my own defined methods.

3462
03:39:57,960 --> 03:39:59,760
Right? Predefined methods.

3463
03:39:59,760 --> 03:40:04,400
So this features predefined attributes
we have to use in order to verify

3464
03:40:04,400 --> 03:40:05,920
this this stuff right.

3465
03:40:05,920 --> 03:40:09,720
So if I see I'm not going to use this one,
then you might ask

3466
03:40:09,720 --> 03:40:10,880
then which one we have to use.

3467
03:40:10,880 --> 03:40:13,640
So let me show you this one we have to use

3468
03:40:15,080 --> 03:40:15,840
right.

3469
03:40:15,840 --> 03:40:17,480
Right? Exactly.

3470
03:40:17,480 --> 03:40:19,920
We have to use a solution.

3471
03:40:19,920 --> 03:40:21,280
So what is the solution?

3472
03:40:21,280 --> 03:40:22,320
The sun is shining.

3473
03:40:22,320 --> 03:40:25,360
Test energy means trust, but verify

3474
03:40:27,440 --> 03:40:29,440
is trust, but verify.

3475
03:40:29,720 --> 03:40:32,040
We are trusting that already
it is working.

3476
03:40:32,040 --> 03:40:35,840
But we are going to verify also
whether it is working correctly or not.

3477
03:40:36,480 --> 03:40:39,360
Remember, I give you an example.

3478
03:40:39,360 --> 03:40:41,480
Presents of an element is fine

3479
03:40:42,360 --> 03:40:47,400
after presence, the text is visible
according to our requirement or not.

3480
03:40:47,400 --> 03:40:49,600
That is verification.

3481
03:40:49,600 --> 03:40:52,320
And that's what test and assertion does.

3482
03:40:52,320 --> 03:40:55,440
We verify the text
according to our own requirement

3483
03:40:56,720 --> 03:40:58,600
if username field is available.

3484
03:40:58,600 --> 03:41:00,640
At this point, I don't have any concern

3485
03:41:03,240 --> 03:41:05,600
that I get it right.

3486
03:41:06,200 --> 03:41:08,960
I trust you. What? I need your password.

3487
03:41:09,120 --> 03:41:10,240
It's like that.

3488
03:41:10,240 --> 03:41:18,920
Okay.

3489
03:41:18,920 --> 03:41:19,680
All right.

3490
03:41:19,680 --> 03:41:21,080
So now you see what it says.

3491
03:41:21,080 --> 03:41:22,680
Trust but verify.

3492
03:41:22,680 --> 03:41:28,520
Assertion is for the form to compare
the actual result with expected result.

3493
03:41:28,520 --> 03:41:30,320
We are signing one value.

3494
03:41:31,440 --> 03:41:33,400
We are going to get one value.

3495
03:41:33,400 --> 03:41:34,960
So one which we are signing.

3496
03:41:34,960 --> 03:41:36,840
This is the expected one.

3497
03:41:36,840 --> 03:41:39,480
The one which we getting
that is the actual one

3498
03:41:39,480 --> 03:41:40,960
which we are getting from the program.

3499
03:41:40,960 --> 03:41:45,480
Remember I wrote Driver to get title and
then storing this title into one string.

3500
03:41:45,960 --> 03:41:49,800
This is the actual one which is coming
the program from the application.

3501
03:41:50,120 --> 03:41:55,240
At the same time, I am putting
one more value as expected value, right?

3502
03:41:55,440 --> 03:41:56,560
So these are expected

3503
03:41:56,560 --> 03:42:01,080
when you will be compared
by test and assertions with actual value.

3504
03:42:01,200 --> 03:42:05,520
If both is expected and actual values
are equal, then my assumption is passed.

3505
03:42:05,600 --> 03:42:07,920
Otherwise my assumption is fake.

3506
03:42:07,920 --> 03:42:08,520
Clear

3507
03:42:13,920 --> 03:42:16,320
students clear

3508
03:42:19,920 --> 03:42:20,880
in as best

3509
03:42:20,880 --> 03:42:24,440
an assertion is performed
with the help of a third class.

3510
03:42:24,440 --> 03:42:28,280
I just showed you that a third class
will this asset class once again.

3511
03:42:29,240 --> 03:42:30,440
This also

3512
03:42:30,440 --> 03:42:33,520
helps
us to verify the conditions of the test

3513
03:42:33,840 --> 03:42:37,640
and decide
whether their case has been or passed.

3514
03:42:38,480 --> 03:42:39,120
Right.

3515
03:42:40,440 --> 03:42:43,440
It is most popular
and frequently used methods in testing.

3516
03:42:43,760 --> 03:42:47,880
Creating selenium is obviously
without verification and validation.

3517
03:42:47,880 --> 03:42:50,920
There is no point of writing this
and in the script

3518
03:42:51,000 --> 03:42:52,160
we need this verification

3519
03:42:52,160 --> 03:42:55,920
validation check points earlier
before using this a false condition.

3520
03:42:55,920 --> 03:42:58,120
But this events condition is of
no use for us.

3521
03:42:58,120 --> 03:43:01,400
So we are using a set of transponder test
and this is very important.

3522
03:43:01,640 --> 03:43:06,080
Let's suppose in selenium
there will be the situation in the test,

3523
03:43:06,080 --> 03:43:08,240
but you need to check
the presence of an element.

3524
03:43:08,320 --> 03:43:11,240
All you need to do
is to put in a statement on to it

3525
03:43:11,560 --> 03:43:13,800
to verify its existence. Right.

3526
03:43:14,280 --> 03:43:16,160
This is very simple use.

3527
03:43:16,160 --> 03:43:19,760
It is easy to show you how.

3528
03:43:19,760 --> 03:43:24,000
And the next is was this assertion
in the title position asserts

3529
03:43:24,000 --> 03:43:27,440
helps us to verify
the conditions of the test and decide

3530
03:43:27,720 --> 03:43:31,800
whether test is very low cost
fine test is considered successful

3531
03:43:31,800 --> 03:43:35,560
only if it is completed
without any exception.

3532
03:43:35,880 --> 03:43:39,040
There are two types of assertions
we are going to study guides.

3533
03:43:39,360 --> 03:43:40,640
How many types of assertion?

3534
03:43:42,360 --> 03:43:44,520
Yes, if
we are already in the second class.

3535
03:43:44,520 --> 03:43:45,320
Correct.

3536
03:43:45,320 --> 03:43:47,920
Because the slides has been slowed

3537
03:43:48,400 --> 03:43:50,600
or designed according to the

3538
03:43:51,840 --> 03:43:54,280
three hour sessions. Right.

3539
03:43:54,280 --> 03:43:57,200
But right now
we are having five hour session.

3540
03:43:57,680 --> 03:44:01,200
So obviously we have to take
some data from six plus two.

3541
03:44:01,560 --> 03:44:02,080
Okay.

3542
03:44:02,160 --> 03:44:06,960
So I will try to complete your entire test
individually, take minimum four classes.

3543
03:44:07,560 --> 03:44:11,480
I will try to completed in three
or three and a half so I can give you

3544
03:44:11,480 --> 03:44:15,840
some extra time before starting
with their test and do framework like

3545
03:44:17,000 --> 03:44:18,480
I'm taking care of it. I'm on it.

3546
03:44:18,480 --> 03:44:23,120
Don't worry about it.

3547
03:44:23,120 --> 03:44:23,840
Fine.

3548
03:44:24,040 --> 03:44:26,400
So now, now you'll see here

3549
03:44:26,960 --> 03:44:30,640
there are two types of assertions
we are going to use.

3550
03:44:30,640 --> 03:44:34,760
The first one is hard assertion
and the second one is soft assertion.

3551
03:44:35,200 --> 03:44:36,840
Now what is hard assertion?

3552
03:44:36,840 --> 03:44:38,280
What is soft assertion?

3553
03:44:38,280 --> 03:44:40,760
We will discuss this after something,
right?

3554
03:44:41,080 --> 03:44:43,240
First, we will see one type of assertion.

3555
03:44:43,240 --> 03:44:46,600
So currently,
currently we are going to verify

3556
03:44:46,600 --> 03:44:49,600
hard assertion by
we call it hard assertion.

3557
03:44:49,600 --> 03:44:52,760
I will then you that also why we need soft
assertion.

3558
03:44:52,760 --> 03:44:54,840
I will tell you that false right.

3559
03:44:54,840 --> 03:44:57,440
First we will implement harder solution.

3560
03:44:57,720 --> 03:45:02,160
We try to implement our test case and then
I will give you the difference in just a

3561
03:45:04,560 --> 03:45:06,800
Now if you see here, there are several
methods,

3562
03:45:07,520 --> 03:45:11,880
many, many methods
we will be having inner effect, right?

3563
03:45:12,120 --> 03:45:14,920
This assumption of testing a third class

3564
03:45:14,920 --> 03:45:17,800
from testing has all of these metrics.

3565
03:45:18,240 --> 03:45:21,480
So for example, if we have to compare
two things, assert once,

3566
03:45:21,840 --> 03:45:22,720
if you have to check

3567
03:45:22,720 --> 03:45:26,480
whether things are there not then assert
true or assert false, right?

3568
03:45:26,560 --> 03:45:28,640
These are the conditions we can check.

3569
03:45:28,640 --> 03:45:30,280
Let me show you all of this method.

3570
03:45:30,280 --> 03:45:33,440
See if I'm going to write is also dark

3571
03:45:33,440 --> 03:45:39,680
dark.

3572
03:45:39,680 --> 03:45:44,960
A third dot assert equals can you see
assert equals four following feature

3573
03:45:45,000 --> 03:45:47,800
values to by to get it third to long note

3574
03:45:48,120 --> 03:45:51,640
then any of integer short byte of bite

3575
03:45:51,720 --> 03:45:57,000
of a separate editable long object
everything assert equals right.

3576
03:45:57,000 --> 03:46:01,280
All of these metrics
see this much not equals.

3577
03:46:01,280 --> 03:46:05,400
Again, if you want to check to say to map
to flow to the way to object

3578
03:46:05,880 --> 03:46:07,360
right over your data methods

3579
03:46:08,760 --> 03:46:11,560
assert
throws assert to assert equal state.

3580
03:46:11,560 --> 03:46:15,240
All of these things
we want to use assert equals.

3581
03:46:15,480 --> 03:46:16,240
Right.

3582
03:46:16,400 --> 03:46:18,840
So I am having a string

3583
03:46:18,840 --> 03:46:21,560
and expected
to string it actually string to string.

3584
03:46:21,560 --> 03:46:24,560
So I need to check for the string
where in the spring I will check.

3585
03:46:24,560 --> 03:46:28,000
This is my string. Right? I can write.

3586
03:46:28,000 --> 03:46:30,400
It is giving me first

3587
03:46:35,760 --> 03:46:39,720
the actual value comma.

3588
03:46:39,720 --> 03:46:41,200
The expected text.

3589
03:46:41,200 --> 03:46:42,240
Right is

3590
03:46:44,720 --> 03:46:47,200
just one line of assertion.

3591
03:46:47,200 --> 03:46:49,480
And then I'm bringing one method here.

3592
03:46:49,480 --> 03:46:54,720
I'm going to write.

3593
03:46:54,720 --> 03:46:56,840
I'm writing so much python code nowadays.

3594
03:46:56,880 --> 03:47:03,400
So since everything is in Python minority,

3595
03:47:03,400 --> 03:47:09,160
I am executing after a session now.

3596
03:47:09,160 --> 03:47:12,960
See this time.

3597
03:47:12,960 --> 03:47:15,480
This time,
if I'm executing, what would happen?

3598
03:47:15,600 --> 03:47:18,840
You will see the difference.

3599
03:47:18,840 --> 03:47:34,200
Let me running all.

3600
03:47:34,200 --> 03:47:50,760
It's like a monkey and humans.

3601
03:47:50,760 --> 03:47:51,760
No monkey

3602
03:47:55,200 --> 03:47:55,680
got to

3603
03:47:56,000 --> 03:47:57,120
do much

3604
03:48:11,640 --> 03:48:14,480
in is today's.

3605
03:48:14,480 --> 03:48:16,400
Now see here

3606
03:48:16,640 --> 03:48:21,360
it is giving you the validation of faith
and is paid right in the actual part.

3607
03:48:21,360 --> 03:48:24,360
It is the now see it is thing.

3608
03:48:24,360 --> 03:48:28,160
The expected you're expecting
is human management system,

3609
03:48:28,400 --> 03:48:30,560
but you are getting human management since

3610
03:48:31,760 --> 03:48:35,320
it is giving you this type of solution
where you are getting the value right.

3611
03:48:35,320 --> 03:48:37,240
This is coming from the wrong time.

3612
03:48:37,240 --> 03:48:38,960
This is the one you are passing in.

3613
03:48:38,960 --> 03:48:41,480
You see everyone, students

3614
03:48:49,440 --> 03:48:52,720
Good morning, everyone.

3615
03:48:52,720 --> 03:48:55,000
All the geniuses

3616
03:49:00,040 --> 03:49:00,400
already.

3617
03:49:00,400 --> 03:49:03,000
Wait just ten more minutes in the class.

3618
03:49:03,280 --> 03:49:05,320
Please be just ten more minutes.

3619
03:49:05,320 --> 03:49:07,920
Not going to push you for entire 5 hours.

3620
03:49:08,160 --> 03:49:09,240
I leave you 10 minutes.

3621
03:49:09,240 --> 03:49:11,320
Only just ten more minutes.

3622
03:49:11,320 --> 03:49:14,600
Are you guys ready for ten more minutes
for your complete engagement? You

3623
03:49:29,560 --> 03:49:33,640
think? No.

3624
03:49:33,640 --> 03:49:34,800
It's like is not slow.

3625
03:49:34,800 --> 03:49:37,400
I mean, I barely get the message.

3626
03:49:37,440 --> 03:49:38,600
It's next line.

3627
03:49:39,000 --> 03:49:39,640
Fine.

3628
03:49:39,640 --> 03:49:42,600
So now you see here
this expect didn't actual value.

3629
03:49:42,600 --> 03:49:45,800
Also it is giving you here
you have to click to see the difference

3630
03:49:45,800 --> 03:49:50,160
the difference between simplicity and also
you will see the complete information

3631
03:49:50,520 --> 03:49:53,040
it is giving you test in a feel

3632
03:49:53,400 --> 03:49:56,400
right solution is speed bias.

3633
03:49:56,440 --> 03:50:01,160
Action is fail because intentionally I'm
rejecting because I just wanted to show

3634
03:50:01,160 --> 03:50:03,920
you human management system
and human management system.

3635
03:50:04,160 --> 03:50:05,760
It is also giving you

3636
03:50:05,760 --> 03:50:09,240
not only giving you the error
but also giving you their differences.

3637
03:50:09,680 --> 03:50:13,160
Earlier,
the same implementation we were using

3638
03:50:13,160 --> 03:50:15,720
with the offensive statement,
it was giving you the pass

3639
03:50:15,720 --> 03:50:18,880
for validation of data
and now it is giving you the field.

3640
03:50:20,200 --> 03:50:20,960
Can you see

3641
03:50:21,480 --> 03:50:24,760
it is giving you the feel this time
why it is giving you fail

3642
03:50:25,080 --> 03:50:30,760
because you are using one of the test
and stick is harder and.

3643
03:50:30,760 --> 03:50:33,160
Harder Session sees what is hard session.

3644
03:50:33,160 --> 03:50:36,160
Basically high definition means job.

3645
03:50:36,160 --> 03:50:38,840
I should do that for the exceptions
and errors a lot.

3646
03:50:39,160 --> 03:50:39,800
Right?

3647
03:50:39,920 --> 03:50:42,480
So basically what is hard session?

3648
03:50:43,000 --> 03:50:45,840
It means when error comes.

3649
03:50:46,480 --> 03:50:48,800
First of all, execution starts.

3650
03:50:50,280 --> 03:50:52,520
How hard assertion
the one which we have implemented here.

3651
03:50:52,520 --> 03:50:54,480
This is hard session.

3652
03:50:54,800 --> 03:50:57,680
If error came here,
it means the execution stops

3653
03:50:58,080 --> 03:51:00,680
because execution is stop the we didn't.

3654
03:51:00,680 --> 03:51:02,760
This line I'm executing after the session.

3655
03:51:02,760 --> 03:51:07,720
It didn't execute anything here right
inside this block of good first thing

3656
03:51:08,160 --> 03:51:13,240
so they can think it will give the result
at the same time right at the same time.

3657
03:51:13,240 --> 03:51:15,520
So we can write this
only in a single name.

3658
03:51:15,960 --> 03:51:17,520
This is what we see.

3659
03:51:17,520 --> 03:51:19,280
Hard decision now.

3660
03:51:19,280 --> 03:51:22,520
Psychosocial, slightly different than this
hard decision.

3661
03:51:23,320 --> 03:51:24,160
All right.

3662
03:51:24,200 --> 03:51:26,280
We will implement that later.

3663
03:51:26,280 --> 03:51:28,360
Now, let me write it intentionally.

3664
03:51:28,360 --> 03:51:29,200
Correct.

3665
03:51:29,520 --> 03:51:37,400
Come on, take me

3666
03:51:39,720 --> 03:51:40,040
here.

3667
03:51:40,040 --> 03:51:41,160
One more thing. One more thing.

3668
03:51:41,160 --> 03:51:41,840
Let me execute.

3669
03:51:41,840 --> 03:51:42,840
Once I going to edit.

3670
03:51:42,840 --> 03:51:45,280
One more thing you can put here.

3671
03:51:45,280 --> 03:51:48,520
You can put one more comma
and then you can write message.

3672
03:51:48,520 --> 03:51:50,760
Also, you can see by default
it took message.

3673
03:51:50,760 --> 03:51:54,880
What values are not seen?

3674
03:51:55,440 --> 03:52:00,960
This message will be printed only
if there is an error in the assertion.

3675
03:52:01,080 --> 03:52:07,760
See, this message will be printed
only if the assertion exist.

3676
03:52:08,560 --> 03:52:08,880
Right.

3677
03:52:08,880 --> 03:52:12,960
If there is an error in the assertion,
then it will give you the difference.

3678
03:52:12,960 --> 03:52:15,280
And with the difference
it will also give you this.

3679
03:52:15,520 --> 03:52:53,400
Give it a message. Now.

3680
03:52:55,080 --> 03:52:58,320
Now, if you go back below it,
you see it says

3681
03:52:58,320 --> 03:53:01,640
Java Lang assertion
Error values are not seen

3682
03:53:03,240 --> 03:53:03,480
right.

3683
03:53:03,480 --> 03:53:07,560
It is not only giving you the difference,
but also it is giving you

3684
03:53:07,760 --> 03:53:10,520
the message which you are mentioning here
in your assertion.

3685
03:53:11,000 --> 03:53:13,520
So the moment you provide this message,
it will give you

3686
03:53:13,520 --> 03:53:17,600
some additional information, right?

3687
03:53:17,600 --> 03:53:19,080
I hope everyone can see this

3688
03:53:28,040 --> 03:53:30,720
and let's go

3689
03:53:30,720 --> 03:53:33,960
ahead and implement it correctly.

3690
03:53:34,800 --> 03:53:41,320
So I'm going to write this system.

3691
03:53:41,320 --> 03:53:43,840
You will find it like this
that after some time

3692
03:53:44,400 --> 03:53:45,520
your cell

3693
03:53:46,880 --> 03:53:50,160
goes to spend one month with us

3694
03:53:50,760 --> 03:54:42,600
from this. Now.

3695
03:54:42,600 --> 03:54:45,600
Now we bought this to get this past.

3696
03:54:46,120 --> 03:54:46,840
Right.

3697
03:54:47,040 --> 03:54:48,840
But we didn't get anything.

3698
03:54:48,840 --> 03:54:51,360
Just one message I got which message.

3699
03:54:52,320 --> 03:54:55,000
It says this when I'm executing
after a session

3700
03:54:55,000 --> 03:54:57,840
by if you're a session is passed.

3701
03:54:58,400 --> 03:54:59,160
Right.

3702
03:54:59,160 --> 03:55:03,320
If you're not passing anything,
anything which is problematic, it means

3703
03:55:03,320 --> 03:55:07,160
your assertions, values are correct,
then there will be no message.

3704
03:55:07,520 --> 03:55:12,360
There will be no warning, there will be
nothing, no comparison analysis, Right.

3705
03:55:12,400 --> 03:55:14,360
It will allow you to execute.

3706
03:55:14,360 --> 03:55:18,200
It will allow your program
to execute further piece of code.

3707
03:55:18,200 --> 03:55:20,720
It will give you the complete report.
All right.

3708
03:55:20,720 --> 03:55:23,280
This is the function of hard assertion.

3709
03:55:23,520 --> 03:55:25,640
Again, I'm the only thing harder solution.

3710
03:55:25,640 --> 03:55:28,640
We have used the
what is the definition of hard assertion?

3711
03:55:28,920 --> 03:55:31,920
Hard assertion simply means the moment

3712
03:55:32,080 --> 03:55:35,480
it gives the error,
it will stop the execution first.

3713
03:55:35,760 --> 03:55:38,280
It will give you the message
if you have provided one,

3714
03:55:38,680 --> 03:55:42,600
or it will give you the difference
in between your expected value

3715
03:55:42,600 --> 03:55:44,280
and the actual value.

3716
03:55:44,280 --> 03:55:48,640
Correct?

3717
03:55:48,640 --> 03:55:49,600
Correct. Case

3718
03:55:56,760 --> 03:55:57,680
file Right.

3719
03:55:57,760 --> 03:56:01,080
Now, tell me, guys,

3720
03:56:01,080 --> 03:56:05,080
indirect tributes
from the installation explanation

3721
03:56:05,080 --> 03:56:08,160
while creating the first test
and the driver class.

3722
03:56:08,280 --> 03:56:10,440
Everything. Yes, yes, yes. And I know

3723
03:56:11,760 --> 03:56:14,280
we have created so many classes.

3724
03:56:14,280 --> 03:56:17,040
We have written too much code.

3725
03:56:17,560 --> 03:56:20,280
These attributes and everything is there

3726
03:56:20,280 --> 03:56:24,240
is there anything is there anything
you guys didn't understand?

3727
03:56:24,240 --> 03:56:26,760
But is there anything
you guys have any problem?

3728
03:56:26,760 --> 03:56:30,000
If yes, I'm giving you

3729
03:56:30,000 --> 03:56:33,120
three to ask the questions and everything.

3730
03:56:33,120 --> 03:56:35,640
I'm here to resolve your problem
for the next 15 minutes.

3731
03:56:35,640 --> 03:56:38,040
Also, I don't have any problem in that.

3732
03:56:38,360 --> 03:56:39,760
Please ask the questions.

3733
03:56:39,760 --> 03:56:42,680
I want resolve all of your ideas inside
the session.

3734
03:56:42,680 --> 03:56:43,520
Pixel

3735
03:56:46,480 --> 03:56:47,600
is related to

3736
03:56:47,600 --> 03:56:50,800
your implementation
is related to your sighting

3737
03:56:50,800 --> 03:56:54,480
of the environment, downloading the jobs,
writing the code, anything

3738
03:57:05,760 --> 03:57:07,200
short, I will send this

3739
03:57:07,200 --> 03:57:13,160
code to you.

3740
03:57:13,160 --> 03:57:17,320
All we are creating for every single topic
new class.

3741
03:57:17,320 --> 03:57:22,240
Like we are just taking the code
from log in so that it will save our time.

3742
03:57:22,240 --> 03:57:24,600
You'll see what enable disable.

3743
03:57:24,600 --> 03:57:26,120
We have different class

3744
03:57:26,120 --> 03:57:30,920
for logging as different solution,
different precondition priority different.

3745
03:57:30,920 --> 03:57:31,440
Right.

3746
03:57:31,880 --> 03:57:34,800
So I'm using different class
for different concept.

3747
03:57:34,800 --> 03:57:37,720
I'm just taking the code to log in

3748
03:57:45,560 --> 03:57:46,640
this one

3749
03:57:49,440 --> 03:57:50,520
it is public unit.

3750
03:57:50,520 --> 03:57:56,760
There's two classes.

3751
03:57:56,760 --> 03:57:57,720
It is a public one.

3752
03:57:57,720 --> 03:58:06,040
That's why it is open unit test
class. Yep.

3753
03:58:06,040 --> 03:58:29,480
So first I'm going to commit this code.

3754
03:58:29,480 --> 03:58:31,520
Yeah, the slides I will share you

3755
03:58:33,680 --> 03:58:35,400
maybe in the canvas.

3756
03:58:35,400 --> 03:58:45,160
Okay, Sure, sure.

3757
03:58:45,200 --> 03:59:03,960
I will definitely take care
of all this things.

3758
03:59:03,960 --> 03:59:06,000
Take it. S right.

3759
03:59:06,000 --> 03:59:06,920
You'll see.

3760
03:59:06,920 --> 03:59:10,120
System
with small lesson system with capital S

3761
03:59:21,960 --> 03:59:23,320
Definitely like I try

3762
03:59:23,320 --> 03:59:34,080
to do that.

3763
03:59:34,080 --> 03:59:37,000
Yes, we will add comment also.

3764
03:59:37,000 --> 03:59:39,200
I think that gives us additions for sure.

3765
03:59:39,200 --> 04:00:01,720
Definitely.

3766
04:00:01,720 --> 04:00:03,000
How can I see the method?

3767
04:00:03,000 --> 04:00:05,160
We know the classes,

3768
04:00:05,480 --> 04:00:09,560
we're below the classes.

3769
04:00:09,560 --> 04:00:12,600
I didn't get that here.

3770
04:00:12,600 --> 04:00:14,360
You just need to click on this one.

3771
04:00:14,360 --> 04:00:16,040
The expansion

3772
04:00:19,840 --> 04:00:20,920
pink one, right?

3773
04:00:20,920 --> 04:00:23,920
So you just need to click here on

3774
04:00:24,640 --> 04:00:28,080
you have to click on this part.

3775
04:00:28,080 --> 04:00:32,040
I'm not sure then why?

3776
04:00:32,040 --> 04:00:34,760
Maybe I have to check that already, guys.

3777
04:00:35,360 --> 04:00:41,720
So no one has any question.

3778
04:00:41,720 --> 04:00:43,720
A social part for a second. Sure.

3779
04:00:43,720 --> 04:00:44,800
There you go.

3780
04:00:45,480 --> 04:01:04,160
This is the assumption part, right?

3781
04:01:04,680 --> 04:01:05,920
So that that's what I'm saying.

3782
04:01:05,920 --> 04:01:10,160
We will take it as a suggestion
and I will put the commands also there.

3783
04:01:10,160 --> 04:01:10,440
Right.

3784
04:01:10,440 --> 04:01:12,120
Whenever I write new code,

3785
04:01:12,120 --> 04:01:14,800
I should if I have already committed
the code right just now I can.

3786
04:01:14,800 --> 04:01:16,920
We did this already did.

3787
04:01:17,640 --> 04:01:19,000
Let me show you in the repository.

3788
04:01:19,000 --> 04:01:20,280
So I just completed work.

3789
04:01:25,480 --> 04:01:26,280
Can you see?

3790
04:01:26,280 --> 04:01:32,160
3 minutes ago I committed this code.

3791
04:01:32,160 --> 04:01:34,560
All right,
so homework you guys have got, right?

3792
04:01:34,560 --> 04:01:36,240
I gave you the homework.

3793
04:01:36,240 --> 04:01:40,240
I'm going to give you the slides
also from here, right?

3794
04:01:40,240 --> 04:01:43,680
For class two and three,
You just need to read the slides.

3795
04:01:44,040 --> 04:01:44,760
Fine.

3796
04:01:45,400 --> 04:01:48,560
So you can go through this slides
before our next lecture

3797
04:01:48,560 --> 04:01:51,600
that we will having the model slide
in canvas for sure.

3798
04:01:51,600 --> 04:01:55,240
Definitely. I may give you this.

3799
04:01:55,240 --> 04:02:06,800
Anything else that you need from my site?

3800
04:02:06,800 --> 04:02:10,040
Great. All right, guys, Then.
