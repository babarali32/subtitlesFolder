1
00:00:09,840 --> 00:00:12,680
Not so many messages today

2
00:00:12,680 --> 00:00:14,480
as Thanksgiving made you lazy.

3
00:00:14,480 --> 00:00:15,840
Good morning.

4
00:00:15,840 --> 00:00:18,600
Enjoyed Thanksgiving.

5
00:00:18,600 --> 00:00:20,200
Hello. Hello. Yep.

6
00:00:20,200 --> 00:00:22,440
I am feeling perfect.

7
00:00:22,440 --> 00:00:24,840
This morning I'm feeling great.

8
00:00:24,960 --> 00:00:28,040
As in, thank you.

9
00:00:29,440 --> 00:00:32,040
How was your two days off, guys?

10
00:00:32,040 --> 00:00:34,600
You guys revise your java.

11
00:00:35,040 --> 00:00:37,640
Good morning.

12
00:00:40,560 --> 00:00:41,640
Morning.

13
00:00:41,760 --> 00:00:42,960
Good morning.

14
00:00:43,360 --> 00:00:45,480
Good morning, old man.

15
00:00:45,480 --> 00:00:47,440
It's good to hear you are feeling better.

16
00:00:47,440 --> 00:00:48,600
Thank you.

17
00:00:48,600 --> 00:00:50,880
Morning, Katrina.

18
00:00:51,600 --> 00:00:53,680
Good morning.

19
00:00:54,080 --> 00:00:59,120
Give me your feeling.

20
00:00:59,120 --> 00:01:00,480
I am feeling great, Linda.

21
00:01:00,480 --> 00:01:02,280
And thank you.

22
00:01:06,280 --> 00:01:09,440
How are your Thanksgiving, guys?

23
00:01:11,160 --> 00:01:13,480
I hope you guys had a great time.

24
00:01:13,480 --> 00:01:23,840
The fact.

25
00:01:23,840 --> 00:01:25,320
Good morning, everyone.

26
00:01:25,320 --> 00:01:27,360
Hello, Sebastian.

27
00:01:28,000 --> 00:01:30,800
And how is your prep for Selena?

28
00:01:30,920 --> 00:01:33,840
You have tried
my first television programing.

29
00:01:34,440 --> 00:01:37,160
I should apply and Google

30
00:01:37,680 --> 00:01:38,440
it further.

31
00:01:38,440 --> 00:01:44,640
A holiday for me.

32
00:01:44,640 --> 00:01:46,880
No night

33
00:01:50,280 --> 00:01:52,520
and get out while it was still giving

34
00:01:53,560 --> 00:01:56,520
me giving out like this to each other.

35
00:01:57,920 --> 00:02:01,960
So today is class number 23.

36
00:02:03,760 --> 00:02:07,880
Somewhere at both
and then some PowerPoint slides.

37
00:02:09,720 --> 00:02:12,240
So I kids

38
00:02:12,240 --> 00:02:20,040
day three.

39
00:02:22,800 --> 00:02:25,200
You guys watch some
we do don't on on YouTube

40
00:02:25,920 --> 00:02:28,640
or the Selena.

41
00:02:33,600 --> 00:02:36,400
So your first class will be on Tuesday

42
00:02:36,960 --> 00:02:39,320
from now on weekdays.

43
00:02:40,040 --> 00:02:42,640
You guys will be having
your selenium classes

44
00:02:43,080 --> 00:02:45,760
and on weekend
you guys will be having your Java classes.

45
00:02:46,560 --> 00:02:48,840
What do you guys think?

46
00:02:48,840 --> 00:02:49,680
Are you guys okay?

47
00:02:49,680 --> 00:02:54,800
If we host Java reviews on Mondays

48
00:02:55,200 --> 00:02:57,520
and Selenium reviews on Tuesdays?

49
00:02:58,240 --> 00:03:01,520
Will you guys be joining
or you guys only want one

50
00:03:01,520 --> 00:03:04,320
review per week?

51
00:03:08,600 --> 00:03:10,040
It will only be for

52
00:03:10,040 --> 00:03:13,920
for like 2 to 3 weeks.

53
00:03:14,760 --> 00:03:17,520
Yes, because you guys will be starting
the Selenium

54
00:03:18,120 --> 00:03:23,440
and Java side by side from next week.

55
00:03:25,560 --> 00:03:25,960
I feel

56
00:03:25,960 --> 00:03:28,960
like we do reviews before every Java
class.

57
00:03:29,840 --> 00:03:30,640
And you.

58
00:03:31,960 --> 00:03:33,360
Yes. Simon, you are right.

59
00:03:33,360 --> 00:03:36,280
For those who are strong
and in programing on Java.

60
00:03:36,520 --> 00:03:40,440
You guys might feel this repetitive
because almost in

61
00:03:41,320 --> 00:03:43,520
every class I go to the concepts,

62
00:03:44,360 --> 00:03:49,240
but I think for every student
and for most of the far

63
00:03:49,320 --> 00:03:53,040
most of this class, what we have to do,
the reviews that they are,

64
00:03:53,040 --> 00:03:57,120
they're really helpful for others,

65
00:03:57,120 --> 00:04:01,440
especially the latest classes.

66
00:04:05,800 --> 00:04:06,120
Okay,

67
00:04:06,120 --> 00:04:09,160
so I will post about this in the course

68
00:04:09,160 --> 00:04:12,360
announcements
once I confirm it with other instructors.

69
00:04:13,080 --> 00:04:15,160
Who is teaching Selenium Muslim?

70
00:04:15,440 --> 00:04:19,320
Most probably will be teaching selenium.

71
00:04:20,640 --> 00:04:23,480
Reviews are good for interacting
with instructors.

72
00:04:24,880 --> 00:04:29,320
It's good for those
who are missing classes.

73
00:04:29,320 --> 00:04:34,320
And I think I will
be doing the Selenium reviews

74
00:04:36,920 --> 00:04:38,840
and I guess

75
00:04:38,840 --> 00:04:41,480
Suhail will be doing these Java reviews

76
00:04:42,000 --> 00:04:45,840
and regular classes of Selenium
will be taken care

77
00:04:45,840 --> 00:04:49,400
of by Muslim and regular classes of Java
will be taken care of by me.

78
00:04:50,320 --> 00:04:52,800
So this is a tentative

79
00:04:54,680 --> 00:04:56,720
for now,
but I will personally course announcement

80
00:04:57,040 --> 00:05:00,160
once I it is confirmed.

81
00:05:01,560 --> 00:05:06,800
So I mean could you a file.

82
00:05:09,080 --> 00:05:13,720
So do you guys remember from the last
Java class we were discussing

83
00:05:13,720 --> 00:05:18,000
about the final keyword,

84
00:05:18,000 --> 00:05:21,600
how many uses we learned

85
00:05:21,600 --> 00:05:25,120
of the final keyword?

86
00:05:25,120 --> 00:05:26,480
Three. Right.

87
00:05:26,480 --> 00:05:28,640
So first

88
00:05:29,040 --> 00:05:30,480
final

89
00:05:31,000 --> 00:05:34,440
is a keyword.

90
00:05:34,440 --> 00:05:37,320
And in Java

91
00:05:40,440 --> 00:05:43,480
that we can use

92
00:05:46,760 --> 00:05:49,840
with classes

93
00:05:50,880 --> 00:05:52,400
for years

94
00:05:56,200 --> 00:06:00,120
and methods.

95
00:06:02,240 --> 00:06:03,360
Good morning, everyone.

96
00:06:03,360 --> 00:06:06,280
So is it a

97
00:06:06,280 --> 00:06:08,840
is it an access modifier or non

98
00:06:08,840 --> 00:06:15,120
access modifier?

99
00:06:15,120 --> 00:06:18,720
It's a non access modifier, right?

100
00:06:19,400 --> 00:06:20,680
The final is a keyword

101
00:06:27,400 --> 00:06:28,640
and it falls under the

102
00:06:28,640 --> 00:06:56,240
category of non nexus modifier.

103
00:06:56,880 --> 00:07:01,200
So what happens is
when we use the final keyword

104
00:07:01,200 --> 00:07:02,880
with the class

105
00:07:10,920 --> 00:07:13,080
final classes cannot inherit

106
00:07:15,000 --> 00:07:17,280
final classes can inherit

107
00:07:18,400 --> 00:07:21,240
the class which is final,

108
00:07:21,240 --> 00:07:23,520
cannot be inherited by other classes.

109
00:07:23,840 --> 00:07:27,480
So if a class is final,
that class can actually inherit

110
00:07:27,720 --> 00:07:33,240
from other classes, but no other class
can inherit from this class.

111
00:07:33,800 --> 00:07:41,640
So it will be good if we see it like this.

112
00:07:41,640 --> 00:07:44,880
Final classes cannot be inherited.

113
00:07:44,880 --> 00:07:49,240
It's specified this class cannot
be modified for the right.

114
00:07:49,560 --> 00:07:53,400
We cannot have this flexibility
that if someone is trying

115
00:07:53,400 --> 00:07:56,520
to use some parts of our class,

116
00:07:56,520 --> 00:07:59,520
some methods are fears.

117
00:07:59,520 --> 00:08:02,720
If we don't want this, we we can.

118
00:08:02,920 --> 00:08:05,400
What we can do, we can restrict this.

119
00:08:06,000 --> 00:08:09,360
Can you guys think of any benefit
of doing that? Why?

120
00:08:09,360 --> 00:08:31,080
Why might someone want to do that?

121
00:08:35,000 --> 00:08:36,200
Preventing hacking

122
00:08:36,200 --> 00:08:40,160
that to.

123
00:08:40,160 --> 00:08:41,880
Okay, so

124
00:08:42,120 --> 00:08:46,080
no one can change

125
00:08:54,400 --> 00:08:55,400
prevents people

126
00:08:55,400 --> 00:08:58,880
from tampering with perfection

127
00:09:09,280 --> 00:09:11,440
where security guards might use it more

128
00:09:14,160 --> 00:09:18,120
so the first thing is,

129
00:09:18,720 --> 00:09:24,280
is if you guys remember,
there was a disadvantage off inheritance.

130
00:09:25,560 --> 00:09:27,440
Do you guys remember the disadvantages

131
00:09:27,440 --> 00:09:29,120
of inheritance

132
00:09:36,960 --> 00:09:37,640
to protect?

133
00:09:37,640 --> 00:09:40,920
If we want to hide?

134
00:09:42,440 --> 00:09:46,600
So final keyword is actually not
allowing us

135
00:09:47,040 --> 00:09:49,480
to have that inheritance relationship.

136
00:09:50,360 --> 00:09:55,320
So the disadvantages
that we discussed about the inheritance

137
00:09:56,320 --> 00:09:59,040
are the reasons why someone

138
00:09:59,520 --> 00:10:02,600
might not want to use

139
00:10:02,640 --> 00:10:03,560
inheritance.

140
00:10:03,560 --> 00:10:08,400
And for that reason they can use the final
keyword depending from each other.

141
00:10:08,400 --> 00:10:12,520
If we change it in a class variable
that will affect all other subclasses.

142
00:10:12,520 --> 00:10:14,880
So there was a specific keyword for that.
There is.

143
00:10:14,920 --> 00:10:18,080
There was a specific terminology
that we use in the industry

144
00:10:18,840 --> 00:10:23,640
when we have this problem that classes,
they are closely related to each other.

145
00:10:23,640 --> 00:10:26,040
When we inherit from one class

146
00:10:40,880 --> 00:10:43,640
diamond problem.

147
00:10:44,560 --> 00:10:46,960
I know you are always late.

148
00:10:46,960 --> 00:10:48,200
So there we have.

149
00:10:48,200 --> 00:10:49,560
We will discuss that.

150
00:10:49,560 --> 00:10:52,400
We can have it tightly compiled.

151
00:10:53,000 --> 00:10:55,440
Are are we going to have two classes
at Berkeley?

152
00:10:55,440 --> 00:10:56,760
Couple. Right.

153
00:10:56,760 --> 00:11:01,080
And we we make some changes in one class
that severely

154
00:11:02,320 --> 00:11:05,560
can effect
and be dependent class the Jared class.

155
00:11:05,560 --> 00:11:05,880
Right.

156
00:11:05,880 --> 00:11:09,760
So classes they are tightly coupled
when we use the inheritance

157
00:11:09,760 --> 00:11:12,520
relationship between them. Right.

158
00:11:12,840 --> 00:11:16,040
What was the other disadvantage

159
00:11:19,320 --> 00:11:21,560
that happens in multiple

160
00:11:21,560 --> 00:11:24,160
it happens in all types of inheritance is

161
00:11:28,040 --> 00:11:30,280
when there is a single child class.

162
00:11:30,760 --> 00:11:36,240
If you are making it independent
class, that child class, you got affected.

163
00:11:36,240 --> 00:11:39,760
But the effect is more
when we have multiple child classes

164
00:11:40,160 --> 00:11:44,600
decreases
speed, change is all dependent classes.

165
00:11:44,760 --> 00:11:47,040
There is one more issue
with the inheritance guys.

166
00:11:47,040 --> 00:11:47,840
If you

167
00:11:49,000 --> 00:11:50,280
observe

168
00:11:51,000 --> 00:11:55,400
when we create the
object of the child class and if there are

169
00:11:55,880 --> 00:11:58,680
hundreds of parents or grandparents

170
00:11:58,680 --> 00:12:01,960
or all the ancestors in that hierarchy,

171
00:12:03,360 --> 00:12:07,680
we will or will be object
before all those hundred classes, will

172
00:12:07,680 --> 00:12:11,880
they be created before the actual
object of that class is created.

173
00:12:11,880 --> 00:12:17,360
So let's say there are 100 ancestors
before the class and now you are trying

174
00:12:17,360 --> 00:12:21,720
to create the object of that class
which is on position number 101.

175
00:12:22,800 --> 00:12:24,720
So when I create the object

176
00:12:24,720 --> 00:12:30,720
of that class, which is acquisition
number 101, what happens to those classes

177
00:12:30,720 --> 00:12:40,640
which are about in that hierarchy?

178
00:12:40,640 --> 00:12:43,760
We use the final keyword in a method
to indicate

179
00:12:43,760 --> 00:12:47,880
that the method cannot be overridden
by a subclass

180
00:12:51,120 --> 00:12:53,040
the yesterdays.

181
00:12:53,160 --> 00:12:55,600
So all,

182
00:12:55,600 --> 00:12:59,920
all the, the, the,

183
00:12:59,920 --> 00:13:03,200
the object for all those

184
00:13:04,480 --> 00:13:07,000
ancestors first

185
00:13:07,000 --> 00:13:11,040
be objects of all those hundred classes
will be created.

186
00:13:11,840 --> 00:13:14,640
The constructors of those classes
will be called.

187
00:13:15,200 --> 00:13:18,640
The fears
of all those classes will be initialized

188
00:13:19,240 --> 00:13:21,360
and then add the last

189
00:13:21,840 --> 00:13:25,480
the object of the child class, the

190
00:13:25,480 --> 00:13:29,360
the child which is at position number 101.

191
00:13:29,360 --> 00:13:31,560
The object of that class is created.

192
00:13:32,560 --> 00:13:35,040
So when you have this deep hierarchy,

193
00:13:35,640 --> 00:13:39,760
the object creation,
it can be super, super slow.

194
00:13:40,080 --> 00:13:40,640
Okay.

195
00:13:40,640 --> 00:13:43,680
And if you don't want this behavior,
but you can do

196
00:13:43,720 --> 00:13:48,120
maybe you want to restrict
the further inheritance, maybe offer

197
00:13:48,120 --> 00:13:52,200
three classes or four classes
or five classes wherever you find it

198
00:13:53,240 --> 00:13:54,480
comfortable. Okay.

199
00:13:54,480 --> 00:13:58,120
So to to break that chain that someone

200
00:13:58,120 --> 00:14:01,160
don't keep on inheriting

201
00:14:01,160 --> 00:14:03,960
from the classes in a very deep hierarchy,

202
00:14:04,120 --> 00:14:06,680
we can use the final keyword anywhere

203
00:14:07,080 --> 00:14:09,360
to to avoid that behavior

204
00:14:09,680 --> 00:14:13,400
so that the object creation is not super
super slow.

205
00:14:13,400 --> 00:14:18,240
So that be so that someone
is not trying to overuse inheritance.

206
00:14:20,000 --> 00:14:21,000
So for those

207
00:14:21,000 --> 00:14:23,600
reasons we can also use the final fewer

208
00:14:24,360 --> 00:14:29,840
so when used with subclasses,
when used with classes,

209
00:14:31,320 --> 00:14:34,800
those classes cannot be inherited.

210
00:14:35,160 --> 00:14:38,640
But can we use implement schema
to use methods

211
00:14:40,040 --> 00:14:42,520
if that class is final.

212
00:14:42,600 --> 00:14:47,840
So I show first thing implements
is not used with classes.

213
00:14:47,840 --> 00:14:50,520
Implements is only used with interfaces

214
00:14:52,400 --> 00:14:57,000
and if you are making

215
00:14:57,400 --> 00:15:02,920
and you cannot have an interface
as final and implement at the same time.

216
00:15:03,280 --> 00:15:06,560
So technically this,
this question does not make any sense

217
00:15:07,920 --> 00:15:11,280
because interfaces
they are always there to be inherited

218
00:15:11,280 --> 00:15:12,960
and the methods
they should be implemented.

219
00:15:12,960 --> 00:15:15,760
If you are making that final,

220
00:15:15,760 --> 00:15:17,200
that means

221
00:15:17,480 --> 00:15:20,160
no one will be able to implement
the methods.

222
00:15:20,160 --> 00:15:20,920
Then why? Why?

223
00:15:20,920 --> 00:15:26,800
Why should we create the interface
on the first place?

224
00:15:26,800 --> 00:15:34,000
If we can select,
we will be discussing today.

225
00:15:34,000 --> 00:15:37,840
So once we have gone through them,
then then maybe these things will

226
00:15:37,840 --> 00:15:38,800
make more sense

227
00:15:41,280 --> 00:15:42,360
to different things.

228
00:15:42,360 --> 00:15:48,120
Then the other question how can we use
matters if the class is final?

229
00:15:48,120 --> 00:15:49,200
We cannot.

230
00:15:49,200 --> 00:15:51,200
That's why we are making the class final.

231
00:15:52,920 --> 00:15:55,360
Private and final methods

232
00:15:55,360 --> 00:15:59,680
can be overridden but not overloaded.

233
00:15:59,880 --> 00:16:03,800
So if you are saying it
in a reverse order, private

234
00:16:03,800 --> 00:16:08,120
and final methods can be overloaded
but can not be overridden.

235
00:16:08,360 --> 00:16:11,760
Yeah.

236
00:16:11,760 --> 00:16:12,680
Okay. Okay. You.

237
00:16:12,680 --> 00:16:14,040
You guys are always right.

238
00:16:14,040 --> 00:16:16,800
My mistake. My bad.

239
00:16:16,840 --> 00:16:25,240
I just make.

240
00:16:25,240 --> 00:16:28,120
Thank you so

241
00:16:28,920 --> 00:16:31,560
it cannot be inherited to

242
00:16:31,560 --> 00:16:32,880
prevent

243
00:16:35,920 --> 00:16:38,440
all the use of

244
00:16:39,880 --> 00:16:49,440
inheritance.

245
00:16:49,440 --> 00:16:51,800
We are your students. Yep.

246
00:16:52,320 --> 00:16:54,080
Yep. No, no. You are my boss.

247
00:16:54,080 --> 00:16:55,640
Actually, we do not.

248
00:16:55,640 --> 00:16:59,480
Students. But

249
00:17:02,720 --> 00:17:03,760
I'm just kidding.

250
00:17:03,760 --> 00:17:08,640
So our use of inheritance
final matters cannot be overloaded.

251
00:17:08,880 --> 00:17:10,920
No, they can be overloaded

252
00:17:13,240 --> 00:17:14,280
to choose from.

253
00:17:14,280 --> 00:17:15,800
We final.

254
00:17:15,800 --> 00:17:20,280
Final can be overloaded.

255
00:17:20,280 --> 00:17:20,720
Okay.

256
00:17:21,320 --> 00:17:22,800
Can we act like a boss?

257
00:17:22,800 --> 00:17:24,800
You guys are always like bosses.

258
00:17:25,360 --> 00:17:29,240
Your Highness Nikolai.

259
00:17:29,240 --> 00:17:30,080
Okay. Okay.

260
00:17:30,080 --> 00:17:34,720
But they cannot be overridden.

261
00:17:34,720 --> 00:17:37,880
Okay, So. And then we.

262
00:17:39,480 --> 00:17:42,160
Yeah, there was a movie also on this.

263
00:17:42,480 --> 00:17:46,040
I think it was maybe Boss
did the name or something like that.

264
00:17:46,160 --> 00:17:47,720
It was a good movie.

265
00:17:47,720 --> 00:17:51,560
So what was this
second use of the final keyword

266
00:17:51,560 --> 00:17:53,680
that we discussed? Guys

267
00:18:00,760 --> 00:18:02,320
with the methods, Right.

268
00:18:02,320 --> 00:18:06,840
So what happens when final methods can
or can be overloaded?

269
00:18:07,080 --> 00:18:09,120
Final decision? Yes.

270
00:18:09,960 --> 00:18:12,280
So usually with the methods,

271
00:18:12,840 --> 00:18:16,560
with the method, if if we use the final
keyword with the method,

272
00:18:16,800 --> 00:18:20,320
can we overload that method

273
00:18:26,760 --> 00:18:29,160
and can we override that method

274
00:18:33,080 --> 00:18:35,360
when used with

275
00:18:36,440 --> 00:18:40,920
matters?

276
00:18:40,920 --> 00:18:45,000
That method cannot be

277
00:18:49,600 --> 00:18:52,320
overridden in

278
00:18:55,880 --> 00:18:56,280
style

279
00:18:56,280 --> 00:19:07,320
classes.

280
00:19:07,320 --> 00:19:08,040
Okay.

281
00:19:08,040 --> 00:19:11,400
And the third use was certified and

282
00:19:13,160 --> 00:19:15,440
the third use was will be phased

283
00:19:15,720 --> 00:19:19,640
by when we use the final keyword
with fears

284
00:19:21,360 --> 00:19:24,000
in. I override that fear

285
00:19:25,240 --> 00:19:27,760
then I have same name field

286
00:19:27,960 --> 00:19:35,400
in in general class.

287
00:19:35,400 --> 00:19:36,640
Oh my God.

288
00:19:36,640 --> 00:19:39,280
Well, yes we can. We can.

289
00:19:39,280 --> 00:19:40,400
We can.

290
00:19:40,400 --> 00:19:43,160
We cannot change the value of that field.

291
00:19:43,800 --> 00:19:45,840
We cannot change the value of that. We

292
00:19:52,440 --> 00:19:56,000
so I think we need to do a small demo.

293
00:19:56,000 --> 00:19:59,160
So when used

294
00:20:02,760 --> 00:20:03,440
with fields,

295
00:20:03,440 --> 00:20:07,000
we cannot change

296
00:20:07,000 --> 00:20:11,240
the value of their period

297
00:20:17,720 --> 00:20:18,120
because

298
00:20:21,720 --> 00:20:23,080
let me show you quickly

299
00:20:23,080 --> 00:20:33,000
a demo.

300
00:20:33,000 --> 00:20:33,840
The expert.

301
00:20:33,840 --> 00:20:48,360
I said,
can you show me one more example? Yes.

302
00:20:48,360 --> 00:20:51,920
So let's have a

303
00:20:52,320 --> 00:20:55,800
let's try to check.

304
00:20:55,800 --> 00:20:58,760
So basically,
when someone is using final in class,

305
00:20:58,760 --> 00:21:01,000
we break the chain of inheritance.

306
00:21:01,000 --> 00:21:02,800
Inheritance and obtain.

307
00:21:02,800 --> 00:21:08,360
But if that class is not final, but just
the method is final, we can use it.

308
00:21:08,400 --> 00:21:11,960
Yes, we can use it.

309
00:21:11,960 --> 00:21:12,840
No, no, it's fine.

310
00:21:12,840 --> 00:21:17,200
Ask as many questions as you guys want.

311
00:21:17,200 --> 00:21:20,520
We can declare the value in child
class, correct? Yes.

312
00:21:21,360 --> 00:21:24,720
So let me try
to declare a field as private

313
00:21:25,920 --> 00:21:30,120
and let me try to declare it as final

314
00:21:30,120 --> 00:21:35,560
and let me specify the data type

315
00:21:36,760 --> 00:21:38,440
and then

316
00:21:38,640 --> 00:21:41,120
the name of the activity.

317
00:21:41,880 --> 00:21:42,640
Right.

318
00:21:42,720 --> 00:21:45,960
And let's let's let's call it

319
00:21:45,960 --> 00:21:51,160
let's call it.

320
00:21:51,160 --> 00:21:53,800
Okay. So there is no issue.

321
00:21:53,800 --> 00:21:58,600
I can have a field as private and as final

322
00:21:59,080 --> 00:22:03,640
and the same time, no issues with that.

323
00:22:03,640 --> 00:22:07,720
Then I can can I use public or

324
00:22:08,880 --> 00:22:11,760
private or are protected

325
00:22:11,760 --> 00:22:14,520
access modifiers with the final fields?

326
00:22:15,800 --> 00:22:23,680
What do you guys think? So

327
00:22:25,760 --> 00:22:29,080
I can have a protected

328
00:22:30,840 --> 00:22:35,520
final age.

329
00:22:35,520 --> 00:22:38,040
Sorry. Indeed it is.

330
00:22:38,080 --> 00:22:40,880
Is equal to done.

331
00:22:41,200 --> 00:22:43,000
All right. No issues.

332
00:22:43,000 --> 00:22:45,240
I can have a public

333
00:22:47,400 --> 00:22:49,080
final

334
00:22:50,600 --> 00:22:53,400
double.

335
00:22:53,400 --> 00:23:01,520
We is equal 30.

336
00:23:01,520 --> 00:23:02,880
No issues.

337
00:23:02,880 --> 00:23:04,920
And finally I can have

338
00:23:06,720 --> 00:23:08,040
final

339
00:23:10,880 --> 00:23:11,880
double.

340
00:23:12,920 --> 00:23:18,160
I fight for that.

341
00:23:18,480 --> 00:23:20,160
Yes or no issues in that.

342
00:23:20,160 --> 00:23:23,040
I can use final keyword

343
00:23:23,720 --> 00:23:29,200
when I am having
any access modified with the

344
00:23:30,600 --> 00:23:31,440
fields, but

345
00:23:31,440 --> 00:23:34,440
not static all because it's non access.

346
00:23:34,440 --> 00:23:37,240
So let me let me declare it a

347
00:23:39,480 --> 00:23:42,080
static final

348
00:23:43,240 --> 00:23:46,000
number of

349
00:23:47,200 --> 00:23:48,160
legs.

350
00:23:48,920 --> 00:23:56,560
Oops is equal to the right.

351
00:23:56,760 --> 00:24:00,000
So no issues
because they don't contradict feature.

352
00:24:00,000 --> 00:24:04,360
The right static
means something that is shared

353
00:24:04,640 --> 00:24:07,840
across all the objects of that class.

354
00:24:08,200 --> 00:24:12,120
Final means no object can modify that.

355
00:24:12,360 --> 00:24:16,960
So if you want to share a constant
and sorry,

356
00:24:16,960 --> 00:24:19,760
I should be capitalizing all of these

357
00:24:21,320 --> 00:24:22,920
because they are fine.

358
00:24:22,920 --> 00:24:24,960
So final variable is a

359
00:24:27,080 --> 00:24:28,680
convention

360
00:24:29,080 --> 00:24:31,560
that we always kept oops,

361
00:24:33,200 --> 00:24:40,560
always capitalized them.

362
00:24:40,560 --> 00:24:44,320
And let's say if I want to have two words

363
00:24:44,320 --> 00:24:47,280
in a variable,
then I use underscore, underscore.

364
00:24:47,680 --> 00:24:49,800
So then we are declaring
a normal variable.

365
00:24:49,800 --> 00:24:52,080
We capitalized the first
letter of the word in the

366
00:24:53,560 --> 00:24:54,960
case notation,

367
00:24:54,960 --> 00:24:57,960
but if it's a constant

368
00:24:59,160 --> 00:25:01,440
means we are using the final keyword,
then we

369
00:25:02,600 --> 00:25:04,520
before each word starts,

370
00:25:04,520 --> 00:25:07,440
we put back underscore
if results with convention.

371
00:25:08,920 --> 00:25:12,720
So let's say if I have to write something
like this,

372
00:25:13,120 --> 00:25:14,800
we are of

373
00:25:23,000 --> 00:25:25,000
and the definition.

374
00:25:25,800 --> 00:25:32,400
So I don't have any issue issues when I am
doing this thing with the feared.

375
00:25:32,400 --> 00:25:34,080
So no issues with the first.

376
00:25:34,080 --> 00:25:37,840
Now let's try to understand
the use of the final

377
00:25:37,840 --> 00:25:39,040
keyword

378
00:25:40,880 --> 00:25:42,240
with the method.

379
00:25:42,240 --> 00:25:43,640
So what do you guys think?

380
00:25:43,640 --> 00:25:47,000
And I have a method as

381
00:25:47,160 --> 00:25:53,480
private and final.

382
00:25:53,480 --> 00:25:56,440
Can you please repeat the capitalization

383
00:25:57,560 --> 00:25:59,960
use so

384
00:25:59,960 --> 00:26:04,680
when we are declaring it
constant noun means we are.

385
00:26:04,680 --> 00:26:07,280
If we are using the final keyword,

386
00:26:07,960 --> 00:26:09,480
that means

387
00:26:11,680 --> 00:26:13,840
I have to start.

388
00:26:13,840 --> 00:26:16,040
So all the letters,
they should be capital.

389
00:26:16,920 --> 00:26:21,240
And if I am having multiple words
in a variable name.

390
00:26:21,680 --> 00:26:26,480
Previously we were using the camel case
notate notation.

391
00:26:26,480 --> 00:26:32,400
Each letter of the friend in the first letter of each word was capitalized, right,

392
00:26:33,360 --> 00:26:34,360
other than the first word.

393
00:26:34,360 --> 00:26:39,440
So in here we use these underscores
if we are having multiple words

394
00:26:39,440 --> 00:26:43,160
in a variable. So.

395
00:26:43,520 --> 00:26:44,640
Right, we're fine.

396
00:26:44,640 --> 00:26:47,320
But you didn't capitalize last two ones.

397
00:26:48,280 --> 00:26:49,480
Oh yes.

398
00:26:49,480 --> 00:26:51,400
Sorry, I should

399
00:27:30,040 --> 00:27:33,480
go for it.

400
00:27:33,920 --> 00:27:38,360
So private final, let's say,

401
00:27:38,360 --> 00:27:41,560
and then obviously be written by and then

402
00:27:43,680 --> 00:27:44,960
print.

403
00:27:45,360 --> 00:27:49,120
Let's say maybe name.

404
00:27:49,120 --> 00:27:55,720
So if we are using the normal

405
00:27:56,560 --> 00:27:59,680
family association,
we capitalized the first word, but in

406
00:27:59,680 --> 00:28:02,920
constant, all the letters are subject
and we use underscore.

407
00:28:03,120 --> 00:28:04,920
Do you have to do this?

408
00:28:04,920 --> 00:28:06,960
If you don't want that, give you an error?

409
00:28:06,960 --> 00:28:08,080
No, no.

410
00:28:08,080 --> 00:28:11,200
There's just a convention

411
00:28:12,040 --> 00:28:14,080
in created the readability of the code.

412
00:28:14,240 --> 00:28:17,800
The yes when we capitalized

413
00:28:17,800 --> 00:28:21,840
we need to use the underscore. So

414
00:28:23,320 --> 00:28:25,200
right now if you guys

415
00:28:28,840 --> 00:28:30,640
your if you guys have

416
00:28:30,640 --> 00:28:34,320
your mouth over the final keyword

417
00:28:35,120 --> 00:28:36,320
intelligent is

418
00:28:36,320 --> 00:28:39,600
is showing something entirely
do saying there Tasker

419
00:28:40,680 --> 00:28:44,760
you are declaring a private
method as final

420
00:28:45,760 --> 00:28:47,840
is there a need for them guys

421
00:28:48,800 --> 00:28:54,200
because for private matters
they never participate in inheritance.

422
00:28:54,200 --> 00:28:57,000
If something is not participating
in inheritance,

423
00:28:58,320 --> 00:29:01,560
still someone can not still
someone can not

424
00:29:04,600 --> 00:29:06,480
override of that, right?

425
00:29:06,480 --> 00:29:10,080
So I can have the same behavior

426
00:29:10,200 --> 00:29:13,800
by just specifying

427
00:29:13,800 --> 00:29:15,080
only the private field.

428
00:29:15,080 --> 00:29:21,440
I don't need to specify the final keyword
with private variables. Now.

429
00:29:21,520 --> 00:29:22,800
It makes sense, guys.

430
00:29:22,800 --> 00:29:25,760
If something is not participating
in inheritance,

431
00:29:26,280 --> 00:29:28,840
there is already no way

432
00:29:28,840 --> 00:29:32,400
for the child class to override that.

433
00:29:32,400 --> 00:29:33,240
Right.

434
00:29:33,840 --> 00:29:40,480
So making that final as well.

435
00:29:40,480 --> 00:29:45,880
So guys, just give me one moment.

436
00:29:46,200 --> 00:29:50,880
Otherwise I will be destroyed
for the rest of my life

437
00:29:51,160 --> 00:29:55,200
because she is asking me
if I am busy right now.

438
00:29:55,480 --> 00:29:57,360
So can I have 2 minutes from you

439
00:30:02,880 --> 00:30:05,680
now? The next message will be,

440
00:30:05,680 --> 00:30:07,240
Is the class important to learn?

441
00:30:07,240 --> 00:30:11,080
Me and my answer definitely will be no.

442
00:30:11,120 --> 00:30:12,480
The class is not important.

443
00:30:12,480 --> 00:30:14,520
Then you write it.

444
00:30:15,240 --> 00:30:18,480
So I'm just getting it so

445
00:30:19,960 --> 00:30:21,840
best practice

446
00:30:22,000 --> 00:30:24,400
class is nothing is

447
00:30:32,840 --> 00:30:33,200
okay.

448
00:30:33,200 --> 00:30:38,760
So if I am already it is early morning.

449
00:30:38,760 --> 00:30:43,080
What's going on with.

450
00:30:43,080 --> 00:30:48,600
Okay, so now you guys are asking
who is most important?

451
00:30:48,600 --> 00:30:52,560
Okay, so if I am having a private

452
00:30:53,120 --> 00:30:56,760
and final at the same time,
actually there is no need

453
00:30:57,960 --> 00:31:00,000
to use the final keyword. Okay.

454
00:31:00,000 --> 00:31:04,560
Because I am already having that behavior.

455
00:31:04,560 --> 00:31:08,640
All right, now, now let's try to use

456
00:31:13,440 --> 00:31:14,560
this with

457
00:31:16,080 --> 00:31:17,760
default access modifier.

458
00:31:17,760 --> 00:31:18,040
Right?

459
00:31:18,040 --> 00:31:20,560
So I don't put any access modifier,

460
00:31:22,240 --> 00:31:24,960
I make it final

461
00:31:26,280 --> 00:31:29,200
and then maybe

462
00:31:29,200 --> 00:31:30,440
put in edge

463
00:31:36,200 --> 00:31:39,720
and then I put oops aging here.

464
00:31:39,760 --> 00:31:40,320
Right.

465
00:31:40,920 --> 00:31:44,640
So this time if you guys notice
intelligent didn't highlight

466
00:31:45,160 --> 00:31:50,000
this final keyword in here
because this time it is making sense

467
00:31:50,000 --> 00:31:54,000
because defaults
they participate in inheritance.

468
00:31:54,440 --> 00:31:57,080
And if something is participating
in inheritance,

469
00:31:57,120 --> 00:32:00,880
yes there are there are chances
that may be the child class.

470
00:32:00,880 --> 00:32:05,440
It might want to override that
or it might not like override that.

471
00:32:05,760 --> 00:32:09,640
So I can use the final keyword
with the non

472
00:32:09,640 --> 00:32:12,280
access modifier
and the default access modifier.

473
00:32:12,640 --> 00:32:16,680
And then let me quickly show you how
what happens,

474
00:32:16,680 --> 00:32:22,480
if we will, there be an issue if the word
final is that beginning of the field

475
00:32:22,480 --> 00:32:27,120
or step in line,
you mean this is after this word

476
00:32:28,040 --> 00:32:32,160
like this.

477
00:32:32,160 --> 00:32:35,720
So yes, if it is a competition between the

478
00:32:37,720 --> 00:32:41,120
return type of the method, then yes,
it matters.

479
00:32:41,120 --> 00:32:46,720
But if the bulk of the keywords

480
00:32:46,720 --> 00:32:49,200
they are non access modifiers,

481
00:32:49,920 --> 00:32:54,360
then you can change their position
and then you can change their position.

482
00:32:54,600 --> 00:32:58,080
And if one word is X,

483
00:32:58,680 --> 00:33:02,800
one word is excess modifier
and the other one is non access modifier,

484
00:33:02,800 --> 00:33:06,760
then again we will not be having issue,
but the best practice

485
00:33:06,760 --> 00:33:10,320
is always specify
the access modifier first

486
00:33:10,680 --> 00:33:17,120
and then specify the non access modifier
to increase the readability of the board.

487
00:33:17,440 --> 00:33:19,920
But technically
there will not be an issue.

488
00:33:19,920 --> 00:33:20,800
They will not be.

489
00:33:20,800 --> 00:33:23,240
They will not be.

490
00:33:23,240 --> 00:33:26,000
It will not be a big problem.

491
00:33:26,360 --> 00:33:28,720
No, we need to follow the same rules

492
00:33:28,720 --> 00:33:31,760
for capitalizing variables
with the methods.

493
00:33:31,760 --> 00:33:33,840
No, with variables. We don't do that

494
00:33:35,880 --> 00:33:36,360
because there

495
00:33:36,360 --> 00:33:39,400
is no such thing as constraint methods.

496
00:33:39,400 --> 00:33:40,120
Right.

497
00:33:40,160 --> 00:33:43,160
This terminology,
it only belongs to fields.

498
00:33:44,080 --> 00:33:50,880
There is no such thing
as constraint methods.

499
00:33:50,880 --> 00:33:53,960
So now let me use protected

500
00:33:56,480 --> 00:34:00,080
and then final and then Lord.

501
00:34:00,080 --> 00:34:02,400
And then bring it to maybe

502
00:34:04,200 --> 00:34:11,360
a height.

503
00:34:11,360 --> 00:34:14,000
And again, I don't have any issues, right?

504
00:34:14,000 --> 00:34:18,200
I don't have any issues.

505
00:34:18,200 --> 00:34:25,120
And then I can do it with the oops

506
00:34:37,200 --> 00:34:43,160
and weird.

507
00:34:43,160 --> 00:34:47,760
So no issues with this.

508
00:34:47,760 --> 00:34:48,400
All right.

509
00:34:48,400 --> 00:34:49,760
There is one more thing.

510
00:34:49,760 --> 00:34:52,120
What about the constructors guys?

511
00:34:52,120 --> 00:34:53,440
What about the constructors?

512
00:34:53,440 --> 00:34:58,080
Can I use the final keyword
with constructor?

513
00:34:58,080 --> 00:35:05,360
So if I write final and then constructor,

514
00:35:05,360 --> 00:35:08,920
I will be getting an error.

515
00:35:08,920 --> 00:35:10,440
Can you guys tell me why?

516
00:35:10,440 --> 00:35:14,000
Why it is not allowing me to have final

517
00:35:14,000 --> 00:35:20,920
with constructor?

518
00:35:20,920 --> 00:35:23,560
Okay. So constructors.

519
00:35:23,880 --> 00:35:28,320
They belong to a class,
They belong to a class.

520
00:35:28,480 --> 00:35:33,200
The purpose of the constructors
is to initialize the instance fields.

521
00:35:33,600 --> 00:35:33,960
Yeah.

522
00:35:34,320 --> 00:35:37,440
And because they don't participate
in the inheritance,

523
00:35:37,720 --> 00:35:42,640
so neither we can have
a static keyword in here.

524
00:35:44,200 --> 00:35:45,600
Actually no

525
00:35:45,600 --> 00:35:50,120
non access
modifier is allowed with constructors,

526
00:35:50,600 --> 00:35:52,840
so they are the non

527
00:35:54,160 --> 00:35:58,280
excess modifier givers
that we will discuss today.

528
00:35:58,680 --> 00:36:13,640
They are also not allowed
with constructors.

529
00:36:13,640 --> 00:36:18,000
Okay, so you guys now know all about.

530
00:36:18,400 --> 00:36:22,480
Is there anything that you guys
want to add to this example?

531
00:36:22,800 --> 00:36:29,800
Any question? So

532
00:36:30,840 --> 00:36:35,880
all types of fields, all types of matter?

533
00:36:35,880 --> 00:36:38,520
Oh yes. There is one more thing.

534
00:36:38,520 --> 00:36:42,240
A static method, right? So

535
00:36:43,120 --> 00:36:46,080
I have this static fear,

536
00:36:46,080 --> 00:36:49,520
so let me try to have final

537
00:36:50,040 --> 00:36:51,840
sorry public

538
00:36:53,520 --> 00:36:55,800
spirited final.

539
00:36:55,800 --> 00:36:58,880
Are print

540
00:37:03,600 --> 00:37:06,120
and little flags

541
00:37:08,920 --> 00:37:12,120
and obviously I need to metatrader
and type.

542
00:37:13,080 --> 00:37:15,960
Okay.

543
00:37:15,960 --> 00:37:18,000
And then

544
00:37:18,440 --> 00:37:20,000
can I use this double filter?

545
00:37:20,000 --> 00:37:23,280
Can I can I print out the double field
as well in here base?

546
00:37:23,600 --> 00:37:47,040
Base? Yes.

547
00:37:47,040 --> 00:37:48,240
Why not?

548
00:37:48,240 --> 00:37:53,600
Why not?

549
00:37:53,600 --> 00:37:56,840
If I say weight of human. Mm.

550
00:37:57,440 --> 00:37:58,960
I got an added

551
00:38:00,040 --> 00:38:01,120
I get an error.

552
00:38:01,120 --> 00:38:04,320
The error stays non static.

553
00:38:04,320 --> 00:38:07,360
Fear cannot be referenced

554
00:38:07,360 --> 00:38:10,320
from a static context

555
00:38:10,720 --> 00:38:14,560
and we spend around
I guess 20 minutes on this.

556
00:38:14,560 --> 00:38:19,480
Can you guys tell me why non static fears

557
00:38:19,520 --> 00:38:25,440
why instance feels cannot be used inside

558
00:38:26,000 --> 00:39:01,200
static methods.

559
00:39:01,200 --> 00:39:05,480
Can you guys see
the red faces on my phone.

560
00:39:05,480 --> 00:39:06,280
Static here.

561
00:39:06,280 --> 00:39:10,120
The same value

562
00:39:10,800 --> 00:39:13,040
if I am already there

563
00:39:15,040 --> 00:39:17,160
it's because static is here

564
00:39:17,160 --> 00:39:21,360
but it's instance are not.

565
00:39:21,360 --> 00:39:22,960
I guess

566
00:39:24,640 --> 00:39:26,880
totally different memory locations.

567
00:39:26,880 --> 00:39:30,160
So guys tell me if I have

568
00:39:31,400 --> 00:39:34,680
100 objects of this class,

569
00:39:34,680 --> 00:39:37,320
if I have 100 objects of this class,

570
00:39:38,400 --> 00:39:43,320
and if 100 objects of this class is

571
00:39:43,560 --> 00:39:46,640
can they have we can all of them can

572
00:39:46,640 --> 00:39:50,080
they have under different values,
for instance, fields.

573
00:39:51,560 --> 00:39:54,360
So for example,
let's say the example of this hard field.

574
00:39:54,840 --> 00:39:58,320
If I create 200 objects of this class,

575
00:39:59,320 --> 00:40:01,760
can all the objects,

576
00:40:02,160 --> 00:40:05,760
can they have different values
for this height?

577
00:40:05,760 --> 00:40:07,280
FIELD Yes.

578
00:40:07,280 --> 00:40:11,200
Now, if there are 100 different fields
and you guys remember that

579
00:40:11,600 --> 00:40:15,840
static and fields, they can be called

580
00:40:16,400 --> 00:40:19,080
by just writing the name of the class.

581
00:40:19,680 --> 00:40:21,960
And then that method.

582
00:40:21,960 --> 00:40:25,000
So if I am writing the syntax,
the name of the class,

583
00:40:25,000 --> 00:40:29,640
and then I'm calling the method,
can you tell me out of those 100 objects

584
00:40:30,400 --> 00:40:33,080
we two value of which object

585
00:40:33,480 --> 00:40:35,520
should be printed inside this method

586
00:40:36,200 --> 00:40:40,840
because static is same across
all the objects, right?

587
00:40:40,840 --> 00:40:45,000
It's something that is shared,
but the instance means

588
00:40:45,600 --> 00:40:48,120
each object can have its own value.

589
00:40:49,320 --> 00:40:50,120
Right?

590
00:40:50,160 --> 00:40:53,840
So there is this competition
out of 100 values

591
00:40:54,840 --> 00:41:00,240
and we have only one variable
inside this static method.

592
00:41:00,360 --> 00:41:01,760
So now starting to lose.

593
00:41:01,760 --> 00:41:07,520
Confused that from which object
I should print out this value

594
00:41:09,440 --> 00:41:09,760
didn't make

595
00:41:09,760 --> 00:41:16,640
sense right.

596
00:41:16,640 --> 00:41:17,000
Okay.

597
00:41:17,000 --> 00:41:20,000
So if it is clear, tell me I have

598
00:41:20,040 --> 00:41:22,240
this non static method.

599
00:41:23,480 --> 00:41:24,840
I have this and I'll start again.

600
00:41:24,840 --> 00:41:29,160
I use static field inside this

601
00:41:29,160 --> 00:41:31,800
non static method

602
00:41:36,440 --> 00:41:37,400
and again

603
00:41:37,400 --> 00:41:40,840
I use instance
field inside of this instance

604
00:41:40,840 --> 00:41:46,480
method. Yes.

605
00:41:46,480 --> 00:41:50,040
So instance matters because

606
00:41:51,400 --> 00:41:55,840
static fields,
they are shared across all the objects.

607
00:41:55,840 --> 00:42:00,760
So there is no harm
because always this value in the variable,

608
00:42:00,760 --> 00:42:04,320
that variable will always be containing
a single value.

609
00:42:04,320 --> 00:42:04,920
Right?

610
00:42:05,160 --> 00:42:09,440
So for instance, method knows that
it has to print out that single value,

611
00:42:10,160 --> 00:42:16,680
but static method because each class
can have thousands of objects.

612
00:42:17,040 --> 00:42:18,840
So Java does not know

613
00:42:18,840 --> 00:42:22,920
from which object it should pick the value
and should print out the value.

614
00:42:22,920 --> 00:42:25,680
So far this static method,

615
00:42:26,240 --> 00:42:29,880
we cannot use the instance fears,
but we can

616
00:42:30,720 --> 00:42:33,680
the static fields like, for example

617
00:42:33,680 --> 00:42:37,440
this one number of flags.

618
00:42:37,440 --> 00:42:38,400
So let me put

619
00:42:39,600 --> 00:42:42,000
not allowed

620
00:42:42,400 --> 00:42:43,800
because

621
00:42:44,920 --> 00:42:47,080
it's a

622
00:42:47,240 --> 00:42:49,440
an instance

623
00:42:50,840 --> 00:42:55,400
we okay

624
00:42:58,560 --> 00:43:00,480
and I can

625
00:43:00,480 --> 00:43:03,560
I can write a see how to print out

626
00:43:03,560 --> 00:43:07,160
the static radius and no issues with that

627
00:43:08,120 --> 00:43:11,400
static only works with static once

628
00:43:11,840 --> 00:43:19,080
static
method only works with static fears.

629
00:43:19,080 --> 00:43:19,880
All right.

630
00:43:19,880 --> 00:43:24,000
So okay,
so I was saying that again, internally,

631
00:43:24,000 --> 00:43:28,960
they're saying they're telling us
that you don't need to this method

632
00:43:30,040 --> 00:43:33,120
as final.

633
00:43:33,440 --> 00:43:35,120
Can you guys tell me

634
00:43:35,120 --> 00:43:39,880
why is thinking
that this final is redundant again

635
00:43:40,440 --> 00:43:43,920
and with the non static motifs
with non static we can use

636
00:43:43,920 --> 00:44:02,800
both. Yes.

637
00:44:03,000 --> 00:44:07,240
Can you tell me
why intelligent is thinking

638
00:44:07,240 --> 00:44:09,640
that this final is redundant

639
00:44:11,040 --> 00:44:15,200
with this method bringing number of flags
because they are static.

640
00:44:15,200 --> 00:44:17,000
We are not going to change the values.

641
00:44:17,000 --> 00:44:21,720
Same rules final is already static. No,

642
00:44:22,680 --> 00:44:25,600
because they're a static field.

643
00:44:25,600 --> 00:44:26,480
Okay. Why?

644
00:44:26,480 --> 00:44:28,400
Why? Why? Because it's the start.

645
00:44:28,400 --> 00:44:30,480
If something is starting,
what happens with that

646
00:44:31,480 --> 00:44:33,960
is a method, by the way, not a field.

647
00:44:33,960 --> 00:44:36,360
So what happens is if a method is static

648
00:44:38,320 --> 00:44:41,600
because you already declared in the weird

649
00:44:41,640 --> 00:44:43,080
so fine

650
00:44:45,880 --> 00:44:47,520
again can override

651
00:44:47,520 --> 00:44:56,520
static matters in general,

652
00:44:56,520 --> 00:44:59,680
we can only declare a static method,

653
00:45:00,640 --> 00:45:04,800
but we cannot override that method.

654
00:45:04,800 --> 00:45:07,600
Remember those two different terminologies

655
00:45:10,800 --> 00:45:13,080
when we discussed about overriding,

656
00:45:14,560 --> 00:45:20,000
we discussed that static method,
although they have

657
00:45:20,000 --> 00:45:25,240
the exact same behavior,
but we use a different terminology.

658
00:45:25,240 --> 00:45:29,080
We don't say
we are overriding a static method.

659
00:45:29,080 --> 00:45:34,040
Say we are declaring a method
because static methods

660
00:45:34,040 --> 00:45:40,080
can be accessed
by just writing the name of the class.

661
00:45:40,080 --> 00:45:42,160
They are different from the instance
method.

662
00:45:42,320 --> 00:45:46,880
They work differently from the instance
methods and the instance features.

663
00:45:47,640 --> 00:45:50,960
So therefore saying their tests,
they do not need

664
00:45:50,960 --> 00:45:54,160
to specify this final in here.

665
00:45:54,720 --> 00:45:55,160
Okay.

666
00:45:55,440 --> 00:46:00,480
Because if you don't read declare this
method inside of the child

667
00:46:00,480 --> 00:46:03,680
class, the method from the parent
class will be called.

668
00:46:03,720 --> 00:46:07,560
Can we go over differences between
overwriting and the clearing place?

669
00:46:07,880 --> 00:46:11,680
So Simon,
there is absolutely no difference.

670
00:46:12,600 --> 00:46:15,200
Technically,
there is absolutely no difference.

671
00:46:15,640 --> 00:46:19,680
The behavior that you will be getting
with an instance method,

672
00:46:19,720 --> 00:46:24,640
you will be getting the exact same
behavior with this static method.

673
00:46:25,080 --> 00:46:28,600
Okay, But we don't use this terminology

674
00:46:28,600 --> 00:46:33,080
of overwriting in static matters
because they work a little different.

675
00:46:33,160 --> 00:46:37,400
We use this overriding terminology
in the instance fields,

676
00:46:37,400 --> 00:46:41,480
an instance matters because remember
instance methods and fields.

677
00:46:42,640 --> 00:46:45,800
There there will be thousand copies.

678
00:46:45,800 --> 00:46:50,560
If you are creating thousand objects,
but static matters and static fields,

679
00:46:50,760 --> 00:46:55,680
there will always be one single memory
location and only one single method

680
00:46:56,000 --> 00:46:58,920
when you will be having a static field
or static method.

681
00:46:59,920 --> 00:47:01,880
And so did did they?

682
00:47:01,880 --> 00:47:04,200
They are just different terminologies.

683
00:47:04,240 --> 00:47:04,920
Okay.

684
00:47:05,560 --> 00:47:07,680
Because even if you have a

685
00:47:10,040 --> 00:47:11,800
actually let me do that again

686
00:47:11,800 --> 00:47:14,520
so that you guys
can have kind of a revision from this.

687
00:47:15,000 --> 00:47:18,640
So if I have a

688
00:47:19,680 --> 00:47:21,840
child class

689
00:47:23,680 --> 00:47:25,800
that is extending from

690
00:47:27,360 --> 00:47:29,280
parent class

691
00:47:31,560 --> 00:47:35,240
and then I have

692
00:47:35,640 --> 00:47:38,200
a pastoral class in here

693
00:47:40,360 --> 00:47:42,400
and a main method in here.

694
00:47:42,400 --> 00:47:44,600
So let's say guys, right now

695
00:47:45,600 --> 00:47:48,320
this is a static method, right?

696
00:47:48,320 --> 00:47:51,920
And to, to show this concept
I need a method

697
00:47:51,920 --> 00:47:55,960
which is not final. So

698
00:48:00,000 --> 00:48:02,680
let me declare the field

699
00:48:04,920 --> 00:48:07,720
and let's say

700
00:48:13,880 --> 00:48:17,360
or shear color

701
00:48:17,360 --> 00:48:22,920
like this, it should not be fine.

702
00:48:23,800 --> 00:48:26,320
And it is this method

703
00:48:26,960 --> 00:48:29,960
which is not final

704
00:48:35,040 --> 00:48:39,040
and I am using this method

705
00:48:39,680 --> 00:48:41,640
simply

706
00:48:43,080 --> 00:48:43,920
We didn't count this color.

707
00:48:43,920 --> 00:48:46,880
So I have an instance method

708
00:48:48,600 --> 00:48:52,520
and I have a static method

709
00:48:53,760 --> 00:48:56,040
now inside my child class.

710
00:48:56,760 --> 00:49:00,480
If I don't override the instance method

711
00:49:00,480 --> 00:49:04,000
or if I don't read clear the static
method,

712
00:49:05,160 --> 00:49:07,760
I will be getting the same exact
same behavior.

713
00:49:07,760 --> 00:49:11,680
So for example, I can say child.

714
00:49:11,680 --> 00:49:15,120
Child is equal to new child,

715
00:49:16,880 --> 00:49:19,200
but and then child dot

716
00:49:21,640 --> 00:49:24,160
print here color, right.

717
00:49:25,120 --> 00:49:27,880
And then child dot

718
00:49:30,360 --> 00:49:31,520
print

719
00:49:32,480 --> 00:49:35,640
number of

720
00:49:37,960 --> 00:49:38,320
flags.

721
00:49:38,320 --> 00:49:38,920
Right.

722
00:49:39,000 --> 00:49:41,880
So what happens in here

723
00:49:41,880 --> 00:49:45,160
if I have a static method or

724
00:49:45,960 --> 00:49:48,720
an instance method in the parent class,

725
00:49:49,320 --> 00:49:54,040
if I don't really clear that static method
or if I don't override

726
00:49:54,040 --> 00:49:55,680
that instance method in the child

727
00:49:55,680 --> 00:49:59,280
class, the method from the parent
class will be called right?

728
00:49:59,640 --> 00:50:00,840
Exact same behavior

729
00:50:05,960 --> 00:50:06,680
actually looking to

730
00:50:06,680 --> 00:50:09,480
assign some value setting

731
00:50:11,520 --> 00:50:12,200
so that you guys

732
00:50:12,200 --> 00:50:18,360
don't see no.

733
00:50:18,360 --> 00:50:20,840
Okay. So black and to no shows.

734
00:50:20,840 --> 00:50:25,360
And if I read declare this method

735
00:50:26,560 --> 00:50:39,320
inside the child class body

736
00:50:41,600 --> 00:50:44,240
because I am declaring the static method

737
00:50:44,240 --> 00:50:47,280
and and

738
00:50:48,600 --> 00:50:50,960
let me override

739
00:50:53,680 --> 00:51:01,440
the the the instance method.

740
00:51:01,440 --> 00:51:03,720
So now to fast

741
00:51:05,920 --> 00:51:08,520
okay again
let me know once you guys have typed this

742
00:51:09,120 --> 00:51:13,200
and let me harden this window,
let me make this font smaller

743
00:51:14,400 --> 00:51:17,640
so can you please share the code here?

744
00:51:17,640 --> 00:51:20,040
I just heard Andy, don't frighten you.

745
00:51:20,040 --> 00:51:23,880
Sure, I just make sure.

746
00:51:24,720 --> 00:51:25,360
Okay.

747
00:51:25,840 --> 00:51:30,880
Oops.

748
00:51:30,880 --> 00:51:33,400
Please make the entire window.

749
00:51:33,400 --> 00:51:36,960
Okay.

750
00:51:36,960 --> 00:51:39,640
I don't know if you guys will be able to

751
00:51:40,640 --> 00:51:42,760
let me put this test on class

752
00:51:42,760 --> 00:52:01,640
in a separate file.

753
00:52:01,640 --> 00:52:04,760
Oops.

754
00:52:04,760 --> 00:52:15,760
I hope you guys will be able to see.

755
00:52:15,760 --> 00:52:18,320
So this is an article
of a certain log on display

756
00:52:22,920 --> 00:52:24,920
is incredible. This

757
00:52:27,240 --> 00:52:29,480
seems like you have your.

758
00:52:29,480 --> 00:52:30,360
But there

759
00:52:37,520 --> 00:52:39,800
I think a lot of my classmates

760
00:52:39,800 --> 00:52:44,440
there said you always carry a fire
extinguisher with you by this thing.

761
00:52:44,440 --> 00:52:47,680
Actually,
it looks like that for more of that

762
00:52:51,440 --> 00:52:52,120
messages

763
00:52:52,120 --> 00:52:56,760
he is getting working as rentable
for him. Yes.

764
00:52:56,760 --> 00:52:59,240
I think there have

765
00:53:00,120 --> 00:53:04,520
let me check how many messages I have got.

766
00:53:04,520 --> 00:53:05,120
Okay.

767
00:53:05,680 --> 00:53:09,720
There are 2000 red faces
and then there are 27 new messages.

768
00:53:10,200 --> 00:53:12,400
But I will look into them during the break

769
00:53:18,240 --> 00:53:18,920
after class.

770
00:53:18,920 --> 00:53:21,120
Here is the test of class.

771
00:53:21,200 --> 00:53:24,480
Maybe, maybe the experience
people can tell me how to

772
00:53:25,640 --> 00:53:29,840
how can I be?

773
00:53:29,840 --> 00:53:31,920
How can I avoid these situations?

774
00:53:32,520 --> 00:53:35,320
And the experience person from the class

775
00:53:37,440 --> 00:53:43,920
mean I know one thing that works.

776
00:53:43,920 --> 00:53:49,080
Always just live with it.

777
00:53:49,080 --> 00:53:50,880
You are in trouble. And so now

778
00:53:52,240 --> 00:53:52,680
no, no.

779
00:53:52,680 --> 00:53:57,160
I know
one thing that that that always works.

780
00:53:57,160 --> 00:53:57,880
Okay.

781
00:53:58,920 --> 00:54:00,680
I will start in one sentence.

782
00:54:00,680 --> 00:54:03,560
This is all my fault

783
00:54:03,960 --> 00:54:09,080
and everything will be fine.

784
00:54:09,080 --> 00:54:12,920
So here a little method is overridden
and a number of like

785
00:54:12,920 --> 00:54:17,040
things that yes, yes, I'm on your right,

786
00:54:17,160 --> 00:54:21,000
but technically, if you see
there is no difference if we don't have

787
00:54:21,000 --> 00:54:24,600
these methods in the class, the methods
from the parent class are called.

788
00:54:24,600 --> 00:54:26,320
If we read the clearer override.

789
00:54:26,320 --> 00:54:30,720
So the different terminologies,
then the letters from the child

790
00:54:30,720 --> 00:54:32,520
class are called

791
00:54:38,000 --> 00:54:40,400
are you guys and I'm writing

792
00:54:46,200 --> 00:54:47,160
nothing

793
00:54:48,040 --> 00:54:48,400
nasty.

794
00:54:48,400 --> 00:54:52,080
Imagine that's how I thank.

795
00:54:52,080 --> 00:54:52,680
So I hear you.

796
00:54:52,680 --> 00:54:55,320
Are you all to understand

797
00:54:56,880 --> 00:55:00,080
I don't want to be dead.

798
00:55:00,080 --> 00:55:01,200
Oh, my God.

799
00:55:01,200 --> 00:55:03,360
You guys are multilingual, multitalented.

800
00:55:03,480 --> 00:55:06,160
This is a recording, right? Yes.

801
00:55:06,960 --> 00:55:09,760
So you are to make a video clip
out of that

802
00:55:09,760 --> 00:55:16,800
and post on the Internet.

803
00:55:16,800 --> 00:55:19,320
Now, to understand. Don't do that. It's

804
00:55:20,920 --> 00:55:21,960
all right, guys.

805
00:55:21,960 --> 00:55:24,760
So you guys see the difference?

806
00:55:24,880 --> 00:55:28,960
You guys see the difference?

807
00:55:28,960 --> 00:55:30,240
Actually, there is no difference.

808
00:55:30,240 --> 00:55:39,040
It's only a different terminology.

809
00:55:39,040 --> 00:55:39,400
Okay.

810
00:55:39,400 --> 00:55:41,760
And then the final use of the

811
00:55:42,920 --> 00:55:46,640
final keyword,
if we put it with the public, if we put it

812
00:55:46,640 --> 00:55:51,080
with the classes, then

813
00:55:51,120 --> 00:55:53,360
no class

814
00:55:54,120 --> 00:55:59,440
can inherit from this parent class.

815
00:55:59,440 --> 00:56:01,920
Yeah,
no class can inherit from this class.

816
00:56:03,000 --> 00:56:06,920
So that is all about the final keyword.

817
00:56:06,920 --> 00:56:09,920
I hope it is clear now.

818
00:56:09,920 --> 00:56:11,000
So there.

819
00:56:11,000 --> 00:56:14,920
So then why can't we have
final and static?

820
00:56:15,120 --> 00:56:18,520
We can have Simon. We can have.

821
00:56:18,520 --> 00:56:21,960
But if you check, actually
there is no edit.

822
00:56:21,960 --> 00:56:24,160
It's just a suggestion
from the intelligent.

823
00:56:24,680 --> 00:56:27,240
Okay, it is not related to compiler.

824
00:56:27,560 --> 00:56:29,680
It is not related to any rules of Java.

825
00:56:30,000 --> 00:56:35,520
It's just a suggestion
from your intelligent.

826
00:56:35,520 --> 00:56:36,120
All right.

827
00:56:37,680 --> 00:56:40,320
Are there other questions, guys

828
00:56:42,840 --> 00:56:43,240
here?

829
00:56:43,920 --> 00:56:46,080
So do I show?

830
00:56:47,360 --> 00:56:48,120
All right.

831
00:56:48,120 --> 00:56:50,520
So today's topic is

832
00:56:51,720 --> 00:56:54,240
again, very simple as you guys

833
00:56:56,040 --> 00:56:58,360
all always know.

834
00:56:58,360 --> 00:56:59,080
Interface.

835
00:56:59,080 --> 00:57:02,960
Yes, the abstract.

836
00:57:02,960 --> 00:57:09,560
Did I give you any homework
in the last class?

837
00:57:09,560 --> 00:57:26,840
Okay, let's go to that homework first.

838
00:57:26,840 --> 00:57:29,720
We're sorry. In the common third phase.

839
00:57:29,720 --> 00:57:32,160
Final start date. Not allowed.

840
00:57:32,160 --> 00:57:32,880
Let me check.

841
00:57:32,880 --> 00:57:35,440
Where did I put that

842
00:57:35,440 --> 00:57:36,400
final start?

843
00:57:36,400 --> 00:57:40,680
It not allowed.

844
00:57:40,680 --> 00:57:42,880
Oh, here's constructor assignment.

845
00:57:42,880 --> 00:57:45,120
It's constructor custom built constructor.

846
00:57:45,160 --> 00:57:53,400
It is not allowed.

847
00:57:53,400 --> 00:57:59,960
Create a class computer that will have
four subclass pieces of Apple. No.

848
00:58:00,400 --> 00:58:06,120
Okay.

849
00:58:06,120 --> 00:58:09,760
Close task one

850
00:58:10,440 --> 00:58:13,840
and create

851
00:58:14,240 --> 00:58:34,560
you guys done typing discord.

852
00:58:34,560 --> 00:58:37,440
Okay. Which class now was good?

853
00:58:38,040 --> 00:59:03,480
The parent class. Why?

854
00:59:03,480 --> 00:59:06,480
I have error here

855
00:59:12,840 --> 00:59:15,520
start date ward is this

856
00:59:16,120 --> 00:59:19,600
is this number of flag length failed
either instance?

857
00:59:19,600 --> 00:59:20,920
Where is it an instance?

858
00:59:20,920 --> 00:59:28,280
Fear.

859
00:59:28,280 --> 00:59:30,080
You guys are having error in here

860
00:59:31,680 --> 00:59:33,240
so make sure

861
00:59:33,240 --> 00:59:41,320
it's a static field.

862
00:59:41,320 --> 00:59:44,320
It's static field and still error.

863
00:59:44,400 --> 00:59:48,480
You guys are extending from here
and it's inside

864
00:59:48,480 --> 00:59:51,640
the number of flags.

865
00:59:51,640 --> 00:59:53,560
Can you guys show me
the complete screenshot

866
00:59:53,560 --> 01:00:00,000
of your class?

867
01:00:00,000 --> 01:00:02,600
And you guys are also extending it, right?

868
01:00:02,600 --> 01:00:17,240
Are you guys
also extending the parent class?

869
01:00:17,240 --> 01:00:18,680
And let me

870
01:00:22,720 --> 01:00:23,800
import the input

871
01:00:23,800 --> 01:00:42,720
from the child.

872
01:00:42,720 --> 01:00:46,000
So I'm gonna show me in the parent

873
01:00:46,000 --> 01:01:22,560
class as well.

874
01:01:22,560 --> 01:01:25,120
Just let me push it to the get as well.

875
01:01:25,200 --> 01:01:53,160
Sure.

876
01:01:53,160 --> 01:01:57,600
Then you do find the video, the review
class number eight on the YouTube.

877
01:01:58,520 --> 01:02:09,840
Was it uploaded?

878
01:02:09,840 --> 01:02:12,360
Parent one

879
01:02:22,360 --> 01:02:23,680
Let me know.

880
01:02:23,680 --> 01:02:28,320
You have given the name
to your parent class as Parent one

881
01:02:29,360 --> 01:02:33,320
But you are extending
from only the parent class.

882
01:02:34,000 --> 01:02:37,880
That means there are two classes,
two different parent classes

883
01:02:38,840 --> 01:02:40,680
and yes, please post an export terminal.

884
01:02:40,680 --> 01:02:43,920
She was she was there to help you out

885
01:02:43,920 --> 01:02:52,960
and let me know.

886
01:02:53,240 --> 01:02:57,240
Was there anyone from your family in bad?

887
01:02:57,480 --> 01:03:00,640
I guess six or seven.

888
01:03:00,640 --> 01:03:02,920
And named Mohammad

889
01:03:07,720 --> 01:03:11,600
Best seven years.

890
01:03:11,600 --> 01:03:13,080
Okay. Is the issue resolved?

891
01:03:13,080 --> 01:03:34,200
You have to inherit from the parent class.

892
01:03:34,200 --> 01:03:37,360
Then you please repeat what line is read
declaration

893
01:03:37,440 --> 01:03:43,880
here.

894
01:03:43,880 --> 01:03:46,200
This is a declaration.

895
01:03:46,240 --> 01:03:48,840
Just re declaring their comment exact

896
01:03:48,840 --> 01:03:57,520
same as we do in the instance methods.

897
01:03:57,520 --> 01:04:00,160
Is your issue resolved

898
01:04:00,440 --> 01:04:02,720
and are there other students
who are facing this?

899
01:04:02,720 --> 01:04:03,000
I am.

900
01:04:03,000 --> 01:04:07,920
So the lessons for people
who have someone in previous batches.

901
01:04:07,920 --> 01:04:09,360
Yes, I got it.

902
01:04:09,360 --> 01:04:29,120
Okay, perfect.

903
01:04:29,120 --> 01:04:31,880
That is from child two and in the console

904
01:04:36,200 --> 01:04:38,920
who is coming from
this variable number of flags.

905
01:04:40,360 --> 01:04:40,720
Okay.

906
01:04:40,720 --> 01:04:41,680
Which is

907
01:04:42,240 --> 01:04:45,600
declared inside parent and from child

908
01:04:45,600 --> 01:04:49,000
is coming from the child class.

909
01:04:49,000 --> 01:04:50,320
Welcome.

910
01:04:50,320 --> 01:05:01,680
Should we move to the example?

911
01:05:01,680 --> 01:05:05,080
Okay, so let's take the example

912
01:05:05,080 --> 01:05:08,480
from any of the students
who are here to the homework.

913
01:05:08,880 --> 01:05:17,280
I will do the rest of the class.

914
01:05:17,280 --> 01:05:25,840
Then you go to send me
the requirements again,

915
01:05:25,840 --> 01:05:48,040
create a class computer.

916
01:05:48,040 --> 01:05:50,200
Okay, let's have the

917
01:05:50,280 --> 01:05:52,440
creativity from semester question.

918
01:05:53,200 --> 01:05:55,960
So create a class computer
that will have for

919
01:05:56,400 --> 01:05:59,320
some classes as per Lenovo XP, Dell.

920
01:06:00,000 --> 01:06:05,040
They find common behaviors within
and some fears in the parent class

921
01:06:05,040 --> 01:06:08,920
and override
some of the matters in child classes.

922
01:06:08,960 --> 01:06:10,960
Right. So

923
01:06:13,360 --> 01:06:15,800
so in this model here

924
01:06:16,440 --> 01:06:19,280
operating system

925
01:06:20,600 --> 01:06:23,600
new internet

926
01:06:25,920 --> 01:06:29,040
Apple uses was

927
01:06:46,440 --> 01:06:48,720
okay so

928
01:06:49,120 --> 01:06:53,040
Sebastian has declared a field as model

929
01:06:54,600 --> 01:06:57,000
and is using

930
01:06:57,000 --> 01:06:59,400
the best practice to initialize

931
01:07:00,960 --> 01:07:09,720
this field through the constructor.

932
01:07:09,720 --> 01:07:13,520
So this model is equal

933
01:07:13,520 --> 01:07:16,800
to a model.

934
01:07:16,800 --> 01:07:18,080
And then

935
01:07:19,720 --> 01:07:20,920
the wide

936
01:07:20,920 --> 01:07:26,400
operating system.

937
01:07:26,400 --> 01:07:29,480
So ward

938
01:07:33,200 --> 01:07:35,840
operating system

939
01:08:00,120 --> 01:08:02,320
and then almost all the computers

940
01:08:02,320 --> 01:08:04,720
we can have

941
01:08:06,600 --> 01:08:10,280
live video functionality right

942
01:08:23,360 --> 01:08:28,480
now let's try to create the child classes.

943
01:08:28,480 --> 01:08:30,640
So Class

944
01:08:31,000 --> 01:08:32,440
Apple

945
01:08:34,800 --> 01:08:37,760
into extending from the computers

946
01:08:48,000 --> 01:08:49,960
and now I am getting an error.

947
01:08:49,960 --> 01:08:56,800
Can you guys
tell me why I am getting an error?

948
01:08:56,800 --> 01:09:00,760
So you need to do
you need to test to page as well.

949
01:09:01,680 --> 01:09:04,280
Yes. That will be good.

950
01:09:04,280 --> 01:09:15,720
Import import, deconstruct.

951
01:09:16,240 --> 01:09:18,320
Yes I so

952
01:09:19,520 --> 01:09:22,640
in my parent class I have a constructor

953
01:09:23,160 --> 01:09:26,720
which is taking one string type argument.

954
01:09:27,360 --> 01:09:30,720
Now if I want to use these features,

955
01:09:31,520 --> 01:09:33,600
these methods from the parent class,

956
01:09:33,960 --> 01:09:36,640
I must provide a matching

957
01:09:36,640 --> 01:09:39,840
constructor inside my child class

958
01:09:39,840 --> 01:09:43,280
so that in this model
field can be initialized.

959
01:09:43,680 --> 01:09:45,720
When I amusing which child class.

960
01:09:45,720 --> 01:09:48,600
So once I see Apple

961
01:09:53,520 --> 01:09:55,440
string model

962
01:09:55,440 --> 01:10:00,440
and one side are super and bypass model,
now the edit is gone.

963
01:10:00,440 --> 01:10:00,840
Okay,

964
01:10:01,680 --> 01:10:03,600
the edit is going

965
01:10:09,600 --> 01:10:12,240
in. Then let me override

966
01:10:13,560 --> 01:10:16,800
this method operating system.

967
01:10:18,440 --> 01:10:23,440
Okay.

968
01:10:23,440 --> 01:10:27,080
And let me draw right

969
01:10:42,880 --> 01:10:45,520
the the MAC has the

970
01:10:46,360 --> 01:10:51,240
iOS operating system is not the iOS
for only part of mobile phones.

971
01:10:51,440 --> 01:10:53,200
What is it?

972
01:10:53,200 --> 01:10:55,920
It what what is it called?

973
01:10:55,920 --> 01:10:58,240
It's for the Macintosh.

974
01:10:58,240 --> 01:11:06,040
This Mac os.

975
01:11:08,000 --> 01:11:17,040
Okay MapQuest.

976
01:11:17,040 --> 01:11:20,480
And then I don't need to override this
because.

977
01:11:20,480 --> 01:11:24,960
This is something common in here.

978
01:11:24,960 --> 01:11:31,400
Then I can clear the other class,

979
01:11:31,400 --> 01:11:34,800
the Lenovo class.

980
01:11:34,800 --> 01:11:37,160
So subclass

981
01:11:39,440 --> 01:11:42,320
Lenovo.

982
01:11:42,320 --> 01:11:46,120
It is also extending from the computer
class.

983
01:11:47,080 --> 01:11:49,680
And again, I must provide a matching

984
01:11:49,680 --> 01:11:56,640
constructor.

985
01:11:56,640 --> 01:11:58,800
So the screen

986
01:11:58,800 --> 01:12:00,640
model.

987
01:12:01,160 --> 01:12:04,360
So and then I need to pass the model

988
01:12:09,000 --> 01:12:09,800
and then

989
01:12:09,800 --> 01:12:13,920
I can
override this behavior in here as that.

990
01:12:14,160 --> 01:12:14,680
Okay.

991
01:12:15,000 --> 01:12:18,080
So little so the the Lenovo has the

992
01:12:20,240 --> 01:12:23,440
Windows operating system

993
01:12:25,440 --> 01:12:28,560
and then I can create another class,

994
01:12:28,560 --> 01:12:36,000
let's say XP,

995
01:12:36,000 --> 01:12:44,920
which is extending from the again,
computer.

996
01:12:44,920 --> 01:12:47,200
Again, I need a matching constructor

997
01:13:00,120 --> 01:13:03,240
and then I can override this behavior.

998
01:13:03,240 --> 01:13:05,720
I can in here. Yeah.

999
01:13:06,440 --> 01:13:09,000
Well,
for the sake of this example has maybe

1000
01:13:10,320 --> 01:13:16,640
didn't.

1001
01:13:16,640 --> 01:13:49,040
And now we can create the test
for class in there.

1002
01:13:49,040 --> 01:13:52,440
And again, let's use

1003
01:13:55,800 --> 01:13:58,320
the premise

1004
01:13:59,160 --> 01:14:04,680
polymorphism.

1005
01:14:04,680 --> 01:14:06,720
You also created Dell

1006
01:14:14,960 --> 01:14:19,080
or some specific method as well.

1007
01:14:19,080 --> 01:14:23,040
That's great.

1008
01:14:23,040 --> 01:14:32,600
Let me copy that.

1009
01:14:32,600 --> 01:14:33,480
Yeah. So.

1010
01:14:33,480 --> 01:14:35,880
So Bastian created one more class Dell

1011
01:14:36,960 --> 01:14:38,880
operating system which is he

1012
01:14:38,880 --> 01:14:42,200
see he's overriding

1013
01:14:42,280 --> 01:14:43,560
and then especially

1014
01:14:43,560 --> 01:14:48,400
method services has good
reputation of the products and services

1015
01:14:49,200 --> 01:14:53,520
And then there was
this specific method inside

1016
01:14:58,000 --> 01:14:59,880
the Lenovo

1017
01:14:59,880 --> 01:15:04,440
class.

1018
01:15:04,440 --> 01:15:06,280
Inside here

1019
01:15:06,840 --> 01:15:09,520
it was laptop

1020
01:15:09,520 --> 01:15:13,080
you know has a large selection of laptops

1021
01:15:14,640 --> 01:15:18,600
and then Apple had this behavior cost

1022
01:15:26,720 --> 01:15:28,840
special method inside here.

1023
01:15:28,840 --> 01:15:31,680
Maybe it will be more appropriate

1024
01:15:31,680 --> 01:15:33,600
if we groups

1025
01:15:34,920 --> 01:15:36,960
if we rename it to

1026
01:15:38,160 --> 01:15:40,240
put in cost

1027
01:15:40,320 --> 01:15:44,800
because methods are something
that that perform operations.

1028
01:15:44,800 --> 01:15:45,040
Right.

1029
01:15:45,040 --> 01:15:48,120
They are not the names of some things. So

1030
01:15:49,760 --> 01:15:52,960
we choose the names of the meters,
something like this.

1031
01:15:52,960 --> 01:15:54,360
So maybe

1032
01:15:57,520 --> 01:15:58,480
bring

1033
01:16:08,360 --> 01:16:11,840
an external

1034
01:16:12,960 --> 01:16:14,800
of Apple

1035
01:16:14,800 --> 01:16:17,200
Play video that it looks good.

1036
01:16:18,080 --> 01:16:21,200
We have an issue in XP that is brand

1037
01:16:35,080 --> 01:16:36,120
I'm using right now.

1038
01:16:36,120 --> 01:16:39,600
The shortcut shift takes to refactor

1039
01:16:39,600 --> 01:17:13,320
this code.

1040
01:17:13,320 --> 01:17:14,560
It's been

1041
01:17:29,600 --> 01:17:34,320
at various because of records.

1042
01:17:34,320 --> 01:17:36,520
We need to remove this to

1043
01:17:40,360 --> 01:17:42,720
and they should be inside the main

1044
01:17:42,720 --> 01:17:47,040
method right?

1045
01:17:47,040 --> 01:17:50,560
Yeah.

1046
01:17:50,560 --> 01:17:51,480
Okay.

1047
01:17:51,760 --> 01:18:00,200
It looks good.

1048
01:18:00,200 --> 01:18:03,680
All good.

1049
01:18:03,680 --> 01:18:06,760
When done,
can you send the code for both classes?

1050
01:18:07,080 --> 01:18:09,840
I was going to say not by choice.

1051
01:18:10,160 --> 01:18:12,200
Part of the.

1052
01:18:12,200 --> 01:18:15,040
Okay.

1053
01:18:15,040 --> 01:18:17,760
So is it okay
if I push this code to the GitHub?

1054
01:18:18,040 --> 01:18:19,840
Is it better you guys maybe copy?

1055
01:18:19,840 --> 01:19:04,280
You can copy from there.

1056
01:19:04,280 --> 01:19:04,960
Okay. So

1057
01:19:06,720 --> 01:19:10,440
I took Sebastian around.

1058
01:19:10,440 --> 01:19:16,920
So some version is going on this line six,

1059
01:19:16,920 --> 01:19:21,080
but he created the object of Apple
class boss

1060
01:19:21,400 --> 01:19:24,240
Apple inside the constructor.

1061
01:19:24,240 --> 01:19:25,920
Then Lenovo class.

1062
01:19:25,920 --> 01:19:28,880
He bought the Lenovo inside in here
actually.

1063
01:19:28,880 --> 01:19:31,680
And then that class. Yeah.

1064
01:19:31,680 --> 01:19:34,000
Then he wrote a loop.

1065
01:19:34,200 --> 01:19:37,040
So he is using computer variable

1066
01:19:38,920 --> 01:19:42,000
in here because the anti is off

1067
01:19:42,000 --> 01:19:45,000
type computers, which is the

1068
01:19:45,000 --> 01:19:47,320
parent class of all these classes.

1069
01:19:47,960 --> 01:19:51,160
So from polymorphism and from object

1070
01:19:51,160 --> 01:19:53,680
casting, you guys remember that

1071
01:19:54,200 --> 01:19:57,480
because all these brands

1072
01:19:57,480 --> 01:20:00,320
or this Apple
you know what they are all computers

1073
01:20:01,080 --> 01:20:04,000
so I can create a variable of time
computer

1074
01:20:04,560 --> 01:20:07,800
and I can store the objects
of these classes.

1075
01:20:08,280 --> 01:20:10,600
Other way of saying use

1076
01:20:10,680 --> 01:20:13,920
because this is a parent class,
it can hold the objects

1077
01:20:13,920 --> 01:20:17,280
of all the child classes and because

1078
01:20:17,280 --> 01:20:21,440
now we can hold the objects
of all the child

1079
01:20:21,440 --> 01:20:24,440
classes in a single variable,
it can be an array.

1080
01:20:24,440 --> 01:20:26,160
And now we can write loops.

1081
01:20:26,160 --> 01:20:28,800
Now we can write much more flexible code.

1082
01:20:29,720 --> 01:20:31,920
So what Sebastian is doing is using

1083
01:20:31,920 --> 01:20:34,840
an enhanced for loop,

1084
01:20:34,840 --> 01:20:39,240
just a variable name,
and he is taking these objects

1085
01:20:39,240 --> 01:20:44,800
one by one and checking
if that object is instance of Apple.

1086
01:20:46,200 --> 01:20:49,920
So this print operating system,
because it is present

1087
01:20:49,920 --> 01:20:53,960
in all the child classes, it
coming from the parent plus.

1088
01:20:53,960 --> 01:20:58,840
So we don't need to check for this method
because this method is available

1089
01:20:58,840 --> 01:20:59,720
in all the classes.

1090
01:20:59,720 --> 01:21:03,080
But this print cost laptops,

1091
01:21:03,080 --> 01:21:05,600
brand services, these methods,

1092
01:21:06,160 --> 01:21:09,840
they are only specific to the world class.

1093
01:21:09,920 --> 01:21:13,160
The brand is only specific to HP.

1094
01:21:13,440 --> 01:21:16,040
The laptops is only

1095
01:21:16,320 --> 01:21:17,960
available inside the Lenovo G4.

1096
01:21:17,960 --> 01:21:21,080
First, we have to convert that

1097
01:21:21,720 --> 01:21:24,760
computer to variable from computer type

1098
01:21:25,360 --> 01:21:28,000
to that specific apple type.

1099
01:21:29,040 --> 01:21:31,080
And then only we can call

1100
01:21:31,280 --> 01:21:35,880
the specif methods from the child
classes on this variable.

1101
01:21:36,200 --> 01:21:50,280
Okay.

1102
01:21:50,280 --> 01:21:51,560
Is it clamcase?

1103
01:21:51,560 --> 01:21:54,800
Is there anyone who is confused

1104
01:21:55,760 --> 01:21:56,800
and maybe want me

1105
01:21:56,800 --> 01:22:08,880
to debug the score?

1106
01:22:08,880 --> 01:22:11,240
I hope every one of you has

1107
01:22:12,440 --> 01:22:18,360
done this homework.

1108
01:22:18,360 --> 01:22:18,680
Okay.

1109
01:22:18,680 --> 01:22:23,680
Perfect.

1110
01:22:23,680 --> 01:22:24,520
So most of all,

1111
01:22:24,520 --> 01:22:28,680
if you are having a hard time,
I have pushed this code to the github.

1112
01:22:29,000 --> 01:22:32,160
Try to debug it
if still it does not make sense.

1113
01:22:32,480 --> 01:22:37,200
Then after the break you can tell me
and then I will debug it for you here.

1114
01:22:37,240 --> 01:22:38,440
No, don't be.

1115
01:22:38,440 --> 01:22:39,760
So let's have a break guys.

1116
01:22:39,760 --> 01:22:43,440
And after the break will start
the abstraction.

1117
01:22:43,800 --> 01:22:49,120
The abstraction, the third
pillar of object oriented programing.

1118
01:22:49,400 --> 01:22:53,240
So we have already discussed
the two pillars of the object

1119
01:22:53,240 --> 01:22:55,440
oriented program and the main two pillars.

1120
01:22:55,520 --> 01:23:01,960
Then you guys
tell me the names of those two pillars.

1121
01:23:01,960 --> 01:23:05,920
So inheritance, yes,

1122
01:23:06,480 --> 01:23:09,880
and polymorphism, perfect

1123
01:23:10,000 --> 01:23:10,520
artifact.

1124
01:23:10,520 --> 01:23:13,320
So let's have a break

1125
01:23:18,080 --> 01:23:20,240
till 1140.

1126
01:23:20,480 --> 01:23:22,840
Okay. Abstraction. Next one.

1127
01:23:22,880 --> 01:23:25,840
Yes And please
remind me about the recording

1128
01:23:25,840 --> 01:23:30,880
when you guys are back.

1129
01:23:30,880 --> 01:23:32,320
I started recording

1130
01:23:41,920 --> 01:23:47,040
manuscripts of encapsulation.

1131
01:23:47,040 --> 01:23:50,280
All right,
so today's class is about abstraction

1132
01:23:51,360 --> 01:23:53,400
and tell me the meaning of abstraction.

1133
01:23:54,000 --> 01:23:56,640
What do we mean in real life when say,

1134
01:23:56,640 --> 01:24:08,000
something is abstract,
the hidden meanings, right?

1135
01:24:08,240 --> 01:24:12,440
The meanings behind something, outline
and very general.

1136
01:24:13,840 --> 01:24:18,840
So in Java we use this abstraction

1137
01:24:19,320 --> 01:24:21,760
in terms of finding

1138
01:24:22,680 --> 01:24:25,600
the implementation of a method.

1139
01:24:25,600 --> 01:24:29,440
So, for example,
a method is doing something, let's say

1140
01:24:29,440 --> 01:24:34,120
the method that you guys use to take
the input from the keyboard, right?

1141
01:24:34,120 --> 01:24:36,240
The next boolean of next digit method.

1142
01:24:36,240 --> 01:24:41,160
Now you guys didn't hear how that method

1143
01:24:41,160 --> 01:24:45,600
was taking this input
and how every piece of logic was

1144
01:24:47,640 --> 01:24:48,760
was executing.

1145
01:24:48,760 --> 01:24:53,040
Although I was working to get the input
from the keyboard

1146
01:24:53,040 --> 01:24:56,760
and to store that input
inside the variable.

1147
01:24:56,760 --> 01:25:02,000
So in Java when we abstract something,

1148
01:25:03,480 --> 01:25:06,560
we are almost doing the same thing.

1149
01:25:06,560 --> 01:25:11,560
We Are writing a method, but we don't care

1150
01:25:11,760 --> 01:25:14,840
how that method will be implemented.

1151
01:25:14,840 --> 01:25:18,000
We just write the input

1152
01:25:18,840 --> 01:25:21,360
and the output of the method.

1153
01:25:21,360 --> 01:25:25,680
We tell the name of the method,
the input and the output

1154
01:25:26,440 --> 01:25:30,320
and the rest of the things are taken care
by someone else.

1155
01:25:30,640 --> 01:25:35,040
And once those things
they are taken care of by someone else.

1156
01:25:35,360 --> 01:25:37,360
We will simply be using that

1157
01:25:38,760 --> 01:25:41,520
method our code.

1158
01:25:41,520 --> 01:25:43,720
So think about the real life guys.

1159
01:25:43,920 --> 01:25:48,560
When we when, when the companies
they release some mobile phone

1160
01:25:48,560 --> 01:25:52,680
or they are these cars
or anything in our real life.

1161
01:25:52,680 --> 01:25:53,320
Right.

1162
01:25:53,520 --> 01:25:58,360
Well, what other companies do they
they just produce the spare parts

1163
01:25:58,360 --> 01:26:00,800
they get the

1164
01:26:00,800 --> 01:26:06,440
data shared all the
all the instructions on all design.

1165
01:26:06,440 --> 01:26:11,280
What will be the the how,
the will look like they will fit that.

1166
01:26:11,640 --> 01:26:13,800
Let's take the example
of the mirror of a car. Right.

1167
01:26:14,200 --> 01:26:16,480
What will be the dimension
of the mirror? Right.

1168
01:26:16,640 --> 01:26:20,280
And what will be the interface
is how that will be connected to the

1169
01:26:22,960 --> 01:26:23,760
MCU of

1170
01:26:23,760 --> 01:26:26,600
the car
to operate or to operate it properly.

1171
01:26:26,880 --> 01:26:31,560
And then these companies,
when they take this information,

1172
01:26:31,560 --> 01:26:35,760
the input, the output, and then the design
and everything about their thing,

1173
01:26:35,760 --> 01:26:39,960
they design that part and later on
we can replace those parts.

1174
01:26:39,960 --> 01:26:43,240
We can use those parts
with our main machinery, right?

1175
01:26:43,560 --> 01:26:47,360
So what we are doing
and even if you guys think of the B

1176
01:26:48,640 --> 01:26:51,160
construction all fall for anything, right?

1177
01:26:51,160 --> 01:26:53,160
So let's say, for example, laptops,

1178
01:26:54,720 --> 01:26:56,960
the memory is built by someone else,

1179
01:26:57,520 --> 01:27:00,760
the processors
and the memory is most of the time

1180
01:27:00,760 --> 01:27:04,720
it is built by Samsung or,
Kingston, Kingston, the CPU.

1181
01:27:04,760 --> 01:27:07,320
They are built by Intel or AMD, right?

1182
01:27:07,320 --> 01:27:10,080
The motherboard
they are built by maybe AGP,

1183
01:27:10,520 --> 01:27:13,560
Dell, Lenovo and, these kind of companies,
they're displaced.

1184
01:27:13,560 --> 01:27:14,760
They are getting most of the time.

1185
01:27:14,760 --> 01:27:21,080
They are built by Samsung cameras,
they are built by some other companies.

1186
01:27:21,080 --> 01:27:23,760
And at the end,
what these companies they are doing,

1187
01:27:24,360 --> 01:27:26,880
they integrate all of these parts

1188
01:27:27,960 --> 01:27:29,280
to make the full product.

1189
01:27:29,280 --> 01:27:31,600
Right now, Samsung does not know.

1190
01:27:31,640 --> 01:27:34,960
So Samsung is only designing that memory.

1191
01:27:34,960 --> 01:27:39,160
It is defining
the number of inputs and outputs

1192
01:27:39,440 --> 01:27:42,640
and how their thing will be connected
to the motherboard.

1193
01:27:42,640 --> 01:27:43,280
Right.

1194
01:27:43,280 --> 01:27:47,800
And then the CPU guys they are
only getting about the CPU is defining

1195
01:27:48,240 --> 01:27:51,840
once they know the information
about the input and the output.

1196
01:27:51,840 --> 01:27:52,440
Right.

1197
01:27:52,440 --> 01:27:55,160
How the CPU will take the input,
how it will process

1198
01:27:55,160 --> 01:27:58,080
and give back the output,
the design, their CPU.

1199
01:27:58,320 --> 01:28:01,680
And that way everyone who is

1200
01:28:04,440 --> 01:28:05,520
kind of perfect

1201
01:28:05,520 --> 01:28:09,440
in that field
takes care of their specific part.

1202
01:28:10,040 --> 01:28:14,880
And at the end, because we have all,
all of these companies, because

1203
01:28:15,920 --> 01:28:18,040
we as the

1204
01:28:18,040 --> 01:28:21,040
as the if you guys
think of the company Edge or Dell,

1205
01:28:21,600 --> 01:28:26,640
the HP guys or the Dell guys
because they know the specifications,

1206
01:28:26,640 --> 01:28:31,600
they know the input output, so they get
these pieces from different companies.

1207
01:28:31,600 --> 01:28:35,600
They put it together,
then they build very complex, huge things.

1208
01:28:36,120 --> 01:28:39,720
So the idea behind this abstraction

1209
01:28:39,720 --> 01:28:44,960
will be divide
a very big problem into different parts,

1210
01:28:45,960 --> 01:28:46,960
define

1211
01:28:46,960 --> 01:28:50,640
the input
and output for those specific parts.

1212
01:28:50,640 --> 01:28:53,240
In our case, that these will be met first

1213
01:28:54,600 --> 01:28:57,320
and then whoever it is

1214
01:28:57,320 --> 01:29:02,400
is kind of has more knowledge
about those things.

1215
01:29:02,400 --> 01:29:05,760
Those guys will be implementing
those matters

1216
01:29:06,280 --> 01:29:11,200
and at the end we will be bringing
all those methods together

1217
01:29:11,520 --> 01:29:14,760
to achieve something bigger,
to build something complex.

1218
01:29:15,240 --> 01:29:19,440
You guys can also think about the coffee
machines right

1219
01:29:20,040 --> 01:29:25,520
as a end user,
I don't care how everything is working

1220
01:29:25,520 --> 01:29:28,960
inside that coffee machine,
how the electronics is working,

1221
01:29:29,240 --> 01:29:33,680
how the temperature is being controlled,
how the heating mechanism

1222
01:29:33,680 --> 01:29:34,520
is being controlled.

1223
01:29:34,520 --> 01:29:38,600
We just press simple few buttons
and then the coffee is ready.

1224
01:29:38,600 --> 01:29:39,240
Right?

1225
01:29:39,240 --> 01:29:42,480
So far the end user,
the benefit will be that

1226
01:29:42,840 --> 01:29:46,360
the end user is just need my coffee.

1227
01:29:46,920 --> 01:29:51,080
So the end user will be benefiting from

1228
01:29:53,040 --> 01:29:54,520
from this abstraction.

1229
01:29:54,520 --> 01:29:59,240
The end user will only be calling
those matters in our case,

1230
01:29:59,680 --> 01:30:02,040
and he will be

1231
01:30:02,280 --> 01:30:07,200
using those meters in in his code
or maybe achieving or maybe

1232
01:30:07,200 --> 01:30:10,200
combining so many different methods
to achieve something bigger.

1233
01:30:10,320 --> 01:30:14,640
So abstraction in abstraction,
what do we do?

1234
01:30:15,000 --> 01:30:19,000
How something is actually working.

1235
01:30:19,680 --> 01:30:21,800
We don't care about that.

1236
01:30:21,800 --> 01:30:24,160
We hide that information, okay?

1237
01:30:24,440 --> 01:30:26,720
Or we leave this information.

1238
01:30:27,360 --> 01:30:31,400
We leave this piece of code
to be taken care by someone else.

1239
01:30:32,120 --> 01:30:36,480
We only define the input and the output.

1240
01:30:37,320 --> 01:30:41,400
And then once that implementation is done
from the other guy,

1241
01:30:41,600 --> 01:30:44,680
then we can integrate the scope
to achieve something bigger.

1242
01:30:45,120 --> 01:30:50,560
So Silva, remember about the ladies?

1243
01:30:50,560 --> 01:30:52,200
Oh, yes.

1244
01:30:52,200 --> 01:30:56,760
So remind me, you you should have
reminded me during the break.

1245
01:30:56,760 --> 01:30:58,920
But when I do the next break, remind me.

1246
01:30:58,920 --> 01:31:00,000
I will invite them. Okay.

1247
01:31:00,000 --> 01:31:03,640
I have already talked to them
so they are ready and but I have not

1248
01:31:03,640 --> 01:31:07,280
shared the links with them,
so I have to share the links.

1249
01:31:07,280 --> 01:31:11,480
I have been invited them in this meeting.

1250
01:31:11,760 --> 01:31:12,920
So remind me

1251
01:31:14,160 --> 01:31:15,200
before the next break.

1252
01:31:15,200 --> 01:31:18,640
So abstraction is a process of hardening

1253
01:31:20,320 --> 01:31:24,120
implementation details
and showing only the functionality, right?

1254
01:31:24,120 --> 01:31:27,000
When we use our mobile phones.

1255
01:31:27,000 --> 01:31:30,440
Let's say, for example, if we have
we have to take a picture, right?

1256
01:31:30,440 --> 01:31:34,800
We press the camera button and then
we select the view, we take a picture.

1257
01:31:34,800 --> 01:31:38,840
We don't care how that camera
is internally working,

1258
01:31:39,080 --> 01:31:44,560
how the photo is being saved
inside the mobile memory,

1259
01:31:44,800 --> 01:31:47,640
how all those pieces,
they are linked together.

1260
01:31:47,640 --> 01:31:50,720
Right?
We only care how to use those things.

1261
01:31:50,800 --> 01:31:53,600
I think of the think of the cards, right.

1262
01:31:53,960 --> 01:31:56,360
We only care how the steering works.

1263
01:31:56,360 --> 01:32:00,600
We only get how to press the better, how
to use the brakes and things like that.

1264
01:32:01,000 --> 01:32:05,040
No one cares about those super,
super complex and integrated tangle

1265
01:32:05,080 --> 01:32:06,920
inside the engine or everything.

1266
01:32:06,920 --> 01:32:11,680
So all details,
they are kind of abstracted for us, right?

1267
01:32:11,680 --> 01:32:13,960
They are hidden from us.

1268
01:32:13,960 --> 01:32:18,880
Only those guys
who have good grip on in those areas,

1269
01:32:18,880 --> 01:32:23,640
the guys who knows how to build engines
and all those mechanism on everything.

1270
01:32:24,200 --> 01:32:27,960
They are the one who is
who are taking care of it right?

1271
01:32:27,960 --> 01:32:31,760
So this abstraction is this this

1272
01:32:31,760 --> 01:32:35,080
this idea is actually coming from this.

1273
01:32:35,600 --> 01:32:35,960
These

1274
01:32:38,320 --> 01:32:39,200
what should we say?

1275
01:32:39,200 --> 01:32:42,360
So how
how the other companies in real life,

1276
01:32:42,360 --> 01:32:47,520
how they build super big complex systems.

1277
01:32:47,520 --> 01:32:50,920
So this idea is taking care
from there right in

1278
01:32:51,280 --> 01:32:53,680
whenever
we have to build something complex.

1279
01:32:54,760 --> 01:32:57,600
We all know that one single man cannot

1280
01:32:58,640 --> 01:32:59,640
do everything.

1281
01:32:59,640 --> 01:33:03,600
So what we do,
we hired the experts, right?

1282
01:33:04,160 --> 01:33:07,680
We tell them how the parts will look like,
right?

1283
01:33:07,920 --> 01:33:09,280
We define the inputs.

1284
01:33:09,280 --> 01:33:13,560
We define the outputs will do what we
tell them this size or things like that.

1285
01:33:13,920 --> 01:33:16,760
Then they, the experts of those areas,

1286
01:33:16,760 --> 01:33:20,040
they they design that specific part.

1287
01:33:20,680 --> 01:33:23,480
Then we integrate that part into our

1288
01:33:24,480 --> 01:33:25,600
main system.

1289
01:33:25,600 --> 01:33:31,120
Then this is how in real life complex
things are built.

1290
01:33:31,440 --> 01:33:34,360
Is this like backend action?

1291
01:33:34,360 --> 01:33:37,440
Yes, it's kind
all happening in the back end.

1292
01:33:37,960 --> 01:33:41,520
So we will try to achieve some things
same, right?

1293
01:33:42,000 --> 01:33:45,600
We will try to give something, Sam
using this abstraction.

1294
01:33:45,600 --> 01:33:48,920
So right now
the idea is looking super, super complex.

1295
01:33:49,320 --> 01:33:53,880
But it's really simple, really simple
because what we can do

1296
01:33:53,880 --> 01:33:57,280
using this abstract keyword
so you guys already know

1297
01:33:57,280 --> 01:34:00,480
how to hide
the implementation details, right?

1298
01:34:00,840 --> 01:34:05,360
When we define a method in a class,
we write all the logic in there.

1299
01:34:05,880 --> 01:34:07,240
We have hidden those details.

1300
01:34:07,240 --> 01:34:10,520
When we are calling that method,
we are actually

1301
01:34:10,520 --> 01:34:14,080
only getting about the input output
and writing the name of that method.

1302
01:34:14,080 --> 01:34:16,440
Right? So we have been already doing this

1303
01:34:17,840 --> 01:34:20,520
for many, many, many, many classes.

1304
01:34:20,840 --> 01:34:24,480
But now we will impose some more

1305
01:34:25,640 --> 01:34:27,440
on how those matters.

1306
01:34:27,440 --> 01:34:30,040
They are defined in tired big classes,

1307
01:34:30,480 --> 01:34:34,560
how one class should implement
or what are the rules.

1308
01:34:34,560 --> 01:34:36,560
So the in this implementation,

1309
01:34:36,560 --> 01:34:39,800
hiding the implementation
and only exposing the functionality.

1310
01:34:39,800 --> 01:34:41,920
We have already done it so many times.

1311
01:34:42,360 --> 01:34:45,960
When we define the method
we are providing the implementations.

1312
01:34:45,960 --> 01:34:48,160
When we are calling a method,

1313
01:34:48,160 --> 01:34:51,600
we are only getting about
the functionality of that method, right?

1314
01:34:51,920 --> 01:34:54,720
We passed the parameter, the

1315
01:34:54,720 --> 01:34:58,440
then if that method is returning something
that is our output, right?

1316
01:34:58,440 --> 01:35:01,400
And if there are wild methods,
they are simply printing things.

1317
01:35:01,400 --> 01:35:06,160
But now we have this extra extra power

1318
01:35:06,160 --> 01:35:12,240
off of this abstract keyword
that we can use to enforce these things.

1319
01:35:12,280 --> 01:35:14,080
Yes. Kind of access modifier.

1320
01:35:14,080 --> 01:35:18,800
We have a special keyword
that will help us to enforce

1321
01:35:18,880 --> 01:35:24,040
some new rules, but the idea is same
idea is very simple, same writing method

1322
01:35:25,400 --> 01:35:26,440
in a in a file

1323
01:35:26,440 --> 01:35:29,160
provide implementation in a different file

1324
01:35:29,400 --> 01:35:33,040
and then call that method
whenever you need your tried.

1325
01:35:33,040 --> 01:35:37,360
So for example scandal class
implemented by Java

1326
01:35:37,360 --> 01:35:40,880
expert wise, they know how to take
the input from the keyboard.

1327
01:35:41,160 --> 01:35:42,240
Well, we don't care.

1328
01:35:42,240 --> 01:35:44,440
We simply write the next boolean method.

1329
01:35:44,760 --> 01:35:48,040
We get the output from that boolean method
and we use it right.

1330
01:35:49,520 --> 01:35:54,120
But out there in the back we made
many overloaded, overloaded methods. Yes.

1331
01:35:54,560 --> 01:35:56,280
Yes, you are right.

1332
01:35:56,280 --> 01:35:58,720
So abstraction is a process of hardening

1333
01:35:58,720 --> 01:36:02,760
the implementation details and showing
only the functionality to the user.

1334
01:36:02,760 --> 01:36:05,480
Right? So when we create

1335
01:36:05,480 --> 01:36:07,560
public methods, then we create

1336
01:36:08,400 --> 01:36:11,840
the default access methods,
then we create protected method.

1337
01:36:11,840 --> 01:36:15,960
We are already this thing.

1338
01:36:15,960 --> 01:36:20,880
For example, it doesn't end of that
example sending in estimates, right?

1339
01:36:21,360 --> 01:36:24,360
We don't care how Google mobile phones,

1340
01:36:24,400 --> 01:36:27,120
they are connected the over the network.

1341
01:36:27,880 --> 01:36:30,760
The console is an abstraction interface
for the user.

1342
01:36:30,760 --> 01:36:31,320
Yes, ma'am.

1343
01:36:31,320 --> 01:36:33,400
And you can say that. Yes. Yes,
you are right.

1344
01:36:33,960 --> 01:36:37,320
So and we don't care how two mobile
phones,

1345
01:36:37,320 --> 01:36:39,160
they are connected over the Internet,
right?

1346
01:36:39,160 --> 01:36:42,720
One mobile phone, maybe using the SIM
card of a different network.

1347
01:36:42,720 --> 01:36:45,960
The other might be using the network
from a different company.

1348
01:36:46,640 --> 01:36:51,280
One might be using the iOS,
the other might be using Android.

1349
01:36:51,760 --> 01:36:56,840
All those details, how
all the communication will happen between

1350
01:36:56,840 --> 01:36:59,800
different companies, networks,
operating system,

1351
01:37:00,440 --> 01:37:02,600
all that is hidden from us, right?

1352
01:37:02,920 --> 01:37:04,760
We just write the message.

1353
01:37:05,720 --> 01:37:07,760
We press this button next to

1354
01:37:08,840 --> 01:37:10,880
the message is gone to the next person.

1355
01:37:10,880 --> 01:37:14,880
Usually no
as our part right after extract part

1356
01:37:15,800 --> 01:37:18,400
we will discuss about that note.

1357
01:37:18,400 --> 01:37:22,040
So for example, sending

1358
01:37:22,240 --> 01:37:26,000
SMS, you would just type text
and send the message.

1359
01:37:26,000 --> 01:37:30,600
You don't know the internal processing
about the message delivery, right?

1360
01:37:31,160 --> 01:37:35,600
There can be super, super complex
algorithms behind the seems scenes

1361
01:37:35,600 --> 01:37:36,960
and this can be super, super

1362
01:37:36,960 --> 01:37:40,560
complex technology behind the scenes,
but we don't get all of that.

1363
01:37:40,960 --> 01:37:42,000
Now about text.

1364
01:37:42,000 --> 01:37:46,560
Abstraction is the process
of separating ideas from their action

1365
01:37:47,520 --> 01:37:50,360
again, implementation
and then calling a method.

1366
01:37:51,840 --> 01:37:55,280
This is just another example
when we use data, same machine, right

1367
01:37:55,800 --> 01:37:59,800
the and then we insert the atrium card
inside of the atrium machine.

1368
01:38:00,880 --> 01:38:03,320
The atrium connects us

1369
01:38:03,320 --> 01:38:07,920
in the atrium, checks the balance
from our bank writer, sends sensor

1370
01:38:07,920 --> 01:38:11,960
request, and the balance is ratified,
the password is verified,

1371
01:38:12,200 --> 01:38:15,920
then we withdraw something,
then we get the cash and all those

1372
01:38:15,920 --> 01:38:19,840
calculations, how everything is happening
behind scene, we don't care.

1373
01:38:20,240 --> 01:38:24,240
We insert the card, enter the password,
enter the amount that we want,

1374
01:38:24,480 --> 01:38:25,400
and we get back.

1375
01:38:25,400 --> 01:38:28,600
I'm all right if we have that
in our balance, in our account. So

1376
01:38:29,680 --> 01:38:32,520
this is again, there are so many things

1377
01:38:32,520 --> 01:38:35,240
which are being in here, right?

1378
01:38:35,720 --> 01:38:39,280
How the atrium, the internal electronics,
how a

1379
01:38:39,320 --> 01:38:42,520
how the Internet protocols,
how these machines are connected.

1380
01:38:42,520 --> 01:38:46,320
Look banks, how verification
is being happening automatically

1381
01:38:46,320 --> 01:38:50,880
all that is hidden from us, right,
is, again, something similar to methods.

1382
01:38:51,200 --> 01:38:53,880
A method can contain
thousand lines of code, right?

1383
01:38:54,160 --> 01:38:55,320
Maybe million lines of code.

1384
01:38:55,320 --> 01:38:59,040
It may be calling other million meters,
but we don't care about them.

1385
01:38:59,040 --> 01:39:02,880
We just write the name of the method, past
the parameters, get back

1386
01:39:02,880 --> 01:39:07,560
the outputs of the string methods, base
string method.

1387
01:39:07,560 --> 01:39:11,480
When we have to get the character
at a specific index right, there

1388
01:39:11,480 --> 01:39:14,760
is some kind of logic that is happening
behind the scenes, but we don't care.

1389
01:39:15,040 --> 01:39:19,360
We just tell the index and we get back
the character at that index.

1390
01:39:20,040 --> 01:39:25,680
So that is also abstraction.

1391
01:39:25,680 --> 01:39:29,160
So like why is an object oriented
programing?

1392
01:39:29,160 --> 01:39:34,160
Abstraction is a process of hardening
the implements and details

1393
01:39:34,160 --> 01:39:35,280
from the use, right?

1394
01:39:35,280 --> 01:39:37,320
These are just technical documents.

1395
01:39:37,320 --> 01:39:39,160
They're don't, don't worry
about an abstraction.

1396
01:39:39,160 --> 01:39:40,440
This is very simple.

1397
01:39:40,440 --> 01:39:46,560
Only the functionality will be visible
to the user.

1398
01:39:46,560 --> 01:39:49,680
Abstraction lets you focus on

1399
01:39:49,680 --> 01:39:53,760
what the object does
instead of how it does.

1400
01:39:53,760 --> 01:39:54,440
Right?

1401
01:39:54,440 --> 01:39:58,400
There is an object, let's say the object
of this kind of class.

1402
01:39:58,800 --> 01:40:02,960
It tells us, take the input of different
types from the keyboard.

1403
01:40:02,960 --> 01:40:06,280
Right now, what this object is doing,
it is helping us

1404
01:40:06,520 --> 01:40:08,160
get the input from the keyboard.

1405
01:40:08,160 --> 01:40:11,360
We don't care
how all the logic is implemented

1406
01:40:11,360 --> 01:40:14,440
behind the scenes.

1407
01:40:14,440 --> 01:40:19,080
Abstraction is nothing but the process
of giving a set of guidelines to the user

1408
01:40:19,280 --> 01:40:21,800
who are going to implement
these guidelines

1409
01:40:22,200 --> 01:40:25,480
based on their needs.

1410
01:40:25,480 --> 01:40:27,840
So we define the input output.

1411
01:40:28,600 --> 01:40:31,280
The end user knows how this method works.

1412
01:40:31,800 --> 01:40:35,280
It gives the specific input
and gets back the specific output.

1413
01:40:35,640 --> 01:40:40,800
So abstraction is the concept of exposing
only the required

1414
01:40:40,800 --> 01:40:46,200
essential characteristics and behaviors
with respect to a conscious context.

1415
01:40:46,200 --> 01:40:46,760
Right.

1416
01:40:46,880 --> 01:40:50,960
Expose some features if you want, expose
some methods if you want,

1417
01:40:51,200 --> 01:40:53,960
and the others can use those methods
and fears

1418
01:40:54,160 --> 01:40:57,320
to get the information from your

1419
01:40:58,520 --> 01:41:00,240
to to

1420
01:41:00,240 --> 01:41:04,200
have this logic from your class
to perform different actions.

1421
01:41:05,640 --> 01:41:09,720
Now, as all the pillars of the programing

1422
01:41:09,920 --> 01:41:12,800
object oriented programing,
they have some kind of benefits.

1423
01:41:13,280 --> 01:41:16,560
So this abstraction is also
one of the fundamental principles

1424
01:41:16,560 --> 01:41:21,280
of object oriented programing.

1425
01:41:21,280 --> 01:41:24,560
Abstraction
helps us reduce the complexity.

1426
01:41:24,800 --> 01:41:29,280
So how this complexity is reduced,
think about this, right?

1427
01:41:29,640 --> 01:41:41,240
So if I if I show you, look me

1428
01:41:41,240 --> 01:42:07,720
actually create a new class.

1429
01:42:07,720 --> 01:42:09,840
So if we take the example of the standard

1430
01:42:09,880 --> 01:42:12,000
class,
because you guys are familiar with this

1431
01:42:13,880 --> 01:42:23,160
standard class.

1432
01:42:23,160 --> 01:42:25,680
So right now,

1433
01:42:25,680 --> 01:42:30,040
let's say if I have to take the input,
I only write this left next line, right?

1434
01:42:30,760 --> 01:42:32,840
But if I open this method,

1435
01:42:33,360 --> 01:42:36,760
this next line method,
so I am holding down my control button

1436
01:42:37,320 --> 01:42:41,040
and I am clicking
on this name of the method

1437
01:42:42,560 --> 01:42:44,640
with my left click.

1438
01:42:45,200 --> 01:42:50,880
So once I open
I see a lot of if health conditions

1439
01:42:50,880 --> 01:42:54,640
and at the and the other keywords
like through blah blah blah.

1440
01:42:54,640 --> 01:42:59,400
And then there are other matters
inside this method, right?

1441
01:42:59,400 --> 01:43:02,480
If I open this, find within horizontal,

1442
01:43:02,840 --> 01:43:06,240
then I again have super super complex
logic part.

1443
01:43:06,240 --> 01:43:10,200
There are so many things that are going
behind the scene inside of this method.

1444
01:43:10,200 --> 01:43:13,120
There is another method
find running buffer.

1445
01:43:13,440 --> 01:43:18,360
Again, so many things going on inside
this method, so many methods, right?

1446
01:43:19,200 --> 01:43:21,680
So think of this guys.

1447
01:43:21,680 --> 01:43:24,640
If you have to take the input

1448
01:43:25,240 --> 01:43:28,280
and if you guys always have to write,

1449
01:43:28,600 --> 01:43:33,000
always have to write this much code again
and again,

1450
01:43:33,000 --> 01:43:36,120
you want to take an integer
input from the keyboard

1451
01:43:36,120 --> 01:43:40,160
and you are writing all of this code
how hectic it will be, right?

1452
01:43:40,200 --> 01:43:45,800
It's kind of it will almost
be impossible to program. But

1453
01:43:47,000 --> 01:43:49,560
the programmers in nineties,

1454
01:43:49,560 --> 01:43:52,440
they those who have been programing in

1455
01:43:53,360 --> 01:43:58,920
in binary
or they used to write all of this again

1456
01:43:58,920 --> 01:44:01,120
and again
those combinations of ones and zeros.

1457
01:44:01,440 --> 01:44:06,800
Then we had this programing language
called the assembly programing language

1458
01:44:06,800 --> 01:44:12,160
in which we had the concept first time,
the concept of routines in which we write

1459
01:44:12,160 --> 01:44:16,080
the code that is being used again
and again, and we can only simply

1460
01:44:17,600 --> 01:44:21,320
refer to that piece of code
instead of rewriting of that code.

1461
01:44:21,320 --> 01:44:24,280
So in here it is,

1462
01:44:24,840 --> 01:44:28,280
we are only writing these few words,

1463
01:44:28,800 --> 01:44:32,200
and in just a few letters we are able to

1464
01:44:33,760 --> 01:44:35,600
get the input from the keyboard.

1465
01:44:35,600 --> 01:44:38,160
So this is how it reduces the complexity.

1466
01:44:39,600 --> 01:44:41,480
So abstraction helps

1467
01:44:41,480 --> 01:44:44,000
to reduce the complexity

1468
01:44:45,200 --> 01:44:49,000
and also improves
the maintain maintainability article.

1469
01:44:49,040 --> 01:44:53,960
Now if someone has to make changes,
he can make changes inside of the method

1470
01:44:54,160 --> 01:44:58,280
and that change wherever
we are using the next line

1471
01:44:58,280 --> 01:45:02,520
method that will be reflected
automatically there.

1472
01:45:03,480 --> 01:45:04,360
We don't need to

1473
01:45:04,360 --> 01:45:07,960
go in all the places
and we don't need to change the code

1474
01:45:08,280 --> 01:45:11,920
wherever we are calling this next line
method.

1475
01:45:12,120 --> 01:45:15,600
So that's how it helps us
reduce the complexity

1476
01:45:17,160 --> 01:45:18,640
and also improve

1477
01:45:18,640 --> 01:45:20,640
the maintainability of the system,

1478
01:45:22,160 --> 01:45:26,400
combining abstraction
with concepts of encapsulation. So

1479
01:45:26,760 --> 01:45:28,840
we will be discussing this encapsulation

1480
01:45:29,480 --> 01:45:32,120
in next week and polymorphism.

1481
01:45:32,280 --> 01:45:36,600
It gives more power to the object
oriented programing.

1482
01:45:37,040 --> 01:45:38,360
Yeah. Really?

1483
01:45:38,360 --> 01:45:53,200
You guys have any before we move forward?

1484
01:45:53,200 --> 01:45:55,880
So in Java

1485
01:45:55,880 --> 01:45:59,960
there are two main ways
we can achieve the abstraction.

1486
01:46:00,480 --> 01:46:06,320
Okay.

1487
01:46:06,320 --> 01:46:12,720
Yes, I will still be teaching Java,
so reviews will be taken care of by here.

1488
01:46:13,200 --> 01:46:15,960
So there are two ways to achieve
abstraction in our

1489
01:46:18,080 --> 01:46:20,840
one is using the abstract classes

1490
01:46:22,440 --> 01:46:27,240
and the other is using the interfaces. So

1491
01:46:28,200 --> 01:46:29,680
there was a big change

1492
01:46:29,680 --> 01:46:32,720
in Java eight before Java eight.

1493
01:46:33,840 --> 01:46:37,600
This is how things used to look like.

1494
01:46:37,960 --> 01:46:42,040
So if we have to achieve
partial abstraction,

1495
01:46:43,960 --> 01:46:47,800
we had to use abstract classes,

1496
01:46:47,800 --> 01:46:51,640
if we had to use a solid.

1497
01:46:51,840 --> 01:46:53,560
So I have changed the slide.

1498
01:46:53,560 --> 01:46:56,760
So it was before

1499
01:46:57,000 --> 01:46:59,720
and this is how it was
much like an alternative.

1500
01:46:59,960 --> 01:47:06,320
So before Java here,
if we had to achieve 100% abstraction,

1501
01:47:06,320 --> 01:47:08,640
we had to use interfaces.

1502
01:47:10,080 --> 01:47:14,280
Yes. Now we will do an example.

1503
01:47:14,280 --> 01:47:15,920
So abstract classes.

1504
01:47:15,920 --> 01:47:19,680
Now we can
we can use abstract classes or interfaces

1505
01:47:20,720 --> 01:47:29,120
to achieve this abstraction.

1506
01:47:29,120 --> 01:47:33,280
So in Java programing
we have two types of classes affect

1507
01:47:33,960 --> 01:47:36,840
and grade classes, and abstract
class is one

1508
01:47:37,400 --> 01:47:41,680
which is declared with abstract keyword
and cannot contain

1509
01:47:41,680 --> 01:47:46,080
defined and undefined.

1510
01:47:46,080 --> 01:47:47,640
Okay, now let's do an example

1511
01:48:02,880 --> 01:48:06,240
and before we do the example, let me in.

1512
01:48:06,240 --> 01:48:34,800
Wired
The students from previous batch quickly,

1513
01:48:34,800 --> 01:48:42,200
are they going to be with us today? Yes.

1514
01:48:42,200 --> 01:49:17,880
So one of them will be

1515
01:49:18,240 --> 01:49:21,760
the honor.

1516
01:49:21,760 --> 01:49:31,800
Give me road

1517
01:49:32,160 --> 01:49:37,760
to death on which but they are from about
eight or nine because that then is they

1518
01:49:37,840 --> 01:49:42,560
they will be hitting the market around
two months, 1.5 or two months,

1519
01:49:42,560 --> 01:49:50,520
I guess.

1520
01:49:50,520 --> 01:49:53,160
Okay. So

1521
01:49:55,440 --> 01:49:59,360
let's do an example.

1522
01:49:59,360 --> 01:50:04,440
Let's have a phone class.

1523
01:50:04,440 --> 01:50:08,880
So let's say a company
is trying to build a phone, right?

1524
01:50:08,880 --> 01:50:13,480
So what happens is there
there are themes, maybe a set of people

1525
01:50:13,480 --> 01:50:16,800
taking care of this play and adults
taking care of the

1526
01:50:18,800 --> 01:50:20,520
sound systems, the others

1527
01:50:20,520 --> 01:50:26,040
taking care of the operating system
and security and all that.

1528
01:50:26,040 --> 01:50:27,360
Right. So what will happen

1529
01:50:28,440 --> 01:50:32,760
from the perspective of design?

1530
01:50:32,760 --> 01:50:36,720
First,
we will have something that will define

1531
01:50:37,360 --> 01:50:43,120
all of these things
that our phone will be having, the things,

1532
01:50:43,120 --> 01:50:46,560
how those things will take the input

1533
01:50:47,400 --> 01:50:51,480
and how they will give us back the output.

1534
01:50:51,880 --> 01:50:56,640
So that class in which we will define
these requirements,

1535
01:50:56,640 --> 01:51:01,360
that class is called abstract class
and we use a special keyword with that.

1536
01:51:01,400 --> 01:51:04,920
So let's say

1537
01:51:05,440 --> 01:51:07,480
the person who is designing

1538
01:51:23,520 --> 01:51:24,120
the lesson,

1539
01:51:24,120 --> 01:51:27,480
we are defining some matters in here

1540
01:51:35,800 --> 01:51:38,800
and we are not sure about

1541
01:51:41,960 --> 01:51:43,440
some of the matters, so some of them are.

1542
01:51:43,440 --> 01:51:47,120
Third, we know how these
and how this method will be implemented.

1543
01:51:47,560 --> 01:51:51,400
So we will define those matters in here

1544
01:51:52,080 --> 01:51:55,680
and for the methods which we don't know

1545
01:51:57,240 --> 01:51:59,840
how to implement, we will

1546
01:51:59,840 --> 01:52:02,880
leave those methods as

1547
01:52:04,400 --> 01:52:05,640
unimplemented.

1548
01:52:05,640 --> 01:52:08,680
Okay, So we will say

1549
01:52:09,200 --> 01:52:11,600
abstract, and this is again

1550
01:52:12,720 --> 01:52:14,880
in non access modified fields.

1551
01:52:14,880 --> 01:52:18,240
So this is the third keyword
in that category that we are learning.

1552
01:52:18,240 --> 01:52:20,440
It's first one was static.

1553
01:52:20,440 --> 01:52:24,920
Then we learned about the final
and now we have this abstract proposal.

1554
01:52:24,920 --> 01:52:28,320
Abstract Why do we define the output?

1555
01:52:28,440 --> 01:52:32,040
In our case, there will be no output.

1556
01:52:32,040 --> 01:52:38,720
This method will only be printing
something to keep things simple.

1557
01:52:38,720 --> 01:52:42,040
And then we say display

1558
01:52:42,040 --> 01:52:43,080
maybe.

1559
01:52:44,040 --> 01:52:45,960
Yes. Yeah.

1560
01:52:45,960 --> 01:52:48,960
And this method
will not be taking any input.

1561
01:52:50,320 --> 01:52:52,720
And this time

1562
01:52:52,720 --> 01:52:57,520
I don't provide the body for this method.

1563
01:52:58,320 --> 01:53:01,440
I said this method is abstract.

1564
01:53:01,680 --> 01:53:03,840
I don't know how to implement this.

1565
01:53:03,840 --> 01:53:06,520
I only know that my formula

1566
01:53:06,840 --> 01:53:11,920
should have this display pictures
method again, please.

1567
01:53:11,920 --> 01:53:17,760
Someone who has expertise in this area
again, can you please implement

1568
01:53:17,760 --> 01:53:21,600
this method so that I can use this method

1569
01:53:21,600 --> 01:53:24,720
with other methods in here and now,

1570
01:53:25,560 --> 01:53:30,200
as soon as I declare
the method as abstract.

1571
01:53:31,720 --> 01:53:34,480
Now this class,

1572
01:53:34,480 --> 01:53:37,040
it must also be

1573
01:53:37,040 --> 01:53:40,680
an abstract class.

1574
01:53:40,680 --> 01:53:43,840
Otherwise we will be

1575
01:53:43,840 --> 01:53:45,160
getting an error.

1576
01:53:45,160 --> 01:53:49,440
So as soon as we have

1577
01:53:49,680 --> 01:53:53,600
a least one abstract

1578
01:53:53,600 --> 01:53:56,400
method in our class

1579
01:53:57,360 --> 01:54:01,200
now that class must be abstract as well.

1580
01:54:01,200 --> 01:54:04,280
So it's like you're only listing
the blueprint of the class

1581
01:54:04,280 --> 01:54:06,680
and then the experts will come in
and quarterly.

1582
01:54:06,960 --> 01:54:07,520
Yes, ma'am.

1583
01:54:07,520 --> 01:54:08,400
And you are right.

1584
01:54:08,400 --> 01:54:16,560
Perfect.

1585
01:54:16,560 --> 01:54:18,960
So we are only listing the details.

1586
01:54:18,960 --> 01:54:22,400
The other phone company
is maybe Samsung, Apple.

1587
01:54:22,720 --> 01:54:27,760
They implement these matters in ways,
but whichever company wants to implement

1588
01:54:27,760 --> 01:54:32,520
these methods, they implement the method
and then we can use those methods.

1589
01:54:34,200 --> 01:54:37,080
And now so Nabeel asked me in this dark

1590
01:54:37,080 --> 01:54:39,240
task there why it is important

1591
01:54:40,440 --> 01:54:43,840
that we should care about the output,

1592
01:54:43,840 --> 01:54:47,600
the return type of the method
when we are overriding something.

1593
01:54:47,800 --> 01:54:51,920
Okay, so now you guys will see
why the output is also important, right?

1594
01:54:51,960 --> 01:54:56,520
Because in overwriting in overload
as the output multiplies

1595
01:54:57,520 --> 01:54:58,880
and I overload the method by

1596
01:54:58,880 --> 01:55:07,200
just changing the return type.

1597
01:55:07,200 --> 01:55:09,160
So most of the time

1598
01:55:09,160 --> 01:55:13,440
Maryam and I are the first to answer,
but they always answer it wrong.

1599
01:55:13,440 --> 01:55:15,600
Always, Almost always.

1600
01:55:15,600 --> 01:55:21,440
But when they at first glance.

1601
01:55:21,440 --> 01:55:21,720
Right.

1602
01:55:21,720 --> 01:55:25,920
So no, we cannot overload them

1603
01:55:26,400 --> 01:55:31,680
by just attending a certain type.

1604
01:55:31,680 --> 01:55:36,000
There's happened only two times.

1605
01:55:36,000 --> 01:55:38,640
Okay, so

1606
01:55:38,640 --> 01:55:40,680
we cannot overload by just changing

1607
01:55:40,680 --> 01:55:44,160
the return type.

1608
01:55:44,160 --> 01:55:45,840
So we.

1609
01:55:45,840 --> 01:55:50,520
But again, can I,
can I change the return type of a night?

1610
01:55:50,520 --> 01:55:52,560
Or when I am overriding a method

1611
01:55:54,840 --> 01:55:56,040
or the return type

1612
01:55:56,040 --> 01:56:03,320
should be exactly the same.

1613
01:56:03,320 --> 01:56:05,080
It should be same now. Why?

1614
01:56:05,080 --> 01:56:07,480
It should be same.
It will be clear in here.

1615
01:56:07,480 --> 01:56:08,800
Okay.

1616
01:56:08,800 --> 01:56:12,720
Because in here
we will be using the override mechanism

1617
01:56:14,160 --> 01:56:17,720
to provide the implementation details.

1618
01:56:17,720 --> 01:56:19,960
Right.
So let's have another abstract method.

1619
01:56:21,120 --> 01:56:24,400
So abstract, maybe

1620
01:56:24,400 --> 01:56:26,200
avoid

1621
01:56:26,440 --> 01:56:28,720
unlock for one.

1622
01:56:30,040 --> 01:56:30,440
Yeah.

1623
01:56:30,960 --> 01:56:34,080
So now again, you guys tell me,
how can I provide

1624
01:56:34,080 --> 01:56:36,720
the implementation details for this class?

1625
01:56:37,120 --> 01:56:41,040
And any idea then a guess is

1626
01:56:50,400 --> 01:56:54,840
inside the parentheses through child
class.

1627
01:56:55,760 --> 01:56:57,280
You said override. Ding.

1628
01:56:57,280 --> 01:57:00,240
Yes. What is required for overriding

1629
01:57:01,480 --> 01:57:06,240
inheritance is required for overwriting.

1630
01:57:06,240 --> 01:57:07,160
Right

1631
01:57:09,480 --> 01:57:11,440
So now

1632
01:57:11,600 --> 01:57:14,280
once I have these abstract details

1633
01:57:14,760 --> 01:57:21,720
of how the how phone will look like now,
I now I create the actual fonts.

1634
01:57:21,720 --> 01:57:23,480
Okay, So I pulled the requirements.

1635
01:57:23,480 --> 01:57:26,680
I put the kind of
the design design in here.

1636
01:57:27,080 --> 01:57:29,360
Now I actually create the default, right?

1637
01:57:29,600 --> 01:57:36,400
So let's say, for example,
I want to create an iPhone.

1638
01:57:36,400 --> 01:57:40,200
I say extends font

1639
01:57:42,360 --> 01:57:45,120
and as soon as I write,

1640
01:57:46,800 --> 01:57:48,840
this is the point of being abstract

1641
01:57:48,840 --> 01:57:52,640
using it inside of classes. Yes.

1642
01:57:52,640 --> 01:57:57,720
So as soon as I write expense,
now I get an error

1643
01:57:58,400 --> 01:58:02,360
because now Java is enforcing
this always saying their task.

1644
01:58:02,360 --> 01:58:06,480
There you have to abstract method,

1645
01:58:07,920 --> 01:58:08,880
you have to

1646
01:58:08,880 --> 01:58:13,240
abstract method inside
and therefore in class.

1647
01:58:13,920 --> 01:58:14,560
You know what?

1648
01:58:14,560 --> 01:58:18,480
If you want to inherit from that class,
yes, you will be getting these

1649
01:58:18,760 --> 01:58:20,400
to implemented methods.

1650
01:58:20,400 --> 01:58:24,080
But for this one
you have to provide the implementation.

1651
01:58:24,920 --> 01:58:29,520
Otherwise this class
should also be an abstract class.

1652
01:58:29,520 --> 01:58:33,400
If you want it to be a concrete class,
it should be.

1653
01:58:34,440 --> 01:58:37,680
It should implement those two methods.

1654
01:58:37,920 --> 01:58:42,600
And what is the difference between
abstract class and a non abstract class?

1655
01:58:42,600 --> 01:58:45,000
What happens
when we have an abstract class?

1656
01:58:45,000 --> 01:58:51,840
So when we have an abstract class,
we cannot create the object of this class.

1657
01:58:52,640 --> 01:58:56,800
And you guys tell me why it makes sense
to not allow

1658
01:58:58,080 --> 01:59:03,280
to have objects of this class,
the asset class,

1659
01:59:03,840 --> 01:59:08,160
while why it makes sense
to not allow the objects if one class has

1660
01:59:09,120 --> 01:59:09,960
unless one

1661
01:59:09,960 --> 01:59:12,600
abstract
matter, then it must be named abstract

1662
01:59:13,760 --> 01:59:15,120
because it had errors.

1663
01:59:15,120 --> 01:59:19,720
Because we are giving information,
we have non implemented to meet

1664
01:59:20,400 --> 01:59:22,840
fact perfect answer and yes.

1665
01:59:23,400 --> 01:59:27,560
So guys, if I allow to have
the object of this class

1666
01:59:28,520 --> 01:59:31,760
and if the creates the object
of this class

1667
01:59:31,760 --> 01:59:35,280
and tries to call
and try to try to call this method

1668
01:59:36,120 --> 01:59:40,440
a how do I know what to do in this case,
these matter.

1669
01:59:40,800 --> 01:59:43,000
They don't have anybody right.

1670
01:59:43,720 --> 01:59:47,400
Then how do our knows
if someone is creating

1671
01:59:47,400 --> 01:59:50,160
the object and trying call this method?

1672
01:59:50,720 --> 01:59:52,440
It's an unimplemented method.

1673
01:59:52,440 --> 01:59:54,640
It is something and complete.

1674
01:59:54,640 --> 01:59:58,040
So you're saying like this
half of the card is built into

1675
01:59:58,440 --> 02:00:00,720
it only has two front wheels.

1676
02:00:00,720 --> 02:00:06,600
And now the driver is saying,
I want to drive this car right.

1677
02:00:06,600 --> 02:00:10,560
So if something is not complete,
how how we can use it, Right.

1678
02:00:10,760 --> 02:00:13,160
It has unimplemented things, right.

1679
02:00:13,160 --> 02:00:17,480
It needs to complete
if it is not fully designed yet.

1680
02:00:17,720 --> 02:00:19,640
It is not fully built yet.

1681
02:00:20,960 --> 02:00:25,440
You cannot call the bike.

1682
02:00:25,440 --> 02:00:27,680
Okay, Sebastian, in that case, you have to

1683
02:00:27,760 --> 02:00:31,640
you have to drive that bike with only one
will always one.

1684
02:00:31,640 --> 02:00:32,400
Really. And

1685
02:00:33,200 --> 02:00:35,120
so now

1686
02:00:35,400 --> 02:00:37,360
we have two rules, right?

1687
02:00:37,360 --> 02:00:39,480
You do not have something to execute. Yes.

1688
02:00:39,480 --> 02:00:41,880
A you right. So

1689
02:00:42,720 --> 02:00:47,360
as soon as I have one abstract method,

1690
02:00:48,080 --> 02:00:52,040
I must declare the class as abstract
because now I

1691
02:00:52,200 --> 02:00:58,800
something in my class that is not complete
right now, it is incomplete.

1692
02:00:59,280 --> 02:01:03,360
If you want to create object, you have to
complete methods and create the yes.

1693
02:01:04,360 --> 02:01:06,680
So how can we implement the method?

1694
02:01:06,680 --> 02:01:12,240
We use the overriding mechanism
to provide the implements?

1695
02:01:12,240 --> 02:01:12,640
Yeah.

1696
02:01:12,720 --> 02:01:16,240
So we see ward

1697
02:01:17,480 --> 02:01:20,400
on display picture same as we override

1698
02:01:20,520 --> 02:01:22,280
and we see

1699
02:01:24,240 --> 02:01:26,760
like we say, let's say

1700
02:01:27,560 --> 02:01:31,480
I form, he uses

1701
02:01:32,840 --> 02:01:36,440
photos to

1702
02:01:36,440 --> 02:01:38,760
display the pictures

1703
02:01:43,840 --> 02:01:45,880
and still I get an error

1704
02:01:46,080 --> 02:01:50,520
because I still have to implement
one more method.

1705
02:01:50,520 --> 02:01:52,880
So I try to avoid

1706
02:01:54,600 --> 02:01:56,400
unlock phone.

1707
02:01:56,400 --> 02:01:59,680
And now as soon as I arrived, the second

1708
02:01:59,680 --> 02:02:03,640
method, then the error goes right?

1709
02:02:03,640 --> 02:02:05,640
So I can say

1710
02:02:16,680 --> 02:02:18,520
you face harder to unlock default.

1711
02:02:18,520 --> 02:02:19,160
Right?

1712
02:02:19,560 --> 02:02:22,400
So now this icon class

1713
02:02:22,920 --> 02:02:26,080
has implemented all the requirements

1714
02:02:26,880 --> 02:02:31,200
which you are mentioned
inside this phone class.

1715
02:02:31,560 --> 02:02:36,040
And now I can create
the object of this iPhone

1716
02:02:36,600 --> 02:02:40,840
and now all the unimplemented method,
they are complete.

1717
02:02:40,840 --> 02:02:43,000
Now I can start using class.

1718
02:02:43,000 --> 02:02:46,920
So in here I provide the requirements.

1719
02:02:46,920 --> 02:02:52,360
In here I only tell about the output
and the input.

1720
02:02:52,360 --> 02:02:54,640
This class is written by someone else.

1721
02:02:55,160 --> 02:02:58,120
That person provides
the implementation details

1722
02:02:58,600 --> 02:03:02,080
and once the implementation
details are complete,

1723
02:03:02,280 --> 02:03:05,960
then I can start using the actual complete

1724
02:03:05,960 --> 02:03:10,880
concrete objects.

1725
02:03:10,880 --> 02:03:13,840
I can have another
class, for example, let's say

1726
02:03:15,120 --> 02:03:16,840
Samsung.

1727
02:03:16,840 --> 02:03:19,440
So only one class is abstract yes.

1728
02:03:19,440 --> 02:03:25,440
In the inadequate example,
there is only one class which is abstract,

1729
02:03:25,440 --> 02:03:28,240
but we can have two classes as abstract
as well.

1730
02:03:28,240 --> 02:03:35,520
In the next example, we will be having
two classes as the abstract class.

1731
02:03:35,520 --> 02:03:37,920
So class Samsung,

1732
02:03:39,280 --> 02:03:41,520
it also expands

1733
02:03:41,520 --> 02:03:45,920
the phone.

1734
02:03:45,920 --> 02:03:50,120
And now again, I get asked why
I am getting an add on guys.

1735
02:03:50,880 --> 02:03:55,480
I am trying to create a Samsung class
that is extending from the phone class,

1736
02:03:55,920 --> 02:03:57,960
but I get the errors because

1737
02:04:06,320 --> 02:04:08,760
because I must provide

1738
02:04:08,760 --> 02:04:12,440
the implementation for these two methods.

1739
02:04:12,440 --> 02:05:03,880
Right.

1740
02:05:03,880 --> 02:05:06,240
And the same thing about implementation.

1741
02:05:06,240 --> 02:05:09,200
Yes. So

1742
02:05:09,600 --> 02:05:13,440
this is how we define

1743
02:05:13,440 --> 02:05:14,400
the requirements.

1744
02:05:14,400 --> 02:05:16,560
This is how we

1745
02:05:16,640 --> 02:05:48,680
implement those requirements. Who

1746
02:05:52,800 --> 02:05:53,560
we detect

1747
02:05:53,560 --> 02:06:01,160
for the subclass.

1748
02:06:01,160 --> 02:06:13,080
Okay.

1749
02:06:13,080 --> 02:06:17,240
This face and fingerprint
reminded me of movie

1750
02:06:17,280 --> 02:06:20,640
Red Notice.

1751
02:06:20,640 --> 02:06:27,680
It's a good movie. Yep.

1752
02:06:27,680 --> 02:06:29,840
It's actually a prank at We had

1753
02:06:33,040 --> 02:06:35,640
so so nice

1754
02:06:35,720 --> 02:06:39,960
if I tried
to create the object of the form class.

1755
02:06:39,960 --> 02:06:42,440
So if I say phone

1756
02:06:42,440 --> 02:06:46,160
phone is equal to nil

1757
02:06:47,600 --> 02:06:48,360
phone,

1758
02:06:50,000 --> 02:06:51,000
I cannot do that.

1759
02:06:51,000 --> 02:06:52,160
Right. Okay.

1760
02:06:52,160 --> 02:06:56,560
Because this class is abstract. Now.

1761
02:06:56,560 --> 02:06:58,360
This class is abstract now.

1762
02:06:58,360 --> 02:07:20,160
So I cannot create the object
of this class.

1763
02:07:20,160 --> 02:07:22,680
And this is also a very famous interview
question.

1764
02:07:23,240 --> 02:07:35,240
Can we create, the object
of an abstract class?

1765
02:07:35,240 --> 02:07:41,240
All right,
So now I can use all the concepts

1766
02:07:41,240 --> 02:07:43,760
that I learned in my third override.

1767
02:07:43,760 --> 02:07:56,800
Can I use polymorphism in here, guys?

1768
02:07:56,800 --> 02:07:57,600
Yes. Right.

1769
02:07:57,600 --> 02:08:03,040
All all the same, I can call this
I can have specific methods inside

1770
02:08:03,040 --> 02:08:04,320
this class.

1771
02:08:04,320 --> 02:08:08,040
I can call the common methods
which are coming from this class.

1772
02:08:08,040 --> 02:08:08,440
Right.

1773
02:08:08,440 --> 02:08:13,600
No, no, no issues with that.

1774
02:08:13,600 --> 02:08:15,080
So I can say

1775
02:08:18,080 --> 02:08:19,680
iPhone, iPhone

1776
02:08:19,680 --> 02:08:22,720
is equal to a new iPhone.

1777
02:08:23,520 --> 02:08:25,600
I can see iPhone dot

1778
02:08:25,880 --> 02:08:31,080
display picture of iPhone on log phone.

1779
02:08:31,680 --> 02:08:35,720
I cannot call this make phone calls
and send text

1780
02:08:36,320 --> 02:08:45,840
method as well.

1781
02:08:45,840 --> 02:08:46,600
Yes. Right.

1782
02:08:46,600 --> 02:08:49,240
Because we are extending these methods.

1783
02:08:49,240 --> 02:08:52,440
They are having default access it
and there is no harm.

1784
02:08:52,440 --> 02:09:08,240
We can also follow this method right?

1785
02:09:08,240 --> 02:09:09,680
I can get my

1786
02:09:11,440 --> 02:09:12,040
let me know once

1787
02:09:12,040 --> 02:09:18,880
you guys are done typing, why not?

1788
02:09:19,560 --> 02:09:24,720
Perfect answer for interviews.

1789
02:09:24,720 --> 02:09:26,840
Not perfect answer for interviews.

1790
02:09:28,320 --> 02:09:30,840
What do you mean then is

1791
02:10:14,640 --> 02:10:16,080
you do everything. Why?

1792
02:10:16,080 --> 02:10:18,640
We cannot create an object in test.

1793
02:10:18,640 --> 02:10:22,200
So class of the of this phone class now

1794
02:10:23,560 --> 02:10:27,240
we can't say Why not?

1795
02:10:27,360 --> 02:10:30,160
The answer must be no. So

1796
02:10:31,360 --> 02:10:36,000
no, we cannot create the object
because abstract classes,

1797
02:10:36,000 --> 02:10:52,200
they contain something
which is not complete.

1798
02:10:52,200 --> 02:10:52,640
Why do it?

1799
02:10:52,640 --> 02:10:56,480
There is one more thing
nice that you can do if.

1800
02:10:56,480 --> 02:10:57,760
You don't want

1801
02:10:59,600 --> 02:11:03,360
the objects of your class to be created.

1802
02:11:03,360 --> 02:11:07,160
What you can do,
you can have an abstract class

1803
02:11:07,160 --> 02:11:09,480
even without having any abstract methods.

1804
02:11:10,160 --> 02:11:10,680
Okay,

1805
02:11:11,840 --> 02:11:13,200
there is no abstract matter.

1806
02:11:13,200 --> 02:11:15,600
Then you can still have
that class as abstract.

1807
02:11:15,920 --> 02:11:19,320
So That way the the object will also

1808
02:11:19,520 --> 02:11:22,920
it will not allow to create the object

1809
02:11:22,920 --> 02:11:27,120
if you want to restrict it.

1810
02:11:27,120 --> 02:11:29,320
If you want that,

1811
02:11:29,400 --> 02:11:32,520
the person will be

1812
02:11:32,520 --> 02:11:36,960
using the materials
or fields from this class.

1813
02:11:36,960 --> 02:11:40,200
If you want him to always first inherit

1814
02:11:40,200 --> 02:11:42,760
from this class and then

1815
02:11:44,040 --> 02:11:48,640
allow him or her to create the object,
then you can make this class abstract

1816
02:11:48,640 --> 02:11:52,040
even without having an abstract

1817
02:11:52,720 --> 02:11:56,960
and abstract method inside this.

1818
02:11:56,960 --> 02:11:59,400
So no requirements piece.

1819
02:11:59,400 --> 02:12:01,000
Okay. In abstract class.

1820
02:12:01,000 --> 02:12:05,520
Yes, it is as if the dog

1821
02:12:05,520 --> 02:12:09,600
without the head in the class
when we try to create an object.

1822
02:12:10,320 --> 02:12:13,440
Yes, you are right in the work place,
each group

1823
02:12:13,440 --> 02:12:16,880
will focus on coding
and method that are listed in the class.

1824
02:12:16,880 --> 02:12:21,160
Yes, Mamadou, you are right. So

1825
02:12:22,480 --> 02:12:23,280
and then

1826
02:12:23,280 --> 02:12:26,160
the even the bigger use case is.

1827
02:12:27,240 --> 02:12:31,240
So let's say, for example,
you are trying to build something of

1828
02:12:32,320 --> 02:12:33,840
something very generic, right?

1829
02:12:33,840 --> 02:12:36,960
So for example, think of

1830
02:12:36,960 --> 02:12:38,280
the Selenium.

1831
02:12:38,280 --> 02:12:41,000
The Selenium can test your websites

1832
02:12:41,000 --> 02:12:43,120
in Google Chrome, in Firefox

1833
02:12:44,360 --> 02:12:47,400
and Internet Explorer and other IDs.

1834
02:12:48,120 --> 02:12:51,120
So the guys who created the Selenium,

1835
02:12:51,840 --> 02:12:55,120
they created these interfaces
and abstract classes.

1836
02:12:55,840 --> 02:13:00,000
They defined how the methods
will look like the input and the output

1837
02:13:00,560 --> 02:13:05,680
and all the guys in Google Chrome, Firefox
and in other other ideas.

1838
02:13:05,680 --> 02:13:08,960
They implemented those matters
because they were

1839
02:13:08,960 --> 02:13:13,200
the experts of those ID,
Those are those browser, right?

1840
02:13:13,200 --> 02:13:17,040
Google Chrome guys knows how
how everything works inside the Google

1841
02:13:17,040 --> 02:13:20,160
Chrome, Firefox guys knows better how

1842
02:13:20,160 --> 02:13:23,160
those things work because we will be using

1843
02:13:23,800 --> 02:13:27,840
all of these things inside
a single selenium library.

1844
02:13:28,280 --> 02:13:29,440
Right? So

1845
02:13:30,560 --> 02:13:32,040
we use these

1846
02:13:32,040 --> 02:13:36,920
concepts of abstract classes interfaces
so that you guys, the end users

1847
02:13:37,520 --> 02:13:43,920
can use polymer or freedom to just change
the object of a class from Google

1848
02:13:43,920 --> 02:13:47,200
Chrome to maybe Firefox
and then test all of your code

1849
02:13:47,600 --> 02:13:51,640
in a different browser.

1850
02:13:51,640 --> 02:13:54,360
I am so sorry.
So loop is allowed here or not.

1851
02:13:54,360 --> 02:13:58,240
I start out to give my kids
their clothes. Yes.

1852
02:13:58,240 --> 02:13:59,040
Loops Are allowed.

1853
02:13:59,040 --> 02:14:03,240
All those mechanisms,
all those things that you guys

1854
02:14:03,240 --> 02:14:07,280
have been doing with polymorphism,
all those concepts

1855
02:14:07,280 --> 02:14:10,440
they are allowed here.

1856
02:14:10,440 --> 02:14:14,360
How many type of abstraction do we have?

1857
02:14:16,000 --> 02:14:18,600
Abstraction does not have types,

1858
02:14:18,600 --> 02:14:22,440
but there are interfaces and classes

1859
02:14:23,760 --> 02:14:25,640
that we can use to implement

1860
02:14:25,640 --> 02:14:31,440
this abstraction.

1861
02:14:31,440 --> 02:14:34,440
We can implement the abstraction
using interface in an abstract,

1862
02:14:35,360 --> 02:14:50,240
abstract classes.

1863
02:14:50,240 --> 02:14:52,360
And in the same way I can.

1864
02:14:52,360 --> 02:14:55,720
Right. Samsung. Samsung is new.

1865
02:14:56,760 --> 02:14:58,440
Samsung,

1866
02:14:58,720 --> 02:15:01,200
Samsung door or clear picture

1867
02:15:01,320 --> 02:15:05,320
Samsung door unlock for Samsung.

1868
02:15:05,320 --> 02:15:09,160
We got Centex

1869
02:15:09,360 --> 02:15:11,520
and Samsung gold

1870
02:15:13,880 --> 02:15:15,840
make phone calls

1871
02:15:22,800 --> 02:15:24,840
we get for the art

1872
02:15:24,840 --> 02:15:27,920
and how can I achieve polymorphism in here

1873
02:15:27,920 --> 02:15:30,960
and you guys quickly
write the code and send it to me

1874
02:15:32,040 --> 02:15:34,200
if have to

1875
02:15:34,440 --> 02:15:36,520
use polymorphism in here

1876
02:15:37,120 --> 02:15:40,440
through which I can call all the methods
with the help of a loop.

1877
02:15:40,440 --> 02:15:42,720
Maybe how can I write code

1878
02:15:44,280 --> 02:15:47,880
so that I don't have to repeat this
method calls again and again and again.

1879
02:15:47,960 --> 02:15:49,560
Each object

1880
02:15:50,680 --> 02:15:53,160
can rewrite form Samsung new Samsung.

1881
02:15:53,160 --> 02:15:55,000
Yes, I see. Yes.

1882
02:15:55,000 --> 02:15:59,000
Because phone is the parent class
and Samsung is the child class.

1883
02:15:59,000 --> 02:15:59,640
Right?

1884
02:15:59,640 --> 02:16:02,640
So all the Samsung

1885
02:16:02,640 --> 02:16:04,280
devices, they are also phones.

1886
02:16:04,280 --> 02:16:06,840
So we can see that inside of one variable

1887
02:16:08,640 --> 02:16:18,760
can quickly write the code

1888
02:16:19,480 --> 02:16:41,080
for polymorphism focusing. Yes.

1889
02:16:41,120 --> 02:17:05,400
Phone phone and your iPhone.

1890
02:17:05,400 --> 02:17:17,040
And then how can I write the loop?

1891
02:17:17,040 --> 02:17:22,880
So for each
because I am only accessing the elements,

1892
02:17:24,280 --> 02:17:27,360
phone, be it inside

1893
02:17:29,240 --> 02:17:32,800
first call it phones

1894
02:17:33,960 --> 02:17:37,680
and then I can say be it or display

1895
02:17:37,680 --> 02:17:40,200
because he said or

1896
02:17:43,320 --> 02:17:45,680
make phone calls.

1897
02:17:45,680 --> 02:17:48,240
We talked on a lot call

1898
02:17:49,280 --> 02:17:53,760
the pictures.

1899
02:17:54,280 --> 02:18:01,120
Well it's already text

1900
02:18:09,240 --> 02:18:11,520
so I get my output voice

1901
02:18:16,200 --> 02:18:17,640
on with the help of loop

1902
02:18:17,640 --> 02:18:21,200
and the other one with the help of

1903
02:18:21,760 --> 02:18:23,840
simple method calls.

1904
02:18:24,000 --> 02:18:29,880
Yeah, let me know once

1905
02:18:29,880 --> 02:18:44,200
you guys are done typing this code. Yes.

1906
02:18:44,200 --> 02:19:05,520
Let me push it.

1907
02:19:05,520 --> 02:19:06,120
Okay.

1908
02:19:09,160 --> 02:19:12,000
So should we move to the next example

1909
02:19:17,080 --> 02:19:17,480
or now?

1910
02:19:17,480 --> 02:19:17,760
Maybe.

1911
02:19:17,760 --> 02:19:21,680
Let's go to the pity a little bit
and then we will do another

1912
02:19:21,680 --> 02:19:23,000
example after that. So

1913
02:19:24,680 --> 02:19:26,560
class that is

1914
02:19:26,560 --> 02:19:29,320
declared with abstract keyword

1915
02:19:30,160 --> 02:19:32,320
is known as abstract

1916
02:19:32,320 --> 02:19:36,760
class, and abstract class is one

1917
02:19:37,080 --> 02:19:40,120
which may contain some defined methods

1918
02:19:41,280 --> 02:19:43,480
and some undefined methods.

1919
02:19:43,480 --> 02:19:47,400
Okay, that class can have undefined
methods, defined methods,

1920
02:19:47,400 --> 02:19:49,560
combination of those two types. Okay.

1921
02:19:49,640 --> 02:19:54,640
If all of it is possible,
I can have all methods as abstract.

1922
02:19:54,640 --> 02:19:57,400
I can have all the methods as implemented.

1923
02:19:57,600 --> 02:20:00,200
I can have some implemented,
some unimplemented. Okay.

1924
02:20:00,200 --> 02:20:04,680
No restrictions on that class is declared
abstract.

1925
02:20:04,800 --> 02:20:09,320
It cannot be instantiated,
cannot create an object off.

1926
02:20:09,520 --> 02:20:12,120
In this point it's clear, right?

1927
02:20:12,120 --> 02:20:21,280
It is important for your interviews.

1928
02:20:21,280 --> 02:20:23,760
And there is one more interview
question that

1929
02:20:26,640 --> 02:20:29,960
if there is a there is an abstract class,

1930
02:20:31,200 --> 02:20:34,440
is there necessity that

1931
02:20:34,440 --> 02:20:36,240
that class should have

1932
02:20:36,240 --> 02:20:46,520
abstract methods?

1933
02:20:46,520 --> 02:20:52,080
iPhone is not abstract
and does not override abstract matter.

1934
02:20:52,200 --> 02:20:55,960
Unload, unlock phone

1935
02:20:57,200 --> 02:20:58,640
So Muhammad

1936
02:20:58,640 --> 02:21:04,240
on online 24 inside your phone class
that matters should be unlocked

1937
02:21:04,240 --> 02:21:06,440
phone not unlock phones.

1938
02:21:08,280 --> 02:21:09,520
So the question is

1939
02:21:09,520 --> 02:21:14,000
can I have and again,
I have a class as abstract class

1940
02:21:14,000 --> 02:21:22,080
without having any abstract matters.

1941
02:21:22,080 --> 02:21:26,280
Yes, I can have a class
even if I don't have any abstract methods.

1942
02:21:26,280 --> 02:21:26,960
Okay.

1943
02:21:27,080 --> 02:21:30,320
Very important interview question

1944
02:21:33,200 --> 02:21:34,920
In Java programing

1945
02:21:34,920 --> 02:21:38,760
undefined
methods are known as unimplemented methods

1946
02:21:40,440 --> 02:21:44,960
to utilize an abstract class.

1947
02:21:44,960 --> 02:21:47,960
All we have to inherit from another class

1948
02:21:47,960 --> 02:21:51,520
and provide implementation

1949
02:21:51,520 --> 02:21:53,760
for the abstract method

1950
02:21:55,760 --> 02:22:01,960
is it needs to be extended
and it smethurst implemented.

1951
02:22:01,960 --> 02:22:02,200
Right.

1952
02:22:02,200 --> 02:22:06,600
So we create a child class,
we extend from the parent class,

1953
02:22:07,040 --> 02:22:11,040
then provide the implementation details,
and then we are going to rule

1954
02:22:11,840 --> 02:22:17,920
if we inherit an abstract class,
we have to provide implementation

1955
02:22:17,920 --> 02:22:23,000
for all the abstract matters inside those.

1956
02:22:23,160 --> 02:22:27,880
If a class as abstract method,
that class has to be abstract.

1957
02:22:27,880 --> 02:22:34,120
Yes, but then after class can be
without any abstract method.

1958
02:22:34,120 --> 02:22:35,320
Yes. And you're right.

1959
02:22:36,880 --> 02:22:40,120
Yes, you are.

1960
02:22:40,120 --> 02:22:44,160
So this
is just an example of an hour of a class.

1961
02:22:44,160 --> 02:22:50,720
This class is declared abstract.

1962
02:22:50,720 --> 02:22:54,800
And then we have this
another example, a right.

1963
02:22:55,120 --> 02:22:58,520
This is also an abstract class.

1964
02:22:58,520 --> 02:23:03,880
So and then this week
the class is a having an abstract class.

1965
02:23:03,880 --> 02:23:09,520
If any class have any abstract matter,
that class becomes an abstract

1966
02:23:09,520 --> 02:23:19,200
class, an object of abstract

1967
02:23:19,200 --> 02:23:22,760
class cannot be created directly,

1968
02:23:23,240 --> 02:23:26,920
but it can be created indirectly
with the help of J class.

1969
02:23:26,920 --> 02:23:27,240
Right?

1970
02:23:27,240 --> 02:23:32,160
Because you guys know whenever we create
the object of child class,

1971
02:23:32,160 --> 02:23:35,760
the object of all the parent classes,
they are created, right?

1972
02:23:36,000 --> 02:23:39,040
Do you guys remember this?

1973
02:23:39,040 --> 02:23:41,840
So it it can be created indirectly. Okay.

1974
02:23:42,000 --> 02:23:44,160
Just a simple point.

1975
02:23:44,640 --> 02:23:48,920
It means you're going to create
an object of abstract or derived class.

1976
02:23:48,920 --> 02:23:53,400
You can see in the above example
vehicle is equal to neo by right

1977
02:23:53,480 --> 02:23:58,080
parent type is equal to
new and then child type. So

1978
02:23:59,720 --> 02:24:01,680
if you are extending any

1979
02:24:01,680 --> 02:24:04,680
abstract class that have abstract

1980
02:24:04,680 --> 02:24:08,600
method, you must either provide

1981
02:24:08,600 --> 02:24:14,560
the implementation of the method
or make that class abstract as well.

1982
02:24:15,000 --> 02:24:19,000
So if child class is not providing
the implementation child class

1983
02:24:19,000 --> 02:24:23,440
has another option, that we can declare
that class as abstract,

1984
02:24:23,440 --> 02:24:27,840
because now that class contains something
which is incomplete right.

1985
02:24:28,400 --> 02:24:34,680
So that class can also be abstract class.

1986
02:24:34,680 --> 02:24:35,840
This is just an example.

1987
02:24:35,840 --> 02:24:40,120
An abstract method is one which contains
only declaration or prototype,

1988
02:24:41,120 --> 02:24:46,680
but it never contains body or definition
In order to make any undefined

1989
02:24:46,680 --> 02:24:52,440
method as abstract, whose declaration is
must be predefined by abstract keyword.

1990
02:24:52,440 --> 02:24:56,480
So if you are not planning
to provide the body weight,

1991
02:24:56,800 --> 02:24:59,760
you have to write that abstract keyword
before the method.

1992
02:25:00,480 --> 02:25:03,440
So abstract. Lloyd Some often dependent.

1993
02:25:03,440 --> 02:25:07,000
This is we pull
the semicolon ward different

1994
02:25:07,000 --> 02:25:10,800
if if there are any parameters
that we need inside this method

1995
02:25:10,880 --> 02:25:14,160
we specified parameters
and again, the semicolon

1996
02:25:17,760 --> 02:25:18,120
at the end.

1997
02:25:18,120 --> 02:25:21,200
This example will help
you understand it in more detail.

1998
02:25:21,200 --> 02:25:24,800
So let me share in the course
announcements

1999
02:25:34,080 --> 02:25:36,560
and let's do another example

2000
02:25:36,960 --> 02:25:39,480
after that
I hope you guys will be able to solve.

2001
02:25:39,680 --> 02:25:43,800
So after the example, we will go
these requirements. Then

2002
02:25:45,600 --> 02:25:48,520
you guys will be having a longer break.

2003
02:25:48,520 --> 02:25:52,240
After that I will go to the cost
and then hopefully

2004
02:25:52,240 --> 02:25:54,520
the students from the previous batches,
they will be here

2005
02:25:56,080 --> 02:25:59,840
and we will discuss
and you guys can discuss your questions,

2006
02:25:59,840 --> 02:26:23,160
you can ask your questions.

2007
02:26:23,160 --> 02:26:25,240
Okay. Can I close these two files?

2008
02:26:25,560 --> 02:26:26,760
Are you guys done?

2009
02:26:26,760 --> 02:26:30,640
I'll if I have an abstract
method in a child

2010
02:26:30,640 --> 02:26:34,080
class, yes,
I can have for our next example.

2011
02:26:34,080 --> 02:27:12,520
In next example, I will show you that. So

2012
02:27:13,840 --> 02:27:16,000
let's say I have this.

2013
02:27:16,000 --> 02:27:18,440
If you have an abstract
method in the child class,

2014
02:27:18,880 --> 02:27:20,840
you have to make a class. Abstract.

2015
02:27:20,840 --> 02:27:23,160
Yes, you are right.

2016
02:27:23,160 --> 02:27:25,720
Abstract is only
and only with the methods.

2017
02:27:26,400 --> 02:27:32,680
Yes, but you are right.

2018
02:27:32,680 --> 02:27:37,120
So for example.

2019
02:27:37,120 --> 02:27:39,120
Okay, let
let me do it in the next example.

2020
02:27:39,400 --> 02:27:39,600
Okay.

2021
02:27:39,600 --> 02:27:44,440
Let's let's keep this one simple.

2022
02:27:44,440 --> 02:27:47,440
So let's say I have some fields in here.

2023
02:27:47,440 --> 02:27:50,360
Last in this field is

2024
02:27:50,360 --> 02:27:52,960
the we are in number one

2025
02:27:56,520 --> 02:28:00,840
and if I say

2026
02:28:02,080 --> 02:28:03,880
abstract

2027
02:28:07,920 --> 02:28:11,280
with this field,
I will be getting in it right?

2028
02:28:11,280 --> 02:28:16,720
And the error will say modify
not allowed right?

2029
02:28:16,720 --> 02:28:20,000
Because fields,
they don't have this concept of body

2030
02:28:20,320 --> 02:28:24,320
and head and the implementation
and something like that.

2031
02:28:24,320 --> 02:28:30,200
It doesn't make sense
to have abstract with fields.

2032
02:28:30,200 --> 02:29:10,320
So let me write it down.

2033
02:29:10,320 --> 02:29:13,040
Can you give me recall to Oriana?

2034
02:29:13,440 --> 02:29:16,720
So then you ask her
to register for the link

2035
02:29:17,440 --> 02:29:20,240
and if she can be available

2036
02:29:21,120 --> 02:29:27,520
by go to entity.

2037
02:29:27,520 --> 02:29:33,360
So we are in number and then let me try
to have this static field as well.

2038
02:29:33,360 --> 02:29:34,960
In here and

2039
02:29:40,160 --> 02:29:41,760
then in constructor, be abstract.

2040
02:29:41,760 --> 02:29:43,800
So what do you think about that?

2041
02:29:45,120 --> 02:29:46,840
Yeah, no constructors.

2042
02:29:46,840 --> 02:29:50,640
They participate in inheritance.

2043
02:29:50,640 --> 02:29:56,280
If they don't participate in inheritance,
can we ever override those

2044
02:29:57,320 --> 02:29:59,240
constructors? No. Right.

2045
02:29:59,240 --> 02:30:02,240
So the is no

2046
02:30:02,760 --> 02:30:05,600
so static and

2047
02:30:05,880 --> 02:30:07,440
total

2048
02:30:14,840 --> 02:30:15,840
totally goes.

2049
02:30:15,840 --> 02:30:21,040
And then now
let me try to have a constructor in here.

2050
02:30:21,040 --> 02:30:24,800
So we call

2051
02:30:25,760 --> 02:30:28,680
and if I say

2052
02:30:28,800 --> 02:30:32,960
abstract in here, do you guys want me
to put to comment on this piece of work?

2053
02:30:32,960 --> 02:30:40,160
So there does no that it is not allowed.

2054
02:30:40,160 --> 02:30:57,120
Okay, so in this class

2055
02:30:57,120 --> 02:30:59,640
we are having a an instance field.

2056
02:31:00,920 --> 02:31:03,680
We are having a static field.

2057
02:31:03,680 --> 02:31:06,000
Abstract allowed with fears, abstract

2058
02:31:06,000 --> 02:31:08,000
not allowed with constructors.

2059
02:31:09,480 --> 02:31:13,000
Now let's try to have a

2060
02:31:19,320 --> 02:31:23,440
structure weaker.

2061
02:31:23,440 --> 02:31:27,600
So can I access this static fill
inside this

2062
02:31:27,600 --> 02:31:44,280
vehicle constructor right.

2063
02:31:44,280 --> 02:31:49,120
Can I accept this totally goes
for you inside this constructor.

2064
02:31:50,520 --> 02:31:52,040
This is a very important interview

2065
02:31:52,040 --> 02:31:53,000
question question

2066
02:32:04,680 --> 02:32:05,880
I can access.

2067
02:32:05,880 --> 02:32:08,520
Well, why do you guys think that
we cannot access it?

2068
02:32:09,120 --> 02:32:10,480
Well, why are you guys thought that?

2069
02:32:10,480 --> 02:32:13,280
Well, why we cannot access this

2070
02:32:13,560 --> 02:32:16,360
this static field inside the constructor.

2071
02:32:17,600 --> 02:32:20,240
So static is something universal, right?

2072
02:32:20,880 --> 02:32:22,880
I can access it inside.

2073
02:32:22,880 --> 02:32:24,920
Inside static matters.

2074
02:32:24,920 --> 02:32:29,480
No static methods constructors
because constructors are to initialize.

2075
02:32:30,120 --> 02:32:32,960
Yes, they are to initialize,
but we can put other code

2076
02:32:32,960 --> 02:32:36,200
as well inside the constructor
because there is no hard right.

2077
02:32:36,200 --> 02:32:39,680
Maybe sometimes you have to write
extra logic to initialize your fields.

2078
02:32:40,120 --> 02:32:42,360
Maybe you have to calculate
intermediate values

2079
02:32:42,360 --> 02:32:45,320
before you assign the values
to your final figures. So.

2080
02:32:45,360 --> 02:32:47,120
So there is this flexibility.

2081
02:32:47,120 --> 02:32:50,040
They are not expecting
you to only and only

2082
02:32:51,320 --> 02:32:52,600
initialize the field.

2083
02:32:52,600 --> 02:32:54,320
You guys can pull print out statements.

2084
02:32:54,320 --> 02:32:57,440
Almost any logic that you guys want,
you can put that

2085
02:32:57,440 --> 02:32:59,840
inside the constructor.

2086
02:33:00,440 --> 02:33:03,520
Okay, so I'm saying why
we need to put it in there.

2087
02:33:03,640 --> 02:33:07,200
So When I put this variable in here,

2088
02:33:07,840 --> 02:33:11,440
every time the object of any Jala

2089
02:33:11,520 --> 02:33:15,440
class will be created,
what will happen to this constructor?

2090
02:33:15,440 --> 02:33:16,040
Guys?

2091
02:33:17,280 --> 02:33:19,440
Every time

2092
02:33:19,840 --> 02:33:21,880
any child

2093
02:33:22,600 --> 02:33:26,120
creates
and the object of any child is created,

2094
02:33:26,120 --> 02:33:30,800
this constructor will be called
and we will be incrementing this value.

2095
02:33:30,800 --> 02:33:32,280
So it will.

2096
02:33:32,280 --> 02:33:37,200
It will be this, this total variable,
total vehicles variable.

2097
02:33:37,200 --> 02:33:41,520
It will have the count
of how many objects of

2098
02:33:43,920 --> 02:33:46,320
all the classes of display

2099
02:33:46,320 --> 02:33:53,080
in the class have been created till now.

2100
02:33:53,080 --> 02:33:58,200
So sometimes it's very useful to keep
track of the count of objects there.

2101
02:33:58,320 --> 02:34:01,800
How many objects are there
inside the memory?

2102
02:34:02,520 --> 02:34:06,120
If we make the vehicle class, abstract
and constructor is pointless.

2103
02:34:06,160 --> 02:34:06,720
No, no, no, no.

2104
02:34:06,720 --> 02:34:07,760
Simon Department.

2105
02:34:07,760 --> 02:34:10,560
The constructor will still be.

2106
02:34:10,560 --> 02:34:12,400
The constructor will still be called.

2107
02:34:12,400 --> 02:34:14,120
The figures will be initialized.

2108
02:34:14,120 --> 02:34:19,200
The only thing that we can not do
is we cannot access.

2109
02:34:19,200 --> 02:34:25,600
We cannot create the object of this
this class directly, but everything else.

2110
02:34:25,600 --> 02:34:29,800
We can do it with the children
to all classes.

2111
02:34:29,800 --> 02:34:55,680
Yes, you can use use to it
to keep track of your children.

2112
02:34:55,680 --> 02:34:59,760
So in near school,
practical sense, too many lives. Yes.

2113
02:35:01,120 --> 02:35:03,400
Especially when someone has to use

2114
02:35:04,760 --> 02:35:06,600
in they start we are using

2115
02:35:06,600 --> 02:35:10,720
is equal to when we are in.

2116
02:35:10,720 --> 02:35:11,280
Yeah,

2117
02:35:14,440 --> 02:35:16,840
well, I'm getting another great

2118
02:35:32,280 --> 02:35:35,320
different. I

2119
02:35:37,320 --> 02:35:39,680
no empty constructor.

2120
02:35:39,680 --> 02:35:40,600
No, no, no.

2121
02:35:40,600 --> 02:35:43,720
You you ask
if someone can confuse you guys

2122
02:35:43,720 --> 02:35:46,720
really quickly.

2123
02:35:46,720 --> 02:35:47,160
Okay.

2124
02:35:48,040 --> 02:35:49,560
They are two different data types.

2125
02:35:49,560 --> 02:35:56,520
Like we cannot assign
a string to a integer.

2126
02:35:56,520 --> 02:36:01,000
And let me also put out a line in here
so that you guys can also see visually

2127
02:36:01,920 --> 02:36:04,200
how the constructors are quite

2128
02:36:38,040 --> 02:36:40,200
so inspired this class.

2129
02:36:40,200 --> 02:36:45,840
Till now we have created the instance
field, static field.

2130
02:36:45,840 --> 02:36:50,680
You guys now know the concept of static
and all starting

2131
02:36:50,880 --> 02:36:54,800
fields, how to use them
inside instance or static methods.

2132
02:36:55,440 --> 02:37:00,640
And then okay, it will also cover
how the object creation is

2133
02:37:00,640 --> 02:37:06,880
have a happens.

2134
02:37:06,880 --> 02:37:09,920
Let's say we have this method Public

2135
02:37:11,600 --> 02:37:13,280
award

2136
02:37:17,000 --> 02:37:18,080
for doing

2137
02:37:38,560 --> 02:37:40,920
and I call this total vehicles

2138
02:37:41,160 --> 02:37:55,000
variable inside this method guys. Yes.

2139
02:37:55,120 --> 02:38:00,120
No. No. Yes.

2140
02:38:00,120 --> 02:38:00,840
Now I see.

2141
02:38:00,840 --> 02:38:04,000
Why why did they ask this question
in the interview?

2142
02:38:05,320 --> 02:38:09,840
Yes, I can call it Yes, I can call it.

2143
02:38:09,840 --> 02:38:12,960
It can because it's a static field.

2144
02:38:13,000 --> 02:38:15,600
I mean, I think we have repeated this

2145
02:38:15,600 --> 02:38:18,240
in during today's class
at least 4 to 5 times.

2146
02:38:18,240 --> 02:38:18,880
Right

2147
02:38:19,880 --> 02:38:21,680
But still, it is confusing you

2148
02:38:21,680 --> 02:38:35,040
so keep asking

2149
02:38:37,440 --> 02:38:39,240
and hopefully it will be printed

2150
02:38:39,240 --> 02:38:50,760
inside your minds.

2151
02:38:50,760 --> 02:38:53,960
So I'm going to ask a question by default.

2152
02:38:53,960 --> 02:38:58,000
We think no,

2153
02:38:58,000 --> 02:39:00,120
I am still confusing it to

2154
02:39:03,360 --> 02:39:04,120
it will be fine.

2155
02:39:04,120 --> 02:39:07,080
I think not very

2156
02:39:29,880 --> 02:39:33,000
so who implemented the methods?

2157
02:39:33,000 --> 02:39:36,400
Now I have to implement the methods

2158
02:39:36,960 --> 02:39:38,160
and now

2159
02:39:38,160 --> 02:39:42,400
there is one way only to make titles
with right answers. This

2160
02:39:45,880 --> 02:39:49,320
one and let's have

2161
02:39:52,200 --> 02:39:55,080
another common method

2162
02:40:16,080 --> 02:40:19,080
in now let's have a public abstract

2163
02:40:20,520 --> 02:40:22,120
ward.

2164
02:40:22,120 --> 02:40:23,800
Start

2165
02:40:24,880 --> 02:40:28,360
quoting here.

2166
02:40:28,360 --> 02:40:33,520
So it says abstract method in non
abstract class.

2167
02:40:33,520 --> 02:40:34,880
What does this mean, guys?

2168
02:40:34,880 --> 02:40:39,560
It is saying abstract
method in non abstract class.

2169
02:40:39,560 --> 02:40:41,040
Can you guys guess the error?

2170
02:40:41,040 --> 02:40:44,680
It's giving me an error in line says win
number is an integer.

2171
02:40:45,960 --> 02:40:50,520
Yes. Now it should be string.

2172
02:40:50,520 --> 02:40:54,960
Now I have at least one abstract method,

2173
02:40:55,680 --> 02:40:59,560
so this class now must be

2174
02:41:00,840 --> 02:41:06,960
abstract as well. Hmm.

2175
02:41:06,960 --> 02:41:10,920
I still get data
so this time the error says abstract

2176
02:41:10,920 --> 02:41:17,960
method cannot have a body.

2177
02:41:17,960 --> 02:41:23,000
So if a math 30 is abstract,
I cannot have it.

2178
02:41:23,000 --> 02:41:23,880
Body. Right.

2179
02:41:23,880 --> 02:41:27,560
I must remove this line.

2180
02:41:27,600 --> 02:41:30,520
Okay. Now all the arrows they go.

2181
02:41:30,520 --> 02:41:34,320
All the arrows they go.

2182
02:41:34,320 --> 02:41:34,720
Okay,

2183
02:41:35,880 --> 02:41:38,960
now let's have a

2184
02:41:41,640 --> 02:41:44,080
class.

2185
02:41:44,080 --> 02:41:48,160
And inside this car class,
this class is extending

2186
02:41:48,160 --> 02:41:51,160
from logical.

2187
02:41:51,160 --> 02:41:52,840
This time

2188
02:41:55,440 --> 02:42:00,240
I don't want to implement this method.

2189
02:42:00,920 --> 02:42:03,120
Or how can I ward this error?

2190
02:42:03,120 --> 02:42:09,160
Guys if I don't want to provide
implementation for this method?

2191
02:42:09,160 --> 02:42:11,480
Order to remove error from abstract.

2192
02:42:11,480 --> 02:42:15,840
So far I removed the brackets from

2193
02:42:16,920 --> 02:42:17,480
this method.

2194
02:42:17,480 --> 02:42:19,880
I removed the body of the method

2195
02:42:21,840 --> 02:42:24,240
so I can create

2196
02:42:26,800 --> 02:42:33,640
this class.

2197
02:42:33,640 --> 02:42:35,680
I can also create.

2198
02:42:35,680 --> 02:42:39,120
I can also have this class as abstract,
but I still get that

2199
02:42:39,120 --> 02:42:44,360
out of the atmospheres.

2200
02:42:44,360 --> 02:42:52,120
So class.

2201
02:42:52,120 --> 02:42:54,720
So the this time the error says

2202
02:42:55,480 --> 02:42:58,760
and there is no default constructor

2203
02:42:59,120 --> 02:43:02,640
available in vehicle.

2204
02:43:02,640 --> 02:43:04,520
Yeah, well Sebastian,

2205
02:43:04,520 --> 02:43:12,800
in this channel.

2206
02:43:12,800 --> 02:43:19,640
So now because I have a construct
the inside the parent class

2207
02:43:20,640 --> 02:43:23,320
which expects

2208
02:43:23,320 --> 02:43:27,240
one string by field to be passed,

2209
02:43:27,240 --> 02:43:30,840
I must create a matching the constructor

2210
02:43:31,840 --> 02:43:35,160
inside my child class as well.

2211
02:43:35,400 --> 02:43:38,440
Yeah.

2212
02:43:38,440 --> 02:43:40,680
So let's say I has been

2213
02:43:41,680 --> 02:43:46,920
bar type
and other field inside my child class.

2214
02:43:46,920 --> 02:43:50,560
So what I can do,
I can take these pool fields

2215
02:43:52,080 --> 02:43:54,640
from outside string

2216
02:43:54,760 --> 02:44:02,080
car type, string.

2217
02:44:02,080 --> 02:44:04,680
We are in number

2218
02:44:10,760 --> 02:44:13,640
and I can call super

2219
02:44:14,040 --> 02:44:16,320
and I can in number

2220
02:44:17,440 --> 02:44:20,040
and I can see oops,

2221
02:44:20,040 --> 02:44:25,560
this car are equal to cart
by ID like this.

2222
02:44:25,560 --> 02:44:31,920
So now all the arrows, they are gone.

2223
02:44:31,920 --> 02:44:51,360
And let me also put out a statement.

2224
02:44:51,360 --> 02:44:54,080
Parent perspective is called

2225
02:44:59,560 --> 02:45:03,040
so can I override this behavior?

2226
02:45:03,040 --> 02:45:07,840
Guys, can I override this

2227
02:45:08,080 --> 02:45:14,200
drive behavior inside this style class?

2228
02:45:14,200 --> 02:45:17,080
Yes, I can have

2229
02:45:17,080 --> 02:45:20,080
I can still override non

2230
02:45:20,200 --> 02:45:24,440
abstract methods,
still non abstract methods.

2231
02:45:24,440 --> 02:45:27,080
I can see God is driving.

2232
02:45:27,400 --> 02:45:28,440
All right.

2233
02:45:28,440 --> 02:45:31,360
So this is also clear.

2234
02:45:31,360 --> 02:45:35,200
And can I have more abstract
matters inside this

2235
02:45:35,200 --> 02:45:41,520
car class?

2236
02:45:41,520 --> 02:45:46,320
He writes of public abstract may be

2237
02:45:47,520 --> 02:45:49,760
toward speed.

2238
02:45:50,600 --> 02:45:51,600
Yeah.

2239
02:45:51,600 --> 02:45:53,720
Then this child class will implement.
Yeah.

2240
02:45:54,320 --> 02:45:59,040
So I can have a class
with abstract matters.

2241
02:45:59,040 --> 02:46:04,560
Another class inheriting from that class,
not providing any implementation details,

2242
02:46:05,080 --> 02:46:07,920
but adding some more abstract matters

2243
02:46:08,200 --> 02:46:13,120
and then maybe overriding some define
methods and all defined method.

2244
02:46:13,120 --> 02:46:16,800
So all is possible that you guys
have been doing with overriding.

2245
02:46:17,400 --> 02:46:19,680
Okay, you are using

2246
02:46:20,120 --> 02:46:23,680
static fields
non static fields, static methods,

2247
02:46:23,680 --> 02:46:27,200
and starting all those rules
that you guys have learned previously.

2248
02:46:27,480 --> 02:46:31,080
They are still valid.

2249
02:46:31,080 --> 02:46:31,360
Okay.

2250
02:46:31,360 --> 02:46:34,600
Now let's try to create the actual object.

2251
02:46:34,600 --> 02:46:38,880
So let's say class we have w

2252
02:46:41,160 --> 02:46:44,760
expands from God.

2253
02:46:46,560 --> 02:46:47,120
Okay.

2254
02:46:47,120 --> 02:46:48,440
So now

2255
02:46:49,840 --> 02:46:51,760
how many methods

2256
02:46:51,760 --> 02:46:56,720
this BMW class should implement?

2257
02:46:56,720 --> 02:47:00,040
If I don't want this BMW to be abstract,

2258
02:47:00,040 --> 02:47:03,760
how many meters it should implement

2259
02:47:06,440 --> 02:47:07,120
at least

2260
02:47:07,120 --> 02:47:19,680
1 to 2.

2261
02:47:19,680 --> 02:47:22,320
So I have one abstract
method inside of the car,

2262
02:47:23,200 --> 02:47:25,800
one abstract
method inside of the parent vehicle.

2263
02:47:26,720 --> 02:47:31,680
So how many meters this BMW must implement

2264
02:47:31,680 --> 02:47:34,800
if we don't want any errors

2265
02:47:37,800 --> 02:47:38,640
to matter?

2266
02:47:38,640 --> 02:47:39,080
Right.

2267
02:47:39,080 --> 02:47:45,640
One is coming from grandpa,
the other one is coming from parent.

2268
02:47:45,640 --> 02:47:49,920
So it says Class
BMW must either be declared abstract

2269
02:47:50,720 --> 02:47:54,880
or implement abstract
method speared in the guide class.

2270
02:47:56,080 --> 02:47:58,560
So as soon as I say

2271
02:47:59,240 --> 02:48:06,560
speed, so

2272
02:48:20,880 --> 02:48:31,240
if I still get any error and error,

2273
02:48:31,760 --> 02:48:37,200
it says class BMW must drive that to be
blah, blah, blah or in the vehicle.

2274
02:48:37,320 --> 02:48:40,360
So it ask us to implement

2275
02:48:42,600 --> 02:48:47,680
this start method as well.

2276
02:48:47,680 --> 02:48:49,920
And so as soon as I start

2277
02:48:51,840 --> 02:48:53,440
now I can start

2278
02:48:53,440 --> 02:48:56,520
I can
I can provide the implementation in here

2279
02:49:04,920 --> 02:49:08,200
and I
still get errors this time out of sales.

2280
02:49:08,240 --> 02:49:13,720
There is a known default constructor,
which means I must provide

2281
02:49:13,720 --> 02:49:17,560
a matching constructor
and I can have some of my own fields.

2282
02:49:17,560 --> 02:49:20,680
Right? Me

2283
02:49:21,640 --> 02:49:23,560
model

2284
02:49:27,840 --> 02:49:31,680
and then BMW, right.

2285
02:49:31,680 --> 02:49:35,040
So I need to take for VIN number

2286
02:49:36,000 --> 02:49:40,760
to pass to grandpa
and then I need to take car type

2287
02:49:43,920 --> 02:49:46,080
or parent class

2288
02:49:48,440 --> 02:49:50,920
and I need the

2289
02:49:53,160 --> 02:49:55,240
make and

2290
02:49:56,520 --> 02:49:59,720
demand. So

2291
02:50:00,600 --> 02:50:02,520
super

2292
02:50:06,000 --> 02:50:09,160
car type
and we let me know once you guys are done

2293
02:50:09,160 --> 02:50:31,080
typing this, you

2294
02:50:34,200 --> 02:50:35,240
let's clear

2295
02:50:35,240 --> 02:50:45,480
to one more class.

2296
02:50:45,480 --> 02:50:48,120
The class

2297
02:50:48,880 --> 02:50:52,680
Toyota. Oops

2298
02:50:52,880 --> 02:50:55,280
extends

2299
02:50:55,440 --> 02:50:58,120
from R

2300
02:50:58,320 --> 02:50:59,360
and oops.

2301
02:50:59,360 --> 02:51:03,960
I have to again provide the implementation
for these two methods.

2302
02:51:05,560 --> 02:51:07,920
Otherwise I will be getting an error

2303
02:51:26,360 --> 02:51:28,040
and then I must provide a

2304
02:51:28,040 --> 02:51:35,560
matching constructor. Yes.

2305
02:51:36,920 --> 02:51:37,160
Jamie.

2306
02:51:37,160 --> 02:51:40,520
Sure.

2307
02:51:40,520 --> 02:51:42,440
You mean did you call Arianna?

2308
02:51:42,440 --> 02:51:55,040
You you ask her to join.

2309
02:51:55,040 --> 02:51:55,360
Okay.

2310
02:51:55,360 --> 02:52:10,360
Perfect.

2311
02:52:10,360 --> 02:52:13,800
The simple part
I am getting error in car type

2312
02:52:13,800 --> 02:52:17,360
and you show you got in car type

2313
02:52:19,200 --> 02:52:20,880
the car class.

2314
02:52:20,880 --> 02:52:26,240
Here is the car class.

2315
02:52:26,240 --> 02:52:49,560
What does the error say?

2316
02:52:49,560 --> 02:53:23,600
And let me have a specific method
for Toyota.

2317
02:53:23,600 --> 02:53:25,760
Okay, but

2318
02:53:27,320 --> 02:53:29,560
already guys, so I am inside the third.

2319
02:53:30,120 --> 02:53:31,760
I am entitled to charge class.

2320
02:53:31,760 --> 02:53:36,680
Can I access this total vehicles
inside in here

2321
02:53:36,960 --> 02:53:40,800
inside this display for method

2322
02:53:43,840 --> 02:53:47,280
so daughter overheat girls

2323
02:53:50,280 --> 02:53:51,520
so I can access it.

2324
02:53:51,520 --> 02:53:56,880
And can I also access

2325
02:53:56,960 --> 02:54:00,480
maybe this car type and we are in number

2326
02:54:00,480 --> 02:54:02,520
from the parent class

2327
02:54:07,040 --> 02:54:09,840
like make

2328
02:54:12,360 --> 02:54:13,760
yes, yes

2329
02:54:13,760 --> 02:54:32,280
and no issues with their parents.

2330
02:54:32,280 --> 02:54:34,480
You can access all these things

2331
02:54:46,480 --> 02:54:51,880
on are

2332
02:54:52,760 --> 02:55:12,360
you guys
are you guys done typing all the code.

2333
02:55:12,360 --> 02:55:16,560
So we need to do
we need to do this talk may distort model

2334
02:55:16,880 --> 02:55:23,080
also or not.

2335
02:55:23,080 --> 02:55:25,560
Yes we should be doing this asking me.

2336
02:55:25,560 --> 02:55:25,920
All right.

2337
02:55:25,920 --> 02:55:28,040
So we should say

2338
02:55:28,560 --> 02:55:32,400
this not make is equal to make

2339
02:55:34,760 --> 02:55:37,400
this or

2340
02:55:39,000 --> 02:55:40,360
model is equal to one.

2341
02:55:40,360 --> 02:55:42,760
Yes, we should do that

2342
02:55:43,960 --> 02:55:45,840
what I am getting and Adam guys.

2343
02:55:45,840 --> 02:55:49,800
Yeah so but it should be on line

2344
02:55:50,040 --> 02:56:02,160
number one.

2345
02:56:02,160 --> 02:56:04,880
Is there anything else
that you guys want work

2346
02:56:20,160 --> 02:56:21,120
all now?

2347
02:56:21,120 --> 02:56:29,640
Okay.

2348
02:56:31,160 --> 02:56:33,240
Is this Spiderman movie released

2349
02:56:36,560 --> 02:56:39,520
on? It will be in December somewhere as

2350
02:56:41,360 --> 02:56:44,120
on the not here to seven being

2351
02:56:46,720 --> 02:56:47,920
contract.

2352
02:56:48,560 --> 02:56:51,080
How is the COVID situation

2353
02:56:51,080 --> 02:56:56,040
in the US right now
because I heard of new variant in Africa

2354
02:56:56,040 --> 02:57:00,480
some in Britain,
Africa, Italy and somewhere else

2355
02:57:07,480 --> 02:57:09,720
there is new variant

2356
02:57:09,720 --> 02:57:13,560
to okay better than started things.

2357
02:57:13,560 --> 02:57:23,760
It would be better
if people actually got vaccinated here.

2358
02:57:23,760 --> 02:57:28,200
All right.

2359
02:57:28,200 --> 02:57:33,360
We are still wearing them masks.

2360
02:57:33,360 --> 02:57:34,760
We did.

2361
02:57:35,120 --> 02:57:38,760
But it is also having that
polymorphism property, right?

2362
02:57:39,000 --> 02:57:41,600
Every time you

2363
02:57:42,720 --> 02:57:44,920
it changes your cells to something else.

2364
02:57:44,920 --> 02:57:48,480
If new variant,
we need to have a booster vaccine

2365
02:57:48,840 --> 02:57:50,520
if it is going

2366
02:57:51,920 --> 02:57:53,480
when we grow.

2367
02:57:54,600 --> 02:57:54,960
Okay.

2368
02:57:54,960 --> 02:57:59,800
So let me actually push this code
so that everyone can come here and check

2369
02:57:59,800 --> 02:58:28,640
if there is anything needs to be done.

2370
02:58:28,640 --> 02:58:33,720
So the Greeks, well,
now they are asking to have that on me.

2371
02:58:34,080 --> 02:58:36,240
Only grown vaccine I am

2372
02:58:37,200 --> 02:58:40,200
and no one is wearing,
including me and my family.

2373
02:58:40,200 --> 02:58:53,040
After vaccines.

2374
02:58:53,040 --> 02:58:55,440
What if someone has already got COVID?

2375
02:58:56,080 --> 02:58:58,200
Is he or she is also not safe

2376
02:58:58,680 --> 02:59:03,160
from this new.

2377
02:59:03,160 --> 02:59:04,520
Oh my God.

2378
02:59:06,440 --> 02:59:07,440
I mean, we just have to

2379
02:59:07,440 --> 02:59:24,240
keep on taking new vaccines.

2380
02:59:24,240 --> 02:59:28,640
And you scroll down a little bit,
please, is the maximum I can scroll down.

2381
02:59:28,640 --> 02:59:33,720
And I said, Oh, you mean scroll up?

2382
02:59:33,720 --> 02:59:45,560
Here we go.

2383
02:59:45,560 --> 02:59:46,200
Yeah.

2384
02:59:47,080 --> 02:59:50,480
So this year in September, I got COVID.

2385
02:59:50,840 --> 02:59:53,320
Even after getting to go of Pfizer.

2386
02:59:53,320 --> 02:59:55,080
Oh, my God.

2387
02:59:55,080 --> 02:59:56,280
Oh, my God.

2388
02:59:56,280 --> 02:59:59,120
The Pfizer was famous everywhere.

2389
02:59:59,120 --> 02:59:59,880
Still

2390
03:00:02,640 --> 03:00:07,160
copy and paste.

2391
03:00:07,160 --> 03:00:11,200
So those who are having a hard time
understanding the

2392
03:00:12,360 --> 03:00:16,080
first book, there is one more book on

2393
03:00:16,360 --> 03:00:22,720
Java that is called,
I guess, but are you scared, sir?

2394
03:00:23,640 --> 03:00:25,640
And our lost one.

2395
03:00:26,800 --> 03:00:27,720
Remember now? No.

2396
03:00:27,720 --> 03:00:29,960
I hope you guys will be able to understand

2397
03:00:31,080 --> 03:00:33,800
Everything is called effective Java,

2398
03:00:34,240 --> 03:00:36,600
so try to read the back

2399
03:00:44,400 --> 03:00:46,160
effective Java

2400
03:00:48,320 --> 03:00:49,640
non effective Java

2401
03:01:01,320 --> 03:01:02,160
third edition.

2402
03:01:02,160 --> 03:01:04,120
Yes, the latest addition will be good.

2403
03:01:04,120 --> 03:01:07,880
Learn but not try to teach those lambda
expressions functional, programing

2404
03:01:08,840 --> 03:01:13,000
and all that
because you guys are still in beta phases.

2405
03:01:13,000 --> 03:01:15,960
I mean initial phases.

2406
03:01:16,000 --> 03:01:20,040
You guys are not for production,
but the course is complete.

2407
03:01:20,040 --> 03:01:24,680
Then maybe you guys can start learning
about those functional programing

2408
03:01:24,680 --> 03:01:29,960
and all that.

2409
03:01:29,960 --> 03:01:32,000
Yep, step by step.

2410
03:01:32,000 --> 03:01:34,920
But hopefully half of the book
will now make sense.

2411
03:01:35,280 --> 03:01:39,480
At least half of book will make sense.

2412
03:01:39,480 --> 03:01:42,240
Then you scroll up to the car class, see

2413
03:01:43,800 --> 03:01:45,720
if you guys are having a hard time.

2414
03:01:45,720 --> 03:01:49,280
Maybe
I can split these classes in two files.

2415
03:01:49,680 --> 03:01:55,920
Do you guys want to do that?

2416
03:01:55,920 --> 03:01:59,480
No, I didn't just write Impact in
Java book by job

2417
03:02:00,120 --> 03:02:04,160
or with whoever is the author.

2418
03:02:04,160 --> 03:02:05,280
What I am sure on

2419
03:02:06,600 --> 03:02:08,720
only 5% of you will be reading it.

2420
03:02:08,720 --> 03:02:10,320
Would you please copy and paste?

2421
03:02:10,320 --> 03:02:23,520
Yes, I can copy paste as well.

2422
03:02:23,520 --> 03:02:27,080
Actually, let me split this
into two different classes with

2423
03:02:27,120 --> 03:02:29,760
give me another one.

2424
03:02:29,760 --> 03:03:00,640
Let's put vehicle and card in here
and export BMW.

2425
03:03:00,640 --> 03:03:13,480
We split it in two, so

2426
03:03:15,240 --> 03:03:17,160
I hope

2427
03:03:19,560 --> 03:03:22,080
now you guys can see

2428
03:03:23,200 --> 03:03:26,320
what completed for

2429
03:03:26,320 --> 03:03:28,920
all these examples help you guys in.

2430
03:03:28,920 --> 03:03:33,360
So I'm trying to put everything inside
a simple inside inside the same

2431
03:03:34,200 --> 03:03:37,240
but that with the examples they get large

2432
03:03:37,360 --> 03:03:41,240
so are they helpful or are smaller.

2433
03:03:41,480 --> 03:03:45,440
Hard to understand these this way

2434
03:03:53,200 --> 03:03:54,560
it's good overload.

2435
03:03:54,560 --> 03:03:57,800
Yes. Okay.

2436
03:03:57,800 --> 03:04:00,560
Let me know once you guys have
this is already old issue

2437
03:04:00,840 --> 03:04:37,560
so that we can test these classes.

2438
03:04:37,560 --> 03:04:38,880
Is it intelligent?

2439
03:04:38,880 --> 03:04:39,960
Shows us abstract.

2440
03:04:39,960 --> 03:04:41,880
Yes. So if you guys noticed

2441
03:04:43,040 --> 03:04:46,240
you see
you guys see this arrow sign in here

2442
03:04:46,600 --> 03:04:51,840
that that tells you that is this method
you are trying to write in for.

2443
03:04:51,920 --> 03:04:55,000
There is this another

2444
03:04:55,000 --> 03:04:59,400
kind of symbol which is implemented in BMW
to try and things like that.

2445
03:04:59,880 --> 03:05:02,600
There is another symbol
with the icon of glass

2446
03:05:02,600 --> 03:05:07,320
with those two vertical that tells you
that this is an abstract class.

2447
03:05:08,840 --> 03:05:11,880
Yes. Or what they're telling

2448
03:05:11,880 --> 03:05:15,800
is this a multi level
in had multi-level inheritance.

2449
03:05:15,800 --> 03:05:16,920
So what do you guys think?

2450
03:05:16,920 --> 03:05:20,480
Are we using multilevel inheritance
in here on multiple inheritance

2451
03:05:20,480 --> 03:05:30,840
going to here, multilevel,

2452
03:05:31,800 --> 03:05:38,280
multiple hierarchical,

2453
03:05:38,280 --> 03:05:43,680
I would say a multilevel,
modern, hierarchical.

2454
03:05:43,680 --> 03:05:46,000
We have one parent and multiple times

2455
03:05:56,080 --> 03:05:58,800
BMW and Toyota. Yes.

2456
03:06:00,000 --> 03:06:02,680
So we are using all types of inheritance

2457
03:06:02,680 --> 03:06:05,440
is in here
except in this single inheritance.

2458
03:06:06,080 --> 03:06:07,560
Multilevel is being used

2459
03:06:09,080 --> 03:06:11,400
and hierarchical is being used.

2460
03:06:11,520 --> 03:06:14,880
Multiple is our in Java. Right.

2461
03:06:14,960 --> 03:06:16,920
Multiple is not supported in Java.
All right.

2462
03:06:16,920 --> 03:06:18,800
You guys already know this.

2463
03:06:18,800 --> 03:06:21,240
I can not have multiple parents.

2464
03:06:21,240 --> 03:06:24,600
So what we are doing,
we using a hybrid type

2465
03:06:24,600 --> 03:06:30,680
of inheritance, multi level
because I have this level

2466
03:06:30,680 --> 03:06:34,520
first I have a he called and,
I have God, then I have BMW.

2467
03:06:34,560 --> 03:06:39,480
So there are three levels in here
and I have hierarchical as well.

2468
03:06:39,920 --> 03:06:40,200
Right.

2469
03:06:40,200 --> 03:06:43,240
So Mahmoud Abbas was correct, hierarchical

2470
03:06:43,240 --> 03:06:46,520
because God has two titles,
BMW and Toyota.

2471
03:06:47,560 --> 03:06:50,320
So more types of multiple

2472
03:06:50,320 --> 03:07:26,600
is not supported in Java Java.

2473
03:07:26,600 --> 03:07:29,360
Are you guys done

2474
03:07:33,840 --> 03:07:34,200
to do

2475
03:07:34,200 --> 03:07:37,800
we created that so class now I have at

2476
03:07:39,960 --> 03:07:46,120
oh where do you guys think will
it be better to create the main method

2477
03:07:46,120 --> 03:07:49,160
inside of this class in here
or create inside

2478
03:07:49,160 --> 03:07:55,240
a new file,

2479
03:07:55,240 --> 03:08:14,840
new separate new file?

2480
03:08:14,840 --> 03:08:17,960
Well, I was asking because now
you guys will not be able to see

2481
03:08:20,040 --> 03:08:22,400
all the classes.

2482
03:08:22,400 --> 03:08:25,040
And let me check if we

2483
03:08:33,200 --> 03:08:34,200
I hope

2484
03:08:34,200 --> 03:08:44,280
it's readable.

2485
03:08:44,280 --> 03:08:49,520
Okay, So now, if I say guys, if I say BMW,

2486
03:08:49,680 --> 03:08:54,520
BMW is equal to new BMW, don't rush.

2487
03:08:54,520 --> 03:08:59,040
Take your time
and tell me if I just prior to this line,

2488
03:08:59,400 --> 03:09:02,440
how many outbursts
I will see on my console.

2489
03:09:02,440 --> 03:09:22,920
Okay.

2490
03:09:22,920 --> 03:09:26,360
Near your download

2491
03:09:41,040 --> 03:09:43,200
If I only read this line,

2492
03:09:44,720 --> 03:09:47,520
how many outputs I will see

2493
03:09:47,680 --> 03:09:50,520
and which lines and in which sequence.

2494
03:09:50,520 --> 03:09:52,800
If you guys can tell me
that it will be great

2495
03:09:57,360 --> 03:10:05,360
new. Can you change

2496
03:10:05,360 --> 03:10:10,080
phone file for vehicle file?

2497
03:10:10,080 --> 03:10:23,440
Oh, you, me

2498
03:10:35,360 --> 03:10:37,680
only this parent constructor is called.

2499
03:10:37,680 --> 03:10:41,600
I think it will be three
so let me execute this code

2500
03:10:41,600 --> 03:10:45,800
and let me explain why we will be seeing

2501
03:10:51,280 --> 03:10:52,240
these two lines.

2502
03:10:52,240 --> 03:10:57,160
So if.

2503
03:10:57,160 --> 03:10:58,040
So you see,

2504
03:10:59,200 --> 03:11:00,280
even though I am

2505
03:11:00,280 --> 03:11:03,240
creating the object of the child class

2506
03:11:04,200 --> 03:11:08,360
first of all, the constructor

2507
03:11:11,160 --> 03:11:13,360
of the grand card.

2508
03:11:13,360 --> 03:11:17,640
So if you have hundred classes
in a hierarchy,

2509
03:11:18,960 --> 03:11:21,080
all the objects for all

2510
03:11:21,080 --> 03:11:23,280
the classes will be created first,

2511
03:11:24,320 --> 03:11:27,360
then the object of the child
class is created.

2512
03:11:27,480 --> 03:11:30,600
Okay, so first the constructor from

2513
03:11:30,600 --> 03:11:33,600
the top

2514
03:11:33,600 --> 03:11:36,760
more variant is called okay.

2515
03:11:36,760 --> 03:11:40,600
And even though
we are creating the object of child, okay,

2516
03:11:40,640 --> 03:11:43,200
we are creating the object of child First.

2517
03:11:43,640 --> 03:11:46,280
The object off top.

2518
03:11:46,680 --> 03:11:49,400
Most parent is created,

2519
03:11:50,400 --> 03:11:53,880
then the class
which next in the hierarchy.

2520
03:11:54,520 --> 03:11:58,560
Then the constructor of that
class is created.

2521
03:11:58,560 --> 03:12:00,840
So what is going on behind the scenes?

2522
03:12:00,840 --> 03:12:04,720
Technically, Java
is creating the objects of all the classes

2523
03:12:05,280 --> 03:12:08,800
which are in this hierarchy above this
BMW class.

2524
03:12:09,120 --> 03:12:12,280
Okay,
so that's why we use the final keyword

2525
03:12:12,720 --> 03:12:16,120
to restrict these long hierarchies
if there are any.

2526
03:12:16,120 --> 03:12:18,800
Okay, so that we can improve
the performance. Otherwise,

2527
03:12:20,000 --> 03:12:22,040
all those hundred classes

2528
03:12:22,200 --> 03:12:26,120
and the structure of those classes will be
created, appears will be initialized,

2529
03:12:26,120 --> 03:12:29,760
memory will be reserved,
objects will be created, and then only

2530
03:12:30,320 --> 03:12:33,120
the construction of the child will happen.

2531
03:12:33,840 --> 03:12:40,080
Okay.

2532
03:12:40,080 --> 03:12:43,280
And if I put air and s out

2533
03:12:45,240 --> 03:12:48,280
in here saying BMW

2534
03:12:52,200 --> 03:13:01,120
constructor,
and if now I had security code,

2535
03:13:01,440 --> 03:13:05,880
can you guys tell me the sequence
in which sequence I will get three lines

2536
03:13:05,880 --> 03:13:11,400
and how many lines I will see
and in which sequence.

2537
03:13:11,400 --> 03:13:15,480
So this is on line number 13.

2538
03:13:15,480 --> 03:13:26,320
This is on 33 and this is on 11.

2539
03:13:26,320 --> 03:13:29,640
BMW last child class preferred

2540
03:13:30,600 --> 03:13:33,280
grand parent and then BMW.

2541
03:13:33,280 --> 03:13:36,480
Yes, Right. So

2542
03:13:37,560 --> 03:13:40,120
child will be at the last

2543
03:13:40,720 --> 03:13:44,280
the last thing.

2544
03:13:44,280 --> 03:13:47,640
So that's
why it's not good to have long hierarchies

2545
03:13:47,640 --> 03:13:58,800
of inheritance.

2546
03:13:58,800 --> 03:14:01,000
All right.
So I have created the constructor

2547
03:14:01,240 --> 03:14:04,600
so you guys know how
the constructors are called.

2548
03:14:04,600 --> 03:14:07,680
And now I can say BMW Dot

2549
03:14:10,600 --> 03:14:12,880
print where you can count what output.

2550
03:14:12,880 --> 03:14:45,240
I will see if I say print vehicle count
based.

2551
03:14:45,240 --> 03:14:48,360
Yeah, I will get to count one. Why?

2552
03:14:48,720 --> 03:14:55,160
Because this constructor,
which I am incrementing the value.

2553
03:14:55,160 --> 03:14:58,680
It is only being called once.

2554
03:14:59,440 --> 03:15:00,120
Okay.

2555
03:15:00,520 --> 03:15:04,600
For this can create a BMW object.

2556
03:15:04,600 --> 03:15:07,120
Yeah. For this concrete class.

2557
03:15:08,280 --> 03:15:11,480
So if I say let's say maybe

2558
03:15:16,080 --> 03:15:19,800
BMW, BMW two

2559
03:15:19,800 --> 03:15:20,720
now word count.

2560
03:15:20,720 --> 03:15:33,360
I will see you guys.

2561
03:15:33,360 --> 03:15:37,960
So now I will see
because now I have created two objects

2562
03:15:38,600 --> 03:15:40,480
inside this main method.

2563
03:15:40,480 --> 03:15:43,560
Okay. Okay.

2564
03:15:43,560 --> 03:15:49,320
Let me remove this.

2565
03:15:49,320 --> 03:15:52,080
Okay.
So you can call all the matters in here.

2566
03:15:52,080 --> 03:15:54,880
In here, BMW dot

2567
03:16:09,680 --> 03:16:10,760
weird,

2568
03:16:11,640 --> 03:16:14,280
BMW door

2569
03:16:14,280 --> 03:16:15,880
start,

2570
03:16:16,120 --> 03:16:19,360
BMW board.

2571
03:16:19,360 --> 03:16:21,520
I'll try.

2572
03:16:21,600 --> 03:16:27,480
We work.

2573
03:16:27,480 --> 03:16:36,720
Stop.

2574
03:16:36,720 --> 03:16:41,720
Oh God is driving weakly stopping
BMW can start is angry mode

2575
03:16:45,720 --> 03:16:47,760
and then execute all that

2576
03:17:05,640 --> 03:17:12,480
and if I say

2577
03:17:13,120 --> 03:17:16,960
can I say this guys
can I create an object of type

2578
03:17:17,280 --> 03:17:24,080
variable of vehicle?

2579
03:17:24,080 --> 03:17:27,120
And can I say in New

2580
03:17:28,320 --> 03:18:14,400
York to like this?

2581
03:18:14,400 --> 03:18:14,840
Yeah.

2582
03:18:15,160 --> 03:18:18,280
So I am simply

2583
03:18:19,040 --> 03:18:21,000
I am simply

2584
03:18:21,200 --> 03:18:23,360
having a variable of pattern

2585
03:18:24,720 --> 03:18:26,760
and I am storing the object of child.

2586
03:18:27,040 --> 03:18:29,040
There is no harm doing that.

2587
03:18:29,040 --> 03:18:30,840
So I can do that.

2588
03:18:30,840 --> 03:18:31,680
I can do that.

2589
03:18:31,680 --> 03:18:35,040
No issues in the.

2590
03:18:35,040 --> 03:18:38,480
All right.

2591
03:18:38,480 --> 03:18:42,360
And can I also say car instead of

2592
03:18:45,000 --> 03:18:46,720
instead of a car?

2593
03:18:46,720 --> 03:18:53,760
Can I also say car in here?

2594
03:18:53,760 --> 03:18:55,520
God is also a parent class, right?

2595
03:18:55,520 --> 03:19:00,120
I can also say that I can also see that.

2596
03:19:00,120 --> 03:19:01,040
Perfect.

2597
03:19:01,040 --> 03:19:04,560
So are there any questions or so does
not matter.

2598
03:19:04,840 --> 03:19:06,120
How about abstract?

2599
03:19:06,120 --> 03:19:08,600
Yes. No. No, abstract does not matter.

2600
03:19:09,240 --> 03:19:12,800
We Can store the child

2601
03:19:12,800 --> 03:19:17,120
class is still inside the parent classes
even though they are abstract.

2602
03:19:18,040 --> 03:19:23,840
But we cannot create the object
of of of legal.

2603
03:19:23,840 --> 03:19:26,160
This vehicle is an abstract class.

2604
03:19:26,160 --> 03:19:28,920
This Toyota is a

2605
03:19:28,920 --> 03:19:33,960
is a concrete class.

2606
03:19:33,960 --> 03:19:34,560
All right.

2607
03:19:34,560 --> 03:19:37,480
So let me go through the remaining slides

2608
03:19:39,360 --> 03:19:41,160
and let's check if we are

2609
03:19:41,160 --> 03:19:45,040
forgetting something many
you did a mistake and just third time now

2610
03:19:46,400 --> 03:19:49,760
it is my my third class has an error

2611
03:19:53,280 --> 03:19:54,920
that Toyota

2612
03:19:56,080 --> 03:19:58,400
will use is fine.

2613
03:19:58,400 --> 03:19:59,360
This is how we learn.

2614
03:19:59,360 --> 03:20:03,360
We use abstract classes
when we know only method,

2615
03:20:03,400 --> 03:20:06,880
but we don't know how will be implemented.

2616
03:20:07,080 --> 03:20:09,600
So this is where you guys should

2617
03:20:12,840 --> 03:20:15,440
use the abstract

2618
03:20:15,440 --> 03:20:20,160
classes.

2619
03:20:20,160 --> 03:20:22,200
No, no, you're not discouraged.

2620
03:20:22,200 --> 03:20:24,480
Again,
I see the code one more time, please.

2621
03:20:25,200 --> 03:20:30,080
Even though if if you guys are answering
it wrong, I still want you to respond.

2622
03:20:30,080 --> 03:20:32,640
Or you have a quick question.
Maybe I missed it.

2623
03:20:32,640 --> 03:20:37,520
Can we create an object for our class
being?

2624
03:20:37,520 --> 03:20:40,200
That car class is an abstract.
So what do you guys think?

2625
03:20:40,200 --> 03:20:41,560
And you guys are not.

2626
03:20:41,560 --> 03:20:44,240
Can we create the object of class?

2627
03:20:44,240 --> 03:20:50,760
It is an abstract class. Yes.

2628
03:20:50,760 --> 03:20:55,640
We can not create the object
only because it's an abstract class.

2629
03:20:55,640 --> 03:20:56,000
But the.

2630
03:20:56,000 --> 03:21:00,200
Yes, indirect right?

2631
03:21:00,200 --> 03:21:00,840
Yep. Yep.

2632
03:21:00,840 --> 03:21:01,920
It's fine. It's fine.

2633
03:21:01,920 --> 03:21:04,320
If there are any doubts you guys can ask,

2634
03:21:06,080 --> 03:21:19,440
always ask.

2635
03:21:19,440 --> 03:21:27,160
And I move to the slides.

2636
03:21:27,160 --> 03:21:35,640
Okay.

2637
03:21:35,640 --> 03:21:37,920
And you do this car garden input.

2638
03:21:38,200 --> 03:21:40,920
You can do this way,
but it is not an object of class.

2639
03:21:40,920 --> 03:21:42,040
Yes, I'm not.

2640
03:21:42,040 --> 03:21:49,280
All right.

2641
03:21:49,280 --> 03:21:50,840
Can we take a break? Yes.

2642
03:21:50,840 --> 03:21:59,120
After going through those slides,
we will be having a break.

2643
03:21:59,120 --> 03:22:02,520
So when to use the abstract classes?

2644
03:22:02,520 --> 03:22:05,760
We use abstract classes
when we know the methods,

2645
03:22:05,760 --> 03:22:11,200
but we don't know how they would be
implemented in every abstract class.

2646
03:22:11,200 --> 03:22:13,840
Participate in inheritance.

2647
03:22:13,840 --> 03:22:18,440
Abstract class of Java always contains
common feature.

2648
03:22:18,440 --> 03:22:18,720
So good.

2649
03:22:18,720 --> 03:22:21,200
Try to put common features in here.

2650
03:22:22,240 --> 03:22:24,480
Abstract Classes of definitions

2651
03:22:24,480 --> 03:22:26,680
should not be made as fine.

2652
03:22:27,720 --> 03:22:31,400
Can you guys tell me why
the abstract classes should not be made?

2653
03:22:31,400 --> 03:22:32,640
The final

2654
03:22:38,920 --> 03:22:42,600
dares in how to?

2655
03:22:42,600 --> 03:22:43,840
What does the abstract mean?

2656
03:22:43,840 --> 03:22:44,280
Guys?

2657
03:22:44,280 --> 03:22:47,600
Abstract
means something incomplete, right?

2658
03:22:48,960 --> 03:22:52,160
Final means something complete.

2659
03:22:52,160 --> 03:22:59,360
I'm not contradicting each other,
so that's why

2660
03:23:00,600 --> 03:23:03,480
we can all have

2661
03:23:03,480 --> 03:23:07,840
abstract and fine all at the same time.

2662
03:23:07,920 --> 03:23:08,640
All right.

2663
03:23:08,760 --> 03:23:14,280
Because they are opposite things.

2664
03:23:14,280 --> 03:23:19,120
Or an object of abstract
class cannot be created directly,

2665
03:23:19,120 --> 03:23:25,600
but it can be created indirectly.

2666
03:23:25,600 --> 03:23:30,360
The next thing is the interface,

2667
03:23:30,360 --> 03:23:34,080
but it's the only clearly
it will not make sense.

2668
03:23:34,080 --> 03:23:36,560
So let's discuss it tomorrow. Okay.

2669
03:23:36,960 --> 03:23:39,040
I will discuss this interface tomorrow

2670
03:23:39,920 --> 03:23:42,120
and then we will come back.

2671
03:23:42,120 --> 03:23:45,880
But let me just go through
if it makes interfaces similar to a class

2672
03:23:45,880 --> 03:23:49,160
which is collection of public static

2673
03:23:49,160 --> 03:23:53,880
final variables, will it make sense?

2674
03:23:53,880 --> 03:24:03,880
Guys, if I just read the slides?

2675
03:24:03,880 --> 03:24:06,120
Okay, let's not do this. That's not good.

2676
03:24:07,160 --> 03:24:12,040
So remind me that, we we didn't go through
these three slides in the next class.

2677
03:24:13,640 --> 03:24:15,360
I have I posted

2678
03:24:15,360 --> 03:24:17,520
this question in the course
and afterwards then it

2679
03:24:20,920 --> 03:24:28,240
Okay so let's have a break.

2680
03:24:28,240 --> 03:24:30,960
And after the break,

2681
03:24:31,960 --> 03:24:34,840
hopefully
the students from the previous batch,

2682
03:24:35,280 --> 03:24:37,320
they will be here

2683
03:24:38,760 --> 03:24:41,920
and we will quickly

2684
03:24:42,320 --> 03:24:45,360
I will quickly solve this task

2685
03:24:45,360 --> 03:24:48,760
and then we will have the discussion

2686
03:24:48,760 --> 03:24:54,000
with the seniors for breaking the law.

2687
03:24:55,760 --> 03:24:58,160
Nerd, feel good.

2688
03:24:58,160 --> 03:25:01,400
And I hope you guys will be able to take
rest.

2689
03:25:01,400 --> 03:25:04,880
Plus, you guys will be able to do
the task in 15 minutes.

2690
03:25:05,080 --> 03:25:13,120
Is that okay?

2691
03:25:13,120 --> 03:25:21,440
And please be back
and remind me about the recording.

2692
03:25:21,440 --> 03:25:22,280
All right, Good.

2693
03:25:22,280 --> 03:25:31,080
Yeah, we would.

2694
03:25:31,080 --> 03:25:31,400
Yeah.

2695
03:25:31,400 --> 03:25:34,320
Well, whoever was here
this whole time is looking

2696
03:25:39,040 --> 03:25:39,720
at you guys.

2697
03:25:39,720 --> 03:25:45,960
Have any more questions?

2698
03:25:45,960 --> 03:25:46,840
Oh, yeah.

2699
03:25:46,840 --> 03:25:48,240
Everybody knows that.

2700
03:25:48,240 --> 03:25:50,400
Not just these guys.
They're not special this way

2701
03:25:52,560 --> 03:25:54,200
we create an emoji

2702
03:25:54,200 --> 03:25:57,960
with those guys face
because we were procrastinating.

2703
03:25:57,960 --> 03:26:08,120
So. So, so.

2704
03:26:08,120 --> 03:26:11,320
But I'm not sure what kind of question is.

2705
03:26:11,360 --> 03:26:13,840
If it's a full time
job, you'll be working, you know,

2706
03:26:14,440 --> 03:26:18,560
five, 9 to 5 every like Monday, Friday,
with all the holidays.

2707
03:26:18,560 --> 03:26:22,160
So it's going to be like 40 hours a week.

2708
03:26:22,160 --> 03:26:24,160
You know, I don't really know.

2709
03:26:24,160 --> 03:26:29,880
Maybe some some is all perplexed ability
this kind of, you know, time wise.

2710
03:26:29,880 --> 03:26:33,560
But most likely you will have to stick to

2711
03:26:34,360 --> 03:26:40,040
the schedule.

2712
03:26:40,040 --> 03:26:41,880
Best advice is study.

2713
03:26:41,880 --> 03:26:45,440
Listen to us Go very carefully
Listen to everyone else.

2714
03:26:45,440 --> 03:26:49,560
That's index and just soak it all
and do your research

2715
03:26:49,560 --> 03:26:52,560
and on your free time,
you know, just repeat everything.

2716
03:26:52,560 --> 03:26:56,000
You study, practice,
you know, just go at it.

2717
03:26:57,000 --> 03:27:00,280
That's that's your best investment.

2718
03:27:00,280 --> 03:27:02,280
The place right now

2719
03:27:03,280 --> 03:27:05,400
for the course for you.

2720
03:27:05,400 --> 03:27:07,560
The course. Oh, it was hard.

2721
03:27:08,200 --> 03:27:10,040
It was very hard for me.

2722
03:27:10,040 --> 03:27:14,040
I mean I didn't have
any technical experience and it was hard.

2723
03:27:15,120 --> 03:27:16,640
I didn't sleep.

2724
03:27:16,640 --> 03:27:18,480
Sometimes I would be studying

2725
03:27:18,480 --> 03:27:21,040
till like three or four in the morning
and I would work.

2726
03:27:22,000 --> 03:27:23,480
But at end it's worth it.

2727
03:27:23,480 --> 03:27:27,360
You guys like whatever you guys,
you know, don't get bored.

2728
03:27:27,360 --> 03:27:28,720
Just continue doing it.

2729
03:27:28,720 --> 03:27:30,840
I'm telling you guys, it's
going to change your life.

2730
03:27:30,840 --> 03:27:33,360
Like when people
when used to be the student

2731
03:27:33,360 --> 03:27:36,480
and then I would have people from previous
batch tell me, Oh, you know, it's

2732
03:27:36,480 --> 03:27:40,600
going to change your life and be like,
Oh no, it is like I work.

2733
03:27:40,640 --> 03:27:41,000
Yeah.

2734
03:27:41,000 --> 03:27:44,400
Now my schedule is pretty flexible,

2735
03:27:45,480 --> 03:27:47,040
so just study you guys.

2736
03:27:47,040 --> 03:27:50,320
And if you think that you don't know
anything, you know, or like you're like,

2737
03:27:50,320 --> 03:27:55,040
want to give up,
don't like it's just continue and you guys

2738
03:27:55,040 --> 03:27:59,480
are able to do it so just don't give up
but listen to ask our

2739
03:27:59,480 --> 03:28:04,120
honestly he's the most out the instructors
he's the he's the best

2740
03:28:04,440 --> 03:28:08,160
like he was very very very patient
even with our batch like

2741
03:28:09,640 --> 03:28:12,840
I remember we had a student
I'm not going to say any names

2742
03:28:12,840 --> 03:28:16,320
he would have asked the same question
over and over and over again

2743
03:28:16,320 --> 03:28:20,000
and ask our reply to him
every single time.

2744
03:28:20,040 --> 03:28:24,280
Even the students were like okay,
you know, like we just learned this.

2745
03:28:24,280 --> 03:28:26,720
But yeah, you guys just about

2746
03:28:29,560 --> 03:28:31,520
we all know though.

2747
03:28:31,520 --> 03:28:34,160
So yeah, 100% what she said.

2748
03:28:34,560 --> 03:28:38,400
I used to look at the people
who would come in like me and Ariana

2749
03:28:38,400 --> 03:28:42,480
are here right now and listen to them say,
Oh, this changed my life.

2750
03:28:42,480 --> 03:28:43,960
I was like, Yeah, whatever. Just

2751
03:28:44,960 --> 03:28:46,800
give us, give us the good stuff.

2752
03:28:46,800 --> 03:28:50,280
And as as it sounds like

2753
03:28:50,280 --> 03:28:55,320
it's 100% true, I used to be a bartender,
and as soon as COVID hit,

2754
03:28:55,560 --> 03:28:59,240
I was out of a job,
I was out of money and it was just ugly.

2755
03:29:00,120 --> 03:29:01,160
And here I am now.

2756
03:29:01,160 --> 03:29:02,520
I don't care what's happening.

2757
03:29:02,520 --> 03:29:04,800
I don't care how many cases are out there.

2758
03:29:04,800 --> 03:29:07,160
I've got my laptop right here.

2759
03:29:07,160 --> 03:29:10,080
I got my Wi-Fi connection
and I've got the money.

2760
03:29:10,080 --> 03:29:13,160
So and I love my job like I really do.

2761
03:29:13,160 --> 03:29:15,120
It's I'm having fun doing it.

2762
03:29:15,120 --> 03:29:18,400
I'm excited when Monday comes, you know?

2763
03:29:18,400 --> 03:29:20,800
So, yeah, just put in your best effort

2764
03:29:22,640 --> 03:29:23,600
based on your performance.

2765
03:29:23,600 --> 03:29:28,800
I know you choose the years of experience
depending how how you feel about it.

2766
03:29:28,800 --> 03:29:34,400
I only I went with three years
in a house of experience, but it varies.

2767
03:29:34,640 --> 03:29:36,960
Veronica
She said for those people that I've done

2768
03:29:36,960 --> 03:29:39,320
five, there's people
that have had no experience.

2769
03:29:39,600 --> 03:29:43,520
It just all depends on how,
you know, you feel pretty much, but

2770
03:29:45,000 --> 03:29:46,560
it's like

2771
03:29:46,560 --> 03:29:50,280
in retrospect, I'm thinking
if you've got good knowledge, you can go

2772
03:29:50,280 --> 03:29:54,000
as far as put like a year
or two years of experience because

2773
03:29:54,920 --> 03:29:57,800
if you can back it up
with solid knowledge, you know, you

2774
03:29:57,800 --> 03:30:01,680
then need to like pretend
that you've been out there for four years

2775
03:30:01,680 --> 03:30:06,160
because like I've been working
for six months now and realizing

2776
03:30:06,160 --> 03:30:11,560
how much more I know now and how much more
like practical knowledge I've got.

2777
03:30:11,560 --> 03:30:14,560
And I'm like,
Yeah, four years of experience is

2778
03:30:14,560 --> 03:30:18,120
bullshit and like, chances are
they'll know.

2779
03:30:18,120 --> 03:30:21,520
So just try like, try to be humble,
but confident

2780
03:30:21,520 --> 03:30:27,960
in your knowledge.

2781
03:30:27,960 --> 03:30:31,720
So in my place
we've got a bunch of testers.

2782
03:30:31,760 --> 03:30:33,240
I think it's like

2783
03:30:33,840 --> 03:30:37,200
five of us now, but like everyone
kind of does a different thing.

2784
03:30:37,320 --> 03:30:41,280
But we work
multiple projects simultaneously, so

2785
03:30:45,240 --> 03:30:48,600
in my
team we have so my team is pretty big.

2786
03:30:48,600 --> 03:30:53,240
I think we have about 16 people
on my team.

2787
03:30:53,240 --> 03:30:56,960
We have a lot of developers
and we only have three testers,

2788
03:30:57,240 --> 03:31:01,360
including myself. Why?

2789
03:31:01,360 --> 03:31:04,920
So we have one
that does automation, just automation.

2790
03:31:04,920 --> 03:31:09,000
I do both automation and manual,
and then we have another girl

2791
03:31:09,000 --> 03:31:17,320
that does just manual testing.

2792
03:31:17,320 --> 03:31:20,240
I know we help each other.

2793
03:31:20,520 --> 03:31:22,560
When I first started, I didn't know.

2794
03:31:22,560 --> 03:31:24,480
So my application is pretty big.

2795
03:31:24,480 --> 03:31:31,800
We have about 14 domains, so I always ask
questions to the other testers.

2796
03:31:31,800 --> 03:31:36,160
I've been there longer and like I said,
they're very, very I mean, for my

2797
03:31:36,240 --> 03:31:38,400
my team, they're very helpful. So

2798
03:31:39,480 --> 03:31:42,400
And I think just in general,
they if you don't know anything,

2799
03:31:42,400 --> 03:31:43,560
they'll they'll help you.

2800
03:31:43,560 --> 03:31:46,920
They're not going to be like,
oh, you know, not answer any questions or

2801
03:31:47,360 --> 03:31:51,200
I haven't seen anything like any one
competing in my company, like,

2802
03:31:51,240 --> 03:31:54,120
you know, testers,
they're always just helpful

2803
03:31:54,120 --> 03:31:56,280
because at the end of the day,
they want to,

2804
03:31:56,840 --> 03:31:59,360
you know, be able
to deliver to the client.

2805
03:31:59,680 --> 03:32:02,880
And you can't do that
without pretty much being a team.

2806
03:32:02,880 --> 03:32:06,240
So I don't think you have that.

2807
03:32:06,240 --> 03:32:08,320
But like I said, it
depends on your company.

2808
03:32:08,320 --> 03:32:09,160
So I'm not sure.

2809
03:32:09,160 --> 03:32:13,560
Yeah, because they all work on
the same project, you know, most likely.

2810
03:32:13,560 --> 03:32:17,000
So it's, it's in your best interest
to help each other out and make sure.

2811
03:32:17,040 --> 03:32:20,520
So, you know,
you're on time and everything's good.

2812
03:32:20,520 --> 03:32:25,000
And if you ever encounter people
who, like, you know, tell you to piss off

2813
03:32:25,000 --> 03:32:27,760
when you ask them for help,
then just leave that place,

2814
03:32:27,880 --> 03:32:28,960
you don't want to work there.

2815
03:32:30,440 --> 03:32:32,760
Hopefully you'll never see that.

2816
03:32:32,760 --> 03:32:42,760
But yeah, the developer and investor

2817
03:32:42,760 --> 03:32:45,720
relationship, is it

2818
03:32:46,000 --> 03:32:48,360
relationships or right ratio?

2819
03:32:48,760 --> 03:32:53,240
But relationships are good, you know,
when they're not being difficult.

2820
03:32:54,480 --> 03:32:55,800
But Yeah, no, it's good.

2821
03:32:55,800 --> 03:32:59,840
And you want to be on good terms
with your developers because there's

2822
03:32:59,840 --> 03:33:01,200
going to be a lot of back and forth.

2823
03:33:01,200 --> 03:33:04,200
Like if you don't understand
the application, they might help you,

2824
03:33:04,240 --> 03:33:05,840
They might help you, you know,

2825
03:33:05,840 --> 03:33:08,800
because I have a lot of backend testing
which, you know,

2826
03:33:09,480 --> 03:33:13,000
syntax didn't teach us that and chances
are you're not going to need it anywhere.

2827
03:33:13,000 --> 03:33:15,720
But it's just the way
my application works, right?

2828
03:33:15,720 --> 03:33:18,200
So a lot of times
developers will help me out,

2829
03:33:18,360 --> 03:33:22,160
like how to even understand
what I'm testing, like how to test it.

2830
03:33:22,160 --> 03:33:27,600
So yeah,
you want to be on good terms with them.

2831
03:33:27,600 --> 03:33:30,560
Regions.

2832
03:33:30,560 --> 03:33:35,200
But in a job I applied to a lot.

2833
03:33:35,440 --> 03:33:41,040
I applied to quite a few jobs and total,
I believe I got four job offers

2834
03:33:41,800 --> 03:33:45,680
and I think I went into like
maybe 10 to 15 interviews.

2835
03:33:47,160 --> 03:33:48,480
But yeah,

2836
03:33:48,480 --> 03:33:51,200
I, you you just apply, apply, apply.

2837
03:33:51,680 --> 03:33:55,040
And you know,
we have a girl from our batch.

2838
03:33:55,040 --> 03:34:00,960
She used to apply adding to
like 50 to 100 jobs a day.

2839
03:34:00,960 --> 03:34:04,360
So once you are
that started, just apply apply.

2840
03:34:04,360 --> 03:34:07,360
I would remember I would be
it would be like two 3:00 in the morning

2841
03:34:07,360 --> 03:34:11,640
and I would just be applying on my phone
just every time

2842
03:34:11,640 --> 03:34:13,160
and you'll you'll get those calls.

2843
03:34:13,160 --> 03:34:17,560
You get even till now, like
my email is full of like, hey, you know,

2844
03:34:17,880 --> 03:34:20,640
we want to save
if you're interested in a job

2845
03:34:20,640 --> 03:34:23,640
like you just continue getting
and getting those emails.

2846
03:34:23,640 --> 03:34:26,360
So there's jobs there a lot.

2847
03:34:26,360 --> 03:34:30,720
Now you guys have to change your email
and mobile.

2848
03:34:30,720 --> 03:34:33,760
You can have like a throwaway email for

2849
03:34:35,240 --> 03:34:38,160
the job applications.

2850
03:34:38,280 --> 03:34:42,720
Are you nervous at all during your.

2851
03:34:42,720 --> 03:34:44,880
Yeah, the nerves during the interview.

2852
03:34:44,880 --> 03:34:48,440
It depends how you know how
you are as a person,

2853
03:34:48,440 --> 03:34:51,320
but most likely you're going to be like
shaking there a little bit.

2854
03:34:51,800 --> 03:34:53,600
But yeah, just

2855
03:34:53,720 --> 03:34:55,800
drink some camomile tea. I don't know.

2856
03:34:55,840 --> 03:34:59,560
Just, you know, do something
to keep it down, have a glass of wine

2857
03:34:59,560 --> 03:35:01,880
if you can handle yourself off, you know.

2858
03:35:01,880 --> 03:35:05,560
But yeah, just the fear.

2859
03:35:05,560 --> 03:35:06,040
Yeah.

2860
03:35:06,080 --> 03:35:10,040
Like come up with something that helps you
with this, with the shakiness.

2861
03:35:10,040 --> 03:35:12,680
As long as you got the knowledge again,
you should be good

2862
03:35:14,480 --> 03:35:17,760
in the sense
of all these companies in your city.

2863
03:35:18,120 --> 03:35:20,080
They care about you.

2864
03:35:20,080 --> 03:35:23,400
Out of how many required
showing up in the office.

2865
03:35:24,920 --> 03:35:26,680
Everyone's different.

2866
03:35:26,680 --> 03:35:29,760
I'm based in Florida
and my company is actually New York.

2867
03:35:29,760 --> 03:35:31,240
And when they hired me,

2868
03:35:31,240 --> 03:35:35,200
we had an agreement that I'll relocate
as soon as they want people in the office.

2869
03:35:35,640 --> 03:35:41,200
But it's been like half a year and they've
been pushing date and pushing it more.

2870
03:35:41,200 --> 03:35:42,400
And now it's like,

2871
03:35:43,840 --> 03:35:46,480
I'm not
even sure that it's ever happening.

2872
03:35:46,480 --> 03:35:49,400
Like, I'm fine here.
I'm not looking forward to moving.

2873
03:35:49,400 --> 03:35:52,800
But you know, it's a ten.

2874
03:35:52,840 --> 03:35:56,720
So you might be getting offers
from all over the country.

2875
03:35:56,720 --> 03:36:01,960
Now, the pandemic kind of changed the
like the workplace situation.

2876
03:36:02,040 --> 03:36:03,840
So you might find something near.

2877
03:36:03,840 --> 03:36:07,840
But the good thing is you can apply it
anywhere and still be able to, you know,

2878
03:36:07,920 --> 03:36:08,880
work remotely.

2879
03:36:08,880 --> 03:36:16,440
So you just have like
more more room to play.

2880
03:36:16,440 --> 03:36:18,880
If they ask you
why you want to change your job, it's

2881
03:36:18,960 --> 03:36:23,680
the kind of field where you can jump jobs
like every few months, basically.

2882
03:36:23,680 --> 03:36:27,280
Well, let's say six, eight,
you know, every year, because you want

2883
03:36:27,280 --> 03:36:30,720
a personal growth, career growth,
it doesn't matter,

2884
03:36:30,720 --> 03:36:35,360
you know, your contract and you'll get
all the answers down the road

2885
03:36:37,040 --> 03:36:38,040
from your possible.

2886
03:36:38,040 --> 03:36:39,760
Yes. I don't know. It's possible.

2887
03:36:39,760 --> 03:36:44,960
We have international students working
from almost all the countries to the it.

2888
03:36:45,000 --> 03:36:48,200
It will depend on the company.

2889
03:36:48,360 --> 03:36:50,080
So we don't need our lecture.

2890
03:36:50,080 --> 03:36:53,160
For example,
if you want to move back to your home

2891
03:36:53,160 --> 03:36:55,960
country
or you want to live in the United States,

2892
03:36:56,360 --> 03:37:00,200
so do they require you
to stay in United States?

2893
03:37:00,200 --> 03:37:00,640
I mean,

2894
03:37:00,640 --> 03:37:04,000
do they have some kind of check and
balance on you can maybe visit the U.S.

2895
03:37:04,040 --> 03:37:05,160
maybe twice a year

2896
03:37:05,160 --> 03:37:08,040
and then you can stay in your own country
or something like that.

2897
03:37:08,480 --> 03:37:11,520
So with my particular job,
it probably wouldn't happen

2898
03:37:11,960 --> 03:37:17,680
because they're pretty it's a business
to business payment platform and they work

2899
03:37:17,680 --> 03:37:21,320
with banks and it's just not good
for their taxes, I think, or something.

2900
03:37:21,320 --> 03:37:23,080
So yeah, that wouldn't happen.

2901
03:37:23,080 --> 03:37:25,440
But there that, you know if you have

2902
03:37:27,440 --> 03:37:30,560
what's it called the job

2903
03:37:31,800 --> 03:37:35,200
if you can work in the U.S.,
you know a lot of companies won't care.

2904
03:37:35,200 --> 03:37:36,800
You know, it really depends.

2905
03:37:36,800 --> 03:37:40,240
A lot of companies like outsource
and you know,

2906
03:37:40,880 --> 03:37:45,120
like we have people
working from England and stuff.

2907
03:37:45,120 --> 03:37:49,240
So it really I'm also not lucky,
I guess, with Russia as my home country

2908
03:37:49,240 --> 03:37:51,360
because I wanted to work

2909
03:37:51,360 --> 03:37:55,200
like take my work
laptop with me on vacation and trip home.

2910
03:37:55,200 --> 03:37:57,840
And they were like, Yeah, Russian
hackers, We're not risking that.

2911
03:37:58,240 --> 03:38:00,240
And they just didn't want me.

2912
03:38:00,240 --> 03:38:03,400
They were like, You, you just take
your vacation, you know, enjoy it.

2913
03:38:04,200 --> 03:38:08,200
So yeah, I I guess
it depends on where you're from too.

2914
03:38:08,200 --> 03:38:12,960
But like, even if you don't,
if you move back to your country

2915
03:38:12,960 --> 03:38:14,160
and you don't work for U.S.

2916
03:38:14,160 --> 03:38:18,560
company anymore, there's still
you know, salaries are good everywhere.

2917
03:38:19,560 --> 03:38:21,880
And it's a very like needed

2918
03:38:23,520 --> 03:38:26,160
profession.

2919
03:38:26,160 --> 03:38:27,360
Probably not that, too,

2920
03:38:27,360 --> 03:38:32,080
but they're not famous for hackers,
at least, you know, companies.

2921
03:38:32,120 --> 03:38:35,520
If you guys want to work
in the United States

2922
03:38:35,840 --> 03:38:38,280
from outside,
I can guard you if you guys want,

2923
03:38:38,600 --> 03:38:42,000
because there are special companies
who are looking for these kind of people.

2924
03:38:42,080 --> 03:38:47,120
So if you guys want,
I can guide you for that.

2925
03:38:47,120 --> 03:38:50,840
You know, for our budget,
we've got people from all over

2926
03:38:54,600 --> 03:38:56,520
didn't give us all the information.

2927
03:38:56,520 --> 03:38:59,040
They're. Yeah.

2928
03:38:59,040 --> 03:39:01,520
So you see how nice he is.

2929
03:39:01,520 --> 03:39:04,440
He's just doing your job
but willing to help you with like,

2930
03:39:04,440 --> 03:39:06,440
future job opportunities.

2931
03:39:06,440 --> 03:39:10,960
Hold on to this guy.

2932
03:39:10,960 --> 03:39:15,720
I was going to ask.

2933
03:39:15,720 --> 03:39:18,680
So besides salary, you want to focus on

2934
03:39:19,680 --> 03:39:21,760
kind of the personal part too.

2935
03:39:21,760 --> 03:39:23,120
You know, you want to see how

2936
03:39:24,160 --> 03:39:26,880
how you communicate with people
who are interviewing you

2937
03:39:26,880 --> 03:39:27,840
if there is, you know,

2938
03:39:27,840 --> 03:39:30,000
a good report and everything,
because you're going to be working

2939
03:39:30,000 --> 03:39:31,920
with those people, you know, all the time.

2940
03:39:31,920 --> 03:39:36,200
So you want to have, you know, something,
something going there.

2941
03:39:36,960 --> 03:39:41,080
You you you want to be interested
in the application itself.

2942
03:39:41,080 --> 03:39:45,880
So find out what the company does,
what tools they use

2943
03:39:45,880 --> 03:39:49,360
because, you know, some like maybe
some of you will want to learn something

2944
03:39:49,360 --> 03:39:53,880
new once you're done with Centex,
maybe some of you will be more sticking

2945
03:39:53,880 --> 03:39:58,680
with your stack like Java, selenium
testing, G, cucumber or whatever.

2946
03:39:58,680 --> 03:40:02,160
So those like
there are a lot of things to consider.

2947
03:40:02,400 --> 03:40:04,880
Salary is just one of them.

2948
03:40:04,880 --> 03:40:08,760
And like almost
every place will offer you a good one. So

2949
03:40:09,760 --> 03:40:11,480
look at the benefits.

2950
03:40:11,480 --> 03:40:15,440
Remote work, work, work at the office.

2951
03:40:15,440 --> 03:40:20,200
You know,
I think it's more difficult for women.

2952
03:40:20,520 --> 03:40:26,560
Yeah, I don't think it's more difficult
for women to get this position.

2953
03:40:26,560 --> 03:40:29,880
I mean, honestly,
I think they want females more

2954
03:40:29,880 --> 03:40:33,080
because there are more details
and that's something that you need

2955
03:40:33,080 --> 03:40:39,640
in order to tester no room for a woman.

2956
03:40:39,640 --> 03:40:42,880
So they always want that cutting.

2957
03:40:42,920 --> 03:40:45,120
How long after you finish
did you find a job

2958
03:40:46,200 --> 03:40:49,200
that it took me?

2959
03:40:49,200 --> 03:40:52,440
I think after my second week on the I'm
looking for a job.

2960
03:40:52,440 --> 03:40:57,120
I got my first offer,
but I wasn't happy with it.

2961
03:40:57,120 --> 03:40:58,960
So I continue applying.

2962
03:40:58,960 --> 03:41:02,240
So it took me probably about 3 to 4 weeks
to get my job.

2963
03:41:03,760 --> 03:41:07,000
And even then when I had my
when I was in my current job,

2964
03:41:07,000 --> 03:41:10,080
I was still in other rounds
with other company.

2965
03:41:10,080 --> 03:41:13,600
So I still got
I like job offers well in the company, but

2966
03:41:14,000 --> 03:41:19,000
I decided to stick to the one I'm
with just because it's just at the time.

2967
03:41:19,000 --> 03:41:24,840
It just know works best for me.

2968
03:41:24,840 --> 03:41:27,040
Yes, you need to be very detail oriented

2969
03:41:28,680 --> 03:41:29,640
as a tester,

2970
03:41:29,640 --> 03:41:33,680
especially if you do manual testing.

2971
03:41:33,680 --> 03:41:36,240
Very right now.

2972
03:41:36,360 --> 03:41:40,000
My job, I'm very detail oriented
and sometimes they'll be like,

2973
03:41:40,000 --> 03:41:40,600
What do you mean?

2974
03:41:40,600 --> 03:41:43,920
Like the developers
just like sending messages like, No,

2975
03:41:43,920 --> 03:41:45,080
but this and this and that.

2976
03:41:45,080 --> 03:41:48,240
I'm like, No, you're missing
this, you're missing that. So

2977
03:41:50,320 --> 03:41:52,440
they'll just like Veronica said earlier,

2978
03:41:52,440 --> 03:41:55,560
like, they'll be like, Oh, no,
there she goes again.

2979
03:41:55,560 --> 03:41:57,840
Send me a message.

2980
03:41:58,360 --> 03:42:00,360
It's like, Oh, no, not her.

2981
03:42:00,360 --> 03:42:02,200
This is what you want to be like.

2982
03:42:02,200 --> 03:42:05,560
I keep laughing at it
because when you know, when someone goes,

2983
03:42:05,560 --> 03:42:08,160
Oh my God, when are you going to stop
recording blogs?

2984
03:42:08,200 --> 03:42:11,120
I'm like, when I'm when I'll stop looking
and I'll just

2985
03:42:12,920 --> 03:42:15,440
provide the that they're going

2986
03:42:15,440 --> 03:42:15,960
from.

2987
03:42:15,960 --> 03:42:17,960
For me, they provided everything for me.

2988
03:42:18,480 --> 03:42:23,640
They gave me a keyboard or a screen,
a laptop mouse.

2989
03:42:24,240 --> 03:42:24,600
Yeah.

2990
03:42:24,600 --> 03:42:28,280
So most companies, they provide everything
for you, especially.

2991
03:42:28,280 --> 03:42:32,280
They don't have to pay for rent
for the office.

2992
03:42:32,280 --> 03:42:47,760
It's much cheaper for them.

2993
03:42:47,760 --> 03:42:52,320
Do you mean if we were forgetting
things while being a student?

2994
03:42:53,320 --> 03:42:53,720
I mean,

2995
03:42:53,720 --> 03:42:57,640
and you know, bugging as GA
like many times was the same question.

2996
03:42:57,640 --> 03:42:59,800
So you're the guy whose name thing.

2997
03:43:00,960 --> 03:43:05,880
If I ask them something
about like two weeks ago or one week ago,

2998
03:43:05,880 --> 03:43:10,200
and then they don't remember that
sometimes.

2999
03:43:10,200 --> 03:43:15,360
Well, they're asking, I've got good,
pretty good memory, I would say.

3000
03:43:15,360 --> 03:43:18,560
And I was, you know,
putting in work to study

3001
03:43:18,560 --> 03:43:21,960
and like like I understand things

3002
03:43:22,000 --> 03:43:24,840
not even necessarily remember,
like you have to understand them.

3003
03:43:25,960 --> 03:43:30,120
So, no, I didn't really forget things.

3004
03:43:30,120 --> 03:43:32,640
Well, being a student

3005
03:43:34,320 --> 03:43:36,560
in general,

3006
03:43:37,080 --> 03:43:39,240
I had a part time job during

3007
03:43:39,240 --> 03:43:43,240
while studying and I was also full time
college student and they still are.

3008
03:43:44,320 --> 03:43:49,760
So yeah,

3009
03:43:49,760 --> 03:43:56,040
sometimes those days, not weeks, B.A.

3010
03:43:56,040 --> 03:43:57,640
sometimes it's 5 minutes.

3011
03:43:57,640 --> 03:44:01,800
Like you'll say something in 5 minutes,
you don't know it. It's

3012
03:44:03,360 --> 03:44:03,680
how you

3013
03:44:03,680 --> 03:44:18,440
rate your knowledge, why you finish, how
well you rate your job or knowledge

3014
03:44:18,560 --> 03:44:22,880
while you finish.

3015
03:44:22,880 --> 03:44:25,560
How will you rate your knowledge?

3016
03:44:25,600 --> 03:44:28,280
I don't think I mean, from from my

3017
03:44:28,360 --> 03:44:32,160
like talking to like from my perspective
would probably say

3018
03:44:33,720 --> 03:44:35,120
maybe a seven.

3019
03:44:35,120 --> 03:44:36,720
There's always things you need to learn.

3020
03:44:36,720 --> 03:44:41,160
So you would never be 100% like,
well unless your are, then maybe,

3021
03:44:41,160 --> 03:44:45,320
you know, you'll know everything,
but you will never be ten out of ten

3022
03:44:45,520 --> 03:44:47,280
because there's always something new
to learn.

3023
03:44:47,280 --> 03:44:49,400
Always like

3024
03:44:50,160 --> 03:44:52,560
sometimes they'll be like,
Oh, look at this code, you know?

3025
03:44:52,560 --> 03:44:55,240
And I'm like, okay, let me go back.

3026
03:44:55,240 --> 03:44:56,520
I still go on my notes.

3027
03:44:56,520 --> 03:45:00,400
I still go on YouTube and watch videos
like there's, just always, there

3028
03:45:00,400 --> 03:45:01,280
are things to learn

3029
03:45:03,160 --> 03:45:04,680
hundred percent

3030
03:45:05,160 --> 03:45:07,200
or 1000

3031
03:45:08,960 --> 03:45:10,760
out of ten or

3032
03:45:12,920 --> 03:45:16,440
no, you're asking the right questions.

3033
03:45:16,440 --> 03:45:20,680
So about a thousand.

3034
03:45:20,680 --> 03:45:23,640
So but imposter syndrome is a thing.

3035
03:45:23,640 --> 03:45:27,480
And I actually I did feel like an imposter

3036
03:45:27,480 --> 03:45:30,120
because I was like,
Oh my God, who am I kidding?

3037
03:45:30,120 --> 03:45:32,360
Four years of experience in my ass.

3038
03:45:32,360 --> 03:45:34,080
Like, Come on, you guys.

3039
03:45:34,080 --> 03:45:36,280
Like, I barely understand what's going on.

3040
03:45:36,520 --> 03:45:40,800
They're like, using, you know, the slang
that's going to company specific

3041
03:45:41,120 --> 03:45:45,520
and you just trying to fit in so hard
and, you know, and you see people

3042
03:45:45,520 --> 03:45:51,200
who actually have like many years
of experience and you're like, like,

3043
03:45:51,960 --> 03:45:54,080
yeah, it's, it's a thing, but

3044
03:45:54,520 --> 03:45:56,760
it's just you make the best of it.

3045
03:45:57,120 --> 03:46:00,000
You get, you say, yeah,
and the best you can do.

3046
03:46:00,040 --> 03:46:01,960
Yeah. You'll sit
and you'll get used to it.

3047
03:46:01,960 --> 03:46:05,400
But like knowledge,
you don't have experience,

3048
03:46:05,400 --> 03:46:07,760
you won't have it
when you start your first job.

3049
03:46:07,760 --> 03:46:10,440
But what you can is knowledge. So

3050
03:46:11,800 --> 03:46:12,600
even if you

3051
03:46:12,600 --> 03:46:15,000
have experience, you leave that job

3052
03:46:15,720 --> 03:46:19,280
just like maybe for one month or two month
and you guys will be same.

3053
03:46:20,080 --> 03:46:23,160
You, you, you have to start from zero
when you will be joining a new company.

3054
03:46:23,520 --> 03:46:26,760
I don't think I could just pass
an interview like off the bed right now.

3055
03:46:26,760 --> 03:46:28,320
I would have to study for it.

3056
03:46:28,320 --> 03:46:30,480
Yeah, she had to study,

3057
03:46:31,720 --> 03:46:32,440
came here.

3058
03:46:32,440 --> 03:46:35,080
And even if I am applying on a job,
I need to study.

3059
03:46:35,080 --> 03:46:38,160
You need to study

3060
03:46:38,160 --> 03:46:39,600
under percent?

3061
03:46:39,600 --> 03:46:52,920
Yeah, that depends on your English.

3062
03:46:52,920 --> 03:46:54,120
I would say

3063
03:46:56,240 --> 03:46:59,320
it can be sometimes, but like it's

3064
03:46:59,400 --> 03:47:13,920
the English barrier issues
more in your head than other.

3065
03:47:13,920 --> 03:47:17,080
Oh, you'll have those companies
on your resume.

3066
03:47:17,080 --> 03:47:19,600
We have links in the FBI.

3067
03:47:19,600 --> 03:47:22,680
Yeah.

3068
03:47:22,680 --> 03:47:26,120
You know, they pay the right people
for the background check.

3069
03:47:27,240 --> 03:47:30,320
And yes,
you work 40 hours and sometimes more.

3070
03:47:30,320 --> 03:47:33,600
And Mohamed just stopped looking

3071
03:47:33,600 --> 03:47:48,360
for shortcuts.

3072
03:47:48,360 --> 03:47:49,960
Sebastian, They're both.

3073
03:47:49,960 --> 03:47:53,400
So they when you go on the field,
you'll see a lot of full time

3074
03:47:53,400 --> 03:47:54,400
and contracting jobs.

3075
03:47:54,400 --> 03:48:00,520
It all depends what you're looking for,
but there's both.

3076
03:48:00,520 --> 03:48:03,360
Okay, well,
when you reach your goals, level

3077
03:48:10,800 --> 03:48:13,920
and remember that before before that
I spent seven years.

3078
03:48:14,520 --> 03:48:15,960
Yeah. I mean

3079
03:48:16,720 --> 03:48:18,520
then you can and he's teaching

3080
03:48:18,520 --> 03:48:21,000
like every day

3081
03:48:29,720 --> 03:48:30,800
you see how

3082
03:48:33,880 --> 03:48:35,080
it's it's

3083
03:48:35,080 --> 03:48:38,360
it's the same problem from badge to badge.

3084
03:48:38,360 --> 03:48:42,200
I think like we
because we were having the same self

3085
03:48:42,200 --> 03:48:45,360
doubt and everything
and we were like we'll never find a job.

3086
03:48:45,360 --> 03:48:46,320
It's not real.

3087
03:48:46,320 --> 03:48:49,680
All those people who just came and said
that since it's changed their lives,

3088
03:48:49,680 --> 03:48:50,640
they only lying.

3089
03:48:50,640 --> 03:48:51,960
They paid them.

3090
03:48:51,960 --> 03:48:53,560
They're not paying us, by the way,

3091
03:48:54,600 --> 03:48:55,840
just I

3092
03:48:55,840 --> 03:49:00,240
know,

3093
03:49:00,240 --> 03:49:03,120
but yeah, now you guys will be.

3094
03:49:03,280 --> 03:49:05,520
You guys will be great.
You're in good hands.

3095
03:49:05,800 --> 03:49:09,520
You know, all the instructors are great.

3096
03:49:10,400 --> 03:49:11,680
You think we're actors?

3097
03:49:11,680 --> 03:49:13,080
Thank you.

3098
03:49:14,000 --> 03:49:15,520
Yeah. You

3099
03:49:16,080 --> 03:49:18,320
just put in the effort and,

3100
03:49:18,600 --> 03:49:22,360
you know, it's like, take it seriously
and don't look for shortcuts.

3101
03:49:24,120 --> 03:49:26,120
You're getting a shortcut.

3102
03:49:26,120 --> 03:49:28,480
We kind 100%.

3103
03:49:29,640 --> 03:49:34,240
Hardest question an interview
any question related experience when I was

3104
03:49:34,440 --> 03:49:39,800
I had a one hour interview where there was
they were asking me like on my resume

3105
03:49:39,800 --> 03:49:43,960
and they would go, Oh, this job,
what would your supervisor say about you?

3106
03:49:44,120 --> 03:49:46,320
What was the most interesting bug
you found?

3107
03:49:46,320 --> 03:49:49,920
What would this person say about you
and blah, blah, blah, blah, blah?

3108
03:49:49,920 --> 03:49:52,520
And they went from,
you know, every job on the list.

3109
03:49:52,520 --> 03:49:54,080
They went and asked the same questions.

3110
03:49:54,080 --> 03:49:56,880
And honestly,
I'm not just that imaginative

3111
03:49:57,720 --> 03:50:00,400
I ran out of answers really fast,
and by the end of it I was like,

3112
03:50:00,400 --> 03:50:04,440
Yeah, So like, I think so much will,
you know, we'll let you know.

3113
03:50:04,440 --> 03:50:07,680
I'm like,
you know, how to, like, get all ready.

3114
03:50:07,680 --> 03:50:11,520
Now, there are some interviewers
that they will drill you down.

3115
03:50:11,520 --> 03:50:12,880
I had an interview.

3116
03:50:12,880 --> 03:50:15,040
Oh, he just it was with a developer.

3117
03:50:15,080 --> 03:50:16,760
He just kept asking questions.

3118
03:50:16,760 --> 03:50:18,840
I was like, Oh, Mike,
I don't know what else to say.

3119
03:50:18,840 --> 03:50:21,120
Like, you just kept drilling and drilling.

3120
03:50:21,120 --> 03:50:23,400
And I was like, Oh, now he's like,
But why this?

3121
03:50:23,520 --> 03:50:25,440
But why would you do this?
Why would you do that?

3122
03:50:25,440 --> 03:50:27,840
And I'm like, Oh my God. Like,
I don't know what I'll say.

3123
03:50:27,840 --> 03:50:29,440
I just want to, like,
shut down the computer.

3124
03:50:29,440 --> 03:50:31,080
I'm like, I'm done.

3125
03:50:31,080 --> 03:50:34,360
Yeah, They'll be those interviews
when you're like, Can

3126
03:50:34,360 --> 03:50:35,720
we just stop this thing?

3127
03:50:35,720 --> 03:50:38,360
Do we have like, it's
obviously not a good fit.

3128
03:50:38,400 --> 03:50:40,160
Let's just wrap it up.

3129
03:50:40,160 --> 03:50:42,720
But yeah, it's,
it's all, it's all experience.

3130
03:50:44,360 --> 03:50:46,320
So from what I heard, if you

3131
03:50:46,320 --> 03:50:50,800
to get into like Amazon or Google
or all those, you know, like

3132
03:50:51,120 --> 03:50:54,640
big companies, they'll be grilling you
with experience and everything.

3133
03:50:54,640 --> 03:50:58,840
So just be you of that
if you're good in your feed.

3134
03:50:59,160 --> 03:51:03,920
Yeah quick on your feed your music sounds

3135
03:51:12,200 --> 03:51:13,160
so I'm fine

3136
03:51:13,160 --> 03:51:16,360
No I think I'm okay from what It's me.

3137
03:51:16,360 --> 03:51:18,960
I have friends that have done this before

3138
03:51:19,680 --> 03:51:22,880
and they actually went
with to six years of experience.

3139
03:51:22,880 --> 03:51:26,680
So I did talk to them prior to me
putting the experience on my résumé.

3140
03:51:28,560 --> 03:51:31,240
So I think I, for myself I did,

3141
03:51:31,360 --> 03:51:35,320
I chose a good amount of years
of experience because sometimes, you know,

3142
03:51:35,360 --> 03:51:38,440
the more you have, it all depends
how you feel about your knowledge.

3143
03:51:38,440 --> 03:51:42,560
You know, if you feel like you're
very strong, go for it, you know?

3144
03:51:42,560 --> 03:51:44,640
But at the same time,
you're always going to learn.

3145
03:51:44,960 --> 03:51:48,720
So even if you put two, three, four
or five years of experience,

3146
03:51:48,720 --> 03:51:49,920
there's always learning involved.

3147
03:51:49,920 --> 03:51:53,880
So don't afraid of, you know,
how many years you put on your resume,

3148
03:51:54,760 --> 03:51:57,800
but then a good chances that, you know,
even if you put like four

3149
03:51:57,800 --> 03:52:01,560
years of experience,
they're still seeing you as a very kind of

3150
03:52:01,560 --> 03:52:05,360
junior person because four years of
experience is not that much

3151
03:52:11,280 --> 03:52:13,680
because, like,
you'll be working side by side with guys

3152
03:52:13,680 --> 03:52:16,720
who've been there, like for 20 years
or more than that

3153
03:52:18,280 --> 03:52:20,600
and it'll be like pretty obvious

3154
03:52:20,600 --> 03:52:22,800
where, you know, we're 20
and we're four is

3155
03:52:29,240 --> 03:52:31,520
you guys ask me the,

3156
03:52:31,520 --> 03:52:32,280
can these students

3157
03:52:32,280 --> 03:52:36,000
graduate from university
once they, have three years of experience,

3158
03:52:36,320 --> 03:52:40,800
Then they start to learn the things
that are used in the practical fair.

3159
03:52:40,840 --> 03:52:43,880
So even they have to spend
like three years before they have

3160
03:52:43,880 --> 03:52:50,640
a little bit of practical knowledge.

3161
03:52:50,640 --> 03:52:54,560
Hey, if feel like being a tester,
you know, it's not, you know,

3162
03:52:54,840 --> 03:52:58,200
like kind of a low position from
you have to move

3163
03:52:58,200 --> 03:53:01,040
to move up to manager or developer,
it's it's a

3164
03:53:01,240 --> 03:53:05,360
you know, if you're a good tester,
they'll pay you good money and Yes.

3165
03:53:05,360 --> 03:53:07,280
And you can be working there for 20 years.

3166
03:53:07,280 --> 03:53:08,760
You genuinely love it. And

3167
03:53:10,080 --> 03:53:14,320
why not?

3168
03:53:14,320 --> 03:53:17,960
Do you guys
beam during the night from the day of.

3169
03:53:19,680 --> 03:53:23,840
Yeah, when there was a student.

3170
03:53:23,840 --> 03:53:26,640
No, I didn't have no no one.

3171
03:53:27,720 --> 03:53:30,240
Like I didn't know any programing,
nothing.

3172
03:53:31,040 --> 03:53:34,440
I came from a health care field,
so It was completely different to me.

3173
03:53:34,440 --> 03:53:36,240
Everything. Everything.

3174
03:53:36,240 --> 03:53:39,000
And, you know, you just. Just study.

3175
03:53:39,000 --> 03:53:39,560
Just study.

3176
03:53:39,560 --> 03:53:40,600
That's all I can say.

3177
03:53:40,600 --> 03:53:45,560
Study and I'm I'm in college
for a computer science degree right now.

3178
03:53:45,560 --> 03:53:49,920
And I'm telling you, the way
these guys here give you information,

3179
03:53:49,920 --> 03:53:54,480
the way they teach you, you won't get it
anywhere else because college is a joke.

3180
03:53:54,480 --> 03:53:56,880
And I've said it many times
and they'll say it again

3181
03:53:56,880 --> 03:53:58,680
because the classes I'm taking,

3182
03:53:58,680 --> 03:54:02,720
if I didn't have any knowledge,
you know, from thank you, Oscar

3183
03:54:03,000 --> 03:54:06,400
and other guys, it's in books,
I'd be like, Oh, this isn't for me.

3184
03:54:06,600 --> 03:54:08,400
You know, this is too difficult.

3185
03:54:08,400 --> 03:54:09,520
This is too whatever.

3186
03:54:09,520 --> 03:54:14,280
So I'm seriously
they're doing a great job here.

3187
03:54:14,560 --> 03:54:15,040
They are

3188
03:54:19,720 --> 03:54:20,560
manual testing.

3189
03:54:20,560 --> 03:54:21,360
It's never boring.

3190
03:54:21,360 --> 03:54:23,840
By the way, but

3191
03:54:24,720 --> 03:54:28,400
it can get, you know, pretty late
when you want to code,

3192
03:54:28,880 --> 03:54:30,840
but it's never boring.

3193
03:54:31,520 --> 03:54:34,280
And I'm getting a degree
because their work

3194
03:54:34,280 --> 03:54:36,480
because I don't have any degree.

3195
03:54:36,480 --> 03:54:38,920
I the highest level of education

3196
03:54:38,920 --> 03:54:41,480
I have is high school and

3197
03:54:43,040 --> 03:54:46,920
if already have a bachelor's degree,
you're not going to run into this problem.

3198
03:54:46,920 --> 03:54:48,800
But I've been shut down on interviews

3199
03:54:48,800 --> 03:54:53,080
and recruiter calls where they'd ask me,
Oh, do you have a bachelor's degree?

3200
03:54:53,080 --> 03:54:54,080
It doesn't matter and what?

3201
03:54:54,080 --> 03:54:56,440
And I'd be like,
Oh, I'm working on one right now.

3202
03:54:56,440 --> 03:54:58,680
And they're like,
Oh, so you don't have it? Okay, bye.

3203
03:54:59,160 --> 03:55:01,760
And that's why her

3204
03:55:06,120 --> 03:55:08,000
and maybe down the road,

3205
03:55:08,000 --> 03:55:12,200
yeah, I'll have more opportunities
with, with a degree

3206
03:55:13,240 --> 03:55:15,440
like computer science degree

3207
03:55:15,440 --> 03:55:17,240
that but

3208
03:55:20,120 --> 03:55:20,880
mostly just

3209
03:55:20,880 --> 03:55:25,720
you know, to like to have some bachelor's
degree like to have some kind of higher

3210
03:55:25,720 --> 03:55:33,960
education. Yes.

3211
03:55:34,560 --> 03:55:37,080
Thank you for having us here.

3212
03:55:37,080 --> 03:55:38,880
It's to be on the other side.

3213
03:55:38,880 --> 03:55:39,240
Yeah.

3214
03:55:39,480 --> 03:55:44,400
Worry about studying anymore.

3215
03:55:44,400 --> 03:55:48,160
Just give it a few months
and you'll be visiting next batches

3216
03:55:48,160 --> 03:55:53,280
and giving them, you know,
they'll be on this side of the computer.

3217
03:55:53,280 --> 03:55:53,960
It's fun. Here.

3218
03:55:53,960 --> 03:55:55,400
Come join us

3219
03:56:03,000 --> 03:56:03,600
online, guys.

3220
03:56:03,600 --> 03:56:06,960
If you want,
I can invite some more students and I hope

3221
03:56:08,560 --> 03:56:13,320
this is enough for today.

3222
03:56:13,320 --> 03:56:14,040
Okay,

3223
03:56:16,360 --> 03:56:18,480
Now you're getting us girls
best treatment.

3224
03:56:18,480 --> 03:56:23,360
You know, usually pulling students for you
and everything.

3225
03:56:23,360 --> 03:56:24,720
Don't forget to post the code.

3226
03:56:24,720 --> 03:56:32,720
Oh, yeah. Her.

3227
03:56:32,720 --> 03:56:34,400
All right, Veronica already.

3228
03:56:34,400 --> 03:56:39,520
And I thank you so much for joining us.

3229
03:56:39,520 --> 03:56:41,760
Thank you, guys.
Thank you, guys. A lot of fun.

3230
03:56:42,880 --> 03:56:43,280
Yeah.

3231
03:56:43,280 --> 03:56:44,960
Good luck on your journey.

3232
03:56:44,960 --> 03:56:50,440
And please study you guys a lot.

3233
03:56:50,440 --> 03:56:51,120
All right.

3234
03:56:51,920 --> 03:56:52,440
Thank you.

3235
03:56:52,440 --> 03:56:53,760
Good weekend.

3236
03:56:54,960 --> 03:56:57,400
Hey, guys.
