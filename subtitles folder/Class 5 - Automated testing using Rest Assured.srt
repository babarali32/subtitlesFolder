1
00:00:32,480 --> 00:00:33,360
Hey, guys.

2
00:00:33,360 --> 00:00:38,280
So before I'd back before selenium,
this dingy timber

3
00:00:38,760 --> 00:00:42,240
gate database, Jenkins thread,
all of these things.

4
00:00:43,560 --> 00:00:45,560
Remember, one thing here is

5
00:00:45,560 --> 00:00:48,760
you need a basic essence,

6
00:00:48,760 --> 00:00:49,720
right?

7
00:00:49,760 --> 00:00:52,320
No. You can do anything.

8
00:00:52,320 --> 00:00:55,120
So that is your Java.

9
00:00:55,800 --> 00:01:01,360
Without Java, your framework is selenium
distended tuber.

10
00:01:01,360 --> 00:01:04,280
A vague doesn't make any sense.

11
00:01:04,680 --> 00:01:07,080
So first, take Java.

12
00:01:07,680 --> 00:01:10,520
This is for Nancy.

13
00:01:10,520 --> 00:01:14,000
In Java also,
there are a lot of topics available.

14
00:01:14,040 --> 00:01:14,760
Create.

15
00:01:14,760 --> 00:01:16,640
Now you might get confused.

16
00:01:16,640 --> 00:01:18,280
Where to start?

17
00:01:18,280 --> 00:01:20,760
What to take first, what not to dig.

18
00:01:20,760 --> 00:01:23,040
For something like this

19
00:01:24,000 --> 00:01:24,600
file.

20
00:01:25,960 --> 00:01:32,760
So in this manner, in this manner, read.

21
00:01:33,080 --> 00:01:33,920
What do you have to do?

22
00:01:33,920 --> 00:01:37,560
Basically, if you have this complete

23
00:01:37,560 --> 00:01:42,160
java in print of you
prior to today's the topics, for example,

24
00:01:43,000 --> 00:01:47,480
for example,
you take your hosting and modifiers.

25
00:01:48,120 --> 00:01:51,840
Then you take your maybe loops,
complete them.

26
00:01:52,320 --> 00:01:56,600
Then maybe you take your concept completed

27
00:01:56,640 --> 00:02:02,400
and then take your collection complete
and then take exception handling computer.

28
00:02:02,760 --> 00:02:04,920
Fine.

29
00:02:05,080 --> 00:02:08,680
Now, these are
these are something your connections,

30
00:02:09,360 --> 00:02:11,680
the concept, the loop,

31
00:02:12,480 --> 00:02:15,120
your some of the givers, for example,
static

32
00:02:15,480 --> 00:02:19,720
final void
this keyword and you exist modifiers.

33
00:02:20,640 --> 00:02:25,440
If you have if you have these five
six things in your top priority list

34
00:02:25,440 --> 00:02:29,400
from Java, then whatever
the things you're going to learn

35
00:02:29,400 --> 00:02:34,360
in Selenium,
invest in Genki can make sense, right?

36
00:02:34,720 --> 00:02:36,960
Because you see these things
from your eyes, right?

37
00:02:37,000 --> 00:02:41,880
You see if you open your framework, if you
see your selenium, these are new topics.

38
00:02:41,880 --> 00:02:42,800
Every now and then.

39
00:02:42,800 --> 00:02:46,920
Your ability or not,

40
00:02:46,920 --> 00:02:51,080
you're using external keyword,
you're using implements, keyword

41
00:02:51,680 --> 00:02:55,320
grade, you're calling the method,
you're creating the object.

42
00:02:55,480 --> 00:02:58,680
Look on the constructor
to making the constructor.

43
00:02:58,680 --> 00:03:00,080
You're using this keyword,

44
00:03:01,160 --> 00:03:03,360
you're making some of the constants final.

45
00:03:03,560 --> 00:03:09,240
So making some of the methods
static, right?

46
00:03:09,240 --> 00:03:11,280
Like hitting weapon.

47
00:03:11,400 --> 00:03:12,520
So what are those?

48
00:03:12,520 --> 00:03:16,320
These are Java concepts search
you're using right now.

49
00:03:16,480 --> 00:03:21,160
If you keep yourself busy for two weeks
just in program writing,

50
00:03:21,160 --> 00:03:22,520
that will get better.

51
00:03:22,520 --> 00:03:26,920
I need to type in nested for loop
to bring the pyramid.

52
00:03:27,000 --> 00:03:28,320
Trying to.

53
00:03:28,320 --> 00:03:32,840
Does it make sense to spend bullets
Training Logic is good.

54
00:03:33,880 --> 00:03:34,800
I'm not denying.

55
00:03:34,800 --> 00:03:40,480
I'm not saying that even with the null,
prioritize the things and complete

56
00:03:40,480 --> 00:03:43,320
those things
which are on high priority first

57
00:03:44,000 --> 00:03:47,040
and then complete rest of the things

58
00:03:47,040 --> 00:03:47,960
I read.

59
00:03:48,120 --> 00:03:52,000
When you go into the market
and never ask a person things,

60
00:03:52,360 --> 00:03:54,840
they ask things which they need the most.

61
00:03:55,320 --> 00:03:58,800
So we need to understand,
we need to identify the requirement

62
00:03:58,800 --> 00:04:03,320
of the market and whatever market
requires, we have to compare accordingly.

63
00:04:03,840 --> 00:04:04,440
Got it.

64
00:04:04,560 --> 00:04:08,960
For example, it once you go
into the market, people realize this.

65
00:04:08,960 --> 00:04:09,480
But see

66
00:04:10,440 --> 00:04:12,480
Honeywell testing

67
00:04:12,480 --> 00:04:15,200
in your testing raid unit for something.

68
00:04:15,480 --> 00:04:18,120
What is that? Selenium.

69
00:04:18,120 --> 00:04:18,880
So just none.

70
00:04:18,880 --> 00:04:21,800
Selenium, only ten or 11 classes you have,

71
00:04:22,840 --> 00:04:24,920
right? Hardly 11 classes.

72
00:04:24,920 --> 00:04:26,640
You learn selenium.

73
00:04:26,640 --> 00:04:31,640
Basic topics are these rate your driver
park normal driver.

74
00:04:31,640 --> 00:04:34,800
But how you provide correct after there's

75
00:04:34,800 --> 00:04:37,360
some basic commands close click

76
00:04:37,920 --> 00:04:41,640
maximize clear on cookies right then

77
00:04:41,840 --> 00:04:44,600
load words implicit explicit will ever be

78
00:04:45,480 --> 00:04:47,200
you into weight,

79
00:04:47,640 --> 00:04:50,040
then look into strategies on database.

80
00:04:50,040 --> 00:04:54,200
Then select class actions
class window and screenshots.

81
00:04:55,240 --> 00:04:59,280
Click methods, clear
methods and keys JavaScript executor.

82
00:04:59,640 --> 00:05:00,160
There's

83
00:05:01,680 --> 00:05:03,600
Selenium complete.

84
00:05:03,600 --> 00:05:07,720
After selenium you have to
is to make your plane work.

85
00:05:07,800 --> 00:05:12,480
The first test and the second is kick Uber
great looking fine.

86
00:05:12,640 --> 00:05:16,200
You think test uber sounds easy, clean

87
00:05:16,760 --> 00:05:21,120
your java read you
you have java you selenium litigate.

88
00:05:21,240 --> 00:05:23,840
You know you have to but also with you

89
00:05:25,560 --> 00:05:28,080
right just learn cucumber

90
00:05:28,080 --> 00:05:31,680
all the concepts of cucumber
hardly 12 or 13 concepts.

91
00:05:31,680 --> 00:05:35,120
You can learn all of those concepts.

92
00:05:35,360 --> 00:05:37,200
Use them in your living.

93
00:05:37,200 --> 00:05:39,960
This is what you have to do.

94
00:05:43,320 --> 00:05:45,720
That's, that's the strategy
you need to follow.

95
00:05:45,720 --> 00:05:46,440
Based

96
00:05:47,280 --> 00:05:48,880
What do you think about SDLC?

97
00:05:48,880 --> 00:05:50,240
You do this?

98
00:05:50,240 --> 00:05:52,240
How What is standing interest in you?

99
00:05:52,240 --> 00:05:54,600
What you need proves does indeed.

100
00:05:54,600 --> 00:05:58,120
First of all, you don't need main method,
which includes test on attitude,

101
00:05:58,240 --> 00:06:02,600
method, fight in test in auditing
whether one owner the annotations

102
00:06:02,600 --> 00:06:07,720
you need to do this you in a really simple
priority data provider

103
00:06:08,680 --> 00:06:12,720
very very little execution best
and you don't exemplify laziness.

104
00:06:12,760 --> 00:06:14,200
These are the things you need.

105
00:06:14,200 --> 00:06:17,720
Simple is DLC is a manual back, right?

106
00:06:17,720 --> 00:06:19,360
You can take that. You can go with it.

107
00:06:19,360 --> 00:06:24,080
So this is very basic kind of store
on the agenda ceremonies, you know?

108
00:06:24,440 --> 00:06:24,760
Right.

109
00:06:24,800 --> 00:06:27,640
Because this is all about the process
and process.

110
00:06:27,640 --> 00:06:28,320
You must you

111
00:06:31,880 --> 00:06:33,560
I hope
you guys are understanding the point.

112
00:06:33,560 --> 00:06:37,400
What I'm seeing anybody will cover
all of these things in a publish sessions

113
00:06:37,800 --> 00:06:40,440
is because you guys are curious to know,

114
00:06:40,440 --> 00:06:42,360
I'm telling you this

115
00:06:56,520 --> 00:06:58,120
fine guys.

116
00:06:59,240 --> 00:07:02,000
So please start.

117
00:07:02,040 --> 00:07:03,000
Please.

118
00:07:03,160 --> 00:07:05,800
There's the only thing I can see
right as of now,

119
00:07:06,840 --> 00:07:11,160
because I think all instructors
are pushing themselves very hard

120
00:07:11,440 --> 00:07:16,400
to give you the complete knowledge,
to give you every single point from here.

121
00:07:16,680 --> 00:07:21,160
It's your responsibility to understanding,
to gain the things,

122
00:07:21,160 --> 00:07:25,800
to learn the things,
devise the things in the future.

123
00:07:25,800 --> 00:07:29,280
Right?

124
00:07:33,680 --> 00:07:36,200
Just, just watch,
because this is a coding.

125
00:07:36,200 --> 00:07:40,040
But anyway, I'm going to commit everything
in the repository, so just watch.

126
00:07:40,040 --> 00:07:41,640
No issues should support

127
00:07:52,680 --> 00:07:55,040
find Gates.

128
00:07:56,440 --> 00:07:59,640
I hope everyone got
everyone got this part great.

129
00:08:00,840 --> 00:08:02,160
The collections there are

130
00:08:02,160 --> 00:08:04,680
sorry the nodes there in

131
00:08:07,000 --> 00:08:10,680
Jin was about all the four classes of APIs
right

132
00:08:11,320 --> 00:08:19,960
under API.

133
00:08:21,720 --> 00:08:22,480
One more thing.

134
00:08:22,480 --> 00:08:24,000
I wanted to create a module.

135
00:08:24,000 --> 00:08:29,800
You were asking about the touch point
in the sheet in this lately.

136
00:08:29,800 --> 00:08:32,800
If you see those touch points,

137
00:08:32,800 --> 00:08:36,600
if you read the complete line, even touch

138
00:08:36,600 --> 00:08:40,280
point is nothing but end point.

139
00:08:40,280 --> 00:08:41,000
Right?

140
00:08:42,480 --> 00:08:46,840
So even if you ask the question
and you read that line, I think end points

141
00:08:46,840 --> 00:08:51,640
we covered in 20 times in
the class is interface.

142
00:08:52,680 --> 00:08:59,760
What are the end points
in a record or not?

143
00:08:59,760 --> 00:09:02,840
So that point is nothing else,
but it is this end point.

144
00:09:02,880 --> 00:09:04,760
Okay, it is available in the slide.

145
00:09:04,760 --> 00:09:08,640
Also, if you're reading this slide,
if you read the complete line,

146
00:09:08,800 --> 00:09:10,520
you will get the end of the itself

147
00:09:12,600 --> 00:09:13,240
file.

148
00:09:14,160 --> 00:09:18,040
So now the last class

149
00:09:39,160 --> 00:09:42,280
in last class we covered

150
00:09:54,880 --> 00:10:00,320
100 days.

151
00:10:00,880 --> 00:10:03,800
So in the last class we started from

152
00:10:04,800 --> 00:10:06,400
it, we covered the first topic.

153
00:10:06,400 --> 00:10:07,560
What was that

154
00:10:11,120 --> 00:10:21,160
in most common?

155
00:10:21,160 --> 00:10:24,280
Yes, as correct.

156
00:10:24,280 --> 00:10:25,200
Correct.

157
00:10:25,880 --> 00:10:29,400
To tell me to run the collection.

158
00:10:29,920 --> 00:10:30,840
To run the collection.

159
00:10:30,840 --> 00:10:32,520
What we have to do

160
00:10:41,640 --> 00:10:42,560
created first.

161
00:10:42,560 --> 00:10:44,600
Amazing. Amazing.

162
00:10:45,160 --> 00:10:48,400
We already have a collection
in which we are already added.

163
00:10:48,600 --> 00:10:50,840
We have already ended last request. Right?

164
00:10:51,240 --> 00:10:53,680
So here to run the collection,
simply go there.

165
00:10:53,680 --> 00:10:58,240
Say the eight regions
after setting the entry rate check whether

166
00:10:58,240 --> 00:11:03,200
you want to resume the cookies or not,
and then simply run it. But.

167
00:11:03,720 --> 00:11:07,880
But when you run it, when you run it,
it gives you one post.

168
00:11:08,240 --> 00:11:09,440
It gave you one.

169
00:11:09,440 --> 00:11:10,320
And what is this?

170
00:11:10,320 --> 00:11:13,080
This request doesn't have an is

171
00:11:14,240 --> 00:11:17,480
like this request doesn't even exist.

172
00:11:17,800 --> 00:11:20,040
But we will discuss

173
00:11:20,560 --> 00:11:23,800
now after that if we want to run,

174
00:11:24,240 --> 00:11:29,240
are able to request across
multiple environments

175
00:11:29,240 --> 00:11:33,160
such as queuing, such as development,

176
00:11:34,200 --> 00:11:37,640
such as staging in one.

177
00:11:37,640 --> 00:11:40,160
If I have to execute

178
00:11:40,560 --> 00:11:44,120
my API request
or all of these environments

179
00:11:44,520 --> 00:11:49,840
and I have 1000 was in my post
when I should not pass any.

180
00:11:49,880 --> 00:11:54,600
You want to do any environment imposed
when hardcoded in.

181
00:11:54,960 --> 00:11:59,840
Instead, what I can do is
I can select any particular in line with

182
00:11:59,880 --> 00:12:01,880
and from right in one word I can start

183
00:12:03,240 --> 00:12:04,000
cutting

184
00:12:07,920 --> 00:12:08,160
that.

185
00:12:08,160 --> 00:12:11,040
In one word I can start one. So there.

186
00:12:11,280 --> 00:12:14,800
Then we have to select environment back

187
00:12:18,960 --> 00:12:21,160
environment and create

188
00:12:21,160 --> 00:12:21,960
environment.

189
00:12:21,960 --> 00:12:24,240
Then we can provide initial value

190
00:12:25,000 --> 00:12:30,520
first variable,
then we provide some initial value

191
00:12:31,560 --> 00:12:34,200
and then some final. Then

192
00:12:34,720 --> 00:12:37,320
these are the things employed,
correct variable

193
00:12:37,320 --> 00:12:41,240
initial final categories for environment.

194
00:12:41,240 --> 00:12:45,360
And then and then we pass this variable

195
00:12:45,520 --> 00:12:48,480
in our API request in our base.

196
00:12:48,480 --> 00:12:50,680
You are right, we pass this variable.

197
00:12:50,680 --> 00:12:53,960
So to parse this variable in our base,
you are right

198
00:12:54,360 --> 00:12:56,560
how we are crude trace how we can pass

199
00:12:59,760 --> 00:13:02,640
the currently initial in the exact key

200
00:13:03,200 --> 00:13:06,080
we have to provide in this

201
00:13:08,160 --> 00:13:12,000
variable need.

202
00:13:12,000 --> 00:13:16,720
Groups like this.

203
00:13:16,720 --> 00:13:17,520
Like this.

204
00:13:17,520 --> 00:13:22,680
Correct.

205
00:13:22,680 --> 00:13:25,520
You saw what

206
00:13:25,920 --> 00:13:27,200
was it needed

207
00:13:27,200 --> 00:13:37,000
actually,

208
00:13:37,000 --> 00:13:39,000
I thought this is encapsulation, huh?

209
00:13:40,680 --> 00:13:43,560
And okay,

210
00:13:44,200 --> 00:13:46,480
I thought you are trying
to cover something

211
00:13:47,200 --> 00:13:50,480
and you're showing reference or that

212
00:13:50,480 --> 00:13:52,160
encapsulation

213
00:13:54,280 --> 00:13:57,000
is sending to someone with my name.

214
00:13:57,000 --> 00:14:11,280
See people in no, in my engineering.

215
00:14:11,280 --> 00:14:16,560
When I was doing my engineering,
I used to study in news to correct it.

216
00:14:16,560 --> 00:14:18,960
None of them really.

217
00:14:18,960 --> 00:14:20,880
I used to study in used current.

218
00:14:20,880 --> 00:14:22,560
What is the meaning of induced content?

219
00:14:22,560 --> 00:14:25,280
You know what is produced content

220
00:14:26,240 --> 00:14:28,400
which you generally produce?

221
00:14:28,400 --> 00:14:30,520
The another term is induced content.

222
00:14:30,520 --> 00:14:32,480
It comes from induction.

223
00:14:32,480 --> 00:14:33,280
What does it mean?

224
00:14:33,280 --> 00:14:36,160
Simply
if you put two cohorts together rate

225
00:14:36,680 --> 00:14:38,960
do not together at a certain distance

226
00:14:39,480 --> 00:14:42,080
and you related content in one broad

227
00:14:42,080 --> 00:14:46,040
this talk started
automatically getting charged line

228
00:14:46,040 --> 00:14:50,880
because current has been in
used in this chart in this particular road

229
00:14:51,120 --> 00:14:54,600
because of the presence of current
in this or in electronics.

230
00:14:54,840 --> 00:14:58,200
This is what we call a coupling induction

231
00:14:59,680 --> 00:15:05,280
induction and the unit is
a Henry Inductance unit is Henry.

232
00:15:05,280 --> 00:15:09,240
I used to study this in my engineering
days, right in the induced grind.

233
00:15:09,840 --> 00:15:12,400
So here I see that induced current

234
00:15:13,840 --> 00:15:16,440
producing in someone

235
00:15:16,440 --> 00:15:19,800
because of their someone else is charging
automatically in the class.

236
00:15:20,680 --> 00:15:22,680
The phenomenon induction is going on years

237
00:15:27,160 --> 00:15:27,520
late.

238
00:15:27,520 --> 00:15:31,760
One started other will under
that will automatically start

239
00:15:33,040 --> 00:15:34,320
induction.

240
00:15:34,320 --> 00:15:44,800
Nice place.

241
00:15:44,800 --> 00:15:47,160
Well I don't know are like your name.

242
00:15:47,240 --> 00:15:51,360
Exactly exactly induction the best example

243
00:15:52,120 --> 00:16:00,680
if you start a rule
I would always liked his any day.

244
00:16:00,680 --> 00:16:05,840
Fine so now now read me
and we add variables

245
00:16:08,160 --> 00:16:12,080
we would the to add variables like this

246
00:16:13,040 --> 00:16:17,520
also also in the in mind
rank in the environment.

247
00:16:17,520 --> 00:16:18,600
After environment.

248
00:16:18,600 --> 00:16:24,560
We add another thing.

249
00:16:24,560 --> 00:16:27,800
After the environment we added global

250
00:16:27,800 --> 00:16:28,680
variable

251
00:16:31,440 --> 00:16:32,840
be global

252
00:16:32,840 --> 00:16:39,320
minimum rate.

253
00:16:39,320 --> 00:16:42,680
So why why we added right here
global variables Gates

254
00:16:52,000 --> 00:16:54,120
or in point rate.

255
00:16:54,120 --> 00:16:59,280
We have a lot in points in the API right
now we are dealing with enter endpoints.

256
00:16:59,280 --> 00:17:02,400
It is totally fine,
but when you go into the industry there,

257
00:17:02,400 --> 00:17:03,080
for example,

258
00:17:03,080 --> 00:17:07,440
if you are working with some company
like FedEx or you working with the company

259
00:17:07,440 --> 00:17:12,800
like Blue Dart, right, or like GDC,
So these companies rate books with orders,

260
00:17:13,880 --> 00:17:15,760
specific order numbers,

261
00:17:15,760 --> 00:17:18,240
rate of specific warehouse number

262
00:17:19,240 --> 00:17:24,920
should should been number
should add processing time, lot of things.

263
00:17:24,920 --> 00:17:25,160
Right.

264
00:17:25,160 --> 00:17:29,600
So for every single thing,
they have a separate endpoints there.

265
00:17:29,600 --> 00:17:32,960
Then you don't have to write
these endpoints again and again.

266
00:17:32,960 --> 00:17:36,080
And if you want to use
all of these endpoints in your API test,

267
00:17:36,080 --> 00:17:39,360
even 4000 names,
you can simply call those keys.

268
00:17:39,360 --> 00:17:42,560
And next time, if someone is going
to migrate some endpoint

269
00:17:42,560 --> 00:17:46,480
from one to another value,
you don't need to change it 1000 places.

270
00:17:46,680 --> 00:17:50,000
It's simply like passing the baton,
the script, right?

271
00:17:50,360 --> 00:17:51,720
So you pass,

272
00:17:51,720 --> 00:17:56,120
you define the value in one place and then
you provide the key to all the places.

273
00:17:56,360 --> 00:18:01,320
So in this is what we are passing is the
key and the vendor we are providing there.

274
00:18:01,520 --> 00:18:05,720
So if we change the value in one place,
wherever we are provided bank key,

275
00:18:06,000 --> 00:18:09,000
it's going to be put there right?

276
00:18:09,000 --> 00:18:18,960
So in global variables we define the endpoints, we define points, make sense case

277
00:18:25,160 --> 00:18:28,560
Phi Phi

278
00:18:28,600 --> 00:18:31,560
after endpoints in global variable,
we are done.

279
00:18:31,880 --> 00:18:35,720
We call both environment and endpoints

280
00:18:35,720 --> 00:18:42,600
in our script, in our base,
you are here in global variables.

281
00:18:42,600 --> 00:18:43,920
We defined one more thing.

282
00:18:43,920 --> 00:18:50,640
What is third?

283
00:18:50,640 --> 00:18:52,800
Yes, we define

284
00:19:00,720 --> 00:19:03,040
JSON with the right

285
00:19:03,360 --> 00:19:06,520
and the value of the JSON can be
provided is

286
00:19:08,760 --> 00:19:09,680
better

287
00:19:10,360 --> 00:19:11,600
space.

288
00:19:11,600 --> 00:19:14,560
And then whatever
the value from this book,

289
00:19:15,840 --> 00:19:18,240
that's how we provided the value better

290
00:19:18,440 --> 00:19:21,120
space to contain JWT.

291
00:19:22,520 --> 00:19:25,440
JWT eight.

292
00:19:25,560 --> 00:19:27,000
So this time

293
00:19:27,000 --> 00:19:30,600
we don't have to parse specifically
from the authorization.

294
00:19:31,040 --> 00:19:34,320
Then we go, we select from the dropdown
return to content.

295
00:19:34,320 --> 00:19:35,440
We provide the value.

296
00:19:35,440 --> 00:19:41,560
No, this time we went to this
Under headers we provide 1.1 day.

297
00:19:41,600 --> 00:19:46,640
What is that one header employed
to go ready to convert executor

298
00:19:48,000 --> 00:19:48,880
or commission?

299
00:19:48,880 --> 00:19:53,040
No authorization plate is authorization.

300
00:19:53,040 --> 00:19:58,720
We provide an authorization
We passed with double welcome embraces.

301
00:19:59,040 --> 00:20:02,400
We pass JWT

302
00:20:02,400 --> 00:20:05,160
just exactly we passed JWT.

303
00:20:05,720 --> 00:20:06,360
Great.

304
00:20:06,600 --> 00:20:10,240
So in one week Global variables

305
00:20:11,000 --> 00:20:14,640
authorization body responds good.

306
00:20:14,640 --> 00:20:18,480
Everything is done
but still one thing is pending work

307
00:20:18,480 --> 00:20:20,960
is that one thing is binding.

308
00:20:21,600 --> 00:20:23,040
There is

309
00:20:34,800 --> 00:20:35,640
verification

310
00:20:35,640 --> 00:20:39,960
and validation rate
and you need to agree to contribute.

311
00:20:39,960 --> 00:20:41,760
Well, how would you do it works.

312
00:20:41,760 --> 00:20:44,440
So you do the your token is valid for it.

313
00:20:44,440 --> 00:20:46,480
My application will be working.

314
00:20:47,080 --> 00:20:47,600
It will.

315
00:20:47,600 --> 00:20:50,640
It's 90 minutes 80, 90 minutes.

316
00:20:51,000 --> 00:20:52,920
So there is a session for 90 minutes.

317
00:20:52,920 --> 00:20:54,960
You have to perform
whatever you want to perform.

318
00:20:54,960 --> 00:20:58,040
The based token would explain
even investing is also

319
00:20:58,640 --> 00:21:01,440
after every 90 minutes
you have updated book.

320
00:21:02,960 --> 00:21:03,360
If you

321
00:21:03,360 --> 00:21:07,240
talk about banking applications, there
you see a token for available

322
00:21:07,240 --> 00:21:12,560
for 30 seconds, 67,
sometimes 2 minutes, sometimes 10 minutes.

323
00:21:12,560 --> 00:21:13,200
Right.

324
00:21:13,200 --> 00:21:17,320
It completely depends on the company's
architecture.

325
00:21:17,320 --> 00:21:21,360
The companies required
how they want Google to be inspired

326
00:21:21,360 --> 00:21:25,240
in how much time, Even for test.

327
00:21:25,240 --> 00:21:26,480
Yes, even for test also.

328
00:21:26,480 --> 00:21:30,000
Because anyway, we have to test
the functionality first before making it,

329
00:21:30,200 --> 00:21:32,880
you know, before deploying
good on to the production rate.

330
00:21:33,120 --> 00:21:36,560
So the same functionality should be tested
if the test.

331
00:21:36,560 --> 00:21:40,080
But by
then we apply for just 5 seconds, right?

332
00:21:40,480 --> 00:21:44,520
Then it doesn't make any sense
what if it had some problem?

333
00:21:44,920 --> 00:21:48,640
We'd never tested pre
so the same functionality

334
00:21:48,640 --> 00:21:50,880
first should be tested
and then on we would

335
00:21:59,600 --> 00:22:00,240
correct.

336
00:22:00,240 --> 00:22:02,280
We can only change in one place.

337
00:22:02,280 --> 00:22:04,120
Exec Fine.

338
00:22:04,120 --> 00:22:05,880
So verification and validation.

339
00:22:05,880 --> 00:22:11,280
But here here in Austrian,
when we talk about verification

340
00:22:11,280 --> 00:22:16,200
and validation for the APIs, most women
use one libraries.

341
00:22:16,720 --> 00:22:20,760
What is that was too many uses one library
which one listed.

342
00:22:21,200 --> 00:22:23,080
So how to deal with that is again token.

343
00:22:24,120 --> 00:22:24,600
This is

344
00:22:24,600 --> 00:22:28,720
a token to perform the specification
that two candidates

345
00:22:28,720 --> 00:22:32,640
one specific completion
and it happens mostly with OTP

346
00:22:32,640 --> 00:22:37,960
but right exactly exactly.

347
00:22:37,960 --> 00:22:39,840
It uses

348
00:22:44,040 --> 00:22:44,640
let's

349
00:22:46,920 --> 00:22:50,160
try a session like the

350
00:22:50,840 --> 00:22:53,360
produce duties do do do

351
00:22:53,440 --> 00:23:05,640
do do kind of song in Bollywood.

352
00:23:05,640 --> 00:23:08,120
My 23rd no my name is 23rd.

353
00:23:08,520 --> 00:23:14,520
Already changed.

354
00:23:14,520 --> 00:23:17,520
Next time we'll be having this page 333

355
00:23:17,600 --> 00:23:19,800
Read the link

356
00:23:21,080 --> 00:23:24,760
33rd of March 3023

357
00:23:34,280 --> 00:23:36,160
by China's Solution

358
00:23:36,160 --> 00:23:39,920
Library for verification and validation
purposes.

359
00:23:40,480 --> 00:23:43,600
Now, by default, it follows which later

360
00:23:43,800 --> 00:23:47,600
by default it follows
which database translation library

361
00:23:48,960 --> 00:23:53,960
it follows.

362
00:23:53,960 --> 00:23:56,400
BGT Right

363
00:23:56,400 --> 00:23:59,880
now it follows BGT

364
00:24:00,160 --> 00:24:02,320
Behavioral

365
00:24:03,640 --> 00:24:10,000
agreements, development

366
00:24:12,040 --> 00:24:18,480
rate is behavior driven.

367
00:24:18,920 --> 00:24:22,480
Would know now

368
00:24:22,560 --> 00:24:25,240
to use this child solution library

369
00:24:25,520 --> 00:24:29,040
for all the verification and validation,
but was right.

370
00:24:29,360 --> 00:24:32,160
We have to use one object in the postman.

371
00:24:32,160 --> 00:24:33,360
What is that object base

372
00:24:34,560 --> 00:24:37,400
Which object we have to use

373
00:24:39,480 --> 00:24:43,560
beam object to to an object we use.

374
00:24:43,840 --> 00:24:46,920
Right. And with this postman object.

375
00:24:46,920 --> 00:24:52,560
With this postman object, we perform all
the operations, Read all the operations.

376
00:24:53,040 --> 00:24:57,920
If I want to verify anything, for example,
status could be XY.

377
00:24:57,920 --> 00:25:02,040
So which language it supports,
Who made the test

378
00:25:02,280 --> 00:25:05,400
that will verify my

379
00:25:05,400 --> 00:25:05,880
status.

380
00:25:05,880 --> 00:25:14,400
Good job with.

381
00:25:14,400 --> 00:25:18,120
I will write JavaScript content

382
00:25:18,120 --> 00:25:20,400
related to JavaScript.

383
00:25:20,640 --> 00:25:21,280
Then.

384
00:25:21,280 --> 00:25:23,600
Then tell me one more thing.

385
00:25:23,600 --> 00:25:27,560
When it comes to writing the script test
in JavaScript

386
00:25:28,200 --> 00:25:32,120
should edit everything from scratch.

387
00:25:32,120 --> 00:25:34,800
How could it have good quality? Yes.

388
00:25:34,800 --> 00:25:38,520
Why not all JavaScript
basically been recovered?

389
00:25:38,520 --> 00:25:40,120
Christian library.

390
00:25:40,120 --> 00:25:45,240
So this associate library by default
based on binary structure.

391
00:25:45,240 --> 00:25:48,160
So it understands the requirement
in terms of the

392
00:25:50,280 --> 00:25:53,120
it understands
the requirement in terms of we.

393
00:25:53,160 --> 00:25:57,320
Okay, now

394
00:25:59,000 --> 00:25:59,760
is this clear?

395
00:25:59,760 --> 00:26:00,600
I show

396
00:26:05,640 --> 00:26:06,960
fine print

397
00:26:06,960 --> 00:26:09,480
so we don't have to write anything
from scratch

398
00:26:09,480 --> 00:26:13,800
when it comes to writing the test
because Faustman allows us to use

399
00:26:14,400 --> 00:26:16,720
already built in snippets.

400
00:26:17,520 --> 00:26:19,520
What are these snippets?

401
00:26:19,520 --> 00:26:23,520
Snippets are simple is to make
JavaScript is to read them.

402
00:26:23,520 --> 00:26:25,800
Over here we just speak to select.

403
00:26:26,280 --> 00:26:31,080
We can change the name of the snippet rate
change of the function we can change

404
00:26:31,080 --> 00:26:35,680
the need, we can change the status code
according to our discipline.

405
00:26:36,080 --> 00:26:40,200
This is the verification validation
we perform based on status code

406
00:26:41,080 --> 00:26:45,160
now is only status code
that we can really play on.

407
00:26:45,160 --> 00:26:52,120
There is something else
also that you can also that you, if loop

408
00:26:53,880 --> 00:26:56,880
is it only a beast or discord

409
00:26:56,880 --> 00:26:57,960
that we

410
00:26:58,640 --> 00:26:59,200
define?

411
00:26:59,200 --> 00:27:01,840
No, we can verify a lot of things.

412
00:27:01,840 --> 00:27:05,680
For example,
a particular screen from the body

413
00:27:05,680 --> 00:27:08,800
such as we provided in the token
particular

414
00:27:08,800 --> 00:27:11,280
value from the body blade

415
00:27:11,960 --> 00:27:15,120
response time we can verify and related

416
00:27:17,200 --> 00:27:18,160
content.

417
00:27:18,160 --> 00:27:23,160
I we can verify and validate
putting any particular key,

418
00:27:23,160 --> 00:27:26,160
we can verify and validate, etc.

419
00:27:26,160 --> 00:27:30,400
So many things we can very, very quickly
along with the strictest code

420
00:27:39,000 --> 00:27:40,320
there is so far so good.

421
00:27:40,320 --> 00:27:41,120
Everyone

422
00:27:51,560 --> 00:27:54,480
read the next thing after
and when really it was.

423
00:27:54,680 --> 00:27:58,280
And the global variable is

424
00:27:59,760 --> 00:28:02,280
where barometer on

425
00:28:10,080 --> 00:28:11,120
right case

426
00:28:11,240 --> 00:28:14,160
query barometer
and but better than what does windows

427
00:28:19,280 --> 00:28:19,560
write?

428
00:28:19,560 --> 00:28:21,920
What is query barometer

429
00:28:31,680 --> 00:28:33,240
basically

430
00:28:33,240 --> 00:28:37,640
to define the complete part
to define the complete address

431
00:28:37,640 --> 00:28:40,240
to meet the complete address we need

432
00:28:40,920 --> 00:28:44,520
but divided by slash or followed by slash.

433
00:28:45,240 --> 00:28:48,880
When we talk about Slash,
when we talk about slash,

434
00:28:48,880 --> 00:28:51,960
simply the parameter comes with slash is

435
00:28:52,960 --> 00:28:56,000
automatically detect,
which is coming with the bug.

436
00:28:56,960 --> 00:29:02,880
For example,
someone says, I live in America.

437
00:29:03,920 --> 00:29:04,640
Fine.

438
00:29:04,800 --> 00:29:06,800
Millions of people living in America.

439
00:29:06,800 --> 00:29:08,240
What's new and

440
00:29:08,760 --> 00:29:11,080
someone says, I live in America.

441
00:29:11,080 --> 00:29:13,000
In New Jersey,

442
00:29:13,440 --> 00:29:14,560
Amazing.

443
00:29:14,640 --> 00:29:16,240
In New Jersey, you're living fine.

444
00:29:16,240 --> 00:29:19,520
But there are hundred thousand people
living in New Jersey, right?

445
00:29:19,680 --> 00:29:23,680
So in America, slash New Jersey

446
00:29:24,560 --> 00:29:26,800
slash work, live like

447
00:29:27,640 --> 00:29:30,640
slash house number 203.

448
00:29:31,320 --> 00:29:33,520
So what is this, 20358?

449
00:29:33,600 --> 00:29:34,880
This is the house number.

450
00:29:34,880 --> 00:29:37,480
What is this would look like? Area?

451
00:29:37,480 --> 00:29:41,640
Which one is the city, New Jersey,
where you trade.

452
00:29:42,000 --> 00:29:46,800
So this slash is creating the back
end to zero tree house.

453
00:29:46,800 --> 00:29:48,960
There are four people.

454
00:29:48,960 --> 00:29:51,480
How many people for you want to meet

455
00:29:51,480 --> 00:29:54,880
only Zima nor silver for the kitchen.

456
00:29:55,080 --> 00:29:56,200
No, you don't do it.

457
00:29:56,200 --> 00:29:58,360
All those orchids for chance.

458
00:29:58,360 --> 00:30:02,160
And the fifth one is
you want to meet on the zero.

459
00:30:02,160 --> 00:30:06,120
So what you see to zero
three question mark

460
00:30:06,640 --> 00:30:18,200
mean is equals to Zima, Right?

461
00:30:18,200 --> 00:30:18,840
Sebastian

462
00:30:20,520 --> 00:30:22,120
added Right.

463
00:30:22,120 --> 00:30:24,200
So this is what we call bot barometer.

464
00:30:24,600 --> 00:30:29,200
Bot simply gives you the existing
one please,

465
00:30:29,400 --> 00:30:33,840
where most people and these
are bunch of information available,

466
00:30:34,600 --> 00:30:38,760
understand this bot barometer
a big scene to the place

467
00:30:38,960 --> 00:30:42,840
where bunch of information is available
and very bad

468
00:30:42,840 --> 00:30:46,800
and we better allows you to filter
the information,

469
00:30:46,800 --> 00:30:50,600
to specify the information,
to get the unique information

470
00:30:50,800 --> 00:30:55,080
based on some unique identity
so that you can bet you can retrieve

471
00:30:55,080 --> 00:31:09,640
a particular information
from that bunch of information, correct

472
00:31:11,000 --> 00:31:17,280
It. Nice nerdy me guys.

473
00:31:17,600 --> 00:31:21,520
So far in this entire EPA class

474
00:31:22,440 --> 00:31:25,680
four classes with
the class is going on with region.

475
00:31:26,160 --> 00:31:29,640
Is there anything that you guys didn't
understand?

476
00:31:30,000 --> 00:31:36,880
Is there anything,

477
00:31:36,880 --> 00:31:39,960
any confusion, any question, any topic

478
00:31:41,080 --> 00:31:56,680
on Speak Up, uh,

479
00:31:58,280 --> 00:32:00,320
city and owner entity?

480
00:32:01,320 --> 00:32:03,360
When are you planning to go
for interviews?

481
00:32:03,360 --> 00:32:04,920
All three of you

482
00:32:14,280 --> 00:32:15,240
submit

483
00:32:16,640 --> 00:32:18,080
this week in

484
00:32:20,320 --> 00:32:21,400
looking

485
00:32:24,600 --> 00:32:26,960
for you, you Angelica,

486
00:32:28,080 --> 00:32:30,760
then you planning to go for that

487
00:32:31,120 --> 00:32:33,320
same Let's

488
00:32:37,560 --> 00:32:38,840
everyone.

489
00:32:38,960 --> 00:32:40,600
Everyone said that you're no exception.

490
00:32:40,600 --> 00:32:41,640
Everyone.

491
00:32:42,480 --> 00:32:45,560
Lauren Sebastian Nice.

492
00:32:45,560 --> 00:32:46,640
Fine guys.

493
00:32:46,640 --> 00:32:48,800
So now let's wrap up the postman

494
00:32:49,480 --> 00:32:51,920
Light nodes are available in canvas.

495
00:32:52,520 --> 00:32:53,160
Right?

496
00:32:53,480 --> 00:32:57,240
This code is available
with every one of you everyone knows

497
00:32:57,240 --> 00:33:00,720
how to work with, say, the document,
how to read the details straight.

498
00:33:01,080 --> 00:33:03,240
Everyone knows what.

499
00:33:03,240 --> 00:33:06,560
Everyone knows what is broken right now.

500
00:33:06,720 --> 00:33:13,240
The same amount of completion,
the same type of process they will do via

501
00:33:13,400 --> 00:33:16,080
automation in the next three classes,

502
00:33:16,360 --> 00:33:20,360
next four classes,

503
00:33:20,360 --> 00:33:21,960
and those properties

504
00:33:25,840 --> 00:33:27,600
modules as I don't do another job,

505
00:33:27,600 --> 00:33:31,280
nor should we be having
the jobs will believe me in post.

506
00:33:31,280 --> 00:33:34,280
When are we going to change
in global environment or when you need

507
00:33:34,320 --> 00:33:38,040
or it will be update
or to know how soon we have to do it?

508
00:33:38,760 --> 00:33:39,440
We have to

509
00:33:40,920 --> 00:33:43,640
because this is the value value
we have to iterate.

510
00:33:43,840 --> 00:33:46,040
That's why
we are switching on to the automation. Now

511
00:33:51,000 --> 00:33:52,960
are using a convert framework, yet

512
00:33:52,960 --> 00:34:00,520
we would use it for that.

513
00:34:00,520 --> 00:34:01,680
All right,

514
00:34:02,640 --> 00:34:03,840
so now

515
00:34:04,480 --> 00:34:04,840
let's

516
00:34:18,160 --> 00:34:19,600
monikered

517
00:34:23,320 --> 00:34:24,160
fine.

518
00:34:24,840 --> 00:34:27,000
So now see

519
00:34:27,360 --> 00:34:28,160
perform.

520
00:34:28,160 --> 00:34:31,720
Many are listing on the UI on website.

521
00:34:32,960 --> 00:34:34,760
You use tools such as JIRA.

522
00:34:34,760 --> 00:34:37,440
When you write this to get this straight,

523
00:34:37,440 --> 00:34:40,640
you use Excel sheet some time,
but you have some discuses.

524
00:34:40,640 --> 00:34:41,480
Go ahead.

525
00:34:41,800 --> 00:34:44,120
That's how you perform manually to

526
00:34:46,400 --> 00:34:50,040
when it comes to automation.

527
00:34:50,040 --> 00:34:52,320
When it comes to automation, you use what

528
00:34:56,120 --> 00:34:57,200
silly

529
00:35:01,680 --> 00:35:03,000
you have to do database.

530
00:35:03,000 --> 00:35:04,520
Also, given

531
00:35:05,320 --> 00:35:06,880
my sequel

532
00:35:09,240 --> 00:35:09,800
to test

533
00:35:09,800 --> 00:35:13,360
my cycle database
manually, you're using one application.

534
00:35:13,360 --> 00:35:27,720
What is that?

535
00:35:27,720 --> 00:35:30,200
My cycle workbench? Maybe.

536
00:35:30,200 --> 00:35:31,800
Or I can

537
00:35:34,120 --> 00:35:34,720
complete

538
00:35:41,040 --> 00:35:43,440
my cycle workbench or I

539
00:35:43,440 --> 00:35:48,160
could test database manually.

540
00:35:48,160 --> 00:35:50,600
You can use anyone like Oracle.

541
00:35:50,600 --> 00:35:53,760
You can use the company
which one day wants you

542
00:35:53,760 --> 00:35:57,320
to test via then.

543
00:35:57,320 --> 00:36:10,800
Then when it comes to automation,
you used work for database.

544
00:36:10,800 --> 00:36:13,840
No, no, no, no.

545
00:36:13,840 --> 00:36:16,920
To perform automation in database,
you use selenium on

546
00:36:18,040 --> 00:36:21,120
a computer.

547
00:36:21,120 --> 00:36:23,760
Intelligent.
This is intelligent, this idea

548
00:36:24,800 --> 00:36:27,400
that is to perform database
testing what you used.

549
00:36:28,320 --> 00:36:31,120
Come on gdb. C connection.

550
00:36:31,120 --> 00:36:33,040
Something like this.

551
00:36:33,400 --> 00:36:35,800
Oh, come on, man is a voodoo

552
00:36:35,800 --> 00:36:39,920
framework.

553
00:36:39,920 --> 00:36:43,120
We use selenium for testing

554
00:36:43,120 --> 00:36:44,720
for automation.

555
00:36:45,640 --> 00:36:46,480
Right?

556
00:36:47,040 --> 00:36:48,160
So here, here.

557
00:36:48,160 --> 00:36:51,680
Do you use selenium for the database
testing automation?

558
00:36:52,080 --> 00:36:57,120
No. In the global framework, there must be
something very intimate framework.

559
00:36:57,120 --> 00:36:59,360
There must be something
you made a connection

560
00:37:00,360 --> 00:37:01,560
with the connection.

561
00:37:01,560 --> 00:37:05,520
Remember this or not
that you provided a username and password.

562
00:37:05,520 --> 00:37:07,560
Your name is a connection.
You are an inability

563
00:37:08,640 --> 00:37:09,920
in content or properties.

564
00:37:09,920 --> 00:37:12,840
You must have updated
that you are all of the network

565
00:37:12,840 --> 00:37:16,200
and then the username, the username,
the password, something like this.

566
00:37:16,520 --> 00:37:19,360
So what you used, who used duty?

567
00:37:19,400 --> 00:37:22,400
Busy connection. Right?

568
00:37:22,400 --> 00:37:25,440
Similarly, this is one layer printing.

569
00:37:25,440 --> 00:37:28,880
This is one layer making this is manual,
but it is automation.

570
00:37:28,880 --> 00:37:31,160
This is many of it is automation.

571
00:37:31,160 --> 00:37:34,000
Now, when we talk about living there,

572
00:37:34,040 --> 00:37:37,000
we have APIs to build, test a base

573
00:37:37,320 --> 00:37:39,840
rate may only be used most often

574
00:37:41,280 --> 00:37:43,200
we use boost win

575
00:37:43,200 --> 00:37:49,880
rate.

576
00:37:49,880 --> 00:37:52,680
Yes, I understand the Austrian, but

577
00:37:53,000 --> 00:37:58,440
so here, here, when we have to test them
via automation, again,

578
00:37:58,440 --> 00:38:01,040
we have to follow something
in the automation that is

579
00:38:03,120 --> 00:38:07,120
Java progressed

580
00:38:09,360 --> 00:38:10,800
assured

581
00:38:21,040 --> 00:38:24,280
Java Restriction API

582
00:38:25,040 --> 00:38:26,480
upgrade things.

583
00:38:27,200 --> 00:38:30,000
This is library Java.

584
00:38:30,000 --> 00:38:34,320
Rest assured API library
we will use understood

585
00:38:34,680 --> 00:38:38,480
to perform automation testing in India.

586
00:38:39,440 --> 00:38:40,160
Player

587
00:38:43,240 --> 00:38:43,960
Is that clear?

588
00:38:43,960 --> 00:38:49,080
Everyone likes what is this?

589
00:38:49,200 --> 00:38:49,760
Java?

590
00:38:49,760 --> 00:38:53,400
Rest assured API basically

591
00:38:54,040 --> 00:38:54,640
remember

592
00:38:54,640 --> 00:38:58,320
we used this to perform
testing on rest of IT services.

593
00:38:58,880 --> 00:38:59,760
All right.

594
00:39:00,600 --> 00:39:03,720
So rest assured.

595
00:39:03,720 --> 00:39:05,040
Yeah. Right.

596
00:39:05,040 --> 00:39:08,680
We will take sort of one we will take
I'm just explaining something right

597
00:39:08,680 --> 00:39:15,240
now. Yes. Yes.

598
00:39:15,920 --> 00:39:17,280
It's library. Right.

599
00:39:17,280 --> 00:39:18,920
So basically it is a part. Right.

600
00:39:18,920 --> 00:39:20,200
In terms of dependency,

601
00:39:20,200 --> 00:39:24,240
we added Java does the Shard library
and then we will use it the way we use

602
00:39:24,240 --> 00:39:28,200
selenium library test in the library,
Kimball Library, we will use Java.

603
00:39:28,360 --> 00:39:30,240
The library also.

604
00:39:30,240 --> 00:39:30,720
Right.

605
00:39:33,800 --> 00:39:36,000
All right.

606
00:39:36,000 --> 00:39:41,280
Relates.

607
00:39:41,280 --> 00:39:43,600
So now now see

608
00:39:45,720 --> 00:39:49,400
here we are talking about

609
00:39:54,640 --> 00:39:57,560
the rest of Web service

610
00:39:59,320 --> 00:39:59,960
using

611
00:40:01,800 --> 00:40:04,520
read list of service.

612
00:40:04,520 --> 00:40:08,440
This this the rest of
web service basically allows

613
00:40:10,200 --> 00:40:13,960
us it allows

614
00:40:28,680 --> 00:40:32,960
data data to be sent in JSON object

615
00:40:33,920 --> 00:40:36,240
this to themselves allows data

616
00:40:36,480 --> 00:40:38,520
to be sent induced an object.

617
00:40:39,240 --> 00:40:44,040
Remember goes content type in header
application slash.

618
00:40:44,040 --> 00:40:51,240
Jason we were sending the body, remember

619
00:40:51,240 --> 00:40:54,120
we were sending the body application
slash JSON, right?

620
00:40:54,520 --> 00:40:57,480
So remember this Jason object

621
00:40:58,280 --> 00:41:00,560
because we are dealing it automation
now, right?

622
00:41:00,720 --> 00:41:04,760
So we have to talk in terms of automation
and there we deal with object

623
00:41:04,760 --> 00:41:06,440
oriented programing language.

624
00:41:06,440 --> 00:41:10,600
So here JSON object, JSON object

625
00:41:12,360 --> 00:41:15,120
consists of

626
00:41:16,480 --> 00:41:21,600
D and value.

627
00:41:21,600 --> 00:41:26,040
Remember redskin value pair
plus name X, y, z, middle name

628
00:41:26,040 --> 00:41:30,280
a missing last name,
but do something like that.

629
00:41:30,280 --> 00:41:31,920
Current key and value.

630
00:41:31,920 --> 00:41:35,280
So here the entire automation

631
00:41:35,280 --> 00:41:39,040
bar will be around this jism object.

632
00:41:39,040 --> 00:41:46,080
From there
we will pass different types of values.

633
00:41:46,080 --> 00:41:48,360
From there
we will buzz different type of values.

634
00:41:48,720 --> 00:41:56,840
I'll read case.

635
00:41:56,840 --> 00:41:57,200
Fine.

636
00:41:58,440 --> 00:42:01,560
So now, now

637
00:42:02,120 --> 00:42:04,000
here we need to

638
00:42:04,000 --> 00:42:07,080
understand a couple of things

639
00:42:10,680 --> 00:42:11,760
When we talk about this.

640
00:42:11,760 --> 00:42:14,240
Rest assured, I remember this.

641
00:42:14,240 --> 00:42:21,120
The rest assured, rest
assured that I did some good.

642
00:42:21,120 --> 00:42:23,040
So that would be great.

643
00:42:23,040 --> 00:42:27,240
Uh, Grace,
we have our framework, human framework.

644
00:42:27,240 --> 00:42:27,840
Great.

645
00:42:29,200 --> 00:42:31,200
We all have our good Google framework.

646
00:42:31,200 --> 00:42:32,600
And you see this

647
00:42:33,240 --> 00:42:42,680
big this framework, big.

648
00:42:42,720 --> 00:43:27,480
This framework is fine.

649
00:43:27,480 --> 00:43:32,160
So now, now when we have
when we have all of these things

650
00:43:32,320 --> 00:43:36,720
right, when we have all of these things
in a framework here, here

651
00:43:36,840 --> 00:43:40,720
we are going to work with the EBAs as you.

652
00:43:41,040 --> 00:43:41,560
Yeah, right.

653
00:43:41,560 --> 00:43:45,440
For this student,
I know you guys have used to train.

654
00:43:45,440 --> 00:43:48,880
I am going to create in these nodes
only here

655
00:43:48,880 --> 00:43:52,680
I'm going to add for the rest assured

656
00:43:55,880 --> 00:43:59,800
what is to show the people

657
00:44:00,080 --> 00:44:03,320
on read Java are just a short API.

658
00:44:03,440 --> 00:44:06,080
We are going to work with this part. Fine.

659
00:44:06,840 --> 00:44:09,600
So remember your

660
00:44:09,600 --> 00:44:10,640
rest assured.

661
00:44:10,640 --> 00:44:12,640
The very first thing which I would do is

662
00:44:16,640 --> 00:44:18,720
to them synthesis

663
00:44:19,400 --> 00:44:22,800
allows data

664
00:44:22,800 --> 00:44:26,160
to be sent in

665
00:44:26,640 --> 00:44:28,680
JSON object

666
00:44:28,720 --> 00:44:31,280
and then here you are, just an object

667
00:44:32,120 --> 00:44:34,160
consist of

668
00:44:34,560 --> 00:44:37,840
key and piece

669
00:44:38,640 --> 00:44:43,080
key in building this case. Now

670
00:44:44,160 --> 00:44:48,440
this rest assured

671
00:44:49,760 --> 00:44:52,800
is the as in what is this

672
00:44:52,800 --> 00:44:55,200
DSL based in this transport

673
00:44:55,800 --> 00:44:58,560
domain in a specific language,

674
00:44:59,760 --> 00:45:02,680
public domain is specific language.

675
00:45:03,840 --> 00:45:05,160
Remember,

676
00:45:05,520 --> 00:45:06,680
we use Google project.

677
00:45:06,680 --> 00:45:12,680
Yes, we are using it Convert project,
the same project you used for distant.

678
00:45:12,920 --> 00:45:16,560
You use particular one,
the same project you use for database,

679
00:45:16,560 --> 00:45:19,160
the same project
we are using for API. SVM.

680
00:45:19,800 --> 00:45:25,200
This is what we call one project performs
all kinds of testing your API, testing

681
00:45:25,400 --> 00:45:28,480
your printing,
testing the back, testing everything

682
00:45:28,480 --> 00:45:34,800
from just one particular project.

683
00:45:34,800 --> 00:45:40,440
Finally.

684
00:45:40,440 --> 00:45:40,800
Right.

685
00:45:40,920 --> 00:45:43,560
So when you go to the company also, right,

686
00:45:43,680 --> 00:45:46,920
you did this
kind of projects work in single framework.

687
00:45:46,920 --> 00:46:01,560
You'll be having all things supported.

688
00:46:01,560 --> 00:46:02,760
Shall we move for the race

689
00:46:06,720 --> 00:46:07,760
now? What is this?

690
00:46:07,760 --> 00:46:11,720
The rest assured, basically when we talk
about rest assurance, what is this?

691
00:46:11,720 --> 00:46:17,240
Rest assured, remember these is on Java.

692
00:46:17,560 --> 00:46:19,800
This is a Java based

693
00:46:20,960 --> 00:46:23,960
Java based library.

694
00:46:23,960 --> 00:46:28,200
Library to be used to automate,

695
00:46:28,760 --> 00:46:30,800
to want to link

696
00:46:32,200 --> 00:46:33,560
it. Use

697
00:46:33,880 --> 00:46:39,360
Javabayes libraries to automate recipes.

698
00:46:39,360 --> 00:46:40,920
Understood this

699
00:46:48,960 --> 00:46:49,400
fine.

700
00:46:49,400 --> 00:46:51,960
Now the best part is

701
00:46:51,960 --> 00:46:54,080
the best part of this show library.

702
00:46:54,080 --> 00:46:55,160
What is there?

703
00:46:55,600 --> 00:46:56,800
Remember

704
00:46:58,000 --> 00:46:58,800
this java?

705
00:46:58,800 --> 00:47:02,480
Rest assured,
based library by default supports.

706
00:47:02,560 --> 00:47:05,280
But the best part is

707
00:47:07,320 --> 00:47:07,600
this.

708
00:47:07,600 --> 00:47:09,440
The rest assured

709
00:47:11,720 --> 00:47:13,200
follows

710
00:47:15,360 --> 00:47:17,280
behavioral

711
00:47:17,640 --> 00:47:18,960
driven

712
00:47:19,480 --> 00:47:20,800
development

713
00:47:22,160 --> 00:47:23,400
approach.

714
00:47:23,840 --> 00:47:24,880
We really approach.

715
00:47:24,880 --> 00:47:27,760
It means even the methods,

716
00:47:28,440 --> 00:47:33,000
even the methods
which we would be using in just a short

717
00:47:33,440 --> 00:47:38,320
it simply gives me the meanings
by default meanings in terms of given

718
00:47:38,320 --> 00:47:41,480
when then and we are very much aware of

719
00:47:41,480 --> 00:47:46,080
even when they are not.

720
00:47:46,080 --> 00:47:48,800
We are very much aware of given when
and then read.

721
00:47:49,400 --> 00:47:50,800
What is the meaning of given

722
00:47:58,200 --> 00:47:58,760
conditions.

723
00:47:58,760 --> 00:48:04,200
See, everyone knows here when we talk
about rest assured, when we talk about

724
00:48:04,200 --> 00:48:09,000
behavioral during development approach,
there must be one precondition.

725
00:48:09,160 --> 00:48:11,880
What is the precondition

726
00:48:12,240 --> 00:48:15,440
before sending the request

727
00:48:15,440 --> 00:48:16,600
in languages? Fine.

728
00:48:16,600 --> 00:48:18,680
And before sending the request.

729
00:48:18,680 --> 00:48:20,840
First we have to make the request.

730
00:48:21,240 --> 00:48:23,600
Not wrong in this final

731
00:48:23,600 --> 00:48:24,960
phase to say send something.

732
00:48:24,960 --> 00:48:27,520
We should have something. Remember?

733
00:48:28,600 --> 00:48:33,120
So before sending the request
first we have to make the request.

734
00:48:33,360 --> 00:48:34,080
Right?

735
00:48:34,080 --> 00:48:36,720
So given means you have to

736
00:48:45,600 --> 00:48:47,000
prepare the request.

737
00:48:47,000 --> 00:48:50,640
So for preparing the request,
we really use one keyword

738
00:48:50,640 --> 00:48:52,080
calling given

739
00:48:56,360 --> 00:48:59,720
really to use one keyword called given

740
00:49:00,120 --> 00:49:01,840
and descriptively one

741
00:49:11,400 --> 00:49:14,680
frame.

742
00:49:14,680 --> 00:49:15,400
Then.

743
00:49:15,920 --> 00:49:17,960
Then next given is when

744
00:49:18,400 --> 00:49:22,800
then means this.

745
00:49:22,800 --> 00:49:24,120
When means

746
00:49:25,480 --> 00:49:27,000
actions.

747
00:49:27,600 --> 00:49:29,760
Right. Actions.

748
00:49:29,760 --> 00:49:31,800
So what is the action we talk about here?

749
00:49:31,800 --> 00:49:35,880
What we are doing grid operations.

750
00:49:35,880 --> 00:49:38,160
We are performing
operations on heart rate study.

751
00:49:39,920 --> 00:49:41,240
It means

752
00:49:41,720 --> 00:49:43,760
we are sending the request rate.

753
00:49:43,760 --> 00:49:45,800
We are performing operation.

754
00:49:45,800 --> 00:49:47,800
So we call it we call it

755
00:49:50,960 --> 00:49:53,760
making the request

756
00:49:53,760 --> 00:49:58,400
or making the call or

757
00:49:59,440 --> 00:50:01,360
it being the end points.

758
00:50:01,360 --> 00:50:04,240
Everything is seen in one way, correct?

759
00:50:05,040 --> 00:50:05,600
Right.

760
00:50:06,040 --> 00:50:08,400
So given simply preparing the request

761
00:50:09,160 --> 00:50:12,600
when means either hitting the end point,
making the request,

762
00:50:12,600 --> 00:50:14,840
making the call and

763
00:50:16,440 --> 00:50:17,880
clear, so far

764
00:50:24,040 --> 00:50:26,080
easy so far, easy days

765
00:50:26,920 --> 00:50:34,120
getting the essence of this, then

766
00:50:35,160 --> 00:50:38,520
what is the meaning of the keyword

767
00:50:42,120 --> 00:50:42,960
result?

768
00:50:42,960 --> 00:50:43,960
Straight.

769
00:50:44,320 --> 00:50:49,440
So here, here, when we talk about result,
what is the result?

770
00:50:49,440 --> 00:50:51,960
Response rate?

771
00:50:52,680 --> 00:50:54,480
What do you call it?

772
00:50:54,480 --> 00:50:55,840
A solution?

773
00:50:56,040 --> 00:50:57,720
Call your colleague.

774
00:50:57,720 --> 00:50:58,560
We can

775
00:50:59,480 --> 00:51:00,320
relate.

776
00:51:01,560 --> 00:51:03,000
Olga, what happened?

777
00:51:03,000 --> 00:51:03,840
Response Call.

778
00:51:03,840 --> 00:51:07,440
Yes. Not only response squad,
but response, you see.

779
00:51:07,680 --> 00:51:10,880
So we perform lot of verifications rate
with response

780
00:51:10,920 --> 00:51:13,960
code, with value in particular
a body, right?

781
00:51:13,960 --> 00:51:18,120
A particular strain
or maybe the dying, how much time it took.

782
00:51:18,640 --> 00:51:20,720
Remember the value of the key.

783
00:51:20,720 --> 00:51:23,400
These are the modification points

784
00:51:23,400 --> 00:51:31,000
we have the inadequacy of current.

785
00:51:31,000 --> 00:51:31,760
Yes. Correct.

786
00:51:31,760 --> 00:51:34,080
So when we talk about assertions
and verifications,

787
00:51:34,080 --> 00:51:37,120
basically in the response,
it covers all the forms.

788
00:51:37,520 --> 00:51:40,000
We can do
some of them for the verification.

789
00:51:40,320 --> 00:51:42,960
We can do all of them
for the verifications and so on.

790
00:51:44,640 --> 00:51:46,520
There is so far good.

791
00:51:46,520 --> 00:51:47,760
We are not doing anything

792
00:51:47,760 --> 00:51:51,480
additional rate by default
if it is supporting the language,

793
00:51:51,840 --> 00:51:55,560
if it is supporting binary approach
and we are waiting, which are we are not

794
00:51:55,760 --> 00:51:59,400
getting improved and it would be very easy
to make a request

795
00:51:59,400 --> 00:52:03,240
or to send a request
or to verify the response rate.

796
00:52:03,480 --> 00:52:08,800
So even Java rest assured API,
Library is nothing like rocket science.

797
00:52:08,880 --> 00:52:16,920
Again, it becomes very easy
for us to handle this particular one.

798
00:52:16,920 --> 00:52:24,840
35 Now, now let's add this part.

799
00:52:25,000 --> 00:52:27,120
Let's add Java. Rest assured,

800
00:52:28,280 --> 00:52:29,320
Java is assured.

801
00:52:29,320 --> 00:52:31,200
We have to edit from here.

802
00:52:31,200 --> 00:52:36,240
We cannot guess which project
we are using.

803
00:52:36,240 --> 00:52:39,000
Guys We are using which project

804
00:52:43,840 --> 00:52:44,520
we are using.

805
00:52:44,520 --> 00:52:47,160
Memon of this is reducing memory

806
00:52:48,520 --> 00:52:49,480
in moment.

807
00:52:49,480 --> 00:52:57,680
If I have to add something
that I should add, come,

808
00:52:59,320 --> 00:53:01,680
we have to add in feature creature point.

809
00:53:01,760 --> 00:53:05,280
We have to any longer to examine first
Java rest assured.

810
00:53:06,160 --> 00:53:06,640
Then we do.

811
00:53:06,640 --> 00:53:10,440
We have Java is to show here for student

812
00:53:17,040 --> 00:53:19,080
when my skill kind is not working in

813
00:53:19,440 --> 00:53:35,840
whatever form

814
00:53:38,840 --> 00:53:41,040
I already loaded.

815
00:53:41,720 --> 00:53:43,600
Fine.

816
00:53:43,600 --> 00:53:47,440
So now to add to add this
java, rest assured.

817
00:53:47,760 --> 00:53:48,120
Right.

818
00:53:48,120 --> 00:53:53,640
Open your exam every month.

819
00:53:53,640 --> 00:53:58,400
Every 100.

820
00:53:58,400 --> 00:54:05,840
Now then we should go.

821
00:54:05,840 --> 00:54:13,120
What risk for

822
00:54:17,760 --> 00:54:18,400
never

823
00:54:19,600 --> 00:54:21,120
repository

824
00:54:21,600 --> 00:54:25,560
open the moment And here right.

825
00:54:25,560 --> 00:54:29,400
Just rest assured appear

826
00:54:29,520 --> 00:54:38,120
Rest assured.

827
00:54:38,120 --> 00:54:40,400
Can you see the first one?

828
00:54:40,480 --> 00:54:43,040
This one green and blank whole gloom.

829
00:54:44,160 --> 00:54:45,640
Rest assured,

830
00:54:46,440 --> 00:54:48,760
Java domain is specific language

831
00:54:48,760 --> 00:54:52,600
for easy testing of rest services like

832
00:54:55,920 --> 00:54:57,040
Click here,

833
00:54:57,520 --> 00:55:00,000
click here.

834
00:55:00,000 --> 00:55:03,360
Take the one having maximum
number of download

835
00:55:05,120 --> 00:55:07,320
this one really 4.4.0 something

836
00:55:08,760 --> 00:55:11,360
in this one.

837
00:55:11,360 --> 00:55:12,800
Take this one

838
00:55:14,880 --> 00:55:16,720
or take 4.4.0.

839
00:55:16,720 --> 00:55:17,760
No issues.

840
00:55:18,200 --> 00:55:19,760
Take this also

841
00:55:21,120 --> 00:55:25,640
basically will restrict in your symbol
file.

842
00:55:25,640 --> 00:55:27,800
Please everyone

843
00:55:33,520 --> 00:55:35,800
has everyone confident based on it here

844
00:55:46,040 --> 00:55:46,760
right now.

845
00:55:46,760 --> 00:55:48,800
Reload your project

846
00:55:50,400 --> 00:55:51,960
added on your project

847
00:55:51,960 --> 00:55:58,240
every month.

848
00:55:58,240 --> 00:55:59,080
Right.

849
00:55:59,280 --> 00:56:02,880
No one is going to tell that this is a
now see

850
00:56:04,440 --> 00:56:09,960
it's adding easily out others.

851
00:56:09,960 --> 00:56:12,280
Come on guys.
We are expecting some errors.

852
00:56:13,200 --> 00:56:14,840
We are expecting some issues.

853
00:56:14,840 --> 00:56:16,960
We are expecting some

854
00:56:18,480 --> 00:56:19,120
expecting.

855
00:56:19,120 --> 00:56:20,640
My mind is not loading.

856
00:56:20,640 --> 00:56:23,000
My mind is not working.

857
00:56:23,000 --> 00:56:26,200
Those kind of messages we used to have,
I really miss those messages.

858
00:56:26,200 --> 00:56:31,520
Now, if you feel shy here, saying to me in

859
00:56:31,520 --> 00:56:34,520
them is to be my birthday text,
I would be more than happy

860
00:56:39,520 --> 00:56:42,920
right? But

861
00:56:49,280 --> 00:56:49,880
right

862
00:56:50,640 --> 00:56:55,680
by no mistakes, correct.

863
00:56:55,680 --> 00:56:59,240
Someone really asked me
this eight by your test

864
00:56:59,240 --> 00:57:02,520
always past my my best guess is doesn't

865
00:57:05,400 --> 00:57:08,040
and I was I was unanswerable

866
00:57:08,320 --> 00:57:12,480
I mean I couldn't answer
I couldn't even speak a single word.

867
00:57:12,480 --> 00:57:16,560
I said, okay, I was like kids.

868
00:57:17,280 --> 00:57:19,840
I said, no,
what should I answer to this question?

869
00:57:20,160 --> 00:57:30,560
I don't give it the answer.

870
00:57:30,560 --> 00:57:31,320
I see.

871
00:57:31,320 --> 00:57:34,880
Big 4.3.3 You are allowed to use that.

872
00:57:34,880 --> 00:57:39,120
When all the noise was made

873
00:57:41,160 --> 00:57:45,480
by. Okay, let's proceed further.

874
00:57:45,640 --> 00:57:46,680
Now here.

875
00:57:46,680 --> 00:57:49,080
If you see, if you observe closely,

876
00:57:49,680 --> 00:57:53,120
you should tell the secret one.

877
00:57:53,120 --> 00:57:54,680
All right. So you see it.

878
00:57:54,680 --> 00:57:58,520
It says it allows data to be sending

879
00:57:58,520 --> 00:58:01,600
JSON object, distant object grade.

880
00:58:01,720 --> 00:58:04,920
It means we have to be in this too

881
00:58:04,920 --> 00:58:08,040
short API Java business to be a library.

882
00:58:08,640 --> 00:58:10,800
We have to deal

883
00:58:11,400 --> 00:58:12,800
with this part.

884
00:58:12,800 --> 00:58:19,400
I think.

885
00:58:19,400 --> 00:58:20,720
Correct. In

886
00:58:21,960 --> 00:58:23,280
you are me and Einstein.

887
00:58:23,280 --> 00:58:24,920
Big guys are understanding you.

888
00:58:24,920 --> 00:58:26,280
I know. I'm telling you this

889
00:58:27,440 --> 00:58:27,880
medium.

890
00:58:27,880 --> 00:58:29,680
Yeah. Just just 3 minutes.

891
00:58:29,680 --> 00:58:31,240
Just three minute.

892
00:58:31,240 --> 00:58:32,600
I will. It is in my mind.

893
00:58:32,600 --> 00:58:36,440
I was about to give you a break in seven,
but then I chose that.

894
00:58:36,440 --> 00:58:39,840
Okay, let's add one more dependencies
and then I will give you the cookie

895
00:58:43,320 --> 00:58:45,480
and not let to wait for a long time.

896
00:58:46,720 --> 00:58:48,000
So now see guys here.

897
00:58:48,000 --> 00:58:51,120
It says List web Services announced data

898
00:58:52,560 --> 00:58:54,720
to be sending JSON object. Right?

899
00:58:54,720 --> 00:58:57,800
So for JSON, also

900
00:58:57,800 --> 00:59:01,000
there is one dependency
that we have to take.

901
00:59:01,000 --> 00:59:05,640
What is that dependency
you go to your again,

902
00:59:06,120 --> 00:59:08,960
never bother to appear JSON

903
00:59:10,920 --> 00:59:13,120
appear just again utilizes JSON

904
00:59:15,840 --> 00:59:16,840
open this json

905
00:59:16,840 --> 00:59:19,280
from user opened this json from

906
00:59:20,160 --> 00:59:23,080
these on
are the emergence availability of see

907
00:59:24,720 --> 00:59:26,760
all the it's available and as you guys

908
00:59:29,520 --> 00:59:32,400
rate maximum number of downloads

909
00:59:33,480 --> 00:59:41,240
the 888 this 120160810

910
00:59:42,680 --> 00:59:48,480
big this 1201608 from 2016.

911
00:59:48,480 --> 00:59:52,040
Yes take this one no issue there doing

912
00:59:52,200 --> 00:59:54,520
if you want to take the origin one
take this one

913
00:59:55,480 --> 00:59:58,160
no issues from December 2021 date one

914
00:59:58,320 --> 01:00:00,040
Also we can take

915
01:00:01,600 --> 01:00:03,480
it. Let's listing the updated one.

916
01:00:03,480 --> 01:00:05,520
Let's take the ability to take this one.

917
01:00:05,520 --> 01:00:06,960
Click on this.

918
01:00:07,440 --> 01:00:11,160
Take the most updated
one 5th of December 2021.

919
01:00:11,160 --> 01:00:13,680
This guy is again Einstein.

920
01:00:13,680 --> 01:00:18,840
Instead of giving a virgin number,
he is giving the date.

921
01:00:18,840 --> 01:00:28,720
Amazing.

922
01:00:28,720 --> 01:00:34,640
Now read Jean. Why?

923
01:00:34,640 --> 01:00:40,440
Why this delayed fun?

924
01:00:41,240 --> 01:00:42,560
No more

925
01:00:46,400 --> 01:00:46,760
damage.

926
01:00:46,760 --> 01:00:49,840
Look good guys.

927
01:00:49,840 --> 01:00:54,560
If you are also having this as the rate
reload your maven project

928
01:00:54,920 --> 01:00:59,360
and then it works how to reload
you see even reload options there

929
01:00:59,360 --> 01:01:02,600
if you're not able to see right click
go do

930
01:01:02,840 --> 01:01:06,720
when you get to an option called reload
project, click on the reload project.

931
01:01:06,720 --> 01:01:11,280
It will work to this part of this here,
click on MAVEN.

932
01:01:11,440 --> 01:01:13,200
Did you see this reload option?

933
01:01:13,200 --> 01:01:14,440
Click on this reload.

934
01:01:14,440 --> 01:01:17,000
It will work on three options.

935
01:01:17,000 --> 01:01:21,000
I tell you, I'm telling you right is
still if you fix any problem

936
01:01:22,080 --> 01:01:24,800
then it's be ready by

937
01:01:28,480 --> 01:01:30,760
what if not eight

938
01:01:30,760 --> 01:01:33,360
then congratulations

939
01:01:33,360 --> 01:01:35,840
on release.

940
01:01:35,840 --> 01:01:38,440
So it's seven six.

941
01:01:38,600 --> 01:01:40,960
Let's take a break for 15 minutes.

942
01:01:40,960 --> 01:01:45,080
Let's connect again at 721
and then we'll start right

943
01:01:45,520 --> 01:01:52,080
for our upcoming topics.

944
01:01:52,080 --> 01:01:55,920
So now, now what I'm going to do is first

945
01:01:56,640 --> 01:01:59,280
I'm going to create

946
01:01:59,840 --> 01:02:03,160
another package under Java

947
01:02:03,160 --> 01:02:05,120
crate, another package under Java

948
01:02:05,120 --> 01:02:08,160
where
I would be dealing with my API stuff.

949
01:02:08,160 --> 01:02:11,400
Okay, so let me create one package here.

950
01:02:11,480 --> 01:02:15,960
Go API.

951
01:02:15,960 --> 01:02:18,600
Now my majority of stuff

952
01:02:19,800 --> 01:02:21,640
I'll be putting under API part.

953
01:02:21,640 --> 01:02:26,800
Okay.

954
01:02:26,800 --> 01:02:29,280
All right, guys.

955
01:02:29,280 --> 01:02:34,280
So we'll create one API package here.

956
01:02:34,280 --> 01:02:37,080
Now, in this package, in this package,

957
01:02:37,440 --> 01:02:40,120
we have to write a couple of things.

958
01:02:40,120 --> 01:02:45,120
For example, preparing the request,
sending the request.

959
01:02:45,720 --> 01:02:46,640
Okay.

960
01:02:47,120 --> 01:02:50,760
Verification of response could find
all these things to be able to write.

961
01:02:50,760 --> 01:02:54,200
But this time, this time
we are not going to rely

962
01:02:54,200 --> 01:02:57,600
only on manual stuff.

963
01:02:57,600 --> 01:03:01,080
Everything we have to define everything.

964
01:03:01,240 --> 01:03:05,280
We have to write
according to the standards of automation.

965
01:03:05,880 --> 01:03:10,400
Okay, So in automation, remember,
automation doesn't do anything on its own.

966
01:03:10,800 --> 01:03:16,080
We have to instruct automation,
and he should do this to that rate.

967
01:03:16,440 --> 01:03:18,600
We have done this to a commission.

968
01:03:18,600 --> 01:03:21,000
So now one by one, one

969
01:03:21,000 --> 01:03:24,560
by one will see
how to write this simple test

970
01:03:25,520 --> 01:03:26,960
rate in automation.

971
01:03:26,960 --> 01:03:29,720
First will write simple test
without kicking over

972
01:03:32,440 --> 01:03:33,160
After this.

973
01:03:33,160 --> 01:03:36,600
Whatever the things we got
from this document Document.write,

974
01:03:36,960 --> 01:03:40,320
we try to glom all these things together
to prepare the request,

975
01:03:40,320 --> 01:03:43,280
to make the request,
and then we'll try to send the request.

976
01:03:44,400 --> 01:03:46,680
Look, now

977
01:03:49,200 --> 01:03:50,000
here,

978
01:03:50,640 --> 01:03:53,480
when we talk about rest assured,

979
01:03:53,480 --> 01:03:55,880
make sure one point

980
01:04:04,280 --> 01:04:05,320
we talk about this.

981
01:04:05,320 --> 01:04:05,960
You are.

982
01:04:05,960 --> 01:04:10,440
I remember.

983
01:04:10,440 --> 01:04:11,280
Remember

984
01:04:11,960 --> 01:04:13,680
now this.

985
01:04:13,680 --> 01:04:15,800
Rest assured

986
01:04:15,800 --> 01:04:16,080
this.

987
01:04:16,080 --> 01:04:20,840
Rest assured, considering your base

988
01:04:20,840 --> 01:04:25,800
you are in post So me guys base
you are Well, we have two points.

989
01:04:25,800 --> 01:04:28,680
What are those two points
based? Your role consist of buildings.

990
01:04:28,680 --> 01:04:35,480
What are those two things?

991
01:04:35,480 --> 01:04:37,960
Let me see what it consists of.

992
01:04:37,960 --> 01:04:40,440
Two things or three
things are having busy.

993
01:04:40,440 --> 01:04:42,640
You are right.

994
01:04:42,720 --> 01:04:44,400
So we have base.

995
01:04:44,400 --> 01:04:45,320
You are right? Yes.

996
01:04:45,320 --> 01:04:49,280
And address of this one
location of the API and endpoints.

997
01:04:49,640 --> 01:04:50,240
Right.

998
01:04:50,400 --> 01:04:53,480
But when it comes to this
you are able only

999
01:04:54,240 --> 01:04:56,720
I have address of the server

1000
01:04:57,720 --> 01:05:00,640
plus API location

1001
01:05:01,280 --> 01:05:03,280
plus API location.

1002
01:05:03,280 --> 01:05:04,440
It makes my base.

1003
01:05:04,440 --> 01:05:07,920
You are going

1004
01:05:09,000 --> 01:05:11,400
if I ask you to show me

1005
01:05:11,400 --> 01:05:14,440
where is my base,
you all tell me various members you are.

1006
01:05:14,960 --> 01:05:16,080
There you go.

1007
01:05:16,800 --> 01:05:19,040
This is my basic order and you see

1008
01:05:21,280 --> 01:05:22,720
basically this is my base.

1009
01:05:22,720 --> 01:05:24,960
You are right

1010
01:05:28,200 --> 01:05:29,880
now make sure

1011
01:05:29,880 --> 01:05:33,440
this point whenever you want,
you work with Java.

1012
01:05:33,440 --> 01:05:35,640
Rest assured API library

1013
01:05:36,720 --> 01:05:41,400
your base you will be considered as

1014
01:05:42,440 --> 01:05:42,880
base.

1015
01:05:42,880 --> 01:05:43,760
You are

1016
01:05:45,320 --> 01:05:49,280
because rest assured understands
this from your base.

1017
01:05:49,280 --> 01:05:51,840
You are a will be considered.

1018
01:05:51,840 --> 01:05:53,800
Is this you?

1019
01:05:53,800 --> 01:05:54,640
What I

1020
01:05:55,760 --> 01:05:56,960
this point

1021
01:06:00,640 --> 01:06:02,360
Now you might ask questions then what?

1022
01:06:02,360 --> 01:06:03,840
What is the point?

1023
01:06:03,840 --> 01:06:06,320
I will open also

1024
01:06:06,320 --> 01:06:09,080
for now consider this point
Make sure this point

1025
01:06:09,080 --> 01:06:11,520
I keep this point in mind your base.

1026
01:06:11,520 --> 01:06:14,760
You all will be
considered as best you are. I

1027
01:06:16,040 --> 01:06:17,880
will look

1028
01:06:23,520 --> 01:06:24,200
fine.

1029
01:06:24,400 --> 01:06:27,240
So now, now here in

1030
01:06:27,600 --> 01:06:31,920
if I ask you right,
if I ask you to prepare anything,

1031
01:06:31,920 --> 01:06:34,560
for example,
let's see the very basic competition.

1032
01:06:35,240 --> 01:06:36,000
Basic one.

1033
01:06:36,000 --> 01:06:38,160
What is the basic one

1034
01:06:41,520 --> 01:06:44,120
in just a short
or to make any API request?

1035
01:06:44,520 --> 01:06:48,560
The really basic operation
is to get one employee

1036
01:06:49,440 --> 01:06:51,120
simplest one.

1037
01:06:52,080 --> 01:06:54,800
Basically,
do we need to create an element of that?

1038
01:06:54,840 --> 01:06:58,800
Again?

1039
01:06:58,800 --> 01:07:00,120
No, we already have it.

1040
01:07:00,120 --> 01:07:04,320
One user we can use that one third,
we can generate a new token.

1041
01:07:04,320 --> 01:07:07,360
We can use their admin user credentials
to generate a new token.

1042
01:07:07,360 --> 01:07:12,160
We can use that right and then get
the one employee is very busy completion.

1043
01:07:12,160 --> 01:07:16,920
We can do it at any point of complete.

1044
01:07:16,920 --> 01:07:19,920
So we'll consider this as a simple test.

1045
01:07:19,920 --> 01:07:24,040
For example, just to test
one simple functionality in on

1046
01:07:24,960 --> 01:07:27,040
Java API,

1047
01:07:27,040 --> 01:07:30,160
we've been trained one simple test
or get one employee,

1048
01:07:30,720 --> 01:07:35,840
so then we test to get one employee
in order to make a request.

1049
01:07:35,840 --> 01:07:43,280
What all are the things we need?

1050
01:07:43,280 --> 01:07:46,440
One by one,
Jimmy One by one. First we need

1051
01:07:51,160 --> 01:07:53,280
you. What I first with you are

1052
01:07:53,880 --> 01:07:59,480
I just said here in Java
rest assured API on your base you are

1053
01:07:59,480 --> 01:08:02,440
I will be considered as your base
You want to play

1054
01:08:03,480 --> 01:08:03,920
right

1055
01:08:04,760 --> 01:08:06,480
with you are considered of this.

1056
01:08:06,480 --> 01:08:08,200
You are clean.

1057
01:08:08,200 --> 01:08:12,080
Then another thing we need is an opponent
because now you're able

1058
01:08:12,080 --> 01:08:13,200
to simply

1059
01:08:17,440 --> 01:08:18,520
read case.

1060
01:08:19,720 --> 01:08:22,680
Then we need items

1061
01:08:23,640 --> 01:08:27,600
basically.

1062
01:08:27,600 --> 01:08:30,520
So that's like in headers
we use to headers.

1063
01:08:30,520 --> 01:08:33,720
One is for token,

1064
01:08:33,720 --> 01:08:37,640
one is for on training.

1065
01:08:37,640 --> 01:08:39,160
Remember guys are not end ups.

1066
01:08:39,160 --> 01:08:43,880
We use authentication authorization under
authorization, we provide durability.

1067
01:08:44,120 --> 01:08:48,040
So obviously we need one more hurdle years
because this is not postman

1068
01:08:48,040 --> 01:08:52,520
where we have separate authorization
and there is an ability

1069
01:08:54,320 --> 01:08:55,040
right?

1070
01:08:55,040 --> 01:08:56,480
We have to be like this.

1071
01:08:56,480 --> 01:08:59,560
So base you are right,
we would need endpoint,

1072
01:08:59,560 --> 01:09:03,400
we would need headers,
we would need token, we would need

1073
01:09:03,600 --> 01:09:05,680
in order to make one request.

1074
01:09:05,680 --> 01:09:08,320
Apart from this,
we would need one more thing.

1075
01:09:08,320 --> 01:09:12,480
What is that?

1076
01:09:12,480 --> 01:09:13,560
We would need

1077
01:09:17,880 --> 01:09:18,280
where

1078
01:09:19,200 --> 01:09:21,920
the parameter right?

1079
01:09:21,920 --> 01:09:23,280
We would need query parameter.

1080
01:09:23,280 --> 01:09:27,600
Also these don't
we need the body or if you see

1081
01:09:27,600 --> 01:09:30,280
get one, employ someone

1082
01:09:31,800 --> 01:09:33,440
so get the client.

1083
01:09:33,440 --> 01:09:37,680
Getting one employ means retrieving
the information from the database.

1084
01:09:37,920 --> 01:09:41,880
So when it comes to retrieving
the information, do we need any word? No.

1085
01:09:42,240 --> 01:09:44,320
We need parameter to specify one.

1086
01:09:44,360 --> 01:09:45,880
The right

1087
01:09:48,960 --> 01:09:52,560
clear.

1088
01:09:52,560 --> 01:09:53,960
Perfect.

1089
01:09:53,960 --> 01:09:54,440
Okay,

1090
01:09:56,760 --> 01:09:59,320
so now, now, in here, let me go

1091
01:09:59,760 --> 01:10:05,360
and let me write this points post.

1092
01:10:05,360 --> 01:10:07,400
Go. Right. Simple.

1093
01:10:08,120 --> 01:10:10,680
Whatever simple to do.

1094
01:10:11,160 --> 01:10:12,680
Get one

1095
01:10:13,320 --> 01:10:15,440
I'm doing get one improving

1096
01:10:15,920 --> 01:10:19,080
like in body when we create

1097
01:10:19,120 --> 01:10:22,280
like normal of smart

1098
01:10:22,280 --> 01:10:25,440
amazing,

1099
01:10:25,440 --> 01:10:28,400
I get one employee, right?

1100
01:10:28,640 --> 01:10:31,200
So in this one employee, we need

1101
01:10:32,760 --> 01:10:34,600
we need busy what are right

1102
01:10:34,600 --> 01:10:38,440
which is equivalent to you are
and then we need a two point

1103
01:10:40,920 --> 01:10:42,720
we need and a point

1104
01:10:42,720 --> 01:10:47,160
after and point
we need to produce some inheritance.

1105
01:10:47,160 --> 01:10:50,000
We need first for token
and second is for marketing.

1106
01:10:50,040 --> 01:10:55,160
They continue to trade
and then we need is ready

1107
01:10:55,560 --> 01:10:57,000
ready to on

1108
01:10:59,400 --> 01:11:03,760
and it goes.

1109
01:11:03,760 --> 01:11:08,040
Things needed.

1110
01:11:08,040 --> 01:11:13,000
Now I just told you,
I just told you that a

1111
01:11:13,040 --> 01:11:18,320
given is the keyword
we would be using to prepare the request.

1112
01:11:18,840 --> 01:11:22,400
It means all these things,
all these things

1113
01:11:22,680 --> 01:11:24,920
we would be using with which keyword

1114
01:11:35,720 --> 01:11:38,080
given keyword right employed.

1115
01:11:38,560 --> 01:11:39,920
Yeah. With which keyboard.

1116
01:11:39,920 --> 01:11:40,920
So query barometer.

1117
01:11:40,920 --> 01:11:44,160
So when you see query better,
we're just simply means employed.

1118
01:11:44,200 --> 01:11:45,520
We will be using

1119
01:11:46,080 --> 01:11:48,720
grade, we will use that
I will tell you the when also

1120
01:11:48,960 --> 01:11:51,920
I just gave you all the components
you would need.

1121
01:11:51,920 --> 01:11:52,480
Right.

1122
01:11:52,480 --> 01:11:55,560
And then then
we will use this particular point.

1123
01:11:56,040 --> 01:11:58,000
So now what I would do first,

1124
01:11:59,040 --> 01:12:03,120
let's create a simple test for API, right?

1125
01:12:03,440 --> 01:12:07,560
So let me go here, right
click and here I'm going to write

1126
01:12:07,920 --> 01:12:11,520
one class and see

1127
01:12:11,520 --> 01:12:13,800
what should be the class name

1128
01:12:21,920 --> 01:12:23,480
hardcoded examples.

1129
01:12:23,480 --> 01:12:24,920
Simple name

1130
01:12:27,320 --> 01:12:29,120
should we follow, you know, memory?

1131
01:12:29,120 --> 01:12:31,080
No, no need to follow.

1132
01:12:31,080 --> 01:12:33,160
So just just observe and enjoy.

1133
01:12:33,520 --> 01:12:39,560
Just observe and enjoy.

1134
01:12:39,560 --> 01:12:42,400
Now, here, here.
You see, when I come right

1135
01:12:43,080 --> 01:12:46,800
in this hardcoded example,
in this hardcoded example.

1136
01:12:47,360 --> 01:12:50,520
Right, we will use simple test.

1137
01:12:50,960 --> 01:12:53,160
So just a moment.

1138
01:12:53,160 --> 01:12:55,240
This advisory came

1139
01:13:10,000 --> 01:13:10,840
first

1140
01:13:12,240 --> 01:13:19,080
with look, not

1141
01:13:27,680 --> 01:13:36,240
should we extend it?

1142
01:13:36,240 --> 01:13:40,160
No, no need to instability.

1143
01:13:40,920 --> 01:13:43,880
Fine. Now in this hardcoded example right.

1144
01:13:43,880 --> 01:13:48,240
Forced liquidated
simple method public void.

1145
01:13:48,240 --> 01:13:51,200
I'm saying the same way

1146
01:13:51,400 --> 01:13:52,600
right based

1147
01:13:54,000 --> 01:13:55,720
simple matter writing

1148
01:13:55,720 --> 01:14:00,080
very simple method correct?

1149
01:14:00,080 --> 01:14:00,760
Correct. Today's

1150
01:14:06,120 --> 01:14:09,040
in. You see this 71

1151
01:14:09,840 --> 01:14:10,560
Fine.

1152
01:14:11,400 --> 01:14:15,200
So now, like I said,
like I said right here,

1153
01:14:15,200 --> 01:14:20,040
remember my value for my value for base.

1154
01:14:20,040 --> 01:14:23,920
You are
and I am going to provide like this

1155
01:14:24,480 --> 01:14:25,360
simple

1156
01:14:27,920 --> 01:14:29,240
my value for base.

1157
01:14:29,240 --> 01:14:29,680
You are.

1158
01:14:29,680 --> 01:14:31,920
I'm going to complete it.

1159
01:14:33,240 --> 01:14:34,520
This is the value for my base.

1160
01:14:34,520 --> 01:14:35,240
You are an honor today.

1161
01:14:35,240 --> 01:14:35,960
Student

1162
01:14:38,280 --> 01:14:39,840
I'm going to provide this base.

1163
01:14:39,840 --> 01:14:43,440
You want to go and see which library

1164
01:14:43,440 --> 01:14:50,000
we are using.

1165
01:14:50,000 --> 01:14:52,760
We are using which libraries

1166
01:14:54,600 --> 01:14:56,760
this to showed or not.

1167
01:14:56,760 --> 01:14:59,040
Let me rest assured.

1168
01:15:00,240 --> 01:15:01,320
Darn.

1169
01:15:02,160 --> 01:15:06,360
Can you see what is the first thing
it is expecting base you on?

1170
01:15:06,360 --> 01:15:09,240
I so this is my base you want I

1171
01:15:10,320 --> 01:15:11,960
nice Can you see

1172
01:15:12,200 --> 01:15:15,600
this is my base
You are rest assured base you are

1173
01:15:19,720 --> 01:15:20,240
great

1174
01:15:21,080 --> 01:15:22,000
right?

1175
01:15:22,840 --> 01:15:25,440
Rest assured don't miss you are right

1176
01:15:25,920 --> 01:15:28,320
since it is returning a string.

1177
01:15:28,560 --> 01:15:32,000
If you see If you see
it is returning the string.

1178
01:15:32,000 --> 01:15:33,560
Let me put it like this.

1179
01:15:33,560 --> 01:15:37,520
GDP pool
it slash chat and extended sticks.

1180
01:15:38,520 --> 01:15:40,920
Put it like this is typical
in the last letter.

1181
01:15:40,920 --> 01:15:44,680
Jordan's index text
or next is less exhibit slash API

1182
01:15:47,400 --> 01:15:51,360
since it is returning a string
I have to use.

1183
01:15:51,600 --> 01:15:54,600
This is string everywhere, right?

1184
01:15:55,200 --> 01:15:57,360
I have to use this, the string everywhere.

1185
01:15:57,680 --> 01:15:59,760
So first I have to store it.

1186
01:15:59,960 --> 01:16:02,280
I have to store it somewhere.
So let's see.

1187
01:16:02,280 --> 01:16:05,600
I'm going to do it in one medieval
constraint base.

1188
01:16:05,800 --> 01:16:08,400
What I think

1189
01:16:10,960 --> 01:16:13,400
is this correct base?

1190
01:16:13,400 --> 01:16:15,520
This rest assured base. You are right.

1191
01:16:16,080 --> 01:16:17,760
I provided one value.

1192
01:16:17,760 --> 01:16:19,560
This value is nothing but my base.

1193
01:16:19,560 --> 01:16:23,000
You are in because my attestation API

1194
01:16:23,160 --> 01:16:26,600
considered my base
you are in and this you are right.

1195
01:16:26,640 --> 01:16:30,680
So I projected and then I see a repayment
variable called base.

1196
01:16:30,680 --> 01:16:33,760
You are for the strings that it can use
everywhere.

1197
01:16:33,880 --> 01:16:35,880
I can use it every everywhere.

1198
01:16:35,880 --> 01:16:37,080
Understood this part, every

1199
01:16:41,800 --> 01:16:43,680
this one understood.

1200
01:16:43,920 --> 01:16:46,320
But now

1201
01:16:50,080 --> 01:16:50,400
what?

1202
01:16:50,400 --> 01:16:52,600
We are preparing the request right

1203
01:16:53,400 --> 01:16:55,680
click
preparing the request to get an English.

1204
01:16:56,840 --> 01:16:59,040
This is what we have to

1205
01:16:59,280 --> 01:17:01,520
get it with idea

1206
01:17:04,440 --> 01:17:07,680
sprawling the base you are

1207
01:17:13,680 --> 01:17:15,840
busy you are to use for that correct

1208
01:17:16,560 --> 01:17:19,320
now preparing the request
to get an employee.

1209
01:17:19,800 --> 01:17:21,000
So here here.

1210
01:17:21,000 --> 01:17:23,840
Remember we have to use

1211
01:17:24,080 --> 01:17:27,360
we have to use the given method.

1212
01:17:27,360 --> 01:17:32,080
So the moment you can given given right

1213
01:17:32,520 --> 01:17:36,480
this given works
always with one part called

1214
01:17:40,160 --> 01:17:41,000
it is in.

1215
01:17:41,000 --> 01:17:45,440
Rest assured we are getting one linguist
specification interface

1216
01:17:46,400 --> 01:17:47,760
and integrate

1217
01:17:57,520 --> 01:17:58,560
this linguistic

1218
01:17:58,560 --> 01:18:01,440
specification
generally given method returns.

1219
01:18:01,800 --> 01:18:03,680
So what given method returns?

1220
01:18:03,680 --> 01:18:07,680
We have to write the part in linguist
specification.

1221
01:18:07,960 --> 01:18:08,720
Okay.

1222
01:18:08,720 --> 01:18:13,360
So here I'm saying this is the request
to working and making.

1223
01:18:13,360 --> 01:18:18,040
So remember what given method returns what
given think what we are doing in given.

1224
01:18:18,040 --> 01:18:18,480
Tell me

1225
01:18:23,400 --> 01:18:23,800
what we

1226
01:18:23,800 --> 01:18:27,040
are doing in given these
No not precondition.

1227
01:18:27,160 --> 01:18:34,600
We are preparing the request,
but now we are preparing the request.

1228
01:18:34,600 --> 01:18:37,360
So if I'm preparing that request in given.

1229
01:18:37,560 --> 01:18:40,800
So what given returns prepared request.

1230
01:18:41,400 --> 01:18:44,640
After preparing the request,
I would be having would particular request

1231
01:18:44,640 --> 01:18:46,760
which is prepared one correct.

1232
01:18:46,760 --> 01:18:49,120
So that request I will save you

1233
01:18:50,400 --> 01:18:52,680
request I will same here in prepared.

1234
01:18:53,400 --> 01:18:55,680
So this request is specification

1235
01:18:55,680 --> 01:18:58,680
generally be used to handle

1236
01:18:58,920 --> 01:19:02,520
the returns
of what we are going to get after

1237
01:19:02,520 --> 01:19:05,520
using
given given in just a short liability.

1238
01:19:06,400 --> 01:19:08,720
So my job should reliably,

1239
01:19:08,760 --> 01:19:13,520
if we using and then I'm using
given given this given given

1240
01:19:13,520 --> 01:19:17,520
I'm using to prepare the request
after completing the request

1241
01:19:17,680 --> 01:19:22,640
this given you would re sends me a request
which is already prepared.

1242
01:19:22,920 --> 01:19:28,520
Now I am going to handle that prepared
request in this video and understood

1243
01:19:30,400 --> 01:19:32,280
understood this case

1244
01:19:34,320 --> 01:19:34,920
file.

1245
01:19:36,000 --> 01:19:39,720
So now here, here we are going to work.

1246
01:19:40,600 --> 01:19:44,400
See it I or not

1247
01:19:44,400 --> 01:19:47,800
rest assured not given imported

1248
01:19:48,920 --> 01:19:52,080
the moment imported See it is asking

1249
01:19:52,080 --> 01:19:56,400
What do you want Header You want body
you want request.

1250
01:19:56,760 --> 01:19:58,240
What do you want? Right.

1251
01:19:58,240 --> 01:20:00,720
So we need we always tell me this.

1252
01:20:00,720 --> 01:20:02,000
You are right. Right.

1253
01:20:02,000 --> 01:20:06,400
We already we will put this
You are to be able to correct

1254
01:20:07,800 --> 01:20:10,800
asking
you see we are using it to share with you

1255
01:20:10,800 --> 01:20:14,720
and I already here
it is asking for header.

1256
01:20:15,600 --> 01:20:24,080
So what is the first hurdle we used
was to base what was the first train of

1257
01:20:25,960 --> 01:20:27,320
content? Great.

1258
01:20:27,320 --> 01:20:31,560
So let me write exactly the way
we right there.

1259
01:20:31,840 --> 01:20:35,000
We have great content tape
like this, the same spreading

1260
01:20:35,640 --> 01:20:38,360
and then the value should be the

1261
01:20:39,280 --> 01:20:41,680
ability should slash to

1262
01:20:44,080 --> 01:20:47,680
applications to some great

1263
01:20:48,720 --> 01:20:49,200
students.

1264
01:20:49,200 --> 01:21:23,040
Is this correct?

1265
01:21:23,040 --> 01:21:27,840
Now now another header, another header
which I have to use is what

1266
01:21:28,920 --> 01:21:31,080
another individual to use case
what is required of

1267
01:21:33,960 --> 01:21:34,840
authorization?

1268
01:21:34,840 --> 01:21:36,520
Is it sensitive? Yes, sir.

1269
01:21:36,520 --> 01:21:38,680
The value should be seen.

1270
01:21:38,680 --> 01:21:42,000
Then again,
I'm going to put alternative right again.

1271
01:21:42,000 --> 01:21:43,880
I'm going to put our in here.

1272
01:21:43,880 --> 01:21:47,320
Let me just skip to this point
so that you can see in multiple

1273
01:21:48,320 --> 01:21:51,840
so the value should be authorized.

1274
01:21:51,840 --> 01:21:56,320
This should be the value
authorization, comma, the value.

1275
01:21:56,480 --> 01:22:00,800
So what should be the value beta space?

1276
01:22:00,800 --> 01:22:03,840
Should I generate a new know conveys

1277
01:22:12,440 --> 01:22:14,640
So generate a new token from here.

1278
01:22:14,640 --> 01:22:18,720
Go generate this token.

1279
01:22:18,720 --> 01:22:20,240
We got this new token basis.

1280
01:22:20,240 --> 01:22:22,160
So I'm taking a new token.

1281
01:22:22,160 --> 01:22:24,280
Again, I am defining the point.

1282
01:22:24,600 --> 01:22:30,040
I got a couple of issues today
where people were trying exist, right?

1283
01:22:30,120 --> 01:22:32,480
The request with older token.

1284
01:22:33,080 --> 01:22:36,480
So please don't do it
because the validation

1285
01:22:36,680 --> 01:22:39,600
by big time offered token is just last.

1286
01:22:40,160 --> 01:22:42,720
So with the new token, everything

1287
01:22:45,640 --> 01:22:46,880
now now

1288
01:22:46,880 --> 01:22:49,840
here I'm going to provide this value
of token.

1289
01:22:51,720 --> 01:22:53,400
This value of token

1290
01:22:53,400 --> 01:22:56,400
then not again don't we have to provide.

1291
01:22:57,440 --> 01:22:59,520
I see we got header,

1292
01:23:00,840 --> 01:23:01,680
we got this.

1293
01:23:01,680 --> 01:23:02,560
You are.

1294
01:23:03,480 --> 01:23:05,640
Is there a way to automate the indication?

1295
01:23:06,840 --> 01:23:10,440
So authentication,
we are doing automation, right?

1296
01:23:10,440 --> 01:23:11,560
We is just a started.

1297
01:23:11,560 --> 01:23:13,200
So please wait for something.

1298
01:23:13,200 --> 01:23:15,040
I will tell you every

1299
01:23:18,360 --> 01:23:19,480
we will cover everything

1300
01:23:19,480 --> 01:23:22,920
to automatically indication
and everything we have to do.

1301
01:23:23,320 --> 01:23:24,520
We have to do a automation.

1302
01:23:24,520 --> 01:23:25,720
All right.

1303
01:23:25,720 --> 01:23:28,560
So now they we got two headers, right?

1304
01:23:28,560 --> 01:23:29,320
We got busy.

1305
01:23:29,320 --> 01:23:33,480
You are so now you are IBM headers.

1306
01:23:33,480 --> 01:23:38,800
We have three operators, one More thing
we need like preparing the request.

1307
01:23:38,800 --> 01:23:49,280
What is there?

1308
01:23:49,280 --> 01:23:52,040
We need first query parameter, right?

1309
01:23:52,880 --> 01:23:55,360
So here I'm going to write query parameter

1310
01:23:56,560 --> 01:23:57,920
is what, is the quality parameter

1311
01:23:57,920 --> 01:24:06,240
I need.

1312
01:24:06,240 --> 01:24:09,600
I would need employee in the support i.t

1313
01:24:10,040 --> 01:24:12,160
comma value.

1314
01:24:13,160 --> 01:24:15,400
So what should be
the value of the employee?

1315
01:24:15,400 --> 01:24:16,960
Let me check

1316
01:24:19,080 --> 01:24:20,360
which employees are working.

1317
01:24:20,360 --> 01:24:20,600
Good.

1318
01:24:20,600 --> 01:24:25,560
So the first copy go here.

1319
01:24:25,560 --> 01:24:27,280
Include this

1320
01:24:30,280 --> 01:24:30,840
which works

1321
01:24:30,840 --> 01:24:33,520
this one new same

1322
01:24:36,000 --> 01:24:37,280
go to

1323
01:24:40,040 --> 01:24:42,240
the new employee is going to be

1324
01:24:44,160 --> 01:24:47,720
the Google new

1325
01:24:50,280 --> 01:24:53,160
working frame.

1326
01:24:53,160 --> 01:24:56,280
So this is the employee I'm going to take.

1327
01:24:57,800 --> 01:25:02,280
This is the employee
and I'm going to take over here

1328
01:25:02,960 --> 01:25:05,640
right.

1329
01:25:05,640 --> 01:25:08,400
In case.

1330
01:25:08,400 --> 01:25:13,320
So for any question in this request,
a specification,

1331
01:25:13,320 --> 01:25:16,800
any question,
this is a simple request prepared so far.

1332
01:25:17,240 --> 01:25:21,560
So I just provided a simple request
which is prepared,

1333
01:25:21,560 --> 01:25:25,320
but I only indicated
still I didn't perform any action.

1334
01:25:25,840 --> 01:25:28,680
So now now you see what we have to do.

1335
01:25:28,920 --> 01:25:32,840
Then it comes to perform in the edge
and we use one keyword.

1336
01:25:32,840 --> 01:25:33,960
What is that keyword

1337
01:25:41,640 --> 01:25:44,760
are into double C by default.

1338
01:25:44,760 --> 01:25:46,880
Java is to show use anything.

1339
01:25:47,360 --> 01:25:50,600
So inability to perform
any action we use when given it.

1340
01:25:51,000 --> 01:25:54,040
So I'm c I'm seeing hey

1341
01:25:55,400 --> 01:25:59,200
this is the prepared request I have dark

1342
01:26:00,280 --> 01:26:03,760
when when I said not when it got the idea.

1343
01:26:03,760 --> 01:26:06,120
Okay he's going to perform Operation

1344
01:26:07,040 --> 01:26:09,920
Dart Bridge operation I'm saying

1345
01:26:10,720 --> 01:26:13,720
I want to perform great operation.

1346
01:26:13,720 --> 01:26:18,080
It is fine if you want to perform,
get operation going.

1347
01:26:18,120 --> 01:26:21,920
The end point here,

1348
01:26:21,920 --> 01:26:24,360
the way to the end point here, right.

1349
01:26:25,320 --> 01:26:27,960
So now we have to provide the end point.

1350
01:26:28,160 --> 01:26:32,040
Then we guys where we have the end point,
forget one employ from where

1351
01:26:32,040 --> 01:26:34,040
we can get this data

1352
01:26:38,360 --> 01:26:42,280
from swagger document.

1353
01:26:42,280 --> 01:26:45,360
We go and we copy this part

1354
01:26:45,360 --> 01:26:48,360
right in global variable,
all three together.

1355
01:26:48,360 --> 01:26:50,280
We got this wrong. So the documentary

1356
01:26:51,680 --> 01:26:54,280
now see the moment.

1357
01:26:54,520 --> 01:26:57,040
The moment you hit the end point,

1358
01:26:57,400 --> 01:26:59,520
you are performing the action

1359
01:27:00,520 --> 01:27:02,680
right? Right.

1360
01:27:02,800 --> 01:27:05,160
You are performing the action using
when keyword

1361
01:27:05,880 --> 01:27:08,520
you prepared
one request using given keyword.

1362
01:27:09,000 --> 01:27:09,680
Right?

1363
01:27:09,680 --> 01:27:12,240
So when you hit the end Point, it should

1364
01:27:12,600 --> 01:27:16,320
it should return something or not.

1365
01:27:16,320 --> 01:27:18,680
If you hit the end point,
it should have done something.

1366
01:27:18,680 --> 01:27:26,720
What could you return?

1367
01:27:26,720 --> 01:27:28,880
It should you done then

1368
01:27:29,200 --> 01:27:31,280
it should return. Responds Guys, come on.

1369
01:27:31,440 --> 01:27:34,560
What did you return?

1370
01:27:34,560 --> 01:27:35,840
Response.

1371
01:27:35,840 --> 01:27:38,200
So now I am going to write a

1372
01:27:39,240 --> 01:27:41,400
response where

1373
01:27:42,120 --> 01:27:44,840
I'm going to see this response.

1374
01:27:46,200 --> 01:27:47,520
So now see,

1375
01:27:48,640 --> 01:27:50,320
see the linking goes first.

1376
01:27:50,320 --> 01:27:52,240
See the linking first.

1377
01:27:52,240 --> 01:27:54,000
You made the request.

1378
01:27:54,000 --> 01:27:56,400
So this one got prepared request.

1379
01:27:57,480 --> 01:28:01,240
When you send this prepare request
and perform action on this end point,

1380
01:28:01,240 --> 01:28:02,480
you got the response.

1381
01:28:02,480 --> 01:28:06,000
So you handle the response here,
you handle the responses.

1382
01:28:06,160 --> 01:28:06,720
Can you see

1383
01:28:12,560 --> 01:28:16,400
in this case.

1384
01:28:16,400 --> 01:28:18,840
So now, now here,

1385
01:28:19,640 --> 01:28:22,400
if I'm going to write a simple statement

1386
01:28:23,280 --> 01:28:25,760
where I'm saying you response

1387
01:28:25,760 --> 01:28:29,520
dart is this pre

1388
01:28:29,520 --> 01:28:31,200
responses? Rest assured interface.

1389
01:28:31,200 --> 01:28:35,680
Yes, even request specification
is also the same.

1390
01:28:35,680 --> 01:28:38,600
You see public interface response.

1391
01:28:38,600 --> 01:28:41,160
Also you see public interprets,
request and response.

1392
01:28:41,160 --> 01:28:45,960
Both are interface because it allows you
to have your own responses.

1393
01:28:45,960 --> 01:28:46,440
Right.

1394
01:28:46,520 --> 01:28:49,560
This response might be different
to the response rate

1395
01:28:49,560 --> 01:28:53,320
for also request for request
for request for delivery.

1396
01:28:53,800 --> 01:28:56,240
What it is an interface file.

1397
01:28:56,560 --> 01:29:00,320
So now now here
if you see guys, I'm seeing this

1398
01:29:00,360 --> 01:29:05,440
standard output print
and then print me something the response.

1399
01:29:05,440 --> 01:29:10,480
Okay, which type of response
response in terms of screen please.

1400
01:29:10,480 --> 01:29:14,600
Printing response
in terms of string vs print

1401
01:29:15,960 --> 01:29:19,760
question we have you are what you are it's
you are in endpoint.

1402
01:29:20,400 --> 01:29:23,040
So if I don't understand so I'd like us

1403
01:29:23,080 --> 01:29:27,520
to base you are
I will be considered as busy.

1404
01:29:27,520 --> 01:29:40,600
You are in India
what is this your like. Fine

1405
01:29:42,400 --> 01:29:44,680
so far so far in this part.

1406
01:29:44,680 --> 01:29:50,960
Any question anyone is going

1407
01:29:53,040 --> 01:29:56,160
what is the difference
between two string is it is a string.

1408
01:29:56,360 --> 01:29:59,920
So these responses are just an object
that Java is used for

1409
01:29:59,920 --> 01:30:02,840
to string convert
as a string comes from JSON.

1410
01:30:03,880 --> 01:30:09,680
Alright, fine.

1411
01:30:10,480 --> 01:30:14,280
But now, now tell me, can you please
explain is a string general.

1412
01:30:14,280 --> 01:30:17,880
I will then sort.
I just experiment in Java.

1413
01:30:17,880 --> 01:30:20,600
You use dart to string

1414
01:30:20,600 --> 01:30:23,040
to convert something the string

1415
01:30:23,040 --> 01:30:26,200
here you are
injecting the response in json.

1416
01:30:26,600 --> 01:30:29,240
So in just an
if you want to convert this response,

1417
01:30:29,240 --> 01:30:41,200
we have to use DART as a string in. So.

1418
01:30:41,640 --> 01:30:48,160
All right. Now.

1419
01:30:48,160 --> 01:30:52,160
So now I see we made a request.

1420
01:30:53,320 --> 01:30:56,800
We send the request we got the response.

1421
01:30:57,400 --> 01:31:00,720
This response we are simply printing
because we want to check

1422
01:31:00,720 --> 01:31:04,360
what response we are getting.

1423
01:31:04,360 --> 01:31:07,040
Not for one response is the JSON one.

1424
01:31:07,200 --> 01:31:10,040
This is not the normal java,
just an object.

1425
01:31:10,080 --> 01:31:10,800
It is returning.

1426
01:31:10,800 --> 01:31:13,360
We should understand
the type of response we are getting

1427
01:31:14,400 --> 01:31:15,040
on it.

1428
01:31:15,040 --> 01:31:19,280
Any we are going to replace this one
very good thing here.

1429
01:31:19,320 --> 01:31:21,400
Right. I would argue that

1430
01:31:21,400 --> 01:31:24,400
just we are just in the beginning is

1431
01:31:24,400 --> 01:31:27,400
not tell me if I want to run this bug,

1432
01:31:28,440 --> 01:31:29,200
how can I?

1433
01:31:29,200 --> 01:31:37,080
I don't see any of the option here.

1434
01:31:37,080 --> 01:31:42,840
So we can back on.

1435
01:31:42,840 --> 01:31:42,960
Right.

1436
01:31:42,960 --> 01:31:46,640
But for ending the tag
I have to write creature by

1437
01:31:47,040 --> 01:31:49,080
then I have to create a to there.

1438
01:31:49,080 --> 01:31:51,040
I have to call this simple test method.

1439
01:31:51,040 --> 01:31:54,240
So many things I have to read

1440
01:31:58,240 --> 01:32:00,000
main method. No.

1441
01:32:00,000 --> 01:32:03,320
And this one
what works with distance right here

1442
01:32:03,320 --> 01:32:07,440
We are not using distance.

1443
01:32:07,440 --> 01:32:09,080
So response is an interface?

1444
01:32:09,080 --> 01:32:10,960
Yes, response is an interface.

1445
01:32:10,960 --> 01:32:13,080
No, I don't know. Fine.

1446
01:32:13,840 --> 01:32:14,760
Remember this.

1447
01:32:14,760 --> 01:32:18,680
We are using cucumber with

1448
01:32:18,760 --> 01:32:19,160
corn.

1449
01:32:19,160 --> 01:32:22,320
We are using compare
with generic. Remember

1450
01:32:23,360 --> 01:32:28,280
you and I know you before testing

1451
01:32:28,680 --> 01:32:31,280
there were written and unique right

1452
01:32:32,160 --> 01:32:35,560
so just end list and give bugs

1453
01:32:35,880 --> 01:32:38,800
based on unit and unit concepts.

1454
01:32:38,800 --> 01:32:39,600
Got it.

1455
01:32:40,080 --> 01:32:42,560
So this is the it annotation.

1456
01:32:42,560 --> 01:32:46,160
What we have in best in the scheme

1457
01:32:46,200 --> 01:32:49,480
is the best annotation we have in general.

1458
01:32:49,480 --> 01:32:52,080
And also can you see or object or database

1459
01:32:56,520 --> 01:32:59,040
base can you see all are generated?

1460
01:32:59,040 --> 01:33:00,240
Click here,

1461
01:33:01,160 --> 01:33:02,240
click here.

1462
01:33:02,520 --> 01:33:10,440
Now you see an option key, right?

1463
01:33:10,440 --> 01:33:13,800
Can you see this RAM option game? Now

1464
01:33:28,400 --> 01:33:30,400
let's run this part.

1465
01:33:30,400 --> 01:33:49,400
Let's see.

1466
01:33:49,400 --> 01:33:54,320
It gave me a message
employee does not exist

1467
01:33:54,320 --> 01:33:56,760
or you have provided invalid employer.

1468
01:33:57,760 --> 01:34:04,680
Someone must have deleted
this employee again,

1469
01:34:04,680 --> 01:34:12,240
I don't know who is the complete.

1470
01:34:12,240 --> 01:34:16,440
See? No,

1471
01:34:16,440 --> 01:34:21,120
it is not a bug.

1472
01:34:21,120 --> 01:34:26,400
Come on guys, please don't use or leave me
at least Why do you using my employer

1473
01:34:27,400 --> 01:34:27,920
Let me

1474
01:34:27,920 --> 01:34:45,440
work?

1475
01:34:45,440 --> 01:34:47,640
No otherwise I will not send in. Is

1476
01:34:49,920 --> 01:34:51,240
now see

1477
01:34:52,880 --> 01:34:54,960
Now see, guys, it's working

1478
01:34:58,120 --> 01:34:58,520
days.

1479
01:34:58,640 --> 01:35:02,640
It's working or not.

1480
01:35:02,640 --> 01:35:07,040
So it means we can generate,
we can generate

1481
01:35:07,520 --> 01:35:11,640
any employee,
we can get any data using the rest part.

1482
01:35:11,640 --> 01:35:15,640
Also this part you see be complete

1483
01:35:15,640 --> 01:35:18,000
body bigot in the form of string.

1484
01:35:18,640 --> 01:35:20,880
Read in the form of a string record is.

1485
01:35:20,880 --> 01:35:25,200
Complete body, correct.

1486
01:35:25,200 --> 01:35:29,920
When it comes to get the data for one
particular employee, it says employee.

1487
01:35:30,120 --> 01:35:33,000
And under this record,
this data, under this

1488
01:35:33,000 --> 01:35:34,880
record is due to

1489
01:35:40,080 --> 01:35:41,640
so far clear

1490
01:35:49,080 --> 01:35:52,920
lines.

1491
01:35:52,920 --> 01:35:55,760
Let's proceed for the

1492
01:36:04,120 --> 01:36:07,400
no. Now, see here,

1493
01:36:07,400 --> 01:36:09,920
if I'm running, if I'm running,

1494
01:36:09,960 --> 01:36:12,960
given this using test for Gene,

1495
01:36:13,960 --> 01:36:17,840
I'm just simply printing
the response I have got from the request

1496
01:36:18,800 --> 01:36:19,280
rate.

1497
01:36:19,720 --> 01:36:21,480
I'm simply printing that response.

1498
01:36:21,480 --> 01:36:24,240
I didn't do anything extra here.

1499
01:36:24,240 --> 01:36:25,360
And you see,

1500
01:36:26,000 --> 01:36:31,120
look, when I prepared this part,
I prepared the request.

1501
01:36:31,120 --> 01:36:35,240
I had the request,
I got the response and after response

1502
01:36:35,760 --> 01:36:38,560
after response here,
if I have to write something,

1503
01:36:38,560 --> 01:36:43,640
what I can make,
what I cannot use to the given

1504
01:36:43,840 --> 01:36:46,960
when do things done

1505
01:36:49,200 --> 01:36:50,400
right is still a

1506
01:36:50,400 --> 01:36:54,560
solution is spending
a session part is still pending.

1507
01:36:54,960 --> 01:36:57,160
So see how easy it is

1508
01:36:57,840 --> 01:37:00,240
you have the your complete response

1509
01:37:00,240 --> 01:37:03,000
in one particular
variable called response.

1510
01:37:04,280 --> 01:37:05,600
You have everything.

1511
01:37:05,600 --> 01:37:08,560
You have everything in this.

1512
01:37:08,560 --> 01:37:09,920
Getting my what

1513
01:37:20,360 --> 01:37:22,320
raised getting my point.

1514
01:37:22,320 --> 01:37:25,200
You have everything in this response,
right?

1515
01:37:25,200 --> 01:37:27,280
Easy peasy. Yeah.

1516
01:37:27,280 --> 01:37:33,680
So now now here what I'm going to do is
see, I'm going to use the same variable.

1517
01:37:33,840 --> 01:37:34,840
The response

1518
01:37:36,080 --> 01:37:38,000
got it.

1519
01:37:38,000 --> 01:37:40,600
You see, it says Validate table response.

1520
01:37:41,040 --> 01:37:43,800
That's why we have to use then Java.

1521
01:37:43,800 --> 01:37:48,040
Rest assured,
API is various point to use then

1522
01:37:48,040 --> 01:37:52,560
because Java rest assured API knows
if he's using then

1523
01:37:52,840 --> 01:37:56,160
it means he is going to perform
some kind of validation

1524
01:37:57,240 --> 01:38:00,600
is going to perform
some kind of validations dark

1525
01:38:01,800 --> 01:38:06,000
in you see it says assert that assert

1526
01:38:06,080 --> 01:38:11,280
that so we have to use this to assert that
no what do you want

1527
01:38:11,280 --> 01:38:16,080
you need you want to verify body header
status code, whatever the thing.

1528
01:38:16,080 --> 01:38:18,640
So I am saying simple as of now, status

1529
01:38:19,920 --> 01:38:21,640
is what should be the status code.

1530
01:38:21,640 --> 01:38:23,520
We will get

1531
01:38:27,480 --> 01:38:31,760
200, 200?

1532
01:38:31,760 --> 01:38:48,920
Is this correct?

1533
01:38:48,920 --> 01:38:59,320
Is this correct?

1534
01:38:59,320 --> 01:39:01,440
So now this time,

1535
01:39:03,040 --> 01:39:04,200
this time, if I had done

1536
01:39:12,120 --> 01:39:14,560
you see it says one this first

1537
01:39:15,880 --> 01:39:17,640
one first.

1538
01:39:17,640 --> 01:39:20,720
Why it's not giving me anything
related to this assertion.

1539
01:39:21,960 --> 01:39:24,000
Why was not giving me

1540
01:39:24,000 --> 01:39:30,400
anything? And

1541
01:39:31,600 --> 01:39:34,120
remember, when we talk about assertions,

1542
01:39:34,320 --> 01:39:39,320
if your assertion parsed, not binding,

1543
01:39:39,320 --> 01:39:43,120
not printing is not a point,
remember assertions.

1544
01:39:43,120 --> 01:39:46,000
If we use if your assertions are correct,

1545
01:39:46,960 --> 01:39:50,280
it will not give you anything.

1546
01:39:50,280 --> 01:39:52,960
If your assertions fail,

1547
01:39:52,960 --> 01:39:55,120
it will give you some board

1548
01:39:55,120 --> 01:40:00,480
or some information in the console,

1549
01:40:00,480 --> 01:40:02,960
the development

1550
01:40:20,280 --> 01:40:20,680
so far.

1551
01:40:20,680 --> 01:40:22,120
So what everyone

1552
01:40:23,800 --> 01:40:26,320
any question in this part

1553
01:40:28,120 --> 01:40:31,560
how to make a request,
how to send the request,

1554
01:40:31,560 --> 01:40:34,680
how to get a response, anything

1555
01:40:44,040 --> 01:40:51,280
good for you.

1556
01:40:52,800 --> 01:40:54,360
All right, guys.

1557
01:40:55,240 --> 01:40:56,880
So now now.
