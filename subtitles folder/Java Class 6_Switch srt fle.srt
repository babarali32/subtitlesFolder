1
00:00:03,360 --> 00:00:05,880
Let me start by recording

2
00:00:07,480 --> 00:00:08,040
that. Good.

3
00:00:08,040 --> 00:00:09,200
Good morning.

4
00:00:09,200 --> 00:00:11,160
I'm sorry, guys, for a little late start.

5
00:00:11,160 --> 00:00:16,040
My computer didn't want to start today,
so I don't know what have happened.

6
00:00:19,280 --> 00:00:19,640
Okay.

7
00:00:19,640 --> 00:00:21,960
Is this something

8
00:00:22,840 --> 00:00:25,680
that's something or.

9
00:00:25,680 --> 00:00:26,400
I guess I don't know

10
00:00:26,400 --> 00:00:29,720
what you were talking about,
but I hope you guys are all doing good.

11
00:00:30,240 --> 00:00:32,520
I hope you guys are all excited.

12
00:00:32,520 --> 00:00:35,320
You guys had a good week with us, right?

13
00:00:35,520 --> 00:00:38,640
And overall, you guys had a good week.

14
00:00:38,640 --> 00:00:39,960
That's good.

15
00:00:41,880 --> 00:00:44,600
I am feeling better,
guys, compared to the last week.

16
00:00:44,640 --> 00:00:46,640
I'm feeling better and I hope.

17
00:00:46,680 --> 00:00:48,800
Are you guys also.

18
00:00:48,800 --> 00:00:51,840
None of you get sick
or somebody gets sick.

19
00:00:51,840 --> 00:00:53,120
Get sick too. A little bit.

20
00:00:53,120 --> 00:00:56,520
All guys, please make sure take
take a lot of what I mean. See?

21
00:00:57,120 --> 00:01:00,920
Then just try to stay at home
and get some rest, I think.

22
00:01:00,960 --> 00:01:03,720
I think that's the best medicine

23
00:01:04,920 --> 00:01:05,480
these days.

24
00:01:05,480 --> 00:01:09,480
Whether you get cold weather, you get
cold, eat whatever that is right there.

25
00:01:09,840 --> 00:01:11,960
And I hope you guys feel better

26
00:01:11,960 --> 00:01:15,000
and I hope we can distract you
for the next 5 hours.

27
00:01:15,080 --> 00:01:15,440
Right.

28
00:01:15,440 --> 00:01:20,000
So this way, you don't focus too much on
your sickness, but you guys will be busy.

29
00:01:20,400 --> 00:01:22,760
But if you guys can practice,
please make sure you do.

30
00:01:22,760 --> 00:01:25,760
If you don't, just you guys can

31
00:01:25,800 --> 00:01:28,480
pay attention and just listening.

32
00:01:28,480 --> 00:01:29,400
All right, That's good.

33
00:01:29,400 --> 00:01:31,840
That's good.

34
00:01:31,840 --> 00:01:32,760
All right, guys.

35
00:01:32,760 --> 00:01:35,680
So did this class, right? This class.

36
00:01:35,680 --> 00:01:39,000
We are obviously going to continue
with the topics

37
00:01:39,480 --> 00:01:42,200
right today is already our class number

38
00:01:42,520 --> 00:01:46,240
six, right?

39
00:01:46,240 --> 00:01:49,320
5 hours, right. At first
it sounds a little

40
00:01:49,760 --> 00:01:52,360
a little scary,
but then that time goes fast.

41
00:01:52,360 --> 00:01:55,680
Very fast. Right.

42
00:01:55,680 --> 00:01:58,560
And I guess we are already
on the Class six.

43
00:01:58,560 --> 00:01:58,880
Right.

44
00:01:58,880 --> 00:02:03,640
And let's just as usual, let's do a
quick recap on what did we learn?

45
00:02:04,200 --> 00:02:05,720
What did we learn? Last class? This

46
00:02:07,560 --> 00:02:08,560
time is going fast.

47
00:02:08,560 --> 00:02:09,760
Years, guys, even six months.

48
00:02:09,760 --> 00:02:18,160
We'll go very fast, I promise this.

49
00:02:18,360 --> 00:02:20,400
But if we look on Saturdays, right?

50
00:02:20,400 --> 00:02:24,120
And then we introduce our scanner,
and then let's class,

51
00:02:24,120 --> 00:02:27,240
we start
looking into our logical operators.

52
00:02:27,240 --> 00:02:27,720
Right.

53
00:02:28,080 --> 00:02:31,000
Okay, good. So what can you tell me?

54
00:02:31,000 --> 00:02:34,160
Why do we need those logical operators in

55
00:02:47,280 --> 00:02:49,520
logical operators there?

56
00:02:49,680 --> 00:02:53,400
That allows us to test
multiple conditions.

57
00:02:53,400 --> 00:02:53,720
Right.

58
00:02:53,720 --> 00:02:56,880
But multiple conditions in one statement.

59
00:02:56,880 --> 00:02:58,200
Right. That allows us to.

60
00:02:58,200 --> 00:03:00,240
To test it in one statement. Right.

61
00:03:00,560 --> 00:03:03,400
Because no guess to test
multiple conditions

62
00:03:03,400 --> 00:03:05,520
we have if else if blocks right.

63
00:03:05,800 --> 00:03:08,840
Remember when we said
let's say when we are going to take

64
00:03:09,120 --> 00:03:11,760
let's take a string, right.

65
00:03:11,880 --> 00:03:14,800
When we talk in a string date right.

66
00:03:14,800 --> 00:03:16,560
For example. Right.

67
00:03:16,560 --> 00:03:19,800
Let's say we want to say Saturday, right.

68
00:03:20,240 --> 00:03:23,880
And then we said based on the days,
we want to discuss

69
00:03:23,880 --> 00:03:26,280
which topic we will be covering or which

70
00:03:27,600 --> 00:03:30,840
which I don't
know, not topic which class you have.

71
00:03:30,840 --> 00:03:34,120
Right. So let's say string

72
00:03:34,120 --> 00:03:35,280
module, right.

73
00:03:35,280 --> 00:03:36,720
I'll do it this way.

74
00:03:36,720 --> 00:03:41,520
So then they're going to say,
hey if the they is equals, right?

75
00:03:41,520 --> 00:03:45,040
And then we said, hey,
if the day is equals to Monday.

76
00:03:45,040 --> 00:03:45,320
Right.

77
00:03:45,320 --> 00:03:49,800
For example in the days equals to Monday
and then we'll do other things.

78
00:03:49,800 --> 00:03:52,240
Now do I have another condition?

79
00:03:52,240 --> 00:03:55,200
Just test. Yes,
I have another condition to test the test.

80
00:03:55,200 --> 00:03:58,920
Multiple conditions
we have LC Right, we have else.

81
00:03:59,200 --> 00:04:02,000
But now why do we need those

82
00:04:04,320 --> 00:04:07,360
equals to we said Tuesday.

83
00:04:07,880 --> 00:04:08,640
Right.

84
00:04:09,000 --> 00:04:13,640
So that does this conditions
we do have ls e blocks right if else

85
00:04:13,720 --> 00:04:17,360
if now we're saying in which case we need
the logical operators.

86
00:04:17,360 --> 00:04:17,640
Right.

87
00:04:17,640 --> 00:04:22,720
We choose, we will talk about having
and we will talk about having

88
00:04:22,760 --> 00:04:25,920
or and we talked about not rights,

89
00:04:26,560 --> 00:04:30,240
not this just reverse the condition
but then which gives you will use that

90
00:04:30,240 --> 00:04:34,160
and then or whenever within one statement

91
00:04:34,400 --> 00:04:38,160
we want to test multiple conditions.

92
00:04:38,160 --> 00:04:38,400
Right.

93
00:04:38,400 --> 00:04:44,200
Because right now within my E right
with my else if I'm just in one condition.

94
00:04:44,200 --> 00:04:47,400
Hey, what if I want to test two
or more conditions

95
00:04:47,400 --> 00:04:49,440
within the same statement,
within the same.

96
00:04:49,440 --> 00:04:50,920
LC Right.

97
00:04:50,920 --> 00:04:55,680
So then we are introducing our end or up
right?

98
00:04:55,680 --> 00:05:00,920
Then we said, Hey, up in here guys,
it will be and or it will be.

99
00:05:00,920 --> 00:05:03,680
Or you guys need to tell me a dad

100
00:05:04,880 --> 00:05:06,040
equals to.

101
00:05:06,040 --> 00:05:09,960
We said Wednesday right,
Wednesday, Wednesday.

102
00:05:10,360 --> 00:05:14,640
And then you said module
we will specify a model equals

103
00:05:14,640 --> 00:05:17,840
you guys were learning manual
just like manual

104
00:05:20,560 --> 00:05:21,040
right.

105
00:05:21,520 --> 00:05:23,160
So why should we go for all this?

106
00:05:23,160 --> 00:05:25,360
Why should we go for

107
00:05:39,240 --> 00:05:41,800
so the when the inoperative works, right?

108
00:05:41,800 --> 00:06:05,000
So the way the interpreter works now

109
00:06:29,800 --> 00:06:55,560
is this week 41.

110
00:06:57,080 --> 00:06:59,040
So we set for that

111
00:06:59,800 --> 00:07:03,280
and operator right for the end up ready
to give us a true.

112
00:07:03,920 --> 00:07:08,240
This condition must be true
and this condition must be true right

113
00:07:08,560 --> 00:07:13,200
So now when we look into this scenario,
when we look into this scenario,

114
00:07:13,560 --> 00:07:17,640
we know that at one time,
right at one time,

115
00:07:18,080 --> 00:07:21,480
the variable
they can hold only one value, right?

116
00:07:21,480 --> 00:07:24,720
The variable they cannot hold Saturday,
Sunday, Monday, Tuesday.

117
00:07:24,720 --> 00:07:26,760
Right. They can hold the only value.

118
00:07:26,760 --> 00:07:29,760
So it means it's always your day.

119
00:07:29,760 --> 00:07:31,720
It's always, always.

120
00:07:31,720 --> 00:07:33,840
It was one condition.
It will be true, right?

121
00:07:34,280 --> 00:07:37,640
But then if the one condition
will be true.

122
00:07:37,680 --> 00:07:38,040
Right.

123
00:07:38,040 --> 00:07:41,040
If this will be true
and if this will be false

124
00:07:41,400 --> 00:07:46,160
using the end operator who will never,
ever will be able to get that true.

125
00:07:46,480 --> 00:07:50,720
So in this scenario, that's what we would
we went to go ahead audit

126
00:07:51,040 --> 00:07:52,560
or operator, Right.

127
00:07:54,360 --> 00:07:57,080
Or operate right. But

128
00:07:57,080 --> 00:08:00,640
when do we go for a logical operator
or for a logical end?

129
00:08:00,640 --> 00:08:03,000
All in only one. We want to test

130
00:08:04,320 --> 00:08:06,560
multiple two or more condition

131
00:08:06,880 --> 00:08:11,520
in one state here in one statement,
if you have only one condition,

132
00:08:11,520 --> 00:08:14,200
you don't need to have
any logical operations, right?

133
00:08:14,640 --> 00:08:16,560
And you want your collaborators, right?

134
00:08:16,560 --> 00:08:18,920
So this is was that or right?

135
00:08:18,920 --> 00:08:21,200
This is was it or okay.

136
00:08:21,600 --> 00:08:23,400
And let me actually ask that thing now.

137
00:08:23,400 --> 00:08:25,320
You guys had a homework, right?

138
00:08:25,320 --> 00:08:28,080
You guys had a homework.

139
00:08:28,080 --> 00:08:31,160
So let me see which which

140
00:08:32,000 --> 00:08:34,440
which logical operated
did you guys use the near

141
00:08:40,760 --> 00:08:43,520
or can you guys send me the code?

142
00:08:43,520 --> 00:08:47,720
Okay, look,
so this will be your quick recap.

143
00:08:48,040 --> 00:08:48,880
Two days, of course.

144
00:08:48,880 --> 00:08:52,800
Six. You

145
00:08:54,840 --> 00:08:57,000
and that

146
00:08:57,320 --> 00:09:03,400
was was was

147
00:09:09,600 --> 00:09:10,800
like this

148
00:09:10,800 --> 00:09:18,040
and needed to make it a little bit bigger.

149
00:09:18,040 --> 00:09:21,120
Right. It's okay. Right.

150
00:09:21,120 --> 00:09:24,840
So some of you guys
went into the capturing

151
00:09:26,040 --> 00:09:28,760
some of
you went into the capturing string.

152
00:09:28,760 --> 00:09:31,560
Some of you went into the capturing
integer value.

153
00:09:31,560 --> 00:09:32,280
All correct.

154
00:09:32,280 --> 00:09:35,480
This all correct. Yeah.

155
00:09:35,880 --> 00:09:37,080
Let me see some of you.

156
00:09:37,080 --> 00:09:40,960
You guys use equal
some or you use equal or not equal

157
00:09:40,960 --> 00:09:44,440
some or you use equals ignore case,
which is very, very good.

158
00:09:45,040 --> 00:09:47,320
And you see this confidence

159
00:09:51,320 --> 00:09:53,960
right?

160
00:09:53,960 --> 00:09:56,480
Right.
So this part we already know, right?

161
00:09:56,520 --> 00:09:58,920
This part we already know that
we bring in the scanner

162
00:09:58,920 --> 00:10:03,280
to capture the value
and to capture the value from our use.

163
00:10:03,280 --> 00:10:03,840
Zero. Right.

164
00:10:03,840 --> 00:10:05,880
Then we already decided, hey,
you know what?

165
00:10:05,880 --> 00:10:09,400
I'm going to declare the variable
that I'm just declaring at this moment,

166
00:10:09,400 --> 00:10:12,520
because I don't know
what will be the value that we will be

167
00:10:13,440 --> 00:10:16,000
based on my condition.

168
00:10:16,000 --> 00:10:20,360
Right then you saying, Hey,
I am test in multiple condition.

169
00:10:20,360 --> 00:10:22,440
That's why I'm going for Eve else.

170
00:10:22,440 --> 00:10:24,480
If else blocks right.

171
00:10:24,480 --> 00:10:27,280
And here we're saying hey within one
eve right.

172
00:10:27,280 --> 00:10:30,720
We didn't want eve statement right
we then here

173
00:10:31,040 --> 00:10:33,240
I want to test three conditions right.

174
00:10:33,240 --> 00:10:36,000
I want to say
hey in the month is equal to December

175
00:10:36,320 --> 00:10:40,440
or month is equal to January
or month equals to February.

176
00:10:40,440 --> 00:10:40,720
Right.

177
00:10:40,720 --> 00:10:44,600
So what I'm doing, I'm
testing for those three conditions, Right.

178
00:10:44,600 --> 00:10:47,920
And I'm saying, hey,
if at least one condition is true.

179
00:10:47,920 --> 00:10:48,480
Right.

180
00:10:48,480 --> 00:10:52,240
Because I'm using my all operator,
if at least one condition is true,

181
00:10:52,240 --> 00:10:56,400
then I'm going to initialize this variable
to winter, Right?

182
00:10:56,400 --> 00:11:01,320
If this block becomes true, right, then
my season will be spring in the summer

183
00:11:02,640 --> 00:11:03,080
autumn.

184
00:11:03,080 --> 00:11:07,240
And if none of the
conditions will be true, I am going to say

185
00:11:07,240 --> 00:11:10,360
that this is invalid,
the right, this is invalid.

186
00:11:11,160 --> 00:11:15,320
And then you send, Hey,
if your board in whichever season, right.

187
00:11:15,360 --> 00:11:16,560
And of course you guys,

188
00:11:16,560 --> 00:11:19,800
you guys should have tested with different
different conditions, right?

189
00:11:20,760 --> 00:11:22,800
No, there should just
a different condition.

190
00:11:24,560 --> 00:11:27,600
So in this situation you would go for or.

191
00:11:27,640 --> 00:11:28,320
Right.

192
00:11:28,320 --> 00:11:32,280
You would go for or
why would we go for or for example,

193
00:11:32,280 --> 00:11:35,680
let's put a break in here.

194
00:11:35,680 --> 00:11:40,520
So what is happening

195
00:11:40,520 --> 00:11:44,800
with my.

196
00:11:44,800 --> 00:11:46,280
Okay, what is enter your birth,

197
00:11:46,280 --> 00:11:49,360
my right for example,
my birthday's in August, right?

198
00:11:50,520 --> 00:11:52,040
Or there's in August.

199
00:11:52,040 --> 00:11:53,320
So what is happening?

200
00:11:53,320 --> 00:11:56,240
Our month is getting initialized
to August,

201
00:11:57,560 --> 00:11:57,920
right?

202
00:11:57,920 --> 00:12:00,320
Our season is still not initialized.

203
00:12:00,320 --> 00:12:03,120
That's
why you don't see the value in here.

204
00:12:03,120 --> 00:12:03,440
Right?

205
00:12:03,440 --> 00:12:05,040
And then you're saying here

206
00:12:05,040 --> 00:12:08,960
at one time, right,
that one time in here, what do we have?

207
00:12:10,080 --> 00:12:12,680
And here what do we have right.

208
00:12:12,680 --> 00:12:16,200
So, hey, is there
month equals to December?

209
00:12:16,200 --> 00:12:17,880
Condition is false.

210
00:12:17,880 --> 00:12:21,720
Month equals to generate condition
is false, month equals to February.

211
00:12:21,720 --> 00:12:23,760
Condition is false. So we have pre false.

212
00:12:24,120 --> 00:12:26,360
Obviously Jacqui's going to give us false.

213
00:12:26,360 --> 00:12:29,440
Right then the same thing here and here
we will get false.

214
00:12:29,440 --> 00:12:32,600
We will get false. We will get false.

215
00:12:32,600 --> 00:12:35,840
And then our third option,
we will get a false for June.

216
00:12:36,080 --> 00:12:40,880
We'll get a false for July,
and then we will go get a true for August.

217
00:12:40,880 --> 00:12:41,480
Right.

218
00:12:41,480 --> 00:12:45,520
So now for false
or false in here will give you false.

219
00:12:45,960 --> 00:12:50,280
So then you have false or true
because we're using the OR operator right.

220
00:12:50,560 --> 00:12:55,960
Then this will become true and then your
season will get insurance to start. Right?

221
00:12:57,640 --> 00:12:59,040
Right.

222
00:12:59,040 --> 00:13:02,920
You go,

223
00:13:02,920 --> 00:13:06,800
Oh, now is your word in season
summer, right.

224
00:13:06,800 --> 00:13:08,880
You would go one incident somewhere

225
00:13:12,360 --> 00:13:14,720
like say we went over this last clause,
right.

226
00:13:15,120 --> 00:13:19,360
Equals we'll just compare a string

227
00:13:20,000 --> 00:13:23,680
letter, character
by character by character.

228
00:13:23,680 --> 00:13:26,240
Right. So what is a equals ignore case?

229
00:13:26,240 --> 00:13:30,560
What it does, it will compare to string,
but it will ignore any uppercase

230
00:13:30,680 --> 00:13:32,440
or the lowercase.

231
00:13:32,440 --> 00:13:34,160
Right.

232
00:13:34,160 --> 00:13:36,480
So let me let me try to run the code
for this.

233
00:13:36,480 --> 00:13:38,360
Guess please enter your birth. And what?

234
00:13:38,360 --> 00:13:40,120
I'm just going to enter something.

235
00:13:40,120 --> 00:13:44,520
So now it says you are born in season
invalid, right?

236
00:13:44,560 --> 00:13:47,040
You were born. She's an invalid.

237
00:13:47,040 --> 00:13:51,160
What if I want you say,
what if I want to see this message?

238
00:13:51,160 --> 00:13:56,040
You guys,
I want you see this message only and only.

239
00:13:56,320 --> 00:14:02,040
I want you to see this message only
and only when my season is actually

240
00:14:02,400 --> 00:14:05,440
either winter
or spring or summer or autumn.

241
00:14:05,880 --> 00:14:08,520
I don't want to print this statement. One.

242
00:14:08,520 --> 00:14:11,400
My season is invalid
because it does not make sense.

243
00:14:11,400 --> 00:14:14,480
If I'm going to say
you were born in season invalid,

244
00:14:14,480 --> 00:14:18,840
what if I don't want to see any output
when my when my season is invalid?

245
00:14:19,200 --> 00:14:25,000
I want you print only and only when this
season is winter, spring, summer out then.

246
00:14:25,040 --> 00:14:33,800
But I don't want to print that message
when my season is invalid.

247
00:14:33,800 --> 00:14:36,720
You wouldn't have to bother.
We don't have to call the LS.

248
00:14:36,720 --> 00:14:37,480
Okay, that's fine.

249
00:14:37,480 --> 00:14:41,920
But if we're not going to call, okay,
we can remove this.

250
00:14:41,920 --> 00:14:43,600
Okay, let me see. I'm removing.

251
00:14:43,600 --> 00:14:45,160
Fine, I'm removing.

252
00:14:45,160 --> 00:14:46,160
But then why am I?

253
00:14:46,160 --> 00:14:47,760
Why am I right now?

254
00:14:47,760 --> 00:14:50,040
You guys know who is your friend in here?

255
00:14:50,040 --> 00:14:52,920
Your compiler shows you the error, right?

256
00:14:52,920 --> 00:14:55,920
Your compiler shows
you the error. Y compiler shows the error

257
00:15:09,960 --> 00:15:11,040
not initialized.

258
00:15:11,040 --> 00:15:14,040
Right?
Why? Why is it not initialized based?

259
00:15:14,520 --> 00:15:23,320
Why do I have to initialize it?

260
00:15:23,320 --> 00:15:29,120
It right.

261
00:15:29,120 --> 00:15:33,080
Because what what compiler always checks
your code

262
00:15:33,080 --> 00:15:36,400
compiler says okay, here
they declared a variable.

263
00:15:36,400 --> 00:15:40,800
Here they're asking me to give the value
to print the value of that variable.

264
00:15:40,800 --> 00:15:41,360
Right.

265
00:15:41,360 --> 00:15:45,160
So when the Java runs the code,
Java needs to show some output.

266
00:15:45,160 --> 00:15:48,240
However, in this scenario,
because there is no

267
00:15:48,240 --> 00:15:51,560
LS block, we know that all the conditions
would be false, right?

268
00:15:51,600 --> 00:15:54,200
All the condition could be false.

269
00:15:54,200 --> 00:15:56,880
So then if all the conditions
could be false,

270
00:15:57,120 --> 00:16:00,080
then who will take responsibility
of the season?

271
00:16:00,120 --> 00:16:00,840
Right?

272
00:16:00,840 --> 00:16:05,120
So now we're saying, hey, there won't be
ls block and there won't be ls block.

273
00:16:05,400 --> 00:16:10,440
So now what we can do,
we can initialize our variable, right?

274
00:16:10,920 --> 00:16:12,720
Or what we can do.

275
00:16:12,720 --> 00:16:16,840
If you guys click in here,
compiler can help you out, right?

276
00:16:16,880 --> 00:16:22,800
Compiler can help you out and compiler
can initialize a variable for you,

277
00:16:23,120 --> 00:16:26,760
but the max things compiler can do,
Compiler can just

278
00:16:26,760 --> 00:16:30,160
give initial value to the variable. Right?

279
00:16:30,400 --> 00:16:33,240
And we set the initial value for integers.

280
00:16:33,240 --> 00:16:35,280
What is the initial
value for the integers based

281
00:16:38,400 --> 00:16:39,160
zero?

282
00:16:39,160 --> 00:16:46,240
What about bullet?

283
00:16:46,240 --> 00:16:49,800
Wollen is for boolean
is false grace, okay for boolean is false

284
00:16:50,360 --> 00:16:55,520
and for strings and all other non
primitive types.

285
00:16:55,520 --> 00:16:57,840
It will be no right. It will be not.

286
00:16:58,480 --> 00:16:59,280
Okay. Sure.

287
00:16:59,280 --> 00:17:01,560
But let me see what's going to happen now.

288
00:17:01,560 --> 00:17:04,720
I'm going to please
enter your birth months, right?

289
00:17:04,720 --> 00:17:07,200
I'm going to say whatever right now.

290
00:17:07,200 --> 00:17:10,920
It says you were born in season
null is still shows me

291
00:17:10,920 --> 00:17:14,640
I don't want you to see this output one
my one when the season is null.

292
00:17:14,880 --> 00:17:18,000
I don't want to see whether
whenever we had an invalid,

293
00:17:18,120 --> 00:17:19,920
I don't want to print it.

294
00:17:19,920 --> 00:17:24,360
I want you print all I'm only
when the season is everything else.

295
00:17:24,360 --> 00:17:33,760
But not this thing.

296
00:17:34,040 --> 00:17:35,880
What if I will let this guess?

297
00:17:35,880 --> 00:17:36,920
What if I'll add?

298
00:17:36,920 --> 00:17:38,920
Because right now you guys know upgrades.

299
00:17:39,120 --> 00:17:43,880
I want to say, Hey,
I want to print this statement

300
00:17:44,520 --> 00:17:49,200
only in only
when my season is not equals to now.

301
00:17:49,240 --> 00:17:50,080
What are you guys think

302
00:17:51,680 --> 00:17:53,440
I want to add the if condition?

303
00:17:53,440 --> 00:17:55,840
I want to say, hey, Eve, right?

304
00:17:56,880 --> 00:17:59,560
I want to see if season right

305
00:17:59,560 --> 00:18:01,960
my season is not equal to now.

306
00:18:02,880 --> 00:18:05,960
What if I'm going to say that?

307
00:18:05,960 --> 00:18:07,280
And then

308
00:18:07,760 --> 00:18:11,240
right, right.

309
00:18:11,640 --> 00:18:14,240
Or the way
we're going to add the LS book, right?

310
00:18:14,240 --> 00:18:17,080
So what I'm saying not equal, right?

311
00:18:17,080 --> 00:18:20,200
What I'm saying not equal
all and only one.

312
00:18:20,200 --> 00:18:22,680
My season is not equal to null.

313
00:18:23,040 --> 00:18:27,800
Then I'm going to see this statement right
then I'm going to see the statements.

314
00:18:28,040 --> 00:18:30,640
So now what are we going to try to run
right?

315
00:18:31,680 --> 00:18:35,680
When you're going to try to run,
lose, enter your first of months.

316
00:18:35,720 --> 00:18:37,880
Right. So mental this.

317
00:18:37,880 --> 00:18:40,760
So now we know the way the laddered

318
00:18:40,800 --> 00:18:44,360
eve goes,
it goes line by line, private jets.

319
00:18:44,360 --> 00:18:46,440
The first condition falls.

320
00:18:46,440 --> 00:18:49,440
Whichever the second condition falls,
start condition falls

321
00:18:49,800 --> 00:18:53,200
or condition falls,
none of the cases has emerged.

322
00:18:53,520 --> 00:18:55,720
Now, what of
what is the value of this season?

323
00:18:56,280 --> 00:18:58,440
The value of season still, no,

324
00:18:58,760 --> 00:19:02,320
it's still No, because not
it did not go inside this.

325
00:19:02,320 --> 00:19:04,280
If it did not go inside this,

326
00:19:04,280 --> 00:19:07,120
if it did not go inside this house,
if it did not go here.

327
00:19:07,320 --> 00:19:09,560
So our value was never

328
00:19:10,880 --> 00:19:13,040
the value
of the variable was never changed.

329
00:19:13,040 --> 00:19:15,120
Right. So no. Okay.

330
00:19:15,120 --> 00:19:19,320
And then we go in here, Hey,
what is the value of season null?

331
00:19:19,320 --> 00:19:21,960
Hey, I am going to print this message.

332
00:19:21,960 --> 00:19:24,120
Only one no is not equals to no.

333
00:19:24,360 --> 00:19:28,720
In this condition, condition will be false
and will not print in any statement.

334
00:19:28,840 --> 00:19:29,760
Right.

335
00:19:29,760 --> 00:19:32,240
If you want to add otherwise,
of course we can.

336
00:19:32,240 --> 00:19:36,240
Either either was right
or when we had the ls black.

337
00:19:36,240 --> 00:19:39,120
Remember guys, we had a ls black right?

338
00:19:39,120 --> 00:19:42,000
LS black and inside the ls black.

339
00:19:42,000 --> 00:19:47,200
You guys were defined in the season
as an invalid, right then equals invalid.

340
00:19:47,400 --> 00:19:49,680
I think that's what
it was our original code.

341
00:19:49,680 --> 00:19:50,320
Right.

342
00:19:50,320 --> 00:19:53,920
So now if you go
and you have the ls black in

343
00:19:55,080 --> 00:19:56,640
and now on the line 13.

344
00:19:56,640 --> 00:19:59,640
If you're not going to do
any initialization right,

345
00:20:01,240 --> 00:20:02,800
if you're not going to do any

346
00:20:02,800 --> 00:20:06,480
initialization on the line 13,
your compiler is fine. Why?

347
00:20:06,480 --> 00:20:08,280
Because compiler checks insists

348
00:20:08,280 --> 00:20:12,040
okay, if none of the conditions there,
imagine a programmer.

349
00:20:12,040 --> 00:20:15,240
So you initialize this variable
inside the ls.

350
00:20:15,320 --> 00:20:17,280
So I'm good, right?

351
00:20:17,280 --> 00:20:18,120
I said What do you mean?

352
00:20:18,120 --> 00:20:20,680
Cannot leave it empty
where you want to leave it empty?

353
00:20:20,680 --> 00:20:27,360
Which part, sport?

354
00:20:27,360 --> 00:20:29,040
Well, if you want to live limit empty.

355
00:20:29,040 --> 00:20:31,680
I would just suggest.
Then just don't have the support.

356
00:20:32,000 --> 00:20:34,320
Can you just deuces out invalid? Yes.

357
00:20:34,320 --> 00:20:35,760
You can do this out. Invalid.

358
00:20:35,760 --> 00:20:39,760
Yep. So there we can just
you guys can just put whatever.

359
00:20:39,760 --> 00:20:40,320
Right.

360
00:20:40,320 --> 00:20:44,600
So we initialize in so this way compiler
is happy, but do we have to have it?

361
00:20:44,640 --> 00:20:46,200
No, we don't have to have it.

362
00:20:46,200 --> 00:20:47,520
Can we just have one C?

363
00:20:47,520 --> 00:20:50,040
So please enter the valid.

364
00:20:50,040 --> 00:20:51,120
Please enter valid.

365
00:20:52,400 --> 00:20:53,200
Now let's season.

366
00:20:53,200 --> 00:20:54,400
Yes, we can do that right?

367
00:20:54,400 --> 00:20:55,560
We can do it.

368
00:20:55,920 --> 00:20:58,760
Remember this else is very very optional
part, right?

369
00:20:59,120 --> 00:21:02,640
So just based on your code,
you will see based on what kind of output

370
00:21:02,640 --> 00:21:06,000
you want to have, you will see what
you would like to put right.

371
00:21:06,440 --> 00:21:10,040
And then if the season is invalid,
if the season is invalid,

372
00:21:10,040 --> 00:21:19,640
will this statement work with one work
now this one

373
00:21:36,280 --> 00:21:38,240
to ignore, Right.

374
00:21:38,240 --> 00:21:40,120
Because what will happen, Right.

375
00:21:40,120 --> 00:21:42,200
And you could always try to run.

376
00:21:42,200 --> 00:21:45,560
So now please
enter your first months right here.

377
00:21:45,640 --> 00:21:46,360
Right.

378
00:21:46,480 --> 00:21:49,960
So we know that my code will jump
right now into that else.

379
00:21:50,000 --> 00:21:51,680
BLOCK Right.

380
00:21:51,680 --> 00:21:56,400
So now what happens
this season will get initialized invalid.

381
00:21:57,040 --> 00:22:00,800
Now we're saying hey, is invalid
not equal to now, right?

382
00:22:00,960 --> 00:22:03,320
You're de not equal, right.

383
00:22:03,320 --> 00:22:05,040
So your condition will go inside.

384
00:22:05,040 --> 00:22:08,560
Then I will tell you,
you were born in invalid season, right?

385
00:22:08,560 --> 00:22:11,640
Which we still
don't want to see. So now if

386
00:22:12,720 --> 00:22:13,040
if you

387
00:22:13,040 --> 00:22:17,000
guys want to keep invalid
now we just have to change this condition.

388
00:22:17,000 --> 00:22:17,880
Right now.

389
00:22:17,880 --> 00:22:20,680
We just have to change this condition.

390
00:22:20,680 --> 00:22:23,800
And the way we said
we can have a node operator.

391
00:22:23,800 --> 00:22:24,360
Right.

392
00:22:24,360 --> 00:22:27,640
So I'm going to see if season equals

393
00:22:27,960 --> 00:22:33,200
right, if season equals invalid, right.

394
00:22:33,200 --> 00:22:35,280
And then what I can do, I can reverse it.

395
00:22:35,480 --> 00:22:36,480
I can reverse it.

396
00:22:36,480 --> 00:22:38,560
I'm going to say not right.

397
00:22:38,800 --> 00:22:40,680
I'm going to say not.

398
00:22:40,680 --> 00:22:41,800
So what will happen?

399
00:22:41,800 --> 00:22:45,840
It's will check
is this season equals to invalid, right?

400
00:22:45,840 --> 00:22:47,880
If this is an equals to invalid.

401
00:22:47,880 --> 00:22:51,360
So then if the condition is true right,

402
00:22:51,720 --> 00:22:57,000
then with the help of the not operator,
we're going to reverse it.

403
00:22:57,120 --> 00:22:57,400
Right?

404
00:22:57,400 --> 00:23:00,960
We're going to reverse it
and then it will give us false.

405
00:23:01,240 --> 00:23:04,080
And then if it's false,
we cannot go inside.

406
00:23:04,720 --> 00:23:06,360
Let's, let's, let's just.

407
00:23:08,120 --> 00:23:09,000
You were born.

408
00:23:09,000 --> 00:23:13,120
I was born in whatever.

409
00:23:13,120 --> 00:23:20,160
What is the method of you?

410
00:23:20,160 --> 00:23:24,080
Can you can you
can you specify a question?

411
00:23:24,080 --> 00:23:26,160
What is the method of using.

412
00:23:26,160 --> 00:23:28,240
So they are two different
operators, right?

413
00:23:28,240 --> 00:23:30,360
They're two different operators, you say.

414
00:23:30,360 --> 00:23:38,280
And in which case we can combine them.

415
00:23:38,280 --> 00:23:40,440
Well, there will be

416
00:23:41,000 --> 00:23:43,240
no remember one when you use in the

417
00:23:43,280 --> 00:23:46,920
not right not operator,
you can use anywhere.

418
00:23:46,920 --> 00:23:47,160
Right.

419
00:23:47,160 --> 00:23:49,600
As long as you want to reverse
the condition. Right.

420
00:23:50,040 --> 00:23:52,040
But the modulus right.

421
00:23:52,040 --> 00:23:55,520
In order for you to use the modulus,
what is the module is right.

422
00:23:55,520 --> 00:23:58,560
It shows you the reminder, right
Shows you the reminder.

423
00:23:58,560 --> 00:24:03,360
So free for you to to to use the reminder,
you need to have two numbers right?

424
00:24:03,360 --> 00:24:06,960
You need to have two numbers.

425
00:24:06,960 --> 00:24:08,560
The way we use reminders, right?

426
00:24:08,560 --> 00:24:12,760
The way the way we use reminder
before right when we said

427
00:24:14,440 --> 00:24:17,160
one of you said, remember this one,
we had two numbers, right?

428
00:24:17,160 --> 00:24:19,840
For example,
I'm not going to declare them one.

429
00:24:19,840 --> 00:24:23,200
We said three, modulus two,

430
00:24:23,400 --> 00:24:26,200
and then we said, not equals two zero.

431
00:24:26,200 --> 00:24:26,800
Right?

432
00:24:26,800 --> 00:24:31,080
Then we said not equal to zero
cannot be used in this scenario. Yes.

433
00:24:31,080 --> 00:24:32,560
So what will happen?

434
00:24:32,560 --> 00:24:34,760
It will check three mont two.

435
00:24:34,800 --> 00:24:37,480
Right. Hey, is there any reminder? Yes.

436
00:24:37,480 --> 00:24:38,880
Is there any reminder?

437
00:24:38,880 --> 00:24:42,600
And then you you will check
if the reminder is not equals to zero.

438
00:24:42,640 --> 00:24:42,960
Right?

439
00:24:42,960 --> 00:24:46,480
Then we defining whether a number is
even or not.

440
00:24:46,520 --> 00:24:48,760
Right.
So in this matter, yes, you can use.

441
00:24:48,760 --> 00:24:50,680
But remember for the mod,
what do you need?

442
00:24:50,680 --> 00:24:55,080
You need two numbers
because we perform in the arithmetic

443
00:24:55,080 --> 00:24:56,840
operation, right?

444
00:24:59,520 --> 00:25:03,240
Why are we using P
if we already did LS involved

445
00:25:05,040 --> 00:25:06,040
when you

446
00:25:06,880 --> 00:25:12,600
give me, are you asking about
why do we have this statement?

447
00:25:12,600 --> 00:25:16,520
So my, my, my thing right,
I added extra thing right now

448
00:25:16,520 --> 00:25:20,040
that was not a part of homework
but I added extra thing I wanted to say,

449
00:25:20,040 --> 00:25:23,280
Hey, I want to see this statement.

450
00:25:23,440 --> 00:25:26,640
I want to see this statement
all in only one.

451
00:25:26,640 --> 00:25:29,440
My season is initialized properly, right?

452
00:25:29,440 --> 00:25:32,800
When my season always winters
spring, summer or autumn.

453
00:25:32,920 --> 00:25:33,600
Right.

454
00:25:33,640 --> 00:25:37,880
If my if my season will be invalid,
I don't want to see any output.

455
00:25:38,280 --> 00:25:38,760
Okay.

456
00:25:38,760 --> 00:25:40,080
I don't want to see any output.

457
00:25:40,080 --> 00:25:42,600
So I just.
I just added one more condition.

458
00:25:42,880 --> 00:25:47,640
And with the help of this condition,
just trying to review the mod operator

459
00:25:47,760 --> 00:25:51,040
as well.

460
00:25:51,040 --> 00:25:53,720
So my still running my code
and so running. Right.

461
00:25:53,920 --> 00:25:56,600
So now what is the month I had died.

462
00:25:56,600 --> 00:25:57,360
Whatever. Right.

463
00:25:57,360 --> 00:26:00,360
So some collection of characters
I entered.

464
00:26:01,080 --> 00:26:03,680
So now with Jake
and we know that this will be false.

465
00:26:03,680 --> 00:26:05,280
False, false.

466
00:26:05,280 --> 00:26:09,960
Now my call because all the condition
of false will go inside that part.

467
00:26:09,960 --> 00:26:11,160
Now, what will happen?

468
00:26:11,160 --> 00:26:13,600
My season will get initialized, right?

469
00:26:13,600 --> 00:26:15,560
My season will get initialized.

470
00:26:15,560 --> 00:26:17,720
It will become invalid.

471
00:26:17,720 --> 00:26:22,000
Now I'd throw another
if statement, throw another statements,

472
00:26:22,000 --> 00:26:26,240
and now I'm saying, hey,
if this season right, what is this season?

473
00:26:26,240 --> 00:26:30,200
Season has a value of invalid
Hey if invalid it

474
00:26:30,480 --> 00:26:33,600
equals two invalid use
condition is true, right?

475
00:26:33,960 --> 00:26:37,800
But then is the help of the not operator
what I'm doing,

476
00:26:37,800 --> 00:26:41,640
I'm reversing my true condition
to the false right.

477
00:26:41,640 --> 00:26:43,880
And we know that one condition is false.

478
00:26:43,880 --> 00:26:46,080
I cannot enter inside. Right.

479
00:26:48,320 --> 00:26:50,520
So now when we going to enter,

480
00:26:50,520 --> 00:26:53,000
for example, December strike,

481
00:26:54,040 --> 00:27:00,560
when we going to enter December?

482
00:27:00,560 --> 00:27:02,280
I'm going to enter December.

483
00:27:02,280 --> 00:27:02,640
Right.

484
00:27:02,640 --> 00:27:05,040
My first eve statement. Right.

485
00:27:05,920 --> 00:27:09,280
My first Eve block will become true.

486
00:27:09,520 --> 00:27:12,800
Now, my season will get initialized
to winter, right?

487
00:27:13,120 --> 00:27:15,800
As soon as Java finds a true condition.

488
00:27:16,080 --> 00:27:20,040
Now it exists then that is ls blocks
right?

489
00:27:20,280 --> 00:27:21,640
It exists them.

490
00:27:21,640 --> 00:27:22,520
And now check.

491
00:27:22,520 --> 00:27:25,760
Hey, is this season Right now
it's winter, right?

492
00:27:25,760 --> 00:27:29,120
You get initialized to winter
because I entered December

493
00:27:29,320 --> 00:27:31,840
Is winter equals to invalid?

494
00:27:32,240 --> 00:27:34,440
Nope, they're not equal. Right.

495
00:27:34,440 --> 00:27:37,960
So this statement
will give me a false right.

496
00:27:38,360 --> 00:27:41,200
Then there is the help of the non
operator.

497
00:27:41,200 --> 00:27:43,440
I'm converting false to the true.

498
00:27:43,440 --> 00:27:46,760
Now when the condition
when boolean condition is true,

499
00:27:47,080 --> 00:27:49,640
I am allowed to go inside. Right.

500
00:27:49,680 --> 00:27:51,600
And then now I will have this

501
00:27:55,640 --> 00:27:56,400
right.

502
00:27:56,400 --> 00:27:57,840
Well this is just additional thing.

503
00:27:57,840 --> 00:28:01,720
This for us to write
is just additional things for us to use.

504
00:28:02,160 --> 00:28:05,360
Right now in here we look at our operators

505
00:28:05,520 --> 00:28:07,960
and then here we're looking to our not

506
00:28:12,880 --> 00:28:14,200
and I think this one

507
00:28:14,200 --> 00:28:17,400
we did right
and this was very, very similar.

508
00:28:17,400 --> 00:28:24,760
So what which upgrade did
you guys used in here?

509
00:28:24,760 --> 00:28:36,000
It here we went for the and operate right.

510
00:28:36,000 --> 00:28:40,840
So now we have to check that our score
right our score here

511
00:28:40,840 --> 00:28:44,160
you test in one condition
you just more than 90 Right.

512
00:28:44,600 --> 00:28:49,600
But then inside here and here
you have to condition to test.

513
00:28:49,680 --> 00:28:50,400
Right.

514
00:28:50,400 --> 00:28:55,200
So in here you saying that your score
should be more than 70 and

515
00:28:55,440 --> 00:29:00,960
and at the same time
it should be less than 91.

516
00:29:00,960 --> 00:29:03,720
Can we use equal signatures? Okay. So

517
00:29:05,360 --> 00:29:08,400
we will be looking more guys into equals
ignore keys.

518
00:29:08,680 --> 00:29:10,520
It will be based on the scenario. Right.

519
00:29:10,520 --> 00:29:11,880
They will be based on the scenario.

520
00:29:11,880 --> 00:29:15,200
But any time you work with this strings,
right?

521
00:29:15,440 --> 00:29:19,440
Any time we work for the strings,
for example, that's when your

522
00:29:20,760 --> 00:29:22,560
what automation testers do.

523
00:29:22,560 --> 00:29:24,840
We will have to test applications. Right?

524
00:29:25,160 --> 00:29:28,680
For example,
what if syntax is your application?

525
00:29:28,680 --> 00:29:30,960
Right? Would have
syntax is your application.

526
00:29:31,520 --> 00:29:34,080
So now in your you put a story

527
00:29:34,120 --> 00:29:37,640
right in your user story,
what you will have to do,

528
00:29:37,880 --> 00:29:42,520
you will have to test that one, two,
three, four, five, six, seven, eight.

529
00:29:42,520 --> 00:29:44,560
Links are there. Right?

530
00:29:44,560 --> 00:29:49,400
And you will have to text
test them to the link of the strings.

531
00:29:49,400 --> 00:29:51,720
Right. You will have to test
the link of these strings.

532
00:29:52,360 --> 00:29:54,960
So now testing the link.

533
00:29:54,960 --> 00:29:57,360
Right. It's very sensitive.

534
00:29:57,520 --> 00:29:59,120
It's very sensitive.

535
00:29:59,120 --> 00:30:03,400
If you my user story,
it will say that all the links

536
00:30:03,400 --> 00:30:09,360
has to be written in the uppercase here
you cannot use equals ignore keys.

537
00:30:09,360 --> 00:30:14,240
You will have to check that
the link is written in the uppercase.

538
00:30:14,240 --> 00:30:14,720
Right.

539
00:30:15,000 --> 00:30:16,440
But for example. Right.

540
00:30:16,440 --> 00:30:20,160
But for example, you want to click on
signing button, right?

541
00:30:20,160 --> 00:30:22,720
Or you want to click on the enroll today,
right?

542
00:30:23,240 --> 00:30:28,400
So now if you don't care
if you're not verifying the text right.

543
00:30:28,400 --> 00:30:32,080
If you're not verifying the text,
but what you want to know,

544
00:30:32,080 --> 00:30:35,960
you just want to see if the click
functionalities work and right

545
00:30:36,000 --> 00:30:38,280
you want to see that
the click functionalities work

546
00:30:38,280 --> 00:30:41,080
and that after you click,
it takes you here, right?

547
00:30:41,400 --> 00:30:45,440
So then if you don't care about the text,
when we don't care about the text,

548
00:30:45,440 --> 00:30:48,480
we can say, Hey, Eve,

549
00:30:48,480 --> 00:30:52,680
if your button is equals,
ignore case enroll today, right?

550
00:30:52,680 --> 00:30:53,840
You don't care if it's enrolled.

551
00:30:53,840 --> 00:30:56,040
Do these written in uppercase lowercase.

552
00:30:56,280 --> 00:30:59,240
But what you want to do,
you want to click right?

553
00:30:59,600 --> 00:31:02,520
But usually when it comes
to these applications, guys will

554
00:31:02,520 --> 00:31:07,160
when you will have to test
anything that you see on the application,

555
00:31:07,440 --> 00:31:08,960
you guys, when it comes to testing,

556
00:31:08,960 --> 00:31:11,360
you will have to verify
every single things, right?

557
00:31:11,400 --> 00:31:14,360
You will have to verify
all this text in here.

558
00:31:14,360 --> 00:31:16,000
You guys will have to verify.

559
00:31:16,000 --> 00:31:19,640
So in this case, you cannot use equals
ignore keys. Why?

560
00:31:19,640 --> 00:31:22,440
Because every every uppercase
and lowercase

561
00:31:22,440 --> 00:31:24,840
and is important by, for example,

562
00:31:25,480 --> 00:31:29,400
this application you will have to test
that it works in safari.

563
00:31:29,400 --> 00:31:31,920
You will have to test
that it works in Chrome.

564
00:31:31,920 --> 00:31:34,440
You will have to test that
B works on the Firefox.

565
00:31:34,440 --> 00:31:35,120
Right?

566
00:31:35,200 --> 00:31:37,920
So now whether we write Safari

567
00:31:37,920 --> 00:31:41,000
uppercase or keys, we don't care, right?

568
00:31:41,000 --> 00:31:45,760
So now we can say your browser is equals,
ignore safari,

569
00:31:46,000 --> 00:31:50,520
then let me open this application
in Safari browser.

570
00:31:50,520 --> 00:31:50,680
Right.

571
00:31:50,680 --> 00:31:53,520
Because Safari upper keys are safari
lowercase.

572
00:31:54,200 --> 00:31:58,040
Don't make a big difference,
but my links in here

573
00:31:58,440 --> 00:32:01,160
I have to make sure
that I'm taking the case in.

574
00:32:01,160 --> 00:32:02,240
Does it make sense this

575
00:32:06,720 --> 00:32:07,440
okay?

576
00:32:07,440 --> 00:32:08,400
I hope it makes sense,

577
00:32:08,400 --> 00:32:12,560
but so once in your Java class
you guys will be looking into the stream.

578
00:32:12,560 --> 00:32:14,520
You will get a look into more example.

579
00:32:14,520 --> 00:32:17,760
But once we go
to the actual actual automation,

580
00:32:18,120 --> 00:32:21,000
then it will start making more
and more and more sense.

581
00:32:22,600 --> 00:32:24,240
Or for example, right?

582
00:32:24,240 --> 00:32:26,160
Sometimes guys,

583
00:32:26,520 --> 00:32:30,000
maybe, maybe right, maybe at your work
you will have to test

584
00:32:30,000 --> 00:32:33,600
maybe your application
on the mobile devices, right?

585
00:32:33,600 --> 00:32:38,280
So now, based on the values,
hey, if the if the applications,

586
00:32:38,440 --> 00:32:42,400
if your scenario stays right,
if you use a user stories this

587
00:32:42,600 --> 00:32:44,400
you have to test the mobile, right.

588
00:32:44,400 --> 00:32:48,240
Whether you write mobile, uppercase,
mobile, lowercase don't matter.

589
00:32:48,240 --> 00:32:50,880
It means that you have to do a mobile test
and then you will

590
00:32:51,120 --> 00:32:53,960
your script will run
on the mobile application.

591
00:32:53,960 --> 00:32:57,840
If it says web,
then you will run on the web application.

592
00:32:57,840 --> 00:32:58,480
Right?

593
00:32:58,960 --> 00:33:02,680
But this edge of things here,
we will just use equal.

594
00:33:02,760 --> 00:33:05,880
We will just use equals
because here we cannot ignore the case.

595
00:33:05,880 --> 00:33:08,920
And it's important that this is uppercase

596
00:33:08,920 --> 00:33:13,240
and the rest of the letters
are written in the lower keys. It's

597
00:33:16,320 --> 00:33:16,680
okay.

598
00:33:16,680 --> 00:33:17,160
This.

599
00:33:17,280 --> 00:33:20,040
So what you did in here, in here
you did your

600
00:33:20,280 --> 00:33:24,040
and you did the

601
00:33:25,680 --> 00:33:28,680
earlier I guess
and I know you guys shared again

602
00:33:28,680 --> 00:33:31,680
we'll look into crazy
as we can look into this area.

603
00:33:31,840 --> 00:33:35,640
Let me actually copy
and I'll just give one thing

604
00:33:35,640 --> 00:33:36,240
right

605
00:33:41,320 --> 00:33:44,920
or you're gonna let me switch

606
00:33:47,960 --> 00:33:55,680
it was very quick right.

607
00:33:55,880 --> 00:33:58,920
One of our main method

608
00:34:08,280 --> 00:34:12,080
so this in the scanner, right.

609
00:34:12,720 --> 00:34:15,120
And this scanner

610
00:34:15,960 --> 00:34:19,520
and the

611
00:34:37,720 --> 00:34:38,800
in here

612
00:34:39,680 --> 00:34:40,160
and here.

613
00:34:40,160 --> 00:34:42,240
What I see we're initialized.

614
00:34:42,240 --> 00:34:43,880
We have a variables, right?

615
00:34:43,880 --> 00:34:46,840
We list in our all the variables

616
00:34:46,840 --> 00:34:51,120
within at all the variables
that we'll be using then our scanner.

617
00:34:51,200 --> 00:34:51,960
Right.

618
00:34:51,960 --> 00:34:55,160
And then once we capture our score,
mid grade

619
00:34:55,160 --> 00:34:58,640
and final score, right,
we calculate in our average

620
00:34:58,960 --> 00:35:02,680
and based on the average more we're doing,
we're defining the grade, right?

621
00:35:02,920 --> 00:35:07,720
If this condition true, the grade is a
if this condition is true in which we test

622
00:35:07,720 --> 00:35:11,600
in multiple conditions at the same time,
that's why we just incorporated.

623
00:35:12,000 --> 00:35:12,320
Right.

624
00:35:12,320 --> 00:35:16,400
And then outside what we have outside
have this one CS out

625
00:35:16,400 --> 00:35:21,480
and saying a grade is whichever grade
it will be and your average.

626
00:35:21,960 --> 00:35:22,960
Yeah, okay, that's fine.

627
00:35:22,960 --> 00:35:24,880
We print in the average right.

628
00:35:24,880 --> 00:35:26,760
So that's example of our.

629
00:35:26,760 --> 00:35:30,480
And so my only suggestion of being
I copied from you

630
00:35:30,480 --> 00:35:33,560
or I think from the right,
my only thing is write

631
00:35:34,320 --> 00:35:37,520
code is correct, syntax is correct,
logic is correct.

632
00:35:37,520 --> 00:35:41,120
Everything is
my only one suggestion in this code.

633
00:35:41,120 --> 00:35:43,920
This will be
please make sure you follow the

634
00:35:46,440 --> 00:35:48,200
follow the naming convention.

635
00:35:48,200 --> 00:35:49,000
Right.

636
00:35:49,080 --> 00:35:50,200
So it is.

637
00:35:50,200 --> 00:35:52,400
It is it is it big mistake?

638
00:35:52,400 --> 00:35:54,320
No, it's not a big mistake.

639
00:35:54,320 --> 00:35:56,880
Code work perfectly are compiler.

640
00:35:56,880 --> 00:35:58,920
No complaining because syntax is correct.

641
00:35:58,920 --> 00:36:03,160
But this is that's why we learn
in those naming conventions.

642
00:36:03,160 --> 00:36:03,360
Right.

643
00:36:03,360 --> 00:36:04,800
So we say, hey,

644
00:36:04,800 --> 00:36:08,040
when we work with the variables, right,
then we work with the variables.

645
00:36:08,480 --> 00:36:13,680
All the variables should start with
the lowercase is not going to complain.

646
00:36:13,680 --> 00:36:15,920
Java is going to execute perfectly. Right.

647
00:36:16,080 --> 00:36:18,960
But your your variable

648
00:36:19,000 --> 00:36:23,440
should start with the lower cases
and then follow the case right.

649
00:36:23,440 --> 00:36:27,840
So that problem probably will be my
my mate so suggested but it's great

650
00:36:27,840 --> 00:36:30,880
that would
I would name exploits or I would name

651
00:36:31,160 --> 00:36:33,920
a mean great right

652
00:36:33,920 --> 00:36:37,840
and I would name it
finals for right final score

653
00:36:39,000 --> 00:36:41,040
and the error right And of course

654
00:36:41,040 --> 00:36:44,120
all other things you will just have to
change in your core as well.

655
00:36:44,440 --> 00:36:44,800
Right?

656
00:36:45,280 --> 00:36:47,120
That's probably will be my thing.

657
00:36:47,120 --> 00:36:49,480
This for this call, my suggestion

658
00:37:03,680 --> 00:37:05,800
while it's okay it's exactly right.

659
00:37:05,800 --> 00:37:11,400
So this will become more and more handy,
especially once you guys practice in more

660
00:37:11,600 --> 00:37:15,720
and you guys are going to have another
almost three classes of Java.

661
00:37:15,720 --> 00:37:18,560
So this will become very practical.

662
00:37:18,720 --> 00:37:21,840
You all right?

663
00:37:21,840 --> 00:37:22,360
This right.

664
00:37:22,360 --> 00:37:27,120
So that was for our if else it's right
that was for our instances

665
00:37:27,600 --> 00:37:31,280
and the see already
you guys are using practice that we learn

666
00:37:31,280 --> 00:37:36,080
less class right so we say in here now
what we can do inside our whenever

667
00:37:36,120 --> 00:37:40,160
condition becomes true right
so we inside might if block

668
00:37:40,200 --> 00:37:44,000
right
this is we call block opening closed right

669
00:37:44,000 --> 00:37:48,120
my E block has its own opening door
and it has its own closing door.

670
00:37:48,200 --> 00:37:48,520
Right.

671
00:37:49,680 --> 00:37:50,160
So this

672
00:37:50,160 --> 00:37:53,920
condition becomes true,
then This is what I'm doing, right.

673
00:37:53,920 --> 00:37:56,040
So what are we doing inside the block?

674
00:37:56,440 --> 00:38:00,880
Based on the condition
I'm going to initialize my variable

675
00:38:01,200 --> 00:38:05,400
for the value A or there will be a Well,
you'll see all that, right?

676
00:38:05,400 --> 00:38:07,160
Instead of just doing this out.

677
00:38:07,160 --> 00:38:09,680
That's what we're doing right? Right.

678
00:38:09,720 --> 00:38:10,560
That's what we're doing.

679
00:38:10,560 --> 00:38:11,280
Right. That

680
00:38:13,480 --> 00:38:14,760
all right this

681
00:38:16,400 --> 00:38:19,000
maybe that's 1050.

682
00:38:19,440 --> 00:38:19,840
Okay.

683
00:38:19,880 --> 00:38:21,840
Maybe I'll give you

684
00:38:22,080 --> 00:38:23,400
guys a little of in there.

685
00:38:23,400 --> 00:38:26,080
Look to.

686
00:38:27,560 --> 00:38:28,320
All right.

687
00:38:28,320 --> 00:38:31,760
So today, today, what are we going to days

688
00:38:33,120 --> 00:38:34,640
then What are we going to look today?

689
00:38:34,640 --> 00:38:40,960
The topic is our another conditional
statement that we're going to look Right.

690
00:38:41,360 --> 00:38:44,560
And the thing you guys already started
looking at in the review.

691
00:38:44,560 --> 00:38:46,560
Plus,
did you guys touch base a little bit?

692
00:38:46,560 --> 00:38:48,160
The switch case in the review class

693
00:38:51,000 --> 00:38:52,080
or not? You

694
00:38:55,080 --> 00:38:56,520
this right.

695
00:38:56,520 --> 00:38:59,760
So now what do we look
we look into our switch statement, right?

696
00:39:01,040 --> 00:39:03,240
Each statement
which means which statement.

697
00:39:03,720 --> 00:39:07,080
So now the switch statement
is being a part

698
00:39:07,080 --> 00:39:09,560
of our conditional statements

699
00:39:12,480 --> 00:39:13,480
and the channel statements.

700
00:39:13,480 --> 00:39:14,040
Right.

701
00:39:14,040 --> 00:39:16,920
So in conditional statements,
first we had the

702
00:39:16,920 --> 00:39:19,400
if statement was its own variations.
Right?

703
00:39:20,600 --> 00:39:23,320
We've this is contrary to what the state

704
00:39:23,400 --> 00:39:26,280
and state the stance Right.

705
00:39:26,560 --> 00:39:30,600
Statement with is
if as we said, can have different

706
00:39:31,200 --> 00:39:36,240
it can has it can consist of just e block
it can consist of uf ls blocks.

707
00:39:36,480 --> 00:39:39,320
It can consist of f else if blocks. Right.

708
00:39:39,600 --> 00:39:43,480
So now the second conditional statement

709
00:39:43,480 --> 00:39:46,680
that we're going to look, it's
a switch statement.

710
00:39:47,760 --> 00:39:49,320
Which statement?

711
00:39:49,360 --> 00:39:55,200
So very similar really
Is it our eve statement using switch.

712
00:39:55,200 --> 00:39:56,480
What we will be doing?

713
00:39:56,480 --> 00:39:59,360
We will be doing it selective execution.

714
00:39:59,600 --> 00:40:01,920
We will be doing this select execution.

715
00:40:01,920 --> 00:40:02,720
No only things.

716
00:40:02,720 --> 00:40:06,320
Which statement has some similarities
with the if statement,

717
00:40:06,600 --> 00:40:09,360
but of course
it will have its own differences.

718
00:40:09,360 --> 00:40:13,440
It will has its own pros,
it will has its own limitations as well.

719
00:40:13,520 --> 00:40:14,040
Right.

720
00:40:14,600 --> 00:40:17,960
So now the best way
to look at our switch statement

721
00:40:17,960 --> 00:40:19,440
this what are we going to bring?

722
00:40:19,440 --> 00:40:23,640
I am going to bring the keyboard
from your class three.

723
00:40:23,720 --> 00:40:24,840
Actually, I think this

724
00:40:26,160 --> 00:40:27,040
woman

725
00:40:32,520 --> 00:40:36,960
with rules.

726
00:40:36,960 --> 00:40:37,560
Right.

727
00:40:38,000 --> 00:40:40,160
I'm going to copy exact same quote.

728
00:40:40,680 --> 00:40:41,280
Right.

729
00:40:41,640 --> 00:40:44,760
I think it's called

730
00:40:45,120 --> 00:40:54,880
and name

731
00:40:55,600 --> 00:40:58,520
with my boss right now.

732
00:40:58,560 --> 00:41:00,000
I need my main method.

733
00:41:00,000 --> 00:41:04,760
Without my main method, it's
my code is not going to be wrong.

734
00:41:06,080 --> 00:41:08,880
Think of this right now.

735
00:41:09,080 --> 00:41:11,560
Looks easy for you. Right? This right now
looks easiest.

736
00:41:11,560 --> 00:41:13,680
So what we have, we have a variable.

737
00:41:13,680 --> 00:41:15,760
And right now. Right.

738
00:41:15,760 --> 00:41:18,880
It will be just 6000 here,
but that's fine, right?

739
00:41:18,880 --> 00:41:23,200
So we said, hey, whenever we have to test
multiple conditions, right?

740
00:41:23,240 --> 00:41:27,120
When we test in multiple conditions,
where we what are we using in

741
00:41:27,160 --> 00:41:30,440
Java we use an e elseif blocks, right.

742
00:41:30,440 --> 00:41:35,320
If LC blocks and if we want to provide
the output, we can provide the block.

743
00:41:35,400 --> 00:41:36,000
Right.

744
00:41:36,440 --> 00:41:39,200
So another another a very,

745
00:41:39,200 --> 00:41:44,880
very great alternative for our
if else if statement in Java

746
00:41:44,880 --> 00:41:48,400
what we have
we have a switch case, right switch case.

747
00:41:48,840 --> 00:41:50,160
It's another statement

748
00:41:51,360 --> 00:41:54,440
that being
a part of the conditional statement,

749
00:41:54,440 --> 00:41:58,000
the only thing switch statement works
slightly slightly different.

750
00:41:58,080 --> 00:41:59,800
Right. Slightly different.

751
00:41:59,800 --> 00:42:02,720
So now when we have our

752
00:42:02,720 --> 00:42:07,720
if you work in some cases,
what do we do instead of there

753
00:42:07,720 --> 00:42:12,000
right in FLC block
we can go a switch case.

754
00:42:12,000 --> 00:42:13,800
We can go for a switch.

755
00:42:13,800 --> 00:42:17,160
Now, the way our switch works,
right switch, it

756
00:42:17,160 --> 00:42:21,200
starts with the switch right?

757
00:42:21,200 --> 00:42:23,280
And we just see what switch, right?

758
00:42:23,280 --> 00:42:26,120
You know that it's a keyboard. It's
why it's a highlighted, right?

759
00:42:26,120 --> 00:42:30,000
So now as soon as you
Java will be executing one of your job,

760
00:42:30,000 --> 00:42:33,680
Java executes, you could tap to the bottom
right as soon as you switch.

761
00:42:33,680 --> 00:42:35,960
It knows what the switch means, right?

762
00:42:36,520 --> 00:42:39,360
So now when we use it as switch statement,

763
00:42:39,360 --> 00:42:44,160
right inside the switch,
we have to specify it inside a switch.

764
00:42:44,160 --> 00:42:47,160
We will have to specify a variable. Right?

765
00:42:47,160 --> 00:42:50,240
So now we're saying here for which

766
00:42:52,000 --> 00:42:53,760
A, you be able

767
00:42:53,760 --> 00:42:57,680
you are going to provide
multiple keys, right.

768
00:42:58,080 --> 00:42:59,640
For which key for which switch.

769
00:42:59,640 --> 00:43:02,280
You will be providing
multiple values. Right.

770
00:43:02,520 --> 00:43:05,000
For which variable
we provide in multiple values.

771
00:43:05,000 --> 00:43:08,880
This we're saying hey, if one variable day

772
00:43:09,160 --> 00:43:12,600
this here, our date
can have the value of one hour.

773
00:43:12,600 --> 00:43:15,520
They can be equal to two
or they can be equal to three.

774
00:43:15,520 --> 00:43:15,760
Right?

775
00:43:15,760 --> 00:43:19,640
So now we can say, hey, if they I'm
not going to define going to date,

776
00:43:19,840 --> 00:43:21,880
you have exactly the same label.

777
00:43:21,880 --> 00:43:24,480
So now switch date, right?

778
00:43:24,480 --> 00:43:27,920
And then our switch
has its own block of goods.

779
00:43:28,160 --> 00:43:32,920
How do we identify in general
block of good using early braces.

780
00:43:32,920 --> 00:43:35,080
Right. Using curly braces.

781
00:43:35,280 --> 00:43:40,440
Now this block of code will belong
to my switch statement.

782
00:43:40,560 --> 00:43:41,280
Right.

783
00:43:41,400 --> 00:43:45,280
This block of code belongs to do your ls
if block.

784
00:43:45,600 --> 00:43:48,200
This block of code
belongs to your support.

785
00:43:48,200 --> 00:43:48,920
Right.

786
00:43:48,960 --> 00:43:51,720
This block of code belongs to the main
method.

787
00:43:52,080 --> 00:43:55,240
This block belongs to my entire class.

788
00:43:55,360 --> 00:43:55,600
Right.

789
00:43:55,600 --> 00:44:00,040
So in here, the switch has its own
block of code, right?

790
00:44:00,040 --> 00:44:01,720
Has its own block of code.

791
00:44:01,720 --> 00:44:04,800
And inside this block of code,
what we have to provide.

792
00:44:04,800 --> 00:44:07,920
We have to provide a values right?

793
00:44:07,920 --> 00:44:11,320
So what could be the value
over day, Right?

794
00:44:11,320 --> 00:44:14,280
So now you provide the values.

795
00:44:14,280 --> 00:44:16,680
How do we provide the values
inside the switch block?

796
00:44:16,920 --> 00:44:18,160
How do we provide the values?

797
00:44:19,720 --> 00:44:22,480
We will be providing cases, right?

798
00:44:22,480 --> 00:44:23,920
We'll be providing the cases.

799
00:44:23,920 --> 00:44:28,680
And now we're going to read exact the same
example as we have is the eve parts.

800
00:44:28,680 --> 00:44:31,280
Now we will be using
having the keys, right?

801
00:44:31,600 --> 00:44:35,160
So now we can say here, case what

802
00:44:35,160 --> 00:44:36,440
it was it

803
00:44:39,200 --> 00:44:40,480
and now right.

804
00:44:40,480 --> 00:44:44,560
We said in here case with this one
that's what we will go right.

805
00:44:45,600 --> 00:44:48,600
So now we'll see how keys

806
00:44:48,600 --> 00:44:50,840
right Each one right.

807
00:44:50,840 --> 00:44:54,680
Hey Eve they will be equal

808
00:44:54,800 --> 00:44:57,840
to one What we would like to do right?

809
00:44:57,840 --> 00:45:01,680
And then we can if you want, guys,
we can go for a C, So for now,

810
00:45:01,680 --> 00:45:07,520
that's fine.

811
00:45:07,520 --> 00:45:12,200
They pay in the value of the
they could be equal to one.

812
00:45:12,200 --> 00:45:16,640
That's technically what we say
when we say, hey, we'll say C.

813
00:45:16,640 --> 00:45:18,480
So today's Monday, right?

814
00:45:18,480 --> 00:45:25,160
Is there anything else we need this.

815
00:45:25,160 --> 00:45:26,680
You need a break, right?

816
00:45:26,680 --> 00:45:29,120
And of course that's
we will look what happens with break.

817
00:45:29,120 --> 00:45:31,560
What happened with that break, Right.

818
00:45:31,560 --> 00:45:32,160
Okay.

819
00:45:32,160 --> 00:45:35,120
Now, do you have more cases in your day?

820
00:45:35,120 --> 00:45:38,160
Do you have a do you want to provide
more cases for your variable?

821
00:45:38,160 --> 00:45:40,640
D Yes, I want to provide more cases.

822
00:45:40,640 --> 00:45:41,880
Right. Case.

823
00:45:41,880 --> 00:45:46,800
You know, if the day is equal to two now,
we're going to say it's Tuesday,

824
00:45:48,000 --> 00:45:48,600
right?

825
00:45:49,560 --> 00:45:51,640
And then we need a break.

826
00:45:51,640 --> 00:45:54,120
You have another, another, another value?

827
00:45:54,120 --> 00:45:55,400
Yes, I have another value.

828
00:45:55,400 --> 00:45:57,400
How do you provide any provide the helpful

829
00:45:59,560 --> 00:46:01,920
help that's going to be Wednesday.

830
00:46:02,720 --> 00:46:03,200
Right.

831
00:46:03,200 --> 00:46:08,440
And then again, break.

832
00:46:08,440 --> 00:46:10,800
Then we have games for right

833
00:46:11,920 --> 00:46:15,840
or for Thursday.

834
00:46:15,840 --> 00:46:16,960
And then the same thing.

835
00:46:16,960 --> 00:46:19,800
You need a break, right?

836
00:46:19,880 --> 00:46:21,080
You have another value.

837
00:46:21,080 --> 00:46:24,200
Yes. You
they could have a value of five, right.

838
00:46:24,600 --> 00:46:26,880
And then they will have the value of five.

839
00:46:26,880 --> 00:46:29,840
Then you'll see it's Friday, right.

840
00:46:29,840 --> 00:46:32,640
And then will be the break.

841
00:46:32,840 --> 00:46:34,320
We have another value. Yes.

842
00:46:34,320 --> 00:46:36,600
They could be equal to six. Right.

843
00:46:36,960 --> 00:46:38,880
And the day equals 3 to 6.

844
00:46:38,880 --> 00:46:42,000
I'm going to see that it's Saturday

845
00:46:42,000 --> 00:46:45,680
and then that same thing, break.

846
00:46:45,680 --> 00:46:49,080
Right. And then case seven. Right

847
00:46:50,120 --> 00:46:50,960
seven.

848
00:46:50,960 --> 00:46:53,400
It will be Sunday

849
00:46:55,560 --> 00:46:57,200
and then the same thing again,

850
00:46:57,200 --> 00:47:00,160
break right And then

851
00:47:01,200 --> 00:47:04,640
there is similar as inside our E statement

852
00:47:06,000 --> 00:47:08,280
we should use to send the cash.

853
00:47:08,280 --> 00:47:09,840
I will go over the break.

854
00:47:09,840 --> 00:47:14,760
So now we just following the correct
syntax of the switch, but we will go over

855
00:47:14,760 --> 00:47:18,360
what happens if I'm going to have it,
What happens if I'm not going to have it?

856
00:47:18,360 --> 00:47:19,360
Why do we need it?

857
00:47:19,360 --> 00:47:21,360
What is the break? That's right.

858
00:47:21,600 --> 00:47:26,400
So now when we don't have
any more values, right?

859
00:47:26,400 --> 00:47:32,120
When we don't have any more conditions,
it is right inside the eve.

860
00:47:32,120 --> 00:47:34,520
What do we provide?
We provide the else part. Right?

861
00:47:35,040 --> 00:47:39,200
But for the else we said that else
is it's a very optional part.

862
00:47:39,600 --> 00:47:41,880
So the same thing in our switch.

863
00:47:42,320 --> 00:47:44,840
We can specify LS

864
00:47:45,160 --> 00:47:48,760
but instead of the else
we have something called default

865
00:47:49,800 --> 00:47:50,840
default.

866
00:47:50,840 --> 00:47:53,840
Then I'm going to say won't be wrong.

867
00:47:55,080 --> 00:47:58,040
So now default is very similar
to the else.

868
00:47:58,040 --> 00:48:04,680
Basically we're saying,
hey, if the value of they won't 11b21b31

869
00:48:04,680 --> 00:48:05,200
before.

870
00:48:05,200 --> 00:48:10,160
If it won't be any of this now list,
then your code will come to the default.

871
00:48:10,160 --> 00:48:10,760
Right.

872
00:48:10,920 --> 00:48:13,440
And we can the break and I'll show you.

873
00:48:13,440 --> 00:48:16,360
Do we have to or we don't have to right

874
00:48:16,360 --> 00:48:16,600
there.

875
00:48:16,840 --> 00:48:20,800
Now, what are we seeing in here?

876
00:48:20,920 --> 00:48:23,280
Right. What we seen in here.

877
00:48:23,280 --> 00:48:25,120
And if I'm going to run the code.

878
00:48:25,120 --> 00:48:26,760
Right, if I'm going to run it.

879
00:48:26,760 --> 00:48:29,520
So initially
I'm having exactly the same output.

880
00:48:29,520 --> 00:48:32,480
I'm having the same output. Why?

881
00:48:32,720 --> 00:48:36,960
Because in here I see
the value of day is 90, right?

882
00:48:36,960 --> 00:48:41,440
The value of day is 90.

883
00:48:41,440 --> 00:48:43,320
And that's what are we going over here?

884
00:48:43,320 --> 00:48:44,000
That's what are we going

885
00:48:44,000 --> 00:48:47,960
or first let me do the introduction
and then you guys will see in which case

886
00:48:47,960 --> 00:48:50,920
you would want to go for a switch,
in which case you want to go for it.

887
00:48:51,560 --> 00:48:54,720
Okay, so in here today is equal to 90.

888
00:48:55,040 --> 00:48:57,560
All the condition is false. False.

889
00:48:57,560 --> 00:49:01,400
Your code came into the
and that's why it's executed wrongly.

890
00:49:01,840 --> 00:49:03,400
So now it works Exactly.

891
00:49:03,400 --> 00:49:05,640
Same thing for a switch, right?

892
00:49:05,640 --> 00:49:09,440
None of the cases would match
because the day was not equal,

893
00:49:09,600 --> 00:49:14,400
was not equal to 1 to 3,
that they had the value of 90.

894
00:49:14,680 --> 00:49:15,960
And then what happens?

895
00:49:15,960 --> 00:49:19,200
Your code came to the default form, right?

896
00:49:20,120 --> 00:49:21,640
So now let me change it.

897
00:49:21,640 --> 00:49:25,080
This equals to I don't know why, Right.

898
00:49:25,240 --> 00:49:26,200
Equals to five.

899
00:49:27,240 --> 00:49:27,760
You know,

900
00:49:27,760 --> 00:49:30,840
it works exactly the same way it works
except the same one.

901
00:49:31,720 --> 00:49:34,520
So now what is then the difference, Right?

902
00:49:34,520 --> 00:49:37,920
What is then the difference.

903
00:49:37,920 --> 00:49:40,400
So now first, right, First

904
00:49:42,280 --> 00:49:45,640
switch keys is a great alternative

905
00:49:45,960 --> 00:49:49,240
for if else if statement.

906
00:49:49,320 --> 00:49:54,200
Right so now in which case
you would want to go for else

907
00:49:54,200 --> 00:49:57,280
if in which case
do you want to go for a switch keys

908
00:49:58,080 --> 00:50:03,880
any time we have to check for the equality
because any time

909
00:50:03,880 --> 00:50:07,080
we have to check for the equality,
for example, we say, hey,

910
00:50:07,600 --> 00:50:10,040
if the day right,
what is the value of that?

911
00:50:10,240 --> 00:50:13,360
Now, all of these one now
will be used to write

912
00:50:14,200 --> 00:50:16,520
in this particular scenario.

913
00:50:16,800 --> 00:50:19,160
We can go for a switch
and they'll give you

914
00:50:19,160 --> 00:50:21,920
I'll give you more examples
because I'll give you more examples.

915
00:50:21,920 --> 00:50:25,040
Okay, So now why then

916
00:50:25,400 --> 00:50:28,640
in some cases
you would want to go for a switch.

917
00:50:28,640 --> 00:50:31,560
Why in some cases
you would want to go for it else.

918
00:50:31,880 --> 00:50:35,720
Right now, by looking at this code,
this can you tell me

919
00:50:35,720 --> 00:50:37,920
I did exact this same.

920
00:50:38,840 --> 00:50:42,200
I didn't deserve the same print out
statements.

921
00:50:42,840 --> 00:50:44,960
Michael gives me exact the same out.

922
00:50:44,960 --> 00:50:48,360
Now first, by looking this,
if I'm going to look at this code,

923
00:50:48,760 --> 00:50:52,120
if I'm going to look at this code,
can you tell me, guys,

924
00:50:52,120 --> 00:50:54,240
which code looks cleaner for you?

925
00:50:54,240 --> 00:50:56,400
Which quote looks easier for you? Cleaner

926
00:50:59,520 --> 00:51:02,040
switch or else if

927
00:51:03,200 --> 00:51:05,440
a thing switch gears looks cleaner.

928
00:51:05,440 --> 00:51:08,000
Right. Switch gears. Looks cleaner.

929
00:51:08,000 --> 00:51:09,200
Now think of it.

930
00:51:09,200 --> 00:51:11,560
If you would have to compare
the string this,

931
00:51:11,560 --> 00:51:14,160
you would have to say
if these equals to money.

932
00:51:14,160 --> 00:51:16,080
So it will become very windy.

933
00:51:16,080 --> 00:51:17,280
And then on top of that,

934
00:51:17,280 --> 00:51:20,880
you have all this curly braces
that identifies the block, right?

935
00:51:21,320 --> 00:51:26,160
So just visually, just visually switch
case looks cleaner for me.

936
00:51:26,280 --> 00:51:26,920
Right.

937
00:51:26,960 --> 00:51:30,120
The switch case looks
clean it from second thing,

938
00:51:30,120 --> 00:51:35,400
when it comes to this switch based.

939
00:51:35,400 --> 00:51:39,200
Yes, switch
keys is also fast in this case,

940
00:51:39,200 --> 00:51:44,880
which case is faster Now let's do
your guy is not going to see it.

941
00:51:44,880 --> 00:51:45,080
Right?

942
00:51:45,080 --> 00:51:47,800
You guys are not going to see
the because is going to run.

943
00:51:47,920 --> 00:51:49,840
Right. Because Java runs very quickly.

944
00:51:49,840 --> 00:51:54,400
Our code is very small
and now let me put a breakpoint.

945
00:51:54,400 --> 00:51:59,880
This one, we put a break.

946
00:51:59,880 --> 00:52:04,640
So now what we are going through there,
if else if statement, right.

947
00:52:04,640 --> 00:52:09,320
So our variable B has a values
I by the way,

948
00:52:09,320 --> 00:52:13,440
we said that our eve statement our
if eve ls eve blocks

949
00:52:13,440 --> 00:52:17,920
it's a ladder
E right like one by one by one by one.

950
00:52:18,120 --> 00:52:21,200
Your condition is going
and it has to be checked.

951
00:52:21,200 --> 00:52:23,480
Right? So in here we're saying, hey,

952
00:52:25,000 --> 00:52:27,120
if the they is equal to one right.

953
00:52:27,120 --> 00:52:29,720
So what? Inside the eve, right?

954
00:52:29,720 --> 00:52:33,960
What are we doing
is we're checking a condition, right?

955
00:52:33,960 --> 00:52:35,480
We have to verify.

956
00:52:35,480 --> 00:52:40,080
Hey, if did they is equal to one
if the days equals to one.

957
00:52:40,080 --> 00:52:42,440
Right.
We always take in bullying condition.

958
00:52:42,880 --> 00:52:44,400
True or false?

959
00:52:44,400 --> 00:52:47,280
Hey, is that equal to one? Yes or no? No.

960
00:52:47,480 --> 00:52:49,560
If it is equal to two, yes or no?

961
00:52:49,560 --> 00:52:53,920
If that is equal to three, yes or no,
yes or no, if that is equal to five.

962
00:52:53,920 --> 00:52:54,120
Right.

963
00:52:54,120 --> 00:52:58,120
So the way the else eve what it does,
it goes one by one by one

964
00:52:58,120 --> 00:53:02,040
by one and the checks
until it finds the matching condition.

965
00:53:02,040 --> 00:53:02,560
Right.

966
00:53:02,560 --> 00:53:05,720
And once it finds its exit. Why.

967
00:53:05,880 --> 00:53:09,920
Because condition
because condition became true.

968
00:53:09,920 --> 00:53:10,560
Right.

969
00:53:11,120 --> 00:53:14,160
So now when it comes to this switch, right

970
00:53:14,160 --> 00:53:18,120
when it comes to the switch,
we say switch statement.

971
00:53:18,120 --> 00:53:21,600
It's a value based switch.

972
00:53:21,600 --> 00:53:23,560
Statement is a value based.

973
00:53:23,560 --> 00:53:29,520
So what do we look in to be looking
for the particular value of this variable?

974
00:53:29,920 --> 00:53:33,320
Where do we specify the value,
the specified the value

975
00:53:33,320 --> 00:53:36,960
in the matching cases,
matching cases for what?

976
00:53:36,960 --> 00:53:39,560
Matching cases
for this particular variable.

977
00:53:39,840 --> 00:53:42,960
So now let's look where you could go
right away.

978
00:53:42,960 --> 00:53:45,840
So now it's on the line 27.

979
00:53:45,840 --> 00:53:49,920
And now what is the value of the value
of these equals to five?

980
00:53:49,920 --> 00:53:56,480
So what your code goes, your code goes
jumps right away to the matching case.

981
00:53:56,480 --> 00:54:01,440
It does not have to go
in, check every single case. Why?

982
00:54:01,840 --> 00:54:06,240
Because your day holds
this particular value.

983
00:54:06,480 --> 00:54:09,080
And then he's saying, hey,

984
00:54:09,600 --> 00:54:13,080
if the value of this one, it's
not taking the condition.

985
00:54:13,080 --> 00:54:17,800
It goes by the value
value of date is equal to five.

986
00:54:17,840 --> 00:54:23,360
Then what your code goes, you code goes
and jumps right away to the matching page.

987
00:54:23,400 --> 00:54:25,800
It does not evaluate the condition.

988
00:54:25,800 --> 00:54:28,280
It does not need to check for true
or false.

989
00:54:28,560 --> 00:54:33,120
It knows its value
and they jumps right away to the match.

990
00:54:33,120 --> 00:54:35,720
You guys register the right matching

991
00:54:36,120 --> 00:54:39,960
and then it goes Friday
and then sees break and gets

992
00:54:40,920 --> 00:54:41,800
it. So that's

993
00:54:41,800 --> 00:54:45,600
why here we're saying a switch.

994
00:54:45,600 --> 00:54:47,800
Which statement is it valid based

995
00:54:50,160 --> 00:54:52,480
is it that would be

996
00:54:52,760 --> 00:54:54,440
there would it?

997
00:54:54,600 --> 00:54:55,160
Right.

998
00:54:55,560 --> 00:54:59,200
And when we talk about Eve,
we know that Eve exists,

999
00:55:00,240 --> 00:55:01,080
isn't

1000
00:55:01,880 --> 00:55:04,600
the either

1001
00:55:05,680 --> 00:55:07,800
condition based condition,

1002
00:55:07,800 --> 00:55:11,400
which means we have to check
for the condition, right?

1003
00:55:11,640 --> 00:55:13,080
True or false?

1004
00:55:13,080 --> 00:55:13,920
True or false.

1005
00:55:13,920 --> 00:55:14,480
Right.

1006
00:55:14,480 --> 00:55:15,840
True or

1007
00:55:16,960 --> 00:55:20,440
false.

1008
00:55:20,440 --> 00:55:24,000
So we can write code directly.

1009
00:55:24,000 --> 00:55:25,320
Yes, we can go.

1010
00:55:25,320 --> 00:55:26,880
But there will be some exception, right?

1011
00:55:26,880 --> 00:55:30,200
This is I'm just trying to show you
what can be done do.

1012
00:55:30,240 --> 00:55:33,600
Of course we don't have to go for it if

1013
00:55:34,440 --> 00:55:36,720
in the example in this case without else

1014
00:55:36,800 --> 00:55:42,600
if you guys let me finish all the examples
in here and then I'll show you.

1015
00:55:42,720 --> 00:55:43,760
Okay? I'll show you.

1016
00:55:44,720 --> 00:55:45,320
Okay.

1017
00:55:45,320 --> 00:55:46,200
All right.

1018
00:55:46,200 --> 00:55:49,480
So your statement is a conditional based,
right?

1019
00:55:50,200 --> 00:55:52,640
When we look at the

1020
00:55:53,080 --> 00:55:54,400
when we look at the context.

1021
00:55:54,400 --> 00:56:00,040
Right, we always say e right in here
we specify ruling condition.

1022
00:56:00,560 --> 00:56:03,160
We always march
to have a condition in there.

1023
00:56:03,480 --> 00:56:08,840
And then we have this particular thing
right then this is for our IT statement

1024
00:56:08,840 --> 00:56:13,320
works right the way this switch statement,
the syntax for this week

1025
00:56:13,680 --> 00:56:17,880
we have the variable right
in which we have for switch.

1026
00:56:17,880 --> 00:56:20,240
We specify the variable, right?

1027
00:56:20,240 --> 00:56:23,360
And then what do we do in case cases?

1028
00:56:23,720 --> 00:56:28,320
In using cases we provide values, right?

1029
00:56:28,320 --> 00:56:30,600
The only one in the value one is true.

1030
00:56:30,880 --> 00:56:33,120
Then we can have something else, right?

1031
00:56:33,640 --> 00:56:37,200
Or we'll be in here and then break right?

1032
00:56:37,200 --> 00:56:38,960
Or here's

1033
00:56:40,240 --> 00:56:43,360
another value that we choose, right?

1034
00:56:43,360 --> 00:56:45,120
And then the same thing.

1035
00:56:45,120 --> 00:56:47,160
We will have a code, right?

1036
00:56:47,280 --> 00:56:49,880
And then there will be some break. Right?

1037
00:56:50,280 --> 00:56:51,920
So what are we saying?

1038
00:56:51,920 --> 00:56:56,280
If statement is a condition based when we

1039
00:56:56,360 --> 00:57:01,240
when we look into the switch statements,
which statement is a value based?

1040
00:57:01,240 --> 00:57:01,680
Right.

1041
00:57:01,680 --> 00:57:04,840
It's a value based.

1042
00:57:04,840 --> 00:57:06,720
And now let's look again.

1043
00:57:06,720 --> 00:57:08,720
Let's look again.
What do we know what will happen?

1044
00:57:08,720 --> 00:57:11,240
Let's say
I'm going to enter invalidate, right?

1045
00:57:11,280 --> 00:57:12,840
I'm going to enter it.

1046
00:57:12,840 --> 00:57:15,520
Remember to take

1047
00:57:16,000 --> 00:57:18,880
away my statement right
The way my if statement

1048
00:57:18,880 --> 00:57:23,480
does, it goes in checks one by one,
by one by one.

1049
00:57:23,480 --> 00:57:26,640
It checks if it has to evaluate. Right.

1050
00:57:27,000 --> 00:57:30,960
It doesn't know right away
if the condition is true or false.

1051
00:57:30,960 --> 00:57:35,240
What it does, it values
hey is equals to six No right.

1052
00:57:35,280 --> 00:57:37,160
And it goes checks another condition.

1053
00:57:37,160 --> 00:57:39,800
It goes check
another condition. Condition.

1054
00:57:39,800 --> 00:57:41,160
None of the condition was true.

1055
00:57:41,160 --> 00:57:47,080
We went to the X by the way, this switch
works as switches that value base.

1056
00:57:47,080 --> 00:57:47,640
Right?

1057
00:57:47,640 --> 00:57:51,360
So where it goes,
it finds a matching value right away.

1058
00:57:51,600 --> 00:57:56,360
If it's not finding the match value,
it jumps right away to the default.

1059
00:57:56,400 --> 00:57:58,680
So you guys see
it did not have to go to the case.

1060
00:57:58,680 --> 00:58:02,880
One case to case P So that's why I guess
we are saying that this switch statement

1061
00:58:03,080 --> 00:58:07,080
is faster compared to the else if right.

1062
00:58:07,760 --> 00:58:10,840
But of course guys,
when we talk about faster, of course

1063
00:58:10,840 --> 00:58:14,320
we talk about the millimeter
linearly new seconds, right?

1064
00:58:15,040 --> 00:58:16,240
That comes up.

1065
00:58:17,320 --> 00:58:19,160
And that's two things we already see.

1066
00:58:19,160 --> 00:58:21,360
Right. Switch case code looks cleaner.

1067
00:58:21,360 --> 00:58:24,360
Right. Switch. Case is faster.

1068
00:58:24,440 --> 00:58:24,720
Right.

1069
00:58:24,720 --> 00:58:30,040
It's faster than our
if else, if our E always always checks

1070
00:58:30,040 --> 00:58:34,440
for the pooling condition,
our switch is a value based.

1071
00:58:34,440 --> 00:58:40,080
It knows the value and right away
jumps to the matching cases.

1072
00:58:40,200 --> 00:58:42,200
Right right away jumps to this match.

1073
00:58:42,200 --> 00:58:44,880
It engages it.

1074
00:58:44,880 --> 00:58:47,400
So now let's see why.

1075
00:58:47,840 --> 00:58:50,040
Why do we need a break in?

1076
00:58:50,040 --> 00:58:51,200
You really need a break.

1077
00:58:51,200 --> 00:58:53,360
We don't have to have a break, right?

1078
00:58:53,360 --> 00:58:54,800
So let me

1079
00:58:55,720 --> 00:58:58,120
remove all the breaks

1080
00:59:03,680 --> 00:59:08,160
and see what happens right.

1081
00:59:08,160 --> 00:59:08,840
Okay.

1082
00:59:09,000 --> 00:59:11,880
Now let me change the value of the day.

1083
00:59:12,040 --> 00:59:14,000
I'll change it to three.

1084
00:59:14,000 --> 00:59:14,720
Right.

1085
00:59:15,720 --> 00:59:19,200
Change it to three. So

1086
00:59:19,440 --> 00:59:21,360
that way our

1087
00:59:22,520 --> 00:59:24,880
the way it goes, we know, right?

1088
00:59:24,880 --> 00:59:27,200
True. Not true. No.

1089
00:59:27,200 --> 00:59:30,440
Once it finds a true right, once
it finds a true,

1090
00:59:31,000 --> 00:59:34,080
it executes and then your code gets out.

1091
00:59:34,400 --> 00:59:34,760
Right?

1092
00:59:34,760 --> 00:59:41,000
You code gets out out of the entire
if else if blocks right

1093
00:59:41,040 --> 00:59:45,520
whichever blocks you have,
it will get out from your statement.

1094
00:59:45,520 --> 00:59:46,080
Right.

1095
00:59:46,080 --> 00:59:50,600
As soon as it finds one true condition,
it gets out from your statement.

1096
00:59:50,760 --> 00:59:51,120
Right.

1097
00:59:51,120 --> 00:59:52,120
That's it's out.

1098
00:59:52,120 --> 00:59:55,080
It's not going to go in
check other conditions.

1099
00:59:55,440 --> 00:59:58,920
So now, when it comes to this switch,
right when it comes to this,

1100
00:59:58,920 --> 01:00:03,600
which we already know switches
a value based so it knows its value,

1101
01:00:03,880 --> 01:00:07,600
so it jumps right away to the matching
keys, right then jumps

1102
01:00:07,600 --> 01:00:09,320
right away to the matching keys.

1103
01:00:09,320 --> 01:00:11,800
So now will it funny. Yes it fine.

1104
01:00:12,240 --> 01:00:13,640
Will it execute it.

1105
01:00:13,640 --> 01:00:18,600
Yes, execute it executed Wednesday
But then what happens

1106
01:00:19,000 --> 01:00:21,960
because you could does not see a break.

1107
01:00:22,120 --> 01:00:25,320
Okay.
You could not see a break. So a break.

1108
01:00:25,440 --> 01:00:26,600
Key word.

1109
01:00:26,600 --> 01:00:27,400
What a break.

1110
01:00:27,400 --> 01:00:29,160
What does it tell us?

1111
01:00:29,160 --> 01:00:30,800
Get out.

1112
01:00:30,800 --> 01:00:32,840
Get out of my block.

1113
01:00:33,120 --> 01:00:35,240
What do we mean, get out of my block?

1114
01:00:35,520 --> 01:00:38,000
As soon as you find the matching keys.

1115
01:00:38,280 --> 01:00:41,280
Break, break block of court.

1116
01:00:41,280 --> 01:00:43,040
It means break hours.

1117
01:00:43,040 --> 01:00:45,200
Switch and get out.

1118
01:00:45,560 --> 01:00:46,800
Get out. Right.

1119
01:00:46,800 --> 01:00:51,320
So when you code,
when the Java does not see the break, guys

1120
01:00:51,520 --> 01:00:54,360
is just going to keep running,
running, run.

1121
01:00:54,360 --> 01:00:56,400
It is going to keep falling.

1122
01:00:56,720 --> 01:01:00,640
So now because there's no break,
there's nothing stopping Java code.

1123
01:01:00,640 --> 01:01:01,800
So your code will go.

1124
01:01:01,800 --> 01:01:04,520
Just jump into the cases, cases, cases

1125
01:01:04,920 --> 01:01:08,960
until it files to the last one,
which is default.

1126
01:01:09,240 --> 01:01:11,560
That's
why now you want to see the wrong date.

1127
01:01:11,600 --> 01:01:14,840
But what it did, guys, after Wednesday

1128
01:01:15,120 --> 01:01:18,440
because there was nothing
stop in your Java code.

1129
01:01:18,480 --> 01:01:22,720
It fell to the gates for it
all to the case five it's

1130
01:01:22,720 --> 01:01:27,280
also 6 to 7
and and then it came to the default.

1131
01:01:27,360 --> 01:01:31,400
Okay so that's why it's important guys
to use the break

1132
01:01:31,640 --> 01:01:33,960
inside your switch statement.

1133
01:01:34,320 --> 01:01:35,920
So what a break does.

1134
01:01:35,920 --> 01:01:41,520
Hey as soon as you find the matching keys,
as soon as you find the matching keys,

1135
01:01:42,600 --> 01:01:44,000
get out.

1136
01:01:44,040 --> 01:01:46,840
Get out. You are done, right? Get out.

1137
01:01:46,840 --> 01:01:51,080
So if there's no break,
your Java cannot get out

1138
01:01:51,440 --> 01:01:54,160
from where
it can get out from your switch, block

1139
01:01:54,480 --> 01:01:57,840
any group and continue
following full info.

1140
01:01:58,520 --> 01:02:03,160
So that's why it's very, very important,
guys, to use a break inside you,

1141
01:02:04,120 --> 01:02:19,640
which is okay.

1142
01:02:19,640 --> 01:02:21,520
Yes, we can have different data types.

1143
01:02:21,520 --> 01:02:23,240
Yes, we can have different types.

1144
01:02:23,240 --> 01:02:26,160
And first at which data to be looking.

1145
01:02:26,160 --> 01:02:32,320
It's our variable days of which data type.

1146
01:02:32,320 --> 01:02:33,720
The integer.

1147
01:02:33,720 --> 01:02:36,400
Right can work with other data types.

1148
01:02:36,400 --> 01:02:37,600
Yes, it can work.

1149
01:02:37,600 --> 01:02:39,600
But does it has a limitation?

1150
01:02:39,840 --> 01:02:41,880
Yes, of course it has a limitation.

1151
01:02:41,880 --> 01:02:44,080
Okay. There's no
we don't have to have the else.

1152
01:02:44,080 --> 01:02:48,840
If I just brought you else
if just to show you the differences.

1153
01:02:48,840 --> 01:02:53,240
There are similarities,
but there is our differences.

1154
01:02:53,320 --> 01:02:54,960
Okay. There is a differences.

1155
01:02:56,120 --> 01:02:58,080
And we want you to guys we want you do
more.

1156
01:02:58,080 --> 01:03:00,440
Switch statements the way

1157
01:03:02,040 --> 01:03:03,120
we are going to see

1158
01:03:03,120 --> 01:03:06,240
where you can add logical operators,
where you can unlock that.

1159
01:03:06,280 --> 01:03:06,960
Okay.

1160
01:03:06,960 --> 01:03:09,880
So at first, just understand right now

1161
01:03:09,880 --> 01:03:13,320
this switch case
is another conditional statement

1162
01:03:13,560 --> 01:03:16,080
which can be a great substitute
for the else.

1163
01:03:16,080 --> 01:03:16,920
If right.

1164
01:03:16,920 --> 01:03:20,640
With the help of switch,
we can make our code cleaner right

1165
01:03:21,160 --> 01:03:25,520
as switch keys is faster than the else
if right.

1166
01:03:26,080 --> 01:03:28,920
So switch keys is a valid base.

1167
01:03:28,920 --> 01:03:29,720
Right.

1168
01:03:29,760 --> 01:03:31,040
Or we provide it.

1169
01:03:31,040 --> 01:03:33,640
We provided a values value.

1170
01:03:33,960 --> 01:03:36,120
Value value to what?

1171
01:03:36,560 --> 01:03:38,400
To the variable.

1172
01:03:38,400 --> 01:03:41,640
How do we provide a values we providing

1173
01:03:41,680 --> 01:03:46,880
is the how help of the keyword case
right when we talk about else

1174
01:03:46,920 --> 01:03:51,480
if else if as a condition base,
we have to evaluate

1175
01:03:51,480 --> 01:03:55,440
if the condition is true,
then I'm going inside this block.

1176
01:03:55,800 --> 01:04:00,680
If this condition is true, then
I'm going inside this swap for a switch.

1177
01:04:00,920 --> 01:04:02,640
It's a value.

1178
01:04:02,640 --> 01:04:05,200
Your variable. No. Okay.

1179
01:04:05,200 --> 01:04:07,440
They okay, my value of the day is three,

1180
01:04:07,600 --> 01:04:11,040
but right away,
if it runs to the matching case.

1181
01:04:11,640 --> 01:04:16,000
Now inside your switch block
inside your switch work, right.

1182
01:04:16,800 --> 01:04:21,720
Whenever you're providing
the matching cases right after the code,

1183
01:04:21,760 --> 01:04:24,880
right after the code that we provide
for now we just see that.

1184
01:04:24,880 --> 01:04:27,480
But we can put some operation instance,
right?

1185
01:04:27,520 --> 01:04:29,480
We can put some operation.

1186
01:04:29,480 --> 01:04:32,920
Then what we will have to specify,
We have to specify a break.

1187
01:04:33,440 --> 01:04:34,000
Break?

1188
01:04:34,000 --> 01:04:36,880
You want what it does, It tells Java.

1189
01:04:36,880 --> 01:04:39,880
Hey, once you find the case,

1190
01:04:40,000 --> 01:04:43,560
once you find the matching case,
execute this statement.

1191
01:04:43,560 --> 01:04:47,520
And after you execute this statement,
please break.

1192
01:04:47,920 --> 01:04:49,560
Please get out.

1193
01:04:49,560 --> 01:04:52,120
Break my code, break my code.

1194
01:04:52,120 --> 01:04:55,320
Get out. Let's do.

1195
01:04:55,400 --> 01:04:57,720
Yes, we are coming.
We will come to the limitation.

1196
01:04:58,120 --> 01:05:00,120
We are coming to the limitation.

1197
01:05:00,120 --> 01:05:04,640
So let's look at all the good things
that our switch statement can do.

1198
01:05:04,640 --> 01:05:08,360
And then, of course,
we will see then why Java uses the switch.

1199
01:05:08,360 --> 01:05:10,640
Then why can we just have switch?

1200
01:05:10,640 --> 01:05:14,760
Why then do we need to else if are there
limitation, there is a limitation, right?

1201
01:05:14,760 --> 01:05:20,760
There's always this pros and cons
to all of the things right.

1202
01:05:20,760 --> 01:05:21,520
Right.

1203
01:05:21,640 --> 01:05:24,600
So we saw how that we need a break, right?

1204
01:05:24,840 --> 01:05:26,880
We saw that we need to break

1205
01:05:26,880 --> 01:05:30,840
in inside our switch statement
right inside our switch.

1206
01:05:30,840 --> 01:05:33,080
BLOCK What do you guys see?

1207
01:05:33,440 --> 01:05:36,200
You see default keyword, right?

1208
01:05:36,240 --> 01:05:37,160
Default keyword

1209
01:05:38,280 --> 01:05:39,280
as limit is

1210
01:05:39,280 --> 01:05:43,320
mentioned,
default is very similar to the else.

1211
01:05:43,320 --> 01:05:44,320
If right.

1212
01:05:44,320 --> 01:05:45,920
What is the default key?

1213
01:05:45,920 --> 01:05:48,560
What is the keyword before this is he

1214
01:05:49,080 --> 01:05:54,360
if the variable
they are not going to have a value of one.

1215
01:05:54,360 --> 01:05:56,680
Not going to have a value of two
and or three.

1216
01:05:56,960 --> 01:05:59,880
If none of the case,
then it will be matching.

1217
01:06:00,320 --> 01:06:02,560
Please come to the default, right?

1218
01:06:02,600 --> 01:06:04,480
Please come to the default.

1219
01:06:04,480 --> 01:06:07,560
And very similar as the URLs block

1220
01:06:07,640 --> 01:06:11,400
very similarly as the as default
is an optional.

1221
01:06:11,400 --> 01:06:12,920
Do you have to have it?

1222
01:06:12,920 --> 01:06:15,040
Look, you don't have to have it. You

1223
01:06:16,600 --> 01:06:18,720
did I do it in my

1224
01:06:19,160 --> 01:06:20,520
my extra

1225
01:06:21,160 --> 01:06:23,960
you are have to have it
no I don't have to have it

1226
01:06:23,960 --> 01:06:28,800
but it's very optional in case
you want to provide that otherwise.

1227
01:06:28,800 --> 01:06:30,960
Right. In case
we want to provide other ways.

1228
01:06:31,520 --> 01:06:35,280
Now when it comes to the default bits,
when it comes to the default

1229
01:06:36,480 --> 01:06:37,440
somewhere.

1230
01:06:37,440 --> 01:06:39,520
So all but the difference.

1231
01:06:39,520 --> 01:06:41,080
The difference of the default.

1232
01:06:41,080 --> 01:06:44,640
That's so now let me ask you,
this is the else part.

1233
01:06:44,640 --> 01:06:45,880
If I want to add.

1234
01:06:45,880 --> 01:06:50,840
Can I add my part anywhere or it
always has to be the last block

1235
01:06:51,120 --> 01:06:53,400
or it can be anywhere inside my if

1236
01:07:03,560 --> 01:07:04,320
so, when it comes

1237
01:07:04,320 --> 01:07:07,600
to our block,
always block has to be less right.

1238
01:07:07,600 --> 01:07:11,400
You cannot just take it out
and I don't know, put it somewhere,

1239
01:07:12,160 --> 01:07:13,600
put it somewhere in here.

1240
01:07:13,600 --> 01:07:16,280
You can't write your
your code will complain.

1241
01:07:16,400 --> 01:07:17,360
The code will complete.

1242
01:07:17,360 --> 01:07:18,600
Right. Compile.

1243
01:07:18,600 --> 01:07:20,720
Tell you what syntax is not correct.

1244
01:07:20,720 --> 01:07:22,200
So now

1245
01:07:23,520 --> 01:07:25,560
you can use only one and switch keys

1246
01:07:27,240 --> 01:07:30,600
and well because yet here you identify.

1247
01:07:30,600 --> 01:07:34,000
And hey, if this condition is true,
this is my eve block.

1248
01:07:34,000 --> 01:07:37,560
If the condition is true in here,
this is what belongs there.

1249
01:07:37,560 --> 01:07:39,040
The else eve block. Right.

1250
01:07:39,040 --> 01:07:41,800
If this code is correct,
it belongs to this part, right?

1251
01:07:42,120 --> 01:07:46,640
When it comes to switch, it's
only one open in one clause right now.

1252
01:07:46,640 --> 01:07:49,920
When you press the default this right else
block

1253
01:07:50,160 --> 01:07:52,560
ls BLOCK Oh, I did not know that.

1254
01:07:53,280 --> 01:07:55,800
LS BLOCK Always, always is.

1255
01:07:55,800 --> 01:07:59,360
The last block inside your eve statement,
right?

1256
01:07:59,600 --> 01:08:02,160
It's always
the last block inside your statement.

1257
01:08:02,720 --> 01:08:06,400
Now, when it comes to the default default,

1258
01:08:06,400 --> 01:08:11,320
guys can anywhere inside you switch case

1259
01:08:11,640 --> 01:08:15,240
default can be anywhere in the quality
for this first.

1260
01:08:15,360 --> 01:08:16,200
Yeah, no problem.

1261
01:08:16,200 --> 01:08:18,440
You can put defaults first.

1262
01:08:18,440 --> 01:08:19,960
Input in the middle.

1263
01:08:19,960 --> 01:08:22,280
Yes, you can put it in the middle. Right.

1264
01:08:22,280 --> 01:08:26,080
So now when it comes to the default,
it can be anywhere.

1265
01:08:26,440 --> 01:08:29,800
It can be sequence this or any sequence.

1266
01:08:29,800 --> 01:08:33,960
But of course,
because we do want to write a code

1267
01:08:34,360 --> 01:08:36,960
more logical, write more understandable.

1268
01:08:36,960 --> 01:08:41,200
Yes because it's a value based,
it does not have to test any condition.

1269
01:08:41,200 --> 01:08:41,760
Right.

1270
01:08:41,760 --> 01:08:44,080
If the days will be noteboom,
it knows that

1271
01:08:44,520 --> 01:08:48,560
not none of the keys to imagine
it will jump to the default right away.

1272
01:08:48,640 --> 01:08:50,000
Right? It will go to this.

1273
01:08:50,000 --> 01:08:51,120
It's a value based.

1274
01:08:51,120 --> 01:08:53,760
It knows the matching
value of the variable.

1275
01:08:54,000 --> 01:08:58,920
So if you think if a lot of the cases
will match, it knows where to jump.

1276
01:08:59,160 --> 01:08:59,440
Right?

1277
01:09:00,480 --> 01:09:02,040
So now,

1278
01:09:02,040 --> 01:09:04,840
because your default right

1279
01:09:05,000 --> 01:09:07,760
can be anywhere, your code

1280
01:09:08,040 --> 01:09:10,480
because it can be anywhere
inside your code,

1281
01:09:11,720 --> 01:09:13,640
if it can be anywhere,

1282
01:09:13,640 --> 01:09:16,080
then you guys can need to have a break

1283
01:09:17,200 --> 01:09:19,280
because if you are, they will equal.

1284
01:09:19,280 --> 01:09:22,920
For example,
if the they will have a value of eight.

1285
01:09:23,000 --> 01:09:23,320
Right.

1286
01:09:23,320 --> 01:09:26,080
If you
they will have the value of eight. Right.

1287
01:09:26,080 --> 01:09:28,000
They equals to all.

1288
01:09:28,000 --> 01:09:31,680
Then you could once
just enter this switch.

1289
01:09:31,680 --> 01:09:31,960
Right.

1290
01:09:31,960 --> 01:09:36,200
Once this enter this which you will go
right away to the default

1291
01:09:37,080 --> 01:09:39,600
and then of course
it will execute this statement.

1292
01:09:40,000 --> 01:09:43,920
Then your java will see
the break were in using the break.

1293
01:09:43,920 --> 01:09:47,560
It will help
Java to get from the switch block.

1294
01:09:47,560 --> 01:09:48,880
It will jump right away.

1295
01:09:48,880 --> 01:09:51,600
Outside,
you will jump right in without sex.

1296
01:09:52,000 --> 01:09:56,680
So no,
but of course, what we want to do right,

1297
01:09:56,680 --> 01:10:02,120
what we want to do, I probably would not
would default on very top, Right.

1298
01:10:02,120 --> 01:10:06,000
I would not put you for the very top
because we just want make

1299
01:10:06,000 --> 01:10:08,160
a nice and clear and logical.

1300
01:10:09,000 --> 01:10:10,120
Logical. Right.

1301
01:10:10,120 --> 01:10:15,160
You want to see hey, I want to see that
if none of the cases are not,

1302
01:10:15,160 --> 01:10:18,960
the cases will be matching,
then I want you have a default, right?

1303
01:10:19,240 --> 01:10:22,080
I always always prefer
to put on the bottom.

1304
01:10:22,720 --> 01:10:27,520
So now when your default is on the bottom
base,

1305
01:10:28,000 --> 01:10:32,520
your break is very optional
to be inside the default.

1306
01:10:32,760 --> 01:10:35,800
Okay. Exactly right.

1307
01:10:35,800 --> 01:10:39,520
So if you put a break in here,
if you put default as a last statement

1308
01:10:39,840 --> 01:10:44,880
the way it has the LS block, then you guys
don't need really any break right? Why?

1309
01:10:44,880 --> 01:10:48,000
Because when your days will be equal
to eight, right?

1310
01:10:48,040 --> 01:10:52,520
If your days will be equal to eight,
right, the equals to eight

1311
01:10:52,760 --> 01:10:56,120
your java while executing the code,
it knows

1312
01:10:56,120 --> 01:10:59,880
it will jump
right away to the default, right.

1313
01:10:59,880 --> 01:11:02,160
It will execute this statement.

1314
01:11:02,160 --> 01:11:04,080
And now what happens?

1315
01:11:04,080 --> 01:11:07,040
It will hit the end of this which block.

1316
01:11:07,320 --> 01:11:09,760
So by default it's even

1317
01:11:10,120 --> 01:11:13,840
it's right
it will it will exist in here. Why?

1318
01:11:13,840 --> 01:11:15,320
Because there is no more cases.

1319
01:11:15,320 --> 01:11:17,520
No, there there is no more other things.

1320
01:11:17,520 --> 01:11:18,640
So what we will do,

1321
01:11:19,920 --> 01:11:22,800
it will integrate, it will

1322
01:11:22,800 --> 01:11:23,520
exist.

1323
01:11:23,520 --> 01:11:25,680
And now when it comes to default, this

1324
01:11:25,680 --> 01:11:29,120
if your default is on the very bottom,
you don't have to have a break.

1325
01:11:29,520 --> 01:11:31,880
But because your default

1326
01:11:32,240 --> 01:11:38,520
can be anywhere inside your switch blog,
if it will be anywhere at the beginning

1327
01:11:38,520 --> 01:11:43,080
or in the middle, please
make sure you get yes.

1328
01:11:43,080 --> 01:11:45,000
So instead of the else we have default.

1329
01:11:45,000 --> 01:11:47,640
Exactly. Exactly.

1330
01:11:47,640 --> 01:11:55,240
Exactly.

1331
01:11:55,240 --> 01:12:01,960
All right.

1332
01:12:01,960 --> 01:12:04,800
That's that's one point

1333
01:12:11,480 --> 01:12:12,560
right there.

1334
01:12:12,600 --> 01:12:14,640
So we looked at the similarities. Right?

1335
01:12:14,640 --> 01:12:15,440
We look

1336
01:12:17,480 --> 01:12:18,800
hashing if your default

1337
01:12:18,800 --> 01:12:22,520
is a very last keyword
inside your switch block.

1338
01:12:22,920 --> 01:12:25,560
If the default is a last keyword inside

1339
01:12:25,560 --> 01:12:28,160
your switch, switch,
then you don't need a break.

1340
01:12:28,560 --> 01:12:33,320
But if your default right, think of this
Now, I'm going to add the default in here.

1341
01:12:34,280 --> 01:12:34,720
When you

1342
01:12:34,720 --> 01:12:37,920
add the
default and I'm not going to add a break

1343
01:12:38,600 --> 01:12:42,840
and now I'm going to put
the day is equal to ten.

1344
01:12:43,280 --> 01:12:45,320
What do this thing will be the output.

1345
01:12:45,440 --> 01:12:48,440
What is this thing
will be the output of my switch statement.

1346
01:12:48,600 --> 01:12:51,440
Can you just tell me
it's my switch difference

1347
01:12:51,880 --> 01:12:54,120
if my day will have the veil lifted.

1348
01:12:54,120 --> 01:12:57,000
First tell me how many outputs

1349
01:12:57,240 --> 01:13:06,920
and which outputs.

1350
01:13:06,920 --> 01:13:07,360
So. Right.

1351
01:13:07,360 --> 01:13:08,680
Of course it knows that

1352
01:13:08,680 --> 01:13:12,920
none of the cases are match,
so it will jump to the default right away.

1353
01:13:13,520 --> 01:13:16,520
It will execute the wrong day
and then happens

1354
01:13:22,880 --> 01:13:24,640
because there's no break.

1355
01:13:24,640 --> 01:13:31,280
What it will do, it will fall to the next
right, it will fall to the next case.

1356
01:13:31,280 --> 01:13:35,080
Then you guys will see Monday
it will execute Monday.

1357
01:13:35,360 --> 01:13:36,920
But then this is the break.

1358
01:13:36,920 --> 01:13:39,800
Break tells me, hey, get out,
get out. Right.

1359
01:13:39,800 --> 01:13:42,880
And then only lock the use and break
it will get out.

1360
01:13:43,080 --> 01:13:45,600
Right. So you're going to run

1361
01:13:46,840 --> 01:13:47,440
right?

1362
01:13:47,440 --> 01:13:48,240
Plan to run.

1363
01:13:48,240 --> 01:13:49,160
That's why

1364
01:13:51,040 --> 01:13:53,600
on my day, let me change it to tend to

1365
01:13:57,320 --> 01:13:57,640
right.

1366
01:13:58,040 --> 01:13:58,760
That's why I'm here.

1367
01:13:58,760 --> 01:14:02,720
You guys see, you will tell me wrong day
right from here.

1368
01:14:02,720 --> 01:14:04,600
It will tell me the wrong day.

1369
01:14:04,600 --> 01:14:06,440
It will go right away to the default.

1370
01:14:06,440 --> 01:14:09,320
But because default is on top of this.

1371
01:14:09,480 --> 01:14:10,320
Got a break.

1372
01:14:10,320 --> 01:14:13,720
That's why it will fall to the

1373
01:14:14,000 --> 01:14:15,600
break. Yes, Break. Very important.

1374
01:14:15,600 --> 01:14:19,400
This break tells exist my block of code.

1375
01:14:19,760 --> 01:14:20,520
They exist.

1376
01:14:20,520 --> 01:14:22,400
My block of block

1377
01:14:23,400 --> 01:14:26,480
and like we will be using this
in other blocks of code

1378
01:14:26,720 --> 01:14:30,760
so what a break always does
it just get out right Get out from where?

1379
01:14:31,200 --> 01:14:33,240
From this particular block of code.

1380
01:14:33,440 --> 01:14:34,320
That's what I

1381
01:14:35,760 --> 01:14:38,520
think.

1382
01:14:38,520 --> 01:14:41,400
But as I said, my preference, I would go

1383
01:14:41,640 --> 01:14:44,760
or before I went on the very bottom

1384
01:14:45,200 --> 01:14:48,520
only and only after I provide all my two

1385
01:14:48,640 --> 01:14:53,240
cases, I could basically

1386
01:14:56,040 --> 01:14:57,360
look all right.

1387
01:14:57,360 --> 01:15:02,960
And when I was teaching the last bad
guys, students found its similarity.

1388
01:15:02,960 --> 01:15:03,240
Right.

1389
01:15:03,240 --> 01:15:07,160
So this sets our if statement
because equal lather

1390
01:15:07,200 --> 01:15:10,560
if right it's
you will love letter by letter

1391
01:15:10,600 --> 01:15:14,760
verifying hey that these equals to one
then you have to step to the next one.

1392
01:15:14,760 --> 01:15:19,000
If it's two if it's three and they said
this which case is like your elevator.

1393
01:15:19,120 --> 01:15:19,440
Right.

1394
01:15:19,440 --> 01:15:22,920
It's like your elevator
it knows the value right away.

1395
01:15:22,920 --> 01:15:25,800
It knows to
which floor it means to go right away.

1396
01:15:26,000 --> 01:15:28,800
I need to go to the day number five. Boom.

1397
01:15:28,800 --> 01:15:31,320
We just write. It does not stop.
You're in here.

1398
01:15:31,560 --> 01:15:35,560
It goes to the matching case right away
and it exists.

1399
01:15:36,160 --> 01:15:40,960
It. So when there is a case, it's right.

1400
01:15:41,560 --> 01:15:47,120
When there is a cases where we have to
check for the equality case

1401
01:15:48,120 --> 01:15:48,840
in which

1402
01:15:48,840 --> 01:15:53,440
situations, which
case will be a perfect statement to use.

1403
01:15:53,440 --> 01:15:56,880
Right, perfect set
when we check for equality because.

1404
01:15:56,880 --> 01:15:58,800
Look, guys,
what do we check in here? Missing eight.

1405
01:15:58,800 --> 01:16:02,440
If the day is equal,
you would always say case one right?

1406
01:16:03,000 --> 01:16:06,480
Then if these two keys to write

1407
01:16:06,880 --> 01:16:09,280
any time we check for equality,

1408
01:16:09,680 --> 01:16:12,320
then what is the best statement?

1409
01:16:12,320 --> 01:16:13,520
Better or worse?

1410
01:16:13,520 --> 01:16:16,120
Which statement will be better to go for?

1411
01:16:16,200 --> 01:16:18,480
Why? Because code is cleaner.

1412
01:16:18,680 --> 01:16:21,120
Because code is faster. Right?

1413
01:16:21,360 --> 01:16:24,800
And it's also like it's very easy
to read, right?

1414
01:16:24,840 --> 01:16:26,040
It's very easy to read.

1415
01:16:26,040 --> 01:16:26,480
You know.

1416
01:16:26,480 --> 01:16:29,920
Hey, you're saying that
the value of the day is one day of the day

1417
01:16:30,120 --> 01:16:32,520
three, the value of the days four
and so on.

1418
01:16:32,920 --> 01:16:36,720
Well, in here,
every single condition has to be evaluated

1419
01:16:36,960 --> 01:16:40,200
right? Okay.

1420
01:16:40,200 --> 01:16:43,400
That's that's where we're going
to go over the limitation here.

1421
01:16:43,680 --> 01:16:48,440
Okay.

1422
01:16:48,440 --> 01:16:51,240
Can we do can we do the nesting as.

1423
01:16:51,240 --> 01:16:54,240
Yes, there's a crazy thing
then the crazy thing that we can do.

1424
01:16:54,240 --> 01:16:56,520
Okay. But we will go over the limitation.

1425
01:16:57,640 --> 01:16:59,320
Really the limitation.

1426
01:16:59,320 --> 01:17:00,840
Now let's look.

1427
01:17:00,840 --> 01:17:04,440
Well, actually, guys, let me leave
the current here.

1428
01:17:04,800 --> 01:17:09,240
We'll take a break after break,
we will look into different type

1429
01:17:09,240 --> 01:17:10,200
of variables, right?

1430
01:17:10,200 --> 01:17:14,560
Because right now what we did,
we had a variable of which type

1431
01:17:14,560 --> 01:17:19,200
we provide the variable of the integer
type in the next, in the next.

1432
01:17:19,200 --> 01:17:24,760
After the break, we will look what
if my variable is of the string type here?

1433
01:17:24,760 --> 01:17:27,480
What if my variable
is the character type? Right?

1434
01:17:27,680 --> 01:17:30,080
And then we will look into a limitation,
right?

1435
01:17:30,320 --> 01:17:32,400
There cannot be a perfect thing, right?

1436
01:17:32,400 --> 01:17:35,600
There is always
there is always a great things,

1437
01:17:35,600 --> 01:17:38,400
but those great things will have its own
constants.

1438
01:17:38,400 --> 01:17:39,200
Well, right.

1439
01:17:39,200 --> 01:17:42,720
And we will look what is
will be the limitation of my switches.

1440
01:17:42,840 --> 01:17:43,040
Okay.

1441
01:17:44,040 --> 01:17:48,000
All Hi, this 11 1130.

1442
01:17:48,000 --> 01:17:50,360
Let's take a break. Deal.

1443
01:17:50,360 --> 01:17:52,640
Let's take a break till

1444
01:17:52,680 --> 01:17:53,840
1145.

1445
01:17:53,840 --> 01:17:54,480
Right.

1446
01:17:57,720 --> 01:17:58,960
I'm going to leave you

1447
01:17:58,960 --> 01:19:08,640
the code of my switch statement right.

1448
01:19:08,640 --> 01:19:09,200
Right.

1449
01:19:10,080 --> 01:19:11,440
So another example of this.

1450
01:19:11,440 --> 01:19:15,040
We so we will take variable
right in the signature.

1451
01:19:15,200 --> 01:19:15,440
Right.

1452
01:19:15,440 --> 01:19:19,120
Let's take a char or specify gender.

1453
01:19:19,200 --> 01:19:21,600
Right. For example.

1454
01:19:22,000 --> 01:19:23,720
For example for now we know bringing

1455
01:19:23,720 --> 01:19:26,760
scalar for knowledge
is hardcoded in here, right.

1456
01:19:26,960 --> 01:19:28,720
For example. Right.

1457
01:19:28,720 --> 01:19:32,960
I don't know or whatever
regulatory system will go for this right.

1458
01:19:33,440 --> 01:19:36,760
So now what we want just say right

1459
01:19:36,760 --> 01:19:40,440
if there is m we can specify,
we can give a description.

1460
01:19:40,440 --> 01:19:42,200
If it's a male in the

1461
01:19:42,200 --> 01:19:46,000
is equal to EB, then the description
for the gender will be a female.

1462
01:19:46,280 --> 01:19:47,760
Otherwise we can say

1463
01:19:48,760 --> 01:19:49,680
otherwise we can

1464
01:19:49,680 --> 01:19:52,680
say, I don't know, unknown or disclosed.

1465
01:19:52,680 --> 01:19:54,240
Right. For example. Right.

1466
01:19:54,240 --> 01:19:55,600
So now what do we have?

1467
01:19:55,600 --> 01:19:59,840
We can we are saying
hey now based on the gender,

1468
01:19:59,840 --> 01:20:04,080
I want to say male or female
or I don't know

1469
01:20:05,640 --> 01:20:07,080
or unknown. Right.

1470
01:20:07,080 --> 01:20:08,640
So it means right.

1471
01:20:08,640 --> 01:20:11,960
I have some
I can specify based on my condition

1472
01:20:11,960 --> 01:20:17,440
I can specify a specific value
now before we knew only its statement.

1473
01:20:17,440 --> 01:20:20,120
Now we also know
what's with switch statement, right?

1474
01:20:20,120 --> 01:20:22,200
In this case, what are we chicken.

1475
01:20:22,200 --> 01:20:24,160
We will be checking for the equality.

1476
01:20:24,160 --> 01:20:24,720
Right.

1477
01:20:24,720 --> 01:20:28,560
Hey, if gender is equal to M or gender

1478
01:20:28,560 --> 01:20:32,280
is equal to F or gender equals
to something else.

1479
01:20:32,280 --> 01:20:35,400
Right. Based on that equality.

1480
01:20:35,400 --> 01:20:35,760
Right.

1481
01:20:35,760 --> 01:20:38,280
We will give a different different
outputs. Right.

1482
01:20:38,640 --> 01:20:41,760
So now when we check in
for the equality this, when we check in

1483
01:20:41,760 --> 01:20:44,600
for the equality, we can easily go for it.

1484
01:20:44,800 --> 01:20:46,400
Switch statement. Right.

1485
01:20:46,400 --> 01:20:48,120
So what we will do all this which

1486
01:20:49,760 --> 01:20:51,760
we will do switch right.

1487
01:20:51,760 --> 01:20:54,120
So which variable to which variable?

1488
01:20:54,120 --> 01:20:57,240
We will be providing different values
to each variable based

1489
01:20:59,800 --> 01:21:01,960
to gender, right to a gender.

1490
01:21:03,520 --> 01:21:04,400
And again there. Right.

1491
01:21:04,400 --> 01:21:06,960
And then opening switch. BLOCK. Right.

1492
01:21:07,280 --> 01:21:11,760
So now how do we values
how do we provide different values?

1493
01:21:11,760 --> 01:21:15,440
What do we need to use?

1494
01:21:15,440 --> 01:21:17,280
We need to use cases, right?

1495
01:21:17,280 --> 01:21:22,040
The only thing right nowadays
when we talk about the variable gender,

1496
01:21:22,040 --> 01:21:26,760
variable gender, if is of which type
is of the charge type, right?

1497
01:21:27,120 --> 01:21:30,800
So it means this particular variable
can have values

1498
01:21:30,800 --> 01:21:33,080
that specifies a characters, right?

1499
01:21:33,080 --> 01:21:34,920
So no matching values.

1500
01:21:34,920 --> 01:21:36,760
You will go into the cases.

1501
01:21:36,760 --> 01:21:41,720
But now how do we specify
a type of their values?

1502
01:21:42,000 --> 01:21:46,040
We specified them inside
a single quotation case.

1503
01:21:46,320 --> 01:21:47,720
M Right. Case.

1504
01:21:47,720 --> 01:21:50,760
M Hey, if they if the value right in

1505
01:21:50,760 --> 01:21:54,720
the value of the gender
is equal to M right.

1506
01:21:55,080 --> 01:21:57,400
And then we can have is

1507
01:21:58,040 --> 01:22:02,160
value of the gender
is what is equal to the right,

1508
01:22:02,160 --> 01:22:05,400
and then can we have otherwise
we will add the other ones.

1509
01:22:05,400 --> 01:22:10,560
But you guys see matching values
we specify with the help of cases, right?

1510
01:22:11,000 --> 01:22:14,000
But the values must be the same

1511
01:22:14,760 --> 01:22:17,920
as your variable,
your variable of the type.

1512
01:22:17,920 --> 01:22:22,560
So it means the values must be specified
as network of values.

1513
01:22:22,560 --> 01:22:24,720
Right. Is there.

1514
01:22:24,720 --> 01:22:28,440
And then we can either go for a C style,
but since we learn the new thing.

1515
01:22:28,440 --> 01:22:28,720
Right.

1516
01:22:28,720 --> 01:22:30,960
So let's add the I don't know description.

1517
01:22:30,960 --> 01:22:33,960
Right. This protection something like that

1518
01:22:35,680 --> 01:22:38,840
string description and in here

1519
01:22:38,840 --> 01:22:39,640
and description.

1520
01:22:39,640 --> 01:22:40,080
Right.

1521
01:22:41,400 --> 01:22:44,560
And recursion equals to, I don't know.

1522
01:22:45,600 --> 01:22:47,280
Male Right.

1523
01:22:47,280 --> 01:22:49,640
Mel And then we said, What do we need?

1524
01:22:49,640 --> 01:22:51,640
We need a break. We need a break.

1525
01:22:51,640 --> 01:22:55,760
So as soon as a gender finds
the matching keys, get out.

1526
01:22:55,920 --> 01:22:56,520
Right?

1527
01:22:57,440 --> 01:22:59,560
It's f description.

1528
01:23:00,320 --> 01:23:02,760
I don't know, equal to

1529
01:23:02,760 --> 01:23:04,320
female, right?

1530
01:23:04,320 --> 01:23:06,920
And then the same thing

1531
01:23:06,960 --> 01:23:08,080
breaks, right?

1532
01:23:08,080 --> 01:23:12,760
Then the same thing breaks in very
similarly as the if statement.

1533
01:23:12,880 --> 01:23:14,720
We can have the ls.

1534
01:23:14,720 --> 01:23:20,040
We don't have to have the right
but in this was good as would you.

1535
01:23:20,520 --> 01:23:24,000
Right so description.

1536
01:23:24,000 --> 01:23:25,760
I don't know. Something unknown right.

1537
01:23:25,760 --> 01:23:30,720
Logo for the unknown.

1538
01:23:30,720 --> 01:23:31,320
Right

1539
01:23:34,800 --> 01:23:35,520
outside.

1540
01:23:35,520 --> 01:23:38,560
Right. The same thing
outside of the switch.

1541
01:23:38,680 --> 01:23:39,520
Switch statement.

1542
01:23:39,520 --> 01:23:45,400
This the way we do outside of the in that
statement right now we can see all right

1543
01:23:46,400 --> 01:23:49,120
so I don't know unless we can print 50

1544
01:23:52,560 --> 01:23:54,760
then the last

1545
01:23:57,720 --> 01:23:59,400
and something like this

1546
01:23:59,400 --> 01:24:01,880
M was equals to M

1547
01:24:03,800 --> 01:24:05,880
means and then this

1548
01:24:05,880 --> 01:24:09,080
the description of

1549
01:24:16,400 --> 01:24:20,800
we between

1550
01:24:20,880 --> 01:24:24,800
what will happen right
this way, what will happen now to

1551
01:24:27,720 --> 01:24:30,720
when there is m
the variable description is not in.

1552
01:24:30,720 --> 01:24:34,440
It is not initialized yet right now

1553
01:24:34,600 --> 01:24:37,440
I would say yes,
which you just see switched in there.

1554
01:24:37,560 --> 01:24:39,960
Right.
What is the value that we hold inside?

1555
01:24:40,160 --> 01:24:41,240
M Right.

1556
01:24:41,240 --> 01:24:42,360
And I would say keys.

1557
01:24:42,360 --> 01:24:44,480
M So your code jumps right away.

1558
01:24:45,120 --> 01:24:46,480
Oh I do. I do.

1559
01:24:46,480 --> 01:24:49,600
You call that
you can just do the matching case, right?

1560
01:24:49,600 --> 01:24:52,440
So now description gets initialized.

1561
01:24:52,560 --> 01:24:56,520
Now the java is break, now it gets out
a lot of stuff

1562
01:24:57,040 --> 01:25:00,600
gets M in the right mix sandwich.

1563
01:25:00,640 --> 01:25:01,520
You need to press

1564
01:25:02,960 --> 01:25:06,560
right?

1565
01:25:06,560 --> 01:25:09,600
If we

1566
01:25:09,960 --> 01:25:14,040
can. There is s and we'll say we switch.

1567
01:25:14,160 --> 01:25:14,520
Right.

1568
01:25:14,520 --> 01:25:17,600
Switch to which variable to provide it.

1569
01:25:17,600 --> 01:25:20,440
A matching keys
is to the variable S right.

1570
01:25:20,800 --> 01:25:22,080
So how do you suppose to

1571
01:25:22,080 --> 01:25:25,480
find the matching keys
as you specify with the keyword keys?

1572
01:25:25,800 --> 01:25:28,640
And then you have to specify
the correct value, right?

1573
01:25:29,560 --> 01:25:30,440
Go female.

1574
01:25:30,440 --> 01:25:31,920
So now you will get initialized.

1575
01:25:31,920 --> 01:25:33,280
This means

1576
01:25:36,040 --> 01:25:38,240
so you know switchboard.

1577
01:25:38,320 --> 01:25:42,960
So now when it comes to the switch block,
remember this what we have to have right?

1578
01:25:43,520 --> 01:25:47,280
There are rules of our switch block there
also power switch.

1579
01:25:47,280 --> 01:25:48,840
BLOCK Okay.

1580
01:25:48,840 --> 01:25:51,760
Our matching cases, right?

1581
01:25:51,760 --> 01:25:53,280
Our matching

1582
01:25:53,640 --> 01:25:56,480
the right must be of

1583
01:25:56,480 --> 01:25:59,920
the same type as the variable, right?

1584
01:26:00,280 --> 01:26:04,720
So now our variable is of which
type of variable is of the charge type.

1585
01:26:05,040 --> 01:26:10,120
So it means every that
we use more of the charge type.

1586
01:26:10,120 --> 01:26:12,880
Right.
As soon as you going to enter. Right.

1587
01:26:13,200 --> 01:26:17,000
Was The difference between previous
M and current M was a difference

1588
01:26:17,000 --> 01:26:17,800
between this value.

1589
01:26:17,800 --> 01:26:25,880
This.

1590
01:26:25,880 --> 01:26:27,880
So now when you add a double course

1591
01:26:27,880 --> 01:26:30,000
you are,
then you find that it's a string right.

1592
01:26:30,000 --> 01:26:35,200
So that's why now who gives you errors
and E and now you come while it tells you

1593
01:26:35,600 --> 01:26:41,160
type mismatch it tells you cannot convert
from strength to charge.

1594
01:26:41,160 --> 01:26:45,200
So basically it's saying, hey,
you trying to give me a matching case

1595
01:26:45,200 --> 01:26:48,960
which is mentioned valley
which is string type of value and.

1596
01:26:48,960 --> 01:26:52,800
Now you want me to fold the string
inside this char, Right.

1597
01:26:52,960 --> 01:26:54,600
I'm sorry, that's mismatch.

1598
01:26:54,600 --> 01:26:55,800
I cannot convert. Right.

1599
01:26:55,800 --> 01:26:58,560
So that's why there are rules in here that

1600
01:26:59,560 --> 01:27:01,240
rules in here that

1601
01:27:01,240 --> 01:27:03,600
your matched value

1602
01:27:03,760 --> 01:27:06,800
must be of the same type as a variable.

1603
01:27:06,920 --> 01:27:07,640
Right

1604
01:27:12,800 --> 01:27:13,200
here.

1605
01:27:13,200 --> 01:27:16,600
What we see right is when we save
for our switch, right?

1606
01:27:17,080 --> 01:27:20,720
The state rules in write the rules
and then you'll go exception

1607
01:27:21,000 --> 01:27:24,840
in which cases we can use, which means

1608
01:27:25,640 --> 01:27:29,160
values in

1609
01:27:30,480 --> 01:27:33,080
this class B Right.

1610
01:27:33,440 --> 01:27:36,280
My must be same data type,

1611
01:27:36,280 --> 01:27:37,600
native type.

1612
01:27:37,840 --> 01:27:39,080
Is it

1613
01:27:39,480 --> 01:27:40,760
variable

1614
01:27:45,160 --> 01:27:50,120
local?

1615
01:27:50,120 --> 01:27:52,840
So values increases, right values.

1616
01:27:52,840 --> 01:27:56,200
In this case, as I do for my value family,
which

1617
01:27:56,640 --> 01:28:00,040
must be the same
type, is the variable inside this switch.

1618
01:28:00,040 --> 01:28:02,040
Right inside the switch.

1619
01:28:02,040 --> 01:28:05,120
Now let me try to add another key case.

1620
01:28:05,400 --> 01:28:09,360
Let me try to add another case
and I'm going to say Keystone.

1621
01:28:09,600 --> 01:28:10,160
Right?

1622
01:28:10,480 --> 01:28:12,520
So what if by mistake?

1623
01:28:12,520 --> 01:28:14,640
Right by a mistake?

1624
01:28:15,080 --> 01:28:15,520
I don't know.

1625
01:28:15,520 --> 01:28:18,480
I'll just add one right.

1626
01:28:18,480 --> 01:28:21,600
So what if by mistake what I did,

1627
01:28:21,600 --> 01:28:24,480
I provide f to matching cases.

1628
01:28:24,600 --> 01:28:26,840
I provided to matching cases.

1629
01:28:26,840 --> 01:28:31,680
So your compiler will complain and
it will tell you, okay, duplicate cases.

1630
01:28:31,840 --> 01:28:34,240
It means duplicate values, right?

1631
01:28:34,240 --> 01:28:36,840
So your compiler prevents you

1632
01:28:38,080 --> 01:28:38,880
now prevents

1633
01:28:38,880 --> 01:28:41,960
you of having too much in cases. Why?

1634
01:28:41,960 --> 01:28:45,600
Because remember this
a program cannot make a decision

1635
01:28:45,600 --> 01:28:49,440
all by self write it program runs

1636
01:28:49,440 --> 01:28:53,200
a code that you as a programmer
have the rule, right?

1637
01:28:53,520 --> 01:28:57,240
So now your Java write
your general one editor and the code

1638
01:28:57,360 --> 01:29:00,960
says, okay, gender
right here, for example, will be lower.

1639
01:29:00,960 --> 01:29:05,680
And right now, once
your Java goes inside this,

1640
01:29:05,680 --> 01:29:09,920
which look right now,
it will see too much in cases.

1641
01:29:10,360 --> 01:29:13,040
Now Java cannot make a decision, General.

1642
01:29:13,080 --> 01:29:14,880
See? Okay, I have too much in cases.

1643
01:29:14,880 --> 01:29:20,520
Then which one you the geometry editor
this or you want me to execute this?

1644
01:29:20,640 --> 01:29:21,120
Right.

1645
01:29:21,120 --> 01:29:23,960
So in programing
is he trying to prevent the things right?

1646
01:29:23,960 --> 01:29:28,200
We're not allowed to have the things
where code has to decide on its own. No.

1647
01:29:28,280 --> 01:29:28,880
Right.

1648
01:29:28,920 --> 01:29:33,480
And because that's why compiler
will give you the issue in here, right.

1649
01:29:33,480 --> 01:29:36,520
You give you the issue in here
of a duplicate cases

1650
01:29:36,520 --> 01:29:40,320
and we cannot have duplicate cases.

1651
01:29:40,320 --> 01:29:41,760
They go right. Why?

1652
01:29:41,760 --> 01:29:45,040
Because one variable can have only one
valid, one value.

1653
01:29:45,040 --> 01:29:46,880
We provide only one matching piece.

1654
01:29:46,880 --> 01:29:48,120
Right. Don't have this with you.

1655
01:29:49,400 --> 01:29:49,920
Right.

1656
01:29:49,920 --> 01:29:52,840
We can all have duplicate keys. One

1657
01:29:58,480 --> 01:29:59,120
white

1658
01:30:00,480 --> 01:30:02,040
one has to

1659
01:30:06,960 --> 01:30:07,720
know.

1660
01:30:07,720 --> 01:30:08,280
Right?

1661
01:30:08,280 --> 01:30:09,520
While looking at this code.

1662
01:30:09,520 --> 01:30:12,480
This what if you want to

1663
01:30:12,480 --> 01:30:17,680
then remember guys, when we lower m
an upper atmosphere and lower

1664
01:30:17,680 --> 01:30:21,520
and then up in there is
if you want to add the another case

1665
01:30:21,840 --> 01:30:27,240
in which you want to specify the upper
M, Yes, you can do it.

1666
01:30:27,240 --> 01:30:28,600
Yes you can do because more.

1667
01:30:28,600 --> 01:30:32,680
M An upper arms are two,
two completely different things, right?

1668
01:30:33,200 --> 01:30:34,080
Two different things.

1669
01:30:34,080 --> 01:30:36,480
So if you will go for the lower M,

1670
01:30:36,920 --> 01:30:40,600
it will go into that particular
matching case, right?

1671
01:30:40,720 --> 01:30:45,640
With the lower M it will go to that
particular matching case, right?

1672
01:30:45,680 --> 01:30:48,000
Will go that particular matching case.

1673
01:30:48,000 --> 01:30:52,720
If it's that upper arm, it will go to that
particular matching case right there.

1674
01:30:52,720 --> 01:30:56,760
They know the same and know the same
so Java can distinguish between lower

1675
01:30:57,000 --> 01:31:00,400
in the upper E,

1676
01:31:00,400 --> 01:31:03,440
in which case can we ignore the cases.

1677
01:31:03,440 --> 01:31:06,520
That's
actually a good point, is a good point.

1678
01:31:06,520 --> 01:31:08,960
But we will ignore the cases

1679
01:31:08,960 --> 01:31:13,040
only when it comes to strings,
but only when it comes to the string.

1680
01:31:13,040 --> 01:31:17,920
So now we cannot just put ignore
cases in here.

1681
01:31:18,120 --> 01:31:20,520
We cannot put ignore cases in here

1682
01:31:22,920 --> 01:31:25,560
because there's a different

1683
01:31:25,560 --> 01:31:29,160
things that are run behind our char.

1684
01:31:29,360 --> 01:31:33,000
Okay, So in our Tara thing,
as Gary explained to you, guess

1685
01:31:33,000 --> 01:31:36,080
how our char

1686
01:31:36,160 --> 01:31:36,840
works.

1687
01:31:36,840 --> 01:31:41,360
Our char works
based on them at the table, right?

1688
01:31:41,800 --> 01:31:45,160
So now every single character

1689
01:31:46,080 --> 01:31:49,080
has that associated with the specific

1690
01:31:49,520 --> 01:31:54,000
numeric value,
like numeric value for M is equal

1691
01:31:54,120 --> 01:31:57,840
to, I don't know, 183 or something
like that based on the ASCII table.

1692
01:31:57,840 --> 01:31:59,720
Right. Or 65. Right.

1693
01:31:59,720 --> 01:32:03,120
So in here we cannot do ignore the case,
but what we can do,

1694
01:32:03,120 --> 01:32:07,080
ignoring the case, is
we can do it when we do is the strings.

1695
01:32:07,400 --> 01:32:13,080
With the strings is we can do different
manipulation, we can ignore the cases,

1696
01:32:13,080 --> 01:32:16,520
we can convert the strings to the lower
keys, to the upper keys.

1697
01:32:16,720 --> 01:32:19,120
We can cut the strings.

1698
01:32:19,120 --> 01:32:20,800
We can cut strings in half.

1699
01:32:20,800 --> 01:32:24,360
We can
we can eliminate some parts of the string.

1700
01:32:24,360 --> 01:32:31,440
We can do many, many different things,
but not with the task.

1701
01:32:31,440 --> 01:32:31,760
Okay,

1702
01:32:33,480 --> 01:32:34,800
so now

1703
01:32:36,200 --> 01:32:37,400
now, let me ask you this.

1704
01:32:37,400 --> 01:32:41,080
Let me ask your default default statement.

1705
01:32:41,080 --> 01:32:42,640
Is it a default keyword?

1706
01:32:42,640 --> 01:32:48,280
Is it optional or it must.

1707
01:32:48,280 --> 01:32:52,480
It's an optional right
the way out else BLOCK It's very optional.

1708
01:32:52,480 --> 01:32:54,600
And, you know,
we're going to come back to your question.

1709
01:32:54,600 --> 01:33:00,400
So now I'm wondering of my default,
when you remove my defaults, what happens?

1710
01:33:00,400 --> 01:33:02,160
Why am I compilers not happy?

1711
01:33:02,160 --> 01:33:03,720
Why am I compiler on the line?

1712
01:33:03,720 --> 01:33:26,280
Three gives me the erroneous.

1713
01:33:26,280 --> 01:33:28,480
So now they go right.

1714
01:33:28,840 --> 01:33:32,240
So make sure you always understand
guys what happens, right?

1715
01:33:32,280 --> 01:33:36,760
Make sure no quotation is perfectly fine,
proficient is perfectly fine.

1716
01:33:36,760 --> 01:33:39,520
Always understand that things way right.

1717
01:33:39,840 --> 01:33:44,640
So now if you're going to hover over
a compile, it gives you a hint, right?

1718
01:33:44,640 --> 01:33:47,400
Because of this ID is right.
We are able to get a hint.

1719
01:33:47,400 --> 01:33:48,760
Compile is not happy.

1720
01:33:48,760 --> 01:33:50,760
What is what could be the issue?

1721
01:33:50,760 --> 01:33:53,360
It says a variable might not be initial.

1722
01:33:53,360 --> 01:33:54,320
Let's write it.

1723
01:33:54,320 --> 01:33:56,400
Variable might not be initialized.

1724
01:33:56,400 --> 01:34:00,080
Exactly this same logic as we had inside

1725
01:34:00,080 --> 01:34:03,120
the ls blogger's exact
the same logic right?

1726
01:34:03,120 --> 01:34:07,080
It says Hey, they ask, they will be asked.

1727
01:34:07,080 --> 01:34:11,880
They will want to make java
to print some value of the description.

1728
01:34:11,880 --> 01:34:12,640
Right.

1729
01:34:12,640 --> 01:34:15,880
So now are they
initializing it in here? No.

1730
01:34:16,000 --> 01:34:17,640
What are we doing in the line 14?

1731
01:34:17,640 --> 01:34:20,160
We just declare it right now.

1732
01:34:20,160 --> 01:34:22,920
Okay, then they have a switch block right
inside.

1733
01:34:22,920 --> 01:34:24,080
The switch block.

1734
01:34:24,080 --> 01:34:26,160
They initializing the variable

1735
01:34:27,240 --> 01:34:28,640
to this value.

1736
01:34:28,640 --> 01:34:32,680
If this case will be matching
or this case will be matching

1737
01:34:33,000 --> 01:34:37,920
or this case will be matching, hey, what
if none of the cases will be matching?

1738
01:34:38,200 --> 01:34:40,200
Who is going to initialize the variable?

1739
01:34:40,200 --> 01:34:42,520
Nobody going to initialize the variable.

1740
01:34:42,520 --> 01:34:46,840
Then if nobody is going to initialize
this variable, if my switch case will be

1741
01:34:47,960 --> 01:34:51,360
if my switch is not going to find
any matching cases,

1742
01:34:51,600 --> 01:34:55,680
then nobody's taking responsibility
of initializing this variable.

1743
01:34:55,680 --> 01:34:56,200
Right?

1744
01:34:56,200 --> 01:35:00,120
If there is not initialize,
then how can they ask me to print

1745
01:35:00,120 --> 01:35:03,400
that Look, print
something that doesn't exist.

1746
01:35:03,480 --> 01:35:03,800
Right?

1747
01:35:03,800 --> 01:35:08,800
Java by itself cannot add anything
during execution of the program.

1748
01:35:08,800 --> 01:35:11,240
Right. So exactly the same thing is.

1749
01:35:11,240 --> 01:35:15,960
So if going to use the default,
then make sure you initialize the variable

1750
01:35:16,240 --> 01:35:19,840
or if you guys going to have it inside
the label,

1751
01:35:19,840 --> 01:35:22,920
then your compiler is
fine except the same logic.

1752
01:35:24,480 --> 01:35:25,640
You only put no in here.

1753
01:35:25,640 --> 01:35:27,800
Yes, if you not going to have your default
right.

1754
01:35:27,800 --> 01:35:30,760
For example,
if you don't want to have a default, then

1755
01:35:30,840 --> 01:35:33,440
you can just have no in here.

1756
01:35:34,440 --> 01:35:36,600
If no one here, then it will be fine.

1757
01:35:36,600 --> 01:35:37,160
Right?

1758
01:35:37,520 --> 01:35:40,200
Or you can just in this situation,

1759
01:35:40,200 --> 01:35:45,520
we just decided to have this.

1760
01:35:45,520 --> 01:35:48,800
Okay,
so let's see if I'm going to change to

1761
01:35:49,000 --> 01:35:52,200
I don't know, to each thing right now.

1762
01:35:52,200 --> 01:35:55,560
It says each each means unknown, right?

1763
01:35:55,560 --> 01:35:57,920
Each thing.

1764
01:35:57,920 --> 01:35:59,680
So this is two things goes right.

1765
01:35:59,680 --> 01:36:02,760
This is two things when it comes to rules,

1766
01:36:02,760 --> 01:36:04,800
write your things when it comes to these

1767
01:36:05,880 --> 01:36:08,880
values and cases
might be the thing that I type, right?

1768
01:36:09,320 --> 01:36:10,640
How do we provide the values?

1769
01:36:10,640 --> 01:36:15,760
We provide the values after the keyword
case, right after the keyword keys.

1770
01:36:16,040 --> 01:36:20,800
And then we cannot duplicate cases.

1771
01:36:20,800 --> 01:36:21,200
There is

1772
01:36:22,280 --> 01:36:23,800
what which part

1773
01:36:23,800 --> 01:36:33,360
you do not understand.

1774
01:36:33,360 --> 01:36:37,560
If I show

1775
01:36:37,560 --> 01:36:40,440
you have a you have a husband
that is already working, right?

1776
01:36:40,760 --> 01:36:45,840
So maybe you already have we're ready.

1777
01:36:45,840 --> 01:36:48,840
When I deleted default, right
When I deleted a default.

1778
01:36:48,840 --> 01:36:51,000
Right. So

1779
01:36:51,880 --> 01:36:55,760
people right so what happens remember
right at the current case

1780
01:36:55,760 --> 01:36:58,720
when our gender is equal

1781
01:36:58,800 --> 01:37:01,800
to age right here, my switch block starts.

1782
01:37:01,800 --> 01:37:02,360
My switch.

1783
01:37:02,360 --> 01:37:03,600
Look, it's right.

1784
01:37:03,600 --> 01:37:07,200
So you're saying, hey, you, let's

1785
01:37:07,200 --> 01:37:10,560
check the value for gender right now
because it's age.

1786
01:37:10,960 --> 01:37:13,960
This case, one match.

1787
01:37:13,960 --> 01:37:17,000
This is one match. In this case,
one match.

1788
01:37:17,280 --> 01:37:20,280
So you switch, work one year,
execute it at all.

1789
01:37:20,400 --> 01:37:21,040
Right.

1790
01:37:21,080 --> 01:37:23,720
Your switch, case one ID be executed all.

1791
01:37:24,000 --> 01:37:26,840
So if you switch games
won't be executed at all.

1792
01:37:27,040 --> 01:37:31,240
And then on the line three, we tried
to print the value of the description.

1793
01:37:31,720 --> 01:37:36,400
Now your compiler says, Hey, how can I
print the value of the description?

1794
01:37:36,400 --> 01:37:41,760
And if here you have the empty variable
and you switch keys, if your speech keys

1795
01:37:41,760 --> 01:37:46,040
won't be able to get executed
what is the value trying to print?

1796
01:37:46,400 --> 01:37:48,360
What is the value we try to print?

1797
01:37:48,360 --> 01:37:51,840
Okay, so that's why it's asked you
for initialization, right?

1798
01:37:52,160 --> 01:37:55,440
And if you're going to take the help
of the compiler, compiler

1799
01:37:55,640 --> 01:37:59,000
will help you to just initialize it,
you know?

1800
01:37:59,240 --> 01:38:01,600
Okay.

1801
01:38:01,600 --> 01:38:05,640
But if you want to add the default,
if you're going to add the default,

1802
01:38:06,080 --> 01:38:08,920
well, you're going to add an evil.

1803
01:38:08,920 --> 01:38:12,360
Then compiler says, okay,
if none of the cases are matching

1804
01:38:12,560 --> 01:38:15,000
your code,
hundred percent will go to default.

1805
01:38:15,000 --> 01:38:15,800
So it will be

1806
01:38:17,040 --> 01:38:17,800
be fine.

1807
01:38:19,280 --> 01:38:20,000
All right.

1808
01:38:20,160 --> 01:38:21,960
So this is the rules, right?

1809
01:38:21,960 --> 01:38:22,680
This is the rules.

1810
01:38:22,680 --> 01:38:25,160
Now, let's take a look at the limitation.

1811
01:38:25,240 --> 01:38:25,720
Right.

1812
01:38:25,800 --> 01:38:30,040
Let's take a look at the limitation.

1813
01:38:30,040 --> 01:38:31,400
Limitation. Right.

1814
01:38:31,400 --> 01:38:34,280
So for example, in here, right in here.

1815
01:38:35,640 --> 01:38:36,120
Right.

1816
01:38:36,120 --> 01:38:38,640
I am looking into the keys.

1817
01:38:39,000 --> 01:38:44,000
I want say, hey,

1818
01:38:44,000 --> 01:38:49,080
the case is lower M
or if the case is upper M Right.

1819
01:38:49,440 --> 01:38:51,720
So my description is male, right?

1820
01:38:52,000 --> 01:38:54,840
Hey, if I want to use right,

1821
01:38:55,360 --> 01:38:58,720
what if I want to use a logical operator,

1822
01:38:58,800 --> 01:39:03,600
I want to say, hey, keys am Oh, keys.

1823
01:39:03,600 --> 01:39:06,280
M Right, keys and or keys upper.

1824
01:39:06,360 --> 01:39:09,360
M Then I want to say it's male, right?

1825
01:39:09,360 --> 01:39:11,560
Because I want to do it this way.

1826
01:39:11,560 --> 01:39:13,120
Probably would be better.

1827
01:39:13,120 --> 01:39:16,840
So now you are using this place or right?

1828
01:39:17,760 --> 01:39:20,400
Can I use it this way now?

1829
01:39:21,320 --> 01:39:22,560
A limitation.

1830
01:39:22,560 --> 01:39:25,880
This switch case
was the motivation of the switch case.

1831
01:39:26,520 --> 01:39:27,680
We cannot

1832
01:39:28,800 --> 01:39:32,280
use a logical operators near.

1833
01:39:32,280 --> 01:39:35,000
We cannot use logical operators, right.

1834
01:39:35,000 --> 01:39:39,640
We cannot see keys
m lower end or the upper end.

1835
01:39:40,400 --> 01:39:45,920
The only thing What is your switch case
does this it checks for the equality

1836
01:39:45,920 --> 01:39:51,040
E checks Hey is the case equals to M
Is the case equal to the upper arm?

1837
01:39:51,040 --> 01:39:53,840
Is the case equals to F or. I don't know.

1838
01:39:53,840 --> 01:39:58,080
We can add another case where the case
equal to the bigger F right.

1839
01:39:58,960 --> 01:40:02,080
So now inside you switch statement

1840
01:40:02,320 --> 01:40:05,800
we can not use a new logical operator.

1841
01:40:05,840 --> 01:40:11,600
So if you have to test two
or more conditions, right.

1842
01:40:11,640 --> 01:40:14,800
If you want to test but
you get C once again conditions, right?

1843
01:40:15,120 --> 01:40:17,640
Any time we talk about conditions,

1844
01:40:17,880 --> 01:40:21,160
we talk about the if statement, right?

1845
01:40:21,160 --> 01:40:24,360
When we talk about the switch
because we strictly strictly

1846
01:40:24,360 --> 01:40:28,560
check in the equality,
we check in for the value we stand here.

1847
01:40:28,960 --> 01:40:31,560
If the value of gender is m

1848
01:40:31,840 --> 01:40:35,360
or M or lower F or upper right.

1849
01:40:35,880 --> 01:40:40,360
So within a within this which keys
we are not checking

1850
01:40:40,680 --> 01:40:44,840
this condition is true
or another condition is true.

1851
01:40:44,840 --> 01:40:48,600
So the limitation on
this switch keys we have that

1852
01:40:50,400 --> 01:40:53,800
yes, it's
strictly strictly looks for the equality.

1853
01:40:53,800 --> 01:40:57,680
It does not checks in that
you don't have to check the condition,

1854
01:40:57,680 --> 01:41:01,600
but you basically saying,
hey, gender could be equal to M,

1855
01:41:01,800 --> 01:41:06,120
gender could be equal to M, upper
lower F or upper s.

1856
01:41:06,120 --> 01:41:08,280
It checks for the equality right.

1857
01:41:08,280 --> 01:41:12,640
So a limitation of this week
limitation on the switch.

1858
01:41:12,640 --> 01:41:14,320
The first one

1859
01:41:15,000 --> 01:41:17,560
we cannot use

1860
01:41:17,560 --> 01:41:19,080
logical

1861
01:41:19,960 --> 01:41:27,320
logical operators.

1862
01:41:27,320 --> 01:41:31,320
We cannot develop either
this or that economic

1863
01:41:32,960 --> 01:41:33,360
thing.

1864
01:41:33,360 --> 01:41:37,920
Another thing limit is less clause.

1865
01:41:37,920 --> 01:41:40,000
Of course we did an exercise

1866
01:41:41,920 --> 01:41:44,400
class, we did the exercise.

1867
01:41:45,240 --> 01:41:47,440
So if I can find

1868
01:41:47,520 --> 01:41:49,800
this exercise right, this exercise

1869
01:41:50,640 --> 01:41:53,640
now, in this exercise, what we did right,

1870
01:41:54,000 --> 01:41:59,040
what we were trying to capture a day,
right when, we try to capture D then

1871
01:41:59,040 --> 01:42:03,000
we were defining whether it's a weekday
or whether it's a week, Right.

1872
01:42:03,520 --> 01:42:06,600
So in here, what we use in

1873
01:42:07,080 --> 01:42:11,200
we are using besides logical operator,
what are we were also using?

1874
01:42:11,200 --> 01:42:13,800
We were using a relational operator,
right?

1875
01:42:13,800 --> 01:42:18,600
We say, Hey, if there would be more than
one or weekdays less than five, right.

1876
01:42:19,320 --> 01:42:21,680
Or more than six or less than seven.

1877
01:42:22,080 --> 01:42:26,080
Now, if you couldn't hear this,
I can not see here

1878
01:42:26,400 --> 01:42:30,560
if they is more or equal, this one,

1879
01:42:30,560 --> 01:42:35,280
I cannot say if they or more is equal
to one right or less or equal.

1880
01:42:35,320 --> 01:42:38,080
So now it says that
we get the error right.

1881
01:42:38,080 --> 01:42:40,480
There is a syntax error that we have.

1882
01:42:40,480 --> 01:42:43,440
So inside a switch

1883
01:42:43,440 --> 01:42:46,440
keys,
you cannot use any relational operator,

1884
01:42:46,600 --> 01:42:49,440
you cannot use any logical operator,
Right.

1885
01:42:49,800 --> 01:42:52,640
What this which case simply looks hey, is

1886
01:42:52,640 --> 01:42:55,680
the value of de is one
is the value of these two.

1887
01:42:55,680 --> 01:43:00,440
It cannot say hey, is the value is
the value of these more than one?

1888
01:43:00,440 --> 01:43:01,200
Yes or no.

1889
01:43:01,200 --> 01:43:06,080
If the value is less than one, yes
or no one because it's strictly strictly

1890
01:43:06,080 --> 01:43:10,440
looks for the value, it checks in that
It checks for the equality.

1891
01:43:10,440 --> 01:43:13,440
Okay. It

1892
01:43:14,680 --> 01:43:15,640
cannot go, will come.

1893
01:43:15,640 --> 01:43:17,280
How to overcome those things.

1894
01:43:17,280 --> 01:43:19,360
We will come how to overcome those things.

1895
01:43:20,640 --> 01:43:24,760
And so once again, this is in here, right?

1896
01:43:25,520 --> 01:43:30,000
Limitation, no logical apparatus
we cannot use.

1897
01:43:30,760 --> 01:43:35,520
We cannot relational operation.

1898
01:43:35,520 --> 01:43:35,920
Right.

1899
01:43:36,280 --> 01:43:37,000
For example.

1900
01:43:37,000 --> 01:43:42,360
Now when you think of this
scenario, right, when we have variables,

1901
01:43:42,800 --> 01:43:45,440
when we have variables to compare, right.

1902
01:43:45,440 --> 01:43:48,960
If either
if the number one is more than number two

1903
01:43:49,240 --> 01:43:52,280
or number two is more than number
one, or number three

1904
01:43:52,280 --> 01:43:55,280
is equals to
or number one is equal to number two.

1905
01:43:55,280 --> 01:43:55,840
Right?

1906
01:43:55,840 --> 01:44:00,520
So now in this particular scenario,
we can model for this which case, why?

1907
01:44:00,760 --> 01:44:03,800
Because in those particular scenarios,
what we will be doing,

1908
01:44:03,800 --> 01:44:06,600
we will be checking their relationship.

1909
01:44:06,600 --> 01:44:06,840
Right.

1910
01:44:06,840 --> 01:44:10,960
We need to identify number
one is more than the number two, Right.

1911
01:44:11,280 --> 01:44:14,720
So switch keys can not be used
in that particular case.

1912
01:44:14,840 --> 01:44:19,800
In that cases you will have to go for
is else e statement

1913
01:44:20,000 --> 01:44:22,800
y because you will have to
do the comparison

1914
01:44:22,800 --> 01:44:27,440
if number one is more than number two,
you will have to check

1915
01:44:27,480 --> 01:44:31,080
if the condition is true
or if commission is false.

1916
01:44:31,280 --> 01:44:34,560
Can. All right.

1917
01:44:35,040 --> 01:44:37,320
Those two operators cannot be used.

1918
01:44:37,560 --> 01:44:40,960
This two operators,
if you will, have to involve them

1919
01:44:40,960 --> 01:44:46,560
in your exercise, in your task guys,
then definitely just go for it.

1920
01:44:46,560 --> 01:44:51,080
If if else you speak
like if else these statements

1921
01:44:51,360 --> 01:44:55,480
only known when you have to check
for the equality right here.

1922
01:44:55,520 --> 01:44:56,880
What do we check in the chicken.

1923
01:44:56,880 --> 01:45:01,320
Hey keys value of these one keys
value of these two

1924
01:45:01,520 --> 01:45:05,520
key style of these three keys
value of these four keys.

1925
01:45:05,520 --> 01:45:08,640
Value of gender is m gives
value of gender is

1926
01:45:09,080 --> 01:45:12,160
upper and lower F upper right.

1927
01:45:12,440 --> 01:45:14,280
What do we check in the check inequality.

1928
01:45:14,280 --> 01:45:18,120
We cannot say keys
F is more than smaller s

1929
01:45:18,440 --> 01:45:22,960
a keys f bigger F or lower.

1930
01:45:22,960 --> 01:45:25,360
So that's a limitation that is in there.

1931
01:45:25,680 --> 01:45:27,360
Are there more limitation

1932
01:45:29,080 --> 01:45:30,240
inside our switch?

1933
01:45:30,240 --> 01:45:33,880
Yes, there's more limitation
is that our switch keeps

1934
01:45:35,320 --> 01:45:39,240
the minimal when it comes to yes.

1935
01:45:39,240 --> 01:45:41,400
Only when we check for equality.

1936
01:45:41,400 --> 01:45:43,240
Keys are browser.

1937
01:45:43,240 --> 01:45:46,560
Right. Keys browser is Microsoft Edge.

1938
01:45:46,560 --> 01:45:51,720
Then the execute script on Microsoft
edge case browser is Safari will.

1939
01:45:51,720 --> 01:45:55,480
Execute the code on safari right keys
browser is Chrome.

1940
01:45:55,560 --> 01:45:57,800
We execute it on the chrome. Right.

1941
01:45:58,680 --> 01:46:01,800
Exact same scenario could be done.

1942
01:46:01,800 --> 01:46:05,360
Each statement exact the same scenario
could be done using switch.

1943
01:46:05,360 --> 01:46:06,000
Right.

1944
01:46:06,040 --> 01:46:06,720
But here

1945
01:46:06,720 --> 01:46:11,680
because we simply checking for equality
if browser is chrome execute core here.

1946
01:46:11,680 --> 01:46:15,280
Your browser is a safari executive here.

1947
01:46:15,280 --> 01:46:19,080
When we check for equality, I
probably would prefer to go for a switch.

1948
01:46:19,080 --> 01:46:19,440
Right?

1949
01:46:19,440 --> 01:46:24,480
Because switch gives me a cleaner code
which will give me a faster execution.

1950
01:46:24,720 --> 01:46:29,600
A switch will give me a better
readability of the also

1951
01:46:33,880 --> 01:46:34,520
means

1952
01:46:35,920 --> 01:46:38,080
you will switch cases.

1953
01:46:38,760 --> 01:46:40,320
Yes, that's the right statement.

1954
01:46:40,320 --> 01:46:44,280
So any any switch statements,

1955
01:46:44,280 --> 01:46:49,520
we can easily convert them to the E
but not every single eve.

1956
01:46:49,520 --> 01:46:52,160
We can convert to the switch.

1957
01:46:52,160 --> 01:46:54,360
Yep. Why? Because switch hasn't.

1958
01:46:54,360 --> 01:46:55,680
Switch has a limitation.

1959
01:46:55,680 --> 01:46:58,240
Okay, so now what other limitation? Right.

1960
01:46:58,240 --> 01:47:02,720
So now also besides
having the different operator besides that

1961
01:47:03,120 --> 01:47:08,120
Alex, we will go is the scanner
besides having limitation in operators?

1962
01:47:08,120 --> 01:47:11,560
Guys,
we have a also limitation of data types.

1963
01:47:12,120 --> 01:47:14,520
We have a limitation of data types.

1964
01:47:14,520 --> 01:47:17,840
When it comes to the e mails,
we can use any data type, right?

1965
01:47:17,840 --> 01:47:19,200
We can use it. They need their time.

1966
01:47:19,200 --> 01:47:22,840
But when it comes to this switch base,

1967
01:47:23,400 --> 01:47:27,200
which cannot work with every single data
type in Java,

1968
01:47:27,320 --> 01:47:30,200
okay, cannot work
the single that it objects.

1969
01:47:30,480 --> 01:47:33,920
And this is a thing
like logical explanation to that.

1970
01:47:34,040 --> 01:47:36,040
Okay. So for example, right.

1971
01:47:36,040 --> 01:47:38,520
So we saw that our switch case

1972
01:47:38,760 --> 01:47:42,960
work with what type of data type is
is this one, two, three kind of data type

1973
01:47:47,120 --> 01:47:47,640
integer.

1974
01:47:47,640 --> 01:47:48,160
Right.

1975
01:47:48,160 --> 01:47:51,200
We see that switch gives easily
works as integer.

1976
01:47:51,440 --> 01:47:54,840
We see that switch case
easily works with the task.

1977
01:47:54,840 --> 01:47:56,600
But now, for example, right.

1978
01:47:56,600 --> 01:47:59,520
What if I'm going to have a

1979
01:47:59,520 --> 01:48:01,640
boolean rule in?

1980
01:48:01,640 --> 01:48:02,760
I don't know.

1981
01:48:02,800 --> 01:48:05,720
All right. Right now

1982
01:48:05,720 --> 01:48:08,720
boolean how many conditions
your boolean can have this

1983
01:48:08,720 --> 01:48:11,960
How many can the
how many values you boolean can only

1984
01:48:11,960 --> 01:48:15,280
two values either true or either false.

1985
01:48:15,400 --> 01:48:16,240
Right?

1986
01:48:17,040 --> 01:48:19,840
So basically, there's not

1987
01:48:19,840 --> 01:48:22,080
many cases that you can provide, right?

1988
01:48:22,080 --> 01:48:24,600
It's either true or either right.

1989
01:48:24,800 --> 01:48:28,840
So there's not
enough cases to work with the boolean.

1990
01:48:28,840 --> 01:48:33,240
So if you want to try to put a ball
in, right, if you want to try

1991
01:48:33,240 --> 01:48:38,240
to put a bowling inside your sweet flag,
you Java will complete it.

1992
01:48:38,280 --> 01:48:44,120
This switch cannot be used boolean
not enough cases. Why?

1993
01:48:44,120 --> 01:48:46,600
Because either true it either
false. That's it.

1994
01:48:46,600 --> 01:48:47,760
There's nothing else. Right.

1995
01:48:47,760 --> 01:48:50,480
So if it's if it's only do
then just go for it.

1996
01:48:50,480 --> 01:48:51,000
You state.

1997
01:48:51,000 --> 01:48:54,000
Okay so bowling conditions cannot be

1998
01:48:54,000 --> 01:48:57,280
used inside our switch statements.

1999
01:48:57,320 --> 01:49:00,840
Okay you find it switch. So limitation of

2000
01:49:02,320 --> 01:49:03,440
all operators.

2001
01:49:03,440 --> 01:49:04,040
Right.

2002
01:49:04,400 --> 01:49:07,560
And here I'll put limitation of data types

2003
01:49:10,520 --> 01:49:12,800
limitation of data types.

2004
01:49:15,200 --> 01:49:17,720
So cannot be cannot use

2005
01:49:19,440 --> 01:49:21,560
use bowling

2006
01:49:22,760 --> 01:49:25,760
ball use bowling.

2007
01:49:25,760 --> 01:49:27,120
They're not valid variables.

2008
01:49:27,120 --> 01:49:32,280
We cannot use just cannot be used
with bowling to not use boolean.

2009
01:49:32,400 --> 01:49:32,920
Right.

2010
01:49:33,160 --> 01:49:36,360
What because a limitation
of different cases.

2011
01:49:36,360 --> 01:49:36,920
Right.

2012
01:49:37,120 --> 01:49:41,560
It's been boolean
has only two now another thing, right.

2013
01:49:41,560 --> 01:49:44,760
Another data type that we have for example
double

2014
01:49:45,960 --> 01:49:48,720
D equals 1.9.

2015
01:49:48,840 --> 01:49:49,440
Right.

2016
01:49:49,560 --> 01:49:53,520
So now if I'm going to try
to put a D in here,

2017
01:49:53,760 --> 01:49:56,880
my switch case is also going to complete.

2018
01:49:56,920 --> 01:49:59,400
Right. Is also going to complain.

2019
01:49:59,400 --> 01:50:04,440
Now, when you think of double this,
when you think of the double,

2020
01:50:05,000 --> 01:50:08,080
there is a way too many variations
available.

2021
01:50:08,080 --> 01:50:13,720
Too many can be 1.9 can be 10.9,
it can be 10.90.

2022
01:50:13,720 --> 01:50:18,120
Anyways, there's a way too many variations
that you can think of.

2023
01:50:18,120 --> 01:50:20,120
So yeah, I say so.

2024
01:50:20,160 --> 01:50:21,000
You know what?

2025
01:50:21,000 --> 01:50:23,440
Don't go for double inside this.

2026
01:50:23,440 --> 01:50:28,120
Which cases go in does not allow us
to have a double inside a switch.

2027
01:50:28,440 --> 01:50:30,080
That's too many variation

2028
01:50:31,400 --> 01:50:32,280
in that

2029
01:50:33,000 --> 01:50:34,560
we used.

2030
01:50:34,560 --> 01:50:37,200
We double

2031
01:50:37,200 --> 01:50:38,320
double

2032
01:50:42,520 --> 01:50:44,520
can be used with double and it's

2033
01:50:46,520 --> 01:50:48,400
and is the same thing for double inflow

2034
01:50:48,400 --> 01:50:50,960
and it's the same thing
when you go for a double of slot.

2035
01:50:51,600 --> 01:50:54,480
And it's also cannot be used with the long

2036
01:50:54,680 --> 01:50:57,440
think and will be still

2037
01:50:58,720 --> 01:51:00,960
be used

2038
01:51:00,960 --> 01:51:03,800
for the same thing
Too many variations in there

2039
01:51:05,040 --> 01:51:08,240
it variations in there

2040
01:51:09,200 --> 01:51:14,240
so char integer
and beside before the integer we have

2041
01:51:14,280 --> 01:51:20,280
ruby can be by the can be, it can be.

2042
01:51:20,280 --> 01:51:24,840
But what kinds of was the next part of the
but sure they go goes like my mind

2043
01:51:24,840 --> 01:51:28,680
okay by short integer
easily can be used right?

2044
01:51:29,040 --> 01:51:33,840
So no double no load chart,
no problem of the char,

2045
01:51:34,080 --> 01:51:37,920
no boolean but it can be
easily used in this piece.

2046
01:51:37,960 --> 01:51:39,240
Right? These the string.

2047
01:51:39,240 --> 01:51:43,360
They can be easily
easily used in these and so

2048
01:51:44,000 --> 01:51:47,280
by short integer char strings.

2049
01:51:47,280 --> 01:51:48,000
No problem.

2050
01:51:48,000 --> 01:51:48,560
No problem.

2051
01:51:48,560 --> 01:51:51,320
Is this right up to now.

2052
01:51:51,320 --> 01:51:52,680
Let's see now.

2053
01:51:52,680 --> 01:51:54,960
We can combine this now we can combine.

2054
01:51:55,760 --> 01:51:58,320
Let's combine our strains. Right?

2055
01:51:58,400 --> 01:52:01,520
Let's combine
our being in the scanner and the switch.

2056
01:52:01,520 --> 01:52:03,480
And then you guys want to do that.

2057
01:52:03,480 --> 01:52:05,920
You are then switch

2058
01:52:05,920 --> 01:52:16,400
them off.

2059
01:52:16,400 --> 01:52:18,680
Structure will give
you this assignment problem.

2060
01:52:20,160 --> 01:52:21,080
Oh, what?

2061
01:52:21,080 --> 01:52:23,160
I want to do this. What I want to do.

2062
01:52:23,160 --> 01:52:25,920
That's my favorite exercise,
but I'll leave it to you to do that.

2063
01:52:26,680 --> 01:52:28,680
So this is my task for you. This.

2064
01:52:28,680 --> 01:52:32,080
So what I want to do,
I want to capture enough.

2065
01:52:32,160 --> 01:52:32,480
I want.

2066
01:52:32,480 --> 01:52:33,920
We need to capture it.

2067
01:52:33,920 --> 01:52:36,840
We need to capture it.

2068
01:52:36,840 --> 01:52:38,040
We need to capture it.

2069
01:52:38,040 --> 01:52:40,800
And it country

2070
01:52:42,560 --> 01:52:43,920
only user.

2071
01:52:44,280 --> 01:52:44,840
Right.

2072
01:52:45,160 --> 01:52:49,480
And then based on the country,

2073
01:52:49,480 --> 01:52:51,840
we have to define

2074
01:52:55,840 --> 01:52:58,160
their a favorite food.

2075
01:52:58,600 --> 01:53:01,480
Favorite food from that country.

2076
01:53:01,480 --> 01:53:05,360
Favorite food or traditional food,
whatever you want to add, for example.

2077
01:53:05,360 --> 01:53:05,880
Right.

2078
01:53:06,120 --> 01:53:09,480
So now you have to think, okay,
I want to capture a country, right?

2079
01:53:09,720 --> 01:53:11,280
It means I need to capture it.

2080
01:53:11,280 --> 01:53:13,280
I need to use a scanner. Right.

2081
01:53:13,280 --> 01:53:14,680
And you choose a scanner.

2082
01:53:14,680 --> 01:53:16,680
I will be capturing country. Right.

2083
01:53:16,920 --> 01:53:21,360
So now, while once I capture the country,

2084
01:53:21,800 --> 01:53:27,280
then based on the condition or based
on the value, whichever way you decide.

2085
01:53:27,280 --> 01:53:31,080
But since we use in the speech,
I would say based on the value of

2086
01:53:31,080 --> 01:53:35,040
the country, I want you to tell me
the favorite food, for example.

2087
01:53:35,080 --> 01:53:35,920
Right?

2088
01:53:36,240 --> 01:53:38,760
If country is United States,

2089
01:53:38,760 --> 01:53:43,200
you will initialize the favorite food
for burgers, right?

2090
01:53:43,200 --> 01:53:45,360
If the country is

2091
01:53:46,920 --> 01:53:48,440
entirely your

2092
01:53:48,440 --> 01:53:51,160
favorite food will be possibly
the country is

2093
01:53:52,480 --> 01:53:54,440
Turkey, Pakistan, Kazakhstan.

2094
01:53:54,440 --> 01:53:56,880
Whichever country will decide
provide the case.

2095
01:53:57,160 --> 01:53:59,360
Then I want you to define
the favorite food.

2096
01:53:59,520 --> 01:54:00,120
Okay.

2097
01:54:00,560 --> 01:54:03,920
So now you will get have to think too
which variable

2098
01:54:03,920 --> 01:54:08,320
you will be provided
in matching cases and right.

2099
01:54:08,320 --> 01:54:10,160
And and what can we do?

2100
01:54:10,160 --> 01:54:11,640
Which variable you will be providing?

2101
01:54:11,640 --> 01:54:15,400
Imagine cases and how you will be
providing those matching cookies.

2102
01:54:15,520 --> 01:54:16,080
Okay.

2103
01:54:16,080 --> 01:54:19,720
So now you see you combining your
are you combining

2104
01:54:19,720 --> 01:54:24,080
your scanner in, your switch as well.

2105
01:54:24,480 --> 01:54:24,680
Okay.

2106
01:54:24,680 --> 01:54:31,440
So can you guys do it?

2107
01:54:31,440 --> 01:54:35,440
I guess you are you guys can do a new
at least four or five cases

2108
01:54:35,600 --> 01:54:38,600
do it at least four or five cases
this way you guys just do it.

2109
01:54:38,840 --> 01:54:40,360
Practice in typing. You

2110
01:54:48,920 --> 01:54:50,840
are giving us 5 minutes to do it.

2111
01:54:50,840 --> 01:54:51,480
All right

2112
02:05:39,960 --> 02:05:41,240
now, like

2113
02:05:41,240 --> 02:05:44,120
I could give you
a couple of minutes to finish.

2114
02:05:45,000 --> 02:05:47,960
We will look into it some stuff
and then in this will be doing

2115
02:05:47,960 --> 02:07:53,640
more tasks.

2116
02:07:53,640 --> 02:07:54,480
All right. This one.

2117
02:07:54,480 --> 02:07:57,080
So let's look right.

2118
02:07:57,400 --> 02:08:00,600
It was only one which I did this.

2119
02:08:00,840 --> 02:08:01,320
This.

2120
02:08:03,200 --> 02:08:05,280
Okay, I copy someone else

2121
02:08:05,280 --> 02:08:13,560
code guys.

2122
02:08:13,560 --> 02:08:16,080
All right. Okay.

2123
02:08:16,320 --> 02:08:19,560
So in here, right
First we already know first lines.

2124
02:08:19,560 --> 02:08:24,000
Were we doing we creating this scanner
to capture the food, to capture,

2125
02:08:24,280 --> 02:08:28,280
to capture the country
we capture in the country, using next.

2126
02:08:28,280 --> 02:08:28,680
Right.

2127
02:08:28,680 --> 02:08:30,960
And then storing inside
that string variable.

2128
02:08:31,360 --> 02:08:34,800
So now our variable is count is of

2129
02:08:34,800 --> 02:08:38,040
which type of the string type, right.

2130
02:08:38,040 --> 02:08:42,760
So now for a country,
what we tried to provide right now

2131
02:08:42,760 --> 02:08:47,240
is in here the country can have different
values, right?

2132
02:08:47,280 --> 02:08:49,240
The country can have different values.

2133
02:08:49,240 --> 02:08:51,800
And whichever matching cases us
for before.

2134
02:08:51,800 --> 02:08:52,400
Right.

2135
02:08:52,520 --> 02:08:58,520
So now, because our variable country
is of this string type, so matching values

2136
02:08:58,680 --> 02:09:02,560
also must be of the
the same data type, right?

2137
02:09:02,560 --> 02:09:04,560
How do we provide the match analysis?

2138
02:09:04,560 --> 02:09:06,960
Provide the match analysis,
the help of cases.

2139
02:09:06,960 --> 02:09:07,520
Right.

2140
02:09:07,800 --> 02:09:10,320
And then of course,
you guys should should test it.

2141
02:09:10,320 --> 02:09:10,920
Right.

2142
02:09:11,480 --> 02:09:13,200
And then you guys should test this.

2143
02:09:13,200 --> 02:09:15,720
And now we can say, okay, please.

2144
02:09:15,720 --> 02:09:20,080
And they country right
So let's say you would see right they go

2145
02:09:21,800 --> 02:09:22,080
if your

2146
02:09:22,080 --> 02:09:25,160
country is you
say your favorite food is a burger right.

2147
02:09:25,800 --> 02:09:27,880
You'll Your favorite for is a burger.

2148
02:09:27,880 --> 02:09:28,400
That's good.

2149
02:09:28,400 --> 02:09:32,040
This one worked, right? So

2150
02:09:33,440 --> 02:09:35,400
and politically

2151
02:09:35,400 --> 02:09:39,000
here, let me try to debug
Please enter the country.

2152
02:09:39,000 --> 02:09:43,320
Let me try Mexico right.

2153
02:09:43,320 --> 02:09:44,800
So now. Right.

2154
02:09:44,800 --> 02:09:46,640
What is the country? Is Mexico.

2155
02:09:46,640 --> 02:09:52,560
So now your switch case knows
the value of the variable.

2156
02:09:52,560 --> 02:09:56,520
What it does,
it jumps right away to the matching case.

2157
02:09:56,520 --> 02:09:58,520
Right? It jumps to the matching piece.

2158
02:09:58,520 --> 02:10:02,640
Now, the variable food before you
initialize it to the null value.

2159
02:10:02,960 --> 02:10:05,920
Now no will be taken out from that box.

2160
02:10:05,920 --> 02:10:07,200
And now what are we going to do?

2161
02:10:07,200 --> 02:10:09,480
We're going to replace it
with this, right?

2162
02:10:09,480 --> 02:10:12,360
We're going to replace it.
We stuck with the No.

2163
02:10:12,360 --> 02:10:13,080
One output.

2164
02:10:13,080 --> 02:10:15,840
If your country is Mexico,
your theory for this Texas. Okay.

2165
02:10:15,840 --> 02:10:17,040
That's right.

2166
02:10:17,040 --> 02:10:20,440
So this we should understand, right,
this rule and, this bag.

2167
02:10:20,720 --> 02:10:24,320
So this our switch statement
matching cases and we need a break.

2168
02:10:24,320 --> 02:10:24,720
Right.

2169
02:10:24,720 --> 02:10:26,160
So all this is back.

2170
02:10:26,160 --> 02:10:28,640
Now, let's look at a few variations
in here.

2171
02:10:28,920 --> 02:10:32,040
Let's look at the few little things
in here that you want to

2172
02:10:33,200 --> 02:10:34,280
that we want to fix.

2173
02:10:34,280 --> 02:10:34,800
Right.

2174
02:10:35,080 --> 02:10:38,160
So I want you to see
when none of the cases are matching.

2175
02:10:38,720 --> 02:10:41,360
I want you see
when none of the cases are matching.

2176
02:10:41,360 --> 02:10:44,120
And then let's see what happens

2177
02:10:44,120 --> 02:10:46,160
when none of the cases
are matching. Right.

2178
02:10:46,160 --> 02:10:47,720
For example. Right.

2179
02:10:47,720 --> 02:10:50,840
So please enter the country, let's say,
I don't know, zero.

2180
02:10:50,960 --> 02:10:51,560
Right.

2181
02:10:51,560 --> 02:10:54,360
So since we did not provide the matching

2182
02:10:54,360 --> 02:10:57,720
cases,
you will go to the default bar by default.

2183
02:10:57,720 --> 02:10:59,360
We'll go to the default path.

2184
02:10:59,360 --> 02:11:01,280
Now it says

2185
02:11:01,360 --> 02:11:04,000
it says, right, please enter the country.

2186
02:11:04,080 --> 02:11:05,120
Right.

2187
02:11:05,160 --> 02:11:07,800
So now it's this pure rule.

2188
02:11:07,800 --> 02:11:09,920
It food.

2189
02:11:09,920 --> 02:11:11,440
Try another country.

2190
02:11:11,440 --> 02:11:14,640
If your country is Peru,
your favorite food is try another country.

2191
02:11:14,640 --> 02:11:16,240
Okay, that's fine. Right?

2192
02:11:16,240 --> 02:11:18,480
But we can add the same, right?

2193
02:11:18,480 --> 02:11:20,680
We can add the same thing.

2194
02:11:20,680 --> 02:11:23,600
We can we can have this statement, right?

2195
02:11:23,600 --> 02:11:25,280
We can have the statement.

2196
02:11:25,280 --> 02:11:27,000
Well, we can do a little fixing, right?

2197
02:11:27,000 --> 02:11:28,720
We can. Why Peru?

2198
02:11:28,720 --> 02:11:30,920
Because none of the cases
have matched, right?

2199
02:11:30,920 --> 02:11:33,840
None of the cases have matched
the same thing.

2200
02:11:33,840 --> 02:11:35,280
What? We can add this, right?

2201
02:11:35,280 --> 02:11:36,680
We can what we can do.

2202
02:11:36,680 --> 02:11:39,200
We can say full right if you wanted it.

2203
02:11:39,760 --> 02:11:44,040
So if we don't want to have a default,
we don't have to have it.

2204
02:11:44,040 --> 02:11:46,200
It's optional, right? Try another food.

2205
02:11:46,400 --> 02:11:47,880
I we could fix a little bit.

2206
02:11:47,880 --> 02:11:50,960
The statement actually thought there's
something else as written, but it's fine.

2207
02:11:51,080 --> 02:11:52,160
It's fine. Okay, that's fine.

2208
02:11:52,160 --> 02:11:54,800
If you're if your country is Peru,
let's do it this way.

2209
02:11:54,800 --> 02:11:55,160
I guess

2210
02:11:56,160 --> 02:11:57,560
if we were not

2211
02:11:57,560 --> 02:12:00,600
able to
define if favorite food, let's do this.

2212
02:12:00,600 --> 02:12:05,440
If we are not able to define the favorite
food, let just not print any statement.

2213
02:12:05,480 --> 02:12:07,480
How can we do it.
We did it already before.

2214
02:12:07,480 --> 02:12:10,400
If we don't know the favorite food,
let's not have the output.

2215
02:12:10,920 --> 02:12:15,000
Or we can say right
eve none of the cases are match.

2216
02:12:15,000 --> 02:12:17,560
Then we will say try another country,
something like that.

2217
02:12:17,560 --> 02:12:20,440
Let's let's have only one output in here.

2218
02:12:21,160 --> 02:12:24,200
We want to have a
we want to have a print out

2219
02:12:24,200 --> 02:12:26,880
only and the only one
we know the favorite food

2220
02:12:28,240 --> 02:12:29,720
in at statement. Right.

2221
02:12:29,720 --> 02:12:32,560
We can even if what

2222
02:12:37,400 --> 02:12:41,520
if we can at our not operate.

2223
02:12:41,520 --> 02:12:42,040
Right.

2224
02:12:42,040 --> 02:12:45,480
So let me put
maybe let me put unknown in here.

2225
02:12:45,600 --> 02:12:47,440
Right. I'll just put unknown.

2226
02:12:47,440 --> 02:12:51,120
Well now I can see if food is equals.

2227
02:12:51,120 --> 02:12:53,680
Right. It equals to unknown means

2228
02:12:54,840 --> 02:12:56,320
or not.

2229
02:12:56,320 --> 02:12:56,920
Right.

2230
02:12:57,000 --> 02:13:01,520
And then deterministic doesn't have like
if before equals to unknown

2231
02:13:01,680 --> 02:13:04,680
and then we'll say not, not only then

2232
02:13:04,680 --> 02:13:07,560
I want to print this statement
and then I want to

2233
02:13:08,680 --> 02:13:09,600
label.

2234
02:13:10,120 --> 02:13:12,120
Only then I want to print the statement.

2235
02:13:12,120 --> 02:13:14,280
Otherwise we can that otherwise.

2236
02:13:14,280 --> 02:13:16,280
Otherwise, let's add that statement.

2237
02:13:16,280 --> 02:13:18,320
Please try another country. Right?

2238
02:13:18,960 --> 02:13:22,840
We try another country.

2239
02:13:22,840 --> 02:13:26,520
Oh, try another.

2240
02:13:26,520 --> 02:13:27,040
Okay.

2241
02:13:27,520 --> 02:13:30,160
We probably it's more

2242
02:13:30,160 --> 02:13:32,200
it's more defined output right now.

2243
02:13:32,200 --> 02:13:35,040
We're going to try
please enter the country zero.

2244
02:13:35,480 --> 02:13:37,560
We go. Please try another country. Right.

2245
02:13:37,560 --> 02:13:41,720
So this way, when we entered Peru
because it did not find

2246
02:13:41,720 --> 02:13:45,560
any matching cases,
you went to the default.

2247
02:13:45,560 --> 02:13:49,280
Now we say, hey,
I want to see this statement.

2248
02:13:49,800 --> 02:13:54,000
All we know only if food is not equals
to unknown, right?

2249
02:13:54,000 --> 02:13:58,400
If the food is not equal to or not,
then that's why it went to the export.

2250
02:13:58,920 --> 02:14:00,720
Then it goes to the best. Yep.

2251
02:14:00,720 --> 02:14:06,960
And now another little thing that we want
to watch that we want to do, right?

2252
02:14:08,120 --> 02:14:09,600
What is going into the country?

2253
02:14:09,600 --> 02:14:12,720
Let's try to e prints right now.

2254
02:14:12,880 --> 02:14:17,840
What I did, what I did
I went through with the lowercase, right.

2255
02:14:17,880 --> 02:14:19,800
I entered with the locals.

2256
02:14:19,800 --> 02:14:21,400
So now. Right.

2257
02:14:21,400 --> 02:14:23,080
What is the value of the country?

2258
02:14:23,080 --> 02:14:25,000
The value of the country is Ukraine.

2259
02:14:25,000 --> 02:14:26,360
All our keys.

2260
02:14:26,360 --> 02:14:37,040
So now
where do you guys think my code will jump?

2261
02:14:37,040 --> 02:14:38,760
And now what happens?

2262
02:14:38,760 --> 02:14:42,840
My code will jump
right away to the default, right?

2263
02:14:42,840 --> 02:14:45,480
It jumps right away to the default. Why?

2264
02:14:45,920 --> 02:14:50,240
Because remember, inside this string is
everything is matter, right?

2265
02:14:50,520 --> 02:14:56,320
So now the value inside
this string was a lowercase Ukraine.

2266
02:14:56,320 --> 02:14:58,480
In here it was lowercase.

2267
02:14:59,000 --> 02:15:01,480
Now, what do we do when we provide

2268
02:15:01,480 --> 02:15:05,720
the matching cases
we provide with the first operator?

2269
02:15:05,720 --> 02:15:08,080
Right? He is all uppercase.

2270
02:15:08,080 --> 02:15:09,560
He is one up or later.

2271
02:15:09,560 --> 02:15:11,920
He's all uppercase. Right?

2272
02:15:11,920 --> 02:15:14,240
So that's why the string was not match.

2273
02:15:14,320 --> 02:15:16,560
You went to the default, that's why.

2274
02:15:17,400 --> 02:15:18,480
And what are we going to get?

2275
02:15:18,480 --> 02:15:20,880
We going to get that food

2276
02:15:22,080 --> 02:15:24,080
is unknown right now.

2277
02:15:24,080 --> 02:15:26,520
And this condition

2278
02:15:26,760 --> 02:15:28,080
was false.

2279
02:15:28,080 --> 02:15:30,480
So now that's why we get in poison
in other countries.

2280
02:15:30,480 --> 02:15:34,200
So now instead of saying
instead of seeing the output for

2281
02:15:35,160 --> 02:15:39,800
for this now we write for Bush, now
we seen please try another punch, right?

2282
02:15:39,800 --> 02:15:40,880
Please try and

2283
02:15:42,640 --> 02:15:44,800
so now
how do we deal with this situations?

2284
02:15:44,800 --> 02:15:45,120
Right.

2285
02:15:45,120 --> 02:15:50,640
So now basically in this piece,
what are we trying to do we trying to do?

2286
02:15:50,640 --> 02:15:53,200
Ignoring, right.
We trying to do it wrong, ignoring.

2287
02:15:53,200 --> 02:15:55,240
We want to say, hey, weather and Ukraine

2288
02:15:55,800 --> 02:16:00,080
all all crops or all our crops
or whichever way it's exactly the same

2289
02:16:00,120 --> 02:16:04,200
right Ukraine in the lower case
that case, it's exactly the same thing.

2290
02:16:04,200 --> 02:16:07,400
Right. So now how can I ignore the cases?

2291
02:16:07,720 --> 02:16:10,560
Now what we can do is I can,

2292
02:16:10,560 --> 02:16:14,680
let's say in here,
country equals or equals ignore case

2293
02:16:15,040 --> 02:16:18,680
Y, because for the equals
you have to provide

2294
02:16:18,680 --> 02:16:22,320
another valley,
you have to provide another value.

2295
02:16:22,320 --> 02:16:26,200
Now you say, Hey, if the country is equal
to what you have to say,

2296
02:16:26,200 --> 02:16:31,560
the country is equal to, I don't know,
let's say lowercase Ukraine. So

2297
02:16:33,080 --> 02:16:33,920
Ukraine.

2298
02:16:33,920 --> 02:16:37,600
So now you compile it with complain
right then right away you guys start

2299
02:16:37,600 --> 02:16:42,400
thinking logically, not because now
why am I compilers complete Now,

2300
02:16:42,400 --> 02:16:47,200
when you say country is equal to Ukraine,
what kind of value will be getting this?

2301
02:16:47,200 --> 02:16:49,760
What kind of value
will be getting country equals to Ukraine

2302
02:16:51,000 --> 02:16:57,840
e taken For that equality?

2303
02:16:57,840 --> 02:17:01,600
No. What is the expression
will be inside my inside

2304
02:17:01,600 --> 02:17:06,040
my this parentheses, I'm saying,
hey, if the country let's say Ukraine now

2305
02:17:06,040 --> 02:17:09,600
entered lowercase equals to Ukraine,
what are what what will be the value

2306
02:17:12,120 --> 02:17:13,600
you will be error

2307
02:17:13,600 --> 02:17:16,760
bowling type of value right in here.

2308
02:17:16,760 --> 02:17:19,680
If I'm going to enter, think
what if I'm running the code?

2309
02:17:19,680 --> 02:17:23,080
My code is supposed right now in here,
I'm going to enter

2310
02:17:23,080 --> 02:17:26,160
Ukraine in here, right inside the country.

2311
02:17:26,400 --> 02:17:30,840
Now I'm saying,
hey, is Ukraine equals to Ukraine?

2312
02:17:30,840 --> 02:17:34,920
What is the expression
it will give me it will give me a true

2313
02:17:35,400 --> 02:17:38,520
value is true is of which time

2314
02:17:38,520 --> 02:17:41,640
valid, true is of the ball in type key.

2315
02:17:41,720 --> 02:17:46,680
And my switch statement work
is the boiling days.

2316
02:17:46,680 --> 02:17:49,920
No, my switch statement
can no work with the boiling.

2317
02:17:49,920 --> 02:17:51,280
Right. So now what?

2318
02:17:51,280 --> 02:17:56,040
We need to do this and this is one
be accurate you all you check in for one.

2319
02:17:56,040 --> 02:17:57,920
So first we'll give you a boolean.

2320
02:17:57,920 --> 02:18:00,240
Second,
you just check in only for one thing.

2321
02:18:00,240 --> 02:18:02,600
So now how do you deal with this thing?

2322
02:18:02,760 --> 02:18:06,440
So now any time you work
with string and then,

2323
02:18:06,440 --> 02:18:09,360
which I already mentioned it many times,
because we will have a

2324
02:18:09,360 --> 02:18:13,400
to detail classes about different things
that we can do with a string.

2325
02:18:13,400 --> 02:18:16,720
But there's a two options
we can I in one option.

2326
02:18:16,720 --> 02:18:18,840
So there's an option is string.

2327
02:18:18,840 --> 02:18:21,440
What we have goes in option to string.

2328
02:18:21,440 --> 02:18:24,920
We can have a
something that call to lower case.

2329
02:18:25,120 --> 02:18:30,680
Okay, we can either convert our variable
to the lower keys

2330
02:18:31,320 --> 02:18:34,760
or we can convert our variable
to the uppercase

2331
02:18:35,360 --> 02:18:38,120
B, So on to
which case we going to convert.

2332
02:18:38,120 --> 02:18:38,360
Right?

2333
02:18:38,360 --> 02:18:40,920
Or we can go to that uppercase.

2334
02:18:41,040 --> 02:18:42,520
So whichever one you decide, Right?

2335
02:18:42,520 --> 02:18:46,560
So let's see
if I'm going to change my string, Right.

2336
02:18:46,760 --> 02:18:47,840
For example. Right.

2337
02:18:48,920 --> 02:18:50,840
If I'm going to enter

2338
02:18:50,840 --> 02:18:56,080
Ukrainian like this, right is the big
you choose and now what will happen?

2339
02:18:56,080 --> 02:18:59,200
This variable will be stored inside

2340
02:18:59,200 --> 02:19:02,280
this near this, this value can be stored
inside this variable.

2341
02:19:02,680 --> 02:19:08,600
So now what I'm doing I'm taking the
Ukrainian that was was first uppercase.

2342
02:19:08,600 --> 02:19:09,360
Right.

2343
02:19:09,560 --> 02:19:11,760
And then

2344
02:19:11,760 --> 02:19:15,320
I am saying
hey convert this to the lowercase.

2345
02:19:15,680 --> 02:19:20,760
So now what Java will do is convert
the everything to the lowercase.

2346
02:19:21,000 --> 02:19:21,280
Right.

2347
02:19:21,280 --> 02:19:24,440
It will convert everything
to the lowercase.

2348
02:19:24,440 --> 02:19:29,400
So now if your variable is converted
to the lowercase guys,

2349
02:19:29,400 --> 02:19:34,200
because everything is inside,
the string is matter what you have to do,

2350
02:19:34,200 --> 02:19:37,560
then all your cases, you have to provide

2351
02:19:37,560 --> 02:19:40,760
with the law cases, everything.

2352
02:19:40,760 --> 02:19:43,560
Then you will have to specify
with the lowercase

2353
02:19:44,080 --> 02:19:46,600
y because at first, before

2354
02:19:46,720 --> 02:19:49,880
what in your switch
what your jabber will do.

2355
02:19:49,880 --> 02:19:53,160
It will take your country,
it will convert it to the lowercase.

2356
02:19:53,160 --> 02:19:53,800
Right.

2357
02:19:53,800 --> 02:19:57,840
Then all your countries
should be specified with the lowercase

2358
02:19:58,360 --> 02:20:03,040
or similarly e
if instead of to the lowercase you going

2359
02:20:03,200 --> 02:20:06,280
use it to uppercase. Right?

2360
02:20:06,280 --> 02:20:13,000
It means it will convert your country
all to the uppercase is right.

2361
02:20:13,000 --> 02:20:15,760
So now from the Ukrainian
that you enter it.

2362
02:20:15,760 --> 02:20:17,280
So now it will convert.

2363
02:20:17,280 --> 02:20:21,600
If you're going to say to uppercase,
it will make all caps.

2364
02:20:22,200 --> 02:20:24,360
You make all caps, right?

2365
02:20:25,080 --> 02:20:26,960
You will make all caps in here.

2366
02:20:26,960 --> 02:20:30,320
And then if it makes your variable

2367
02:20:30,320 --> 02:20:33,120
to the all caps, then

2368
02:20:33,400 --> 02:20:38,000
all matching cases must be in all caps
and then all matching cases.

2369
02:20:38,000 --> 02:20:41,520
So now, instead of having Mexico
like this,

2370
02:20:41,520 --> 02:20:46,880
you will have to specify a keys
all in the upper keys.

2371
02:20:47,040 --> 02:20:53,920
In all, in the upper Keys.

2372
02:20:53,920 --> 02:20:56,360
Well, in here, guys, while we capture.

2373
02:20:56,400 --> 02:20:57,040
No, we cannot.

2374
02:20:57,040 --> 02:20:58,600
Just if you want to

2375
02:20:58,600 --> 02:21:02,360
it just using the ignite is
then you guys will have to go for it.

2376
02:21:03,360 --> 02:21:07,000
If if if statement can.

2377
02:21:07,000 --> 02:21:10,840
No, there's no way this is their way.

2378
02:21:11,080 --> 02:21:13,600
Let me see if it starts.

2379
02:21:13,600 --> 02:21:16,680
There is a
we need to look at different different.

2380
02:21:16,680 --> 02:21:23,480
Let me see if that starts with.

2381
02:21:23,480 --> 02:21:27,240
I know that we have begin and preface.

2382
02:21:27,560 --> 02:21:31,000
I don't think as we can define
whether it starts with the uppercase

2383
02:21:31,000 --> 02:21:33,960
or we start with the lowercase

2384
02:21:35,400 --> 02:21:36,240
foreign. Yes.

2385
02:21:36,240 --> 02:21:40,520
So this way you guys, as I mentioned to
you guys have to select

2386
02:21:40,880 --> 02:21:43,800
you want to convert
to the lower case of the operative.

2387
02:21:43,800 --> 02:21:47,240
So if you can, we're going
to convert everything to working.

2388
02:21:47,640 --> 02:21:52,480
Make sure all your countries are specified
using the all matching cases

2389
02:21:52,480 --> 02:21:59,440
as specified in the Lord Jesus.

2390
02:21:59,440 --> 02:22:02,080
I'm just going to more use. All right.

2391
02:22:02,120 --> 02:22:04,200
If you're going to convert
to the uppercase,

2392
02:22:04,200 --> 02:22:06,920
then everything has to be uppercase
in here, right?

2393
02:22:06,920 --> 02:22:12,040
Because what's going to happen,
even if I'm going to entry U.S., right?

2394
02:22:12,320 --> 02:22:14,680
So I'm entering you all in the

2395
02:22:15,840 --> 02:22:17,160
caps, right?

2396
02:22:17,160 --> 02:22:22,680
Then I'm saying inside my switch, take
my variable, convert it to the lowercase.

2397
02:22:23,040 --> 02:22:27,840
So now from the big U.S.,
I'm going to get a small U.S.

2398
02:22:28,040 --> 02:22:29,840
in all our cases.

2399
02:22:29,840 --> 02:22:32,760
And then only only once I converted,

2400
02:22:32,760 --> 02:22:37,080
then I'm going inside my switch plug
and then what I will

2401
02:22:37,080 --> 02:22:39,840
look I will look for a matching piece,
right?

2402
02:22:40,840 --> 02:22:44,520
Converting to the lowercase
or or matching cases must be the largest

2403
02:22:44,840 --> 02:22:47,840
if convert into the uppercase
all matching cases

2404
02:22:47,840 --> 02:22:51,080
must be promoted to the uppercase.

2405
02:22:51,080 --> 02:22:54,000
Does not mean that it's
that it's more useful or not.

2406
02:22:54,000 --> 02:22:54,520
Okay.

2407
02:22:54,600 --> 02:22:58,040
In some certain operations,
maybe we will have to convert

2408
02:22:58,040 --> 02:23:01,240
to the lowercase in some operations
we will have to convert to that

2409
02:23:01,760 --> 02:23:05,160
key will be based on this scenario,
but it does not mean that is one

2410
02:23:05,160 --> 02:23:06,600
is more useful than other

2411
02:23:10,200 --> 02:23:12,360
or I'm still running.

2412
02:23:12,360 --> 02:23:12,680
All right.

2413
02:23:12,680 --> 02:23:16,320
Now, if I enter U.S., your countries,
you see, if I read, what is it?

2414
02:23:16,760 --> 02:23:21,440
Right?

2415
02:23:21,440 --> 02:23:23,480
If we enter invalid country. Right.

2416
02:23:23,760 --> 02:23:25,600
So please enter the country Right.

2417
02:23:25,600 --> 02:23:28,080
So what we were going to write.

2418
02:23:28,080 --> 02:23:32,360
So whenever I'm going to enter,
let's see what happens in the right number

2419
02:23:32,360 --> 02:23:35,320
this quarter executes
always steps to the bottom.

2420
02:23:35,400 --> 02:23:38,160
Right now you could see switch it.

2421
02:23:38,160 --> 02:23:39,000
No, it's okay.

2422
02:23:39,000 --> 02:23:42,400
When I see a switch,
I have to check for the value, right?

2423
02:23:42,400 --> 02:23:47,840
I have to check for the value of this
particular variable that I specify.

2424
02:23:47,840 --> 02:23:48,520
Right.

2425
02:23:48,520 --> 02:23:53,920
So now I enter this rule using
the first letter is uppercase.

2426
02:23:53,920 --> 02:23:54,200
Right?

2427
02:23:54,200 --> 02:23:57,800
So first, always analyze
what happens right?

2428
02:23:57,800 --> 02:24:01,440
Then I'm taking this rule
right of the rule, right.

2429
02:24:01,760 --> 02:24:05,400
And then your case right code
executes left to the right.

2430
02:24:05,760 --> 02:24:07,880
It's going to convert it to small firm,

2431
02:24:08,440 --> 02:24:12,680
all caps, AP converts.

2432
02:24:12,680 --> 02:24:15,040
Then our switch statement starts. Right?

2433
02:24:15,040 --> 02:24:16,880
Our switch book starts.

2434
02:24:16,880 --> 02:24:21,960
Now you will know, Hey,
there's none of the matching cases, right?

2435
02:24:22,240 --> 02:24:23,600
None of the matching cases.

2436
02:24:23,600 --> 02:24:26,040
So your code will jump to the default.

2437
02:24:26,040 --> 02:24:27,800
Now you will be canceled.

2438
02:24:27,800 --> 02:24:29,800
Your full becomes unknown. Right?

2439
02:24:30,000 --> 02:24:32,640
So now you initialize your variable
to on then.

2440
02:24:33,320 --> 02:24:35,680
Now your java once

2441
02:24:35,680 --> 02:24:38,840
it's executed default,
it exists from your switch statement.

2442
02:24:38,840 --> 02:24:43,520
Now you want to continue now
while continuing execution.

2443
02:24:43,520 --> 02:24:47,160
It sees another statement right now
it says if statement

2444
02:24:47,520 --> 02:24:50,320
now it knows okay when I work is
it is statement.

2445
02:24:50,320 --> 02:24:54,600
I have to check for the condition
right now it says hey is full equals

2446
02:24:54,600 --> 02:24:57,480
to unknown because your value was unknown.

2447
02:24:57,800 --> 02:25:00,920
Now we check
and here is the non equals to unknown.

2448
02:25:00,920 --> 02:25:05,400
Yes, condition is true, but that condition
will be evaluated right?

2449
02:25:06,120 --> 02:25:09,360
So unknown is equal
to a known condition will be true.

2450
02:25:09,760 --> 02:25:12,480
Then use not operator we converting so

2451
02:25:12,480 --> 02:25:15,200
now our truth will be converted
to the false.

2452
02:25:15,520 --> 02:25:18,960
When the condition is false,
you cannot enter the eve block.

2453
02:25:19,120 --> 02:25:23,160
You will jump the L's block and that's
what you're going to get pushed right?

2454
02:25:23,160 --> 02:25:24,840
Another country. I

2455
02:25:29,520 --> 02:25:30,840
even if there's a space.

2456
02:25:30,840 --> 02:25:35,120
Yes, even if there's a space,
but there's a that we can any time

2457
02:25:35,120 --> 02:25:38,160
you guys work with this tree,
we can do a lot of things with this train.

2458
02:25:38,160 --> 02:25:42,120
We can we can trim the strings,
we can reduce spaces,

2459
02:25:42,120 --> 02:25:46,440
we can connect strings,
We can take out some pieces, the strings.

2460
02:25:46,440 --> 02:25:50,240
There's a many, many things
we can do in once long as you can easily,

2461
02:25:50,480 --> 02:25:53,560
we'll be able to fix
any other case of this.

2462
02:25:53,560 --> 02:25:55,320
In there you can

2463
02:26:01,960 --> 02:26:02,640
switch statement.

2464
02:26:02,640 --> 02:26:04,880
All it does
is it checks for the equality. Okay?

2465
02:26:05,160 --> 02:26:09,240
If if, if the value of this variable
is Ukrainian,

2466
02:26:09,240 --> 02:26:12,440
then I'll go there, evaluate
the variable will be Eataly.

2467
02:26:12,440 --> 02:26:13,720
I'll jump right in here.

2468
02:26:13,720 --> 02:26:17,840
Okay.

2469
02:26:17,840 --> 02:26:20,760
Okay guys. I think for the null. Right.

2470
02:26:21,240 --> 02:26:23,240
What I know I already explain in many,

2471
02:26:23,240 --> 02:26:26,160
many times right now
because you have default statement,

2472
02:26:26,480 --> 02:26:30,920
because if none of the cases are matching
efforts, they will be initialized.

2473
02:26:30,920 --> 02:26:33,680
So do I need to have a no,
I don't have to have a null

2474
02:26:34,400 --> 02:26:36,680
in this particular
now, I don't have to have a

2475
02:26:37,680 --> 02:26:40,760
we use the markets were inside here.

2476
02:26:40,760 --> 02:26:43,280
No, this inside here no.

2477
02:26:43,280 --> 02:26:46,840
And here we can huh.

2478
02:26:47,600 --> 02:26:50,400
Can you at and sub is needed.

2479
02:26:51,640 --> 02:26:53,520
Okay so now remember

2480
02:26:53,520 --> 02:26:56,400
this is a block of code that we go right?

2481
02:26:56,760 --> 02:26:59,200
So now we say hey

2482
02:26:59,480 --> 02:27:03,840
if the country will the United States
right here we have

2483
02:27:04,000 --> 02:27:08,520
we can have many statements that we can
have many statements in here if we want.

2484
02:27:08,760 --> 02:27:12,600
If you want to throw the nesting in here,
you're more than welcome to do it.

2485
02:27:12,840 --> 02:27:16,160
You want to add another switch,
You're more than welcome to do it

2486
02:27:16,560 --> 02:27:18,360
based on the scenario. Right.

2487
02:27:18,360 --> 02:27:21,400
But you should understand
when this scenario,

2488
02:27:21,400 --> 02:27:24,280
for example, if you want to add the
if statement in here, right.

2489
02:27:24,560 --> 02:27:28,200
If something I don't know, whatever,
whatever the condition will be in here.

2490
02:27:28,520 --> 02:27:28,880
Right.

2491
02:27:28,880 --> 02:27:35,280
So all you have to understand when this
if will be executed only and only when

2492
02:27:36,000 --> 02:27:38,480
a value of this variable

2493
02:27:38,840 --> 02:27:42,000
after the conversion
will be equal to the U.S..

2494
02:27:42,160 --> 02:27:44,200
But can there be more stuff?

2495
02:27:44,200 --> 02:27:47,440
Of course, because there's inside
can be many, many other stuff.

2496
02:27:48,600 --> 02:27:49,240
There can be.

2497
02:27:49,240 --> 02:27:53,520
Even if you want, you can throw
another switch in here, right?

2498
02:27:53,520 --> 02:27:57,360
We can throw another switch in here
as many things you guys can throw inside.

2499
02:27:58,840 --> 02:28:01,240
But then think the same thing.

2500
02:28:01,240 --> 02:28:02,480
All you have to.

2501
02:28:02,480 --> 02:28:07,280
Just make sure you understand
in which this my gear execution

2502
02:28:07,560 --> 02:28:10,720
only and only
when a code will jump in here.

2503
02:28:11,040 --> 02:28:13,800
If you code will be it,
then obviously this

2504
02:28:13,800 --> 02:28:16,880
switch will never get a chance
to be executed.

2505
02:28:17,000 --> 02:28:17,520
Right.

2506
02:28:17,520 --> 02:28:20,440
But is there a possibility
that they can be inside of Williams?

2507
02:28:20,440 --> 02:28:23,600
There's a possibility
that we can have many things inside.

2508
02:28:23,640 --> 02:28:27,000
One now is only one line
and they can be in many other lines

2509
02:28:27,000 --> 02:28:39,320
that can include many other things
in there.

2510
02:28:39,320 --> 02:28:39,840
Yeah.

2511
02:28:39,840 --> 02:28:41,640
Once again, this country ignore keys.

2512
02:28:41,640 --> 02:28:43,840
No, we cannot do it. We cannot do it in

2513
02:28:46,560 --> 02:28:49,800
like I can write more than one with Alexa.

2514
02:28:49,800 --> 02:28:52,920
Can you specify a question

2515
02:29:05,280 --> 02:29:06,040
more than once?

2516
02:29:06,040 --> 02:29:06,640
What do you mean?

2517
02:29:06,640 --> 02:29:07,600
In here

2518
02:29:15,600 --> 02:29:16,000
You can.

2519
02:29:16,000 --> 02:29:19,040
You can,
you can add more stuff in here, right?

2520
02:29:19,080 --> 02:29:21,000
You can add more and more stuff in here.

2521
02:29:21,000 --> 02:29:22,320
That's what you want.

2522
02:29:22,320 --> 02:29:26,400
But remember,
one variable guys can have only one value.

2523
02:29:27,080 --> 02:29:30,720
For example,
what if I'm going to add four equals two?

2524
02:29:31,520 --> 02:29:32,680
Four equals two?

2525
02:29:32,680 --> 02:29:33,040
I don't know.

2526
02:29:33,040 --> 02:29:36,800
What do you guys have in there?

2527
02:29:36,800 --> 02:29:39,280
And something else, right?

2528
02:29:39,280 --> 02:29:41,640
I don't know you guys or more.

2529
02:29:41,680 --> 02:29:42,640
What are you having?

2530
02:29:42,640 --> 02:29:44,880
That Veronika right there.

2531
02:29:44,880 --> 02:29:46,920
Right. Okay.

2532
02:29:46,920 --> 02:29:48,240
Can you have it? This way?

2533
02:29:48,240 --> 02:29:51,080
Yes, we can have it this way.
But let me ask you this then.

2534
02:29:51,080 --> 02:29:54,760
What if I'm willing to enter Ukrainian
right now?

2535
02:29:55,320 --> 02:29:57,120
What do you guys think will be the output?

2536
02:29:57,120 --> 02:30:20,400
What will be the
favorite theoretical? What

2537
02:30:25,680 --> 02:30:27,360
or the first one

2538
02:30:33,240 --> 02:30:36,720
or last one?

2539
02:30:36,720 --> 02:30:37,200
All right.

2540
02:30:37,200 --> 02:30:40,920
Let's let's let's let's before
would you run in that I want you to run

2541
02:30:40,920 --> 02:30:46,440
right let's let's
let's turn on our think in logic right

2542
02:30:46,720 --> 02:30:51,640
so now you guys need to explain me
so now I will be can have two values.

2543
02:30:51,640 --> 02:30:52,600
That's good. Thank you.

2544
02:30:52,600 --> 02:30:54,960
Right. Why?
Because we have a single variable.

2545
02:30:54,960 --> 02:30:57,400
A single variable
can hold only single value.

2546
02:30:57,400 --> 02:31:00,080
But now the question is
what will be in there?

2547
02:31:00,360 --> 02:31:01,720
Let's go step by step.

2548
02:31:01,720 --> 02:31:04,680
I want you guys give me the explanation.

2549
02:31:04,680 --> 02:31:07,240
So Ukraine will be stored in here.

2550
02:31:07,760 --> 02:31:09,200
Now, what happens in here?

2551
02:31:09,200 --> 02:31:17,120
Can you guys explain me
what happens in here?

2552
02:31:17,120 --> 02:31:20,440
I need you to explain to me
what happens in there.

2553
02:31:22,400 --> 02:31:23,920
So now Ukraine in form.

2554
02:31:23,920 --> 02:31:26,280
The upper Keys. Converse Lilac is good.

2555
02:31:26,440 --> 02:31:30,480
So now, from having a string
all in uppercase, we are going to get

2556
02:31:30,480 --> 02:31:34,240
a completely new string
that will be in the lowercase.

2557
02:31:34,240 --> 02:31:36,600
That's
what are we going to be? Okay, good.

2558
02:31:36,600 --> 02:31:38,360
Okay, then after that, we're

2559
02:31:39,320 --> 02:31:39,840
after that.

2560
02:31:39,840 --> 02:31:41,400
What happens this

2561
02:31:45,320 --> 02:31:48,600
if finds the matching case, right?

2562
02:31:48,600 --> 02:31:50,640
If it finds the matching case.

2563
02:31:51,080 --> 02:31:53,280
Okay, cool It found the matching case.

2564
02:31:53,640 --> 02:32:02,560
Then once it finds the matching case,
what happens based. Oh,

2565
02:32:03,600 --> 02:32:04,760
it goes inside. Right.

2566
02:32:04,760 --> 02:32:06,480
Okay. Off the same column.

2567
02:32:06,480 --> 02:32:08,640
It allows t goes inside of it. Right.

2568
02:32:08,640 --> 02:32:11,160
It finds the matching case,
then it goes inside.

2569
02:32:11,400 --> 02:32:13,800
So now what happens on the line 22 This

2570
02:32:21,360 --> 02:32:36,480
What happens on the line 22?

2571
02:32:36,480 --> 02:32:36,760
Okay.

2572
02:32:36,760 --> 02:32:39,840
What is the word for this
and what are we doing on the line 22?

2573
02:32:39,840 --> 02:32:44,080
This?

2574
02:32:44,080 --> 02:32:47,320
Oh, I don't see that we have t cell going,
not printing this.

2575
02:32:47,320 --> 02:32:50,280
I don't see any print on the line 22.

2576
02:32:50,280 --> 02:32:51,640
What happens

2577
02:32:53,160 --> 02:32:54,920
when 22

2578
02:32:55,920 --> 02:32:57,160
So what are we doing?

2579
02:32:57,160 --> 02:32:59,640
We they go we are signing right.

2580
02:32:59,640 --> 02:33:01,960
We are initially sizing that.

2581
02:33:02,400 --> 02:33:05,000
So now what happens?
We had a four in there.

2582
02:33:05,000 --> 02:33:06,400
Regal empty box.

2583
02:33:06,400 --> 02:33:08,440
Empty box we have in here. Right?

2584
02:33:08,440 --> 02:33:11,720
So now this empty box,
we reserve the memory java.

2585
02:33:11,720 --> 02:33:15,160
Right?
So now on the line 22, what happens?

2586
02:33:15,440 --> 02:33:19,440
We take in the value of Bush
in the storing it in here.

2587
02:33:19,440 --> 02:33:24,360
So what we're doing,
we are initializing a variable forward.

2588
02:33:24,360 --> 02:33:26,520
Right. Good.

2589
02:33:26,520 --> 02:33:29,520
So then what happens with
our code is our code gets out though.

2590
02:33:29,560 --> 02:33:30,640
What happens with the code

2591
02:33:36,080 --> 02:33:39,840
then when we
remember, the code goes up to the bottom

2592
02:33:39,840 --> 02:33:44,480
until it sees either switch
or until it sees Eve.

2593
02:33:44,880 --> 02:33:48,720
But you could remember
the step to the bottom that how it goes,

2594
02:33:48,720 --> 02:33:49,960
always remember this.

2595
02:33:49,960 --> 02:33:51,720
Now it executed line 22.

2596
02:33:51,720 --> 02:33:54,160
Now it will go ahead and execute line 23.

2597
02:33:54,160 --> 02:33:59,800
What happens on the line 23?

2598
02:33:59,800 --> 02:34:02,840
And we are signing.

2599
02:34:02,840 --> 02:34:04,560
Right. Reassigning.

2600
02:34:04,560 --> 02:34:06,080
So we're not printing in here.

2601
02:34:06,080 --> 02:34:07,560
We are reassigning. Right.

2602
02:34:07,560 --> 02:34:11,440
So now we're saying, hey, Bush,
before we had abortion here, right?

2603
02:34:11,440 --> 02:34:13,320
Hey, boys, get out from here.

2604
02:34:13,320 --> 02:34:19,680
Now I'm placing very unique in their
right of their place in this value code.

2605
02:34:19,680 --> 02:34:20,800
The game goes down.

2606
02:34:20,800 --> 02:34:23,440
What now? When the code goes down,
what does it see?

2607
02:34:23,480 --> 02:34:28,560
This is a break.

2608
02:34:28,560 --> 02:34:34,000
So what is the break is going to do?

2609
02:34:34,000 --> 02:34:35,520
Breaks is get out.

2610
02:34:35,520 --> 02:34:38,880
Stop, stop
execution inside my switch statement.

2611
02:34:38,920 --> 02:34:39,760
Get out. Right.

2612
02:34:39,760 --> 02:34:43,160
So now a Java Caesar. Remember break.

2613
02:34:43,160 --> 02:34:44,560
It's a key word.

2614
02:34:44,560 --> 02:34:47,040
He words have a special meaning in Joe.

2615
02:34:47,040 --> 02:34:48,680
And now Joe is break. Okay.

2616
02:34:48,680 --> 02:34:50,720
Somebody is kicking me out. Okay.

2617
02:34:50,720 --> 02:34:53,080
I'm going to get out.
But we're kicking me out.

2618
02:34:53,360 --> 02:34:57,120
It's kicking me out from this switch
statement where switch statement starts.

2619
02:34:57,120 --> 02:34:59,800
It starts from this curly braces, it ends.

2620
02:34:59,800 --> 02:35:02,760
And here they
they kick me out from the case.

2621
02:35:03,040 --> 02:35:06,000
So now what I will do,
I will jump right away in here.

2622
02:35:06,360 --> 02:35:09,040
So now, what is the last
value of you placed inside

2623
02:35:09,040 --> 02:35:14,040
the variable floodgates?

2624
02:35:14,040 --> 02:35:16,080
Thank you. Right. That's what we put.

2625
02:35:16,120 --> 02:35:20,600
So now we're saying
here is the very key equals to unknown.

2626
02:35:20,600 --> 02:35:24,720
Is it true or false?

2627
02:35:24,720 --> 02:35:26,760
Is a new key equals to unknown.

2628
02:35:27,480 --> 02:35:29,360
No condition is false.

2629
02:35:29,360 --> 02:35:32,640
And then what you see is
it sees a not operator.

2630
02:35:32,640 --> 02:35:33,840
So what's going to happen

2631
02:35:36,680 --> 02:35:39,160
in and it will reverse.

2632
02:35:39,160 --> 02:35:43,480
Before I had false
now I'm saying not false.

2633
02:35:43,800 --> 02:35:47,800
It's going revert to the true right
And then one condition is true.

2634
02:35:47,800 --> 02:35:52,560
I can go inside the if block and now
this is if your country is Ukrainian,

2635
02:35:52,800 --> 02:35:56,280
your favorite food is ready
that's what we going to go, right.

2636
02:35:57,360 --> 02:35:58,440
That's what we're going to get.

2637
02:35:58,440 --> 02:36:01,600
So you see, always, always

2638
02:36:01,920 --> 02:36:04,720
had to analyze
you could write so the first here

2639
02:36:04,760 --> 02:36:08,520
well while debugging you guys will see
right so what's going to happen right now

2640
02:36:08,800 --> 02:36:13,720
food At first it was bush
now is going to change to a key

2641
02:36:13,920 --> 02:36:17,000
and then is going to edit

2642
02:36:17,000 --> 02:36:20,640
my switch work
and then my switch my even here right

2643
02:36:20,640 --> 02:36:24,600
will give me the true
and that's where we going to right. So

2644
02:36:27,160 --> 02:36:27,840
get inside.

2645
02:36:27,840 --> 02:36:31,120
You can have whatever code you will need
to pull based on their logic,

2646
02:36:31,120 --> 02:36:35,520
based on their assignment in here.

2647
02:36:35,520 --> 02:36:36,320
Okay.

2648
02:36:37,760 --> 02:36:39,720
Then we use like for example,

2649
02:36:39,720 --> 02:36:43,200
integer x, x or same formula

2650
02:36:43,200 --> 02:36:48,160
and can we put it in the x key please

2651
02:36:51,480 --> 02:36:54,240
fix Alexander.

2652
02:36:54,240 --> 02:36:55,680
You can. You can try it. Right.

2653
02:36:55,680 --> 02:37:01,600
So remember,
remember inside the keys, right.

2654
02:37:01,600 --> 02:37:03,800
We providing the value. Right?

2655
02:37:04,040 --> 02:37:05,640
Providing the value.

2656
02:37:05,640 --> 02:37:10,920
But can you do some things
the value for example before that.

2657
02:37:11,040 --> 02:37:11,680
Right.

2658
02:37:11,760 --> 02:37:15,000
Can you do some things with this
with the value before that?

2659
02:37:15,000 --> 02:37:17,840
If it's a numbers you can try,
you can see,

2660
02:37:17,840 --> 02:37:21,720
you can try to perform some operations
and see if it will work.

2661
02:37:21,880 --> 02:37:23,840
Okay.

2662
02:37:23,840 --> 02:37:35,400
What we're going to have.

2663
02:37:35,400 --> 02:37:38,040
All right
this right. So let's do some practice.

2664
02:37:38,040 --> 02:37:39,280
But I'm going to maybe

2665
02:37:40,520 --> 02:37:43,080
actually it's one of these right? So

2666
02:37:44,080 --> 02:37:46,840
another assignment goes,
you boys, I'm going to give you

2667
02:37:46,840 --> 02:37:49,160
just these two guys
the very similar. Right?

2668
02:37:49,160 --> 02:37:50,520
The first one, very similar.

2669
02:37:50,520 --> 02:37:55,440
But now I want you to try try
converting the values to the uppercase.

2670
02:37:55,760 --> 02:37:58,400
Right. When you will be capturing
the country, then you will.

2671
02:37:58,400 --> 02:38:02,880
I want you to define the language
and the same thing here scanner,

2672
02:38:02,880 --> 02:38:06,880
but you will be capturing the great
the example that you did before.

2673
02:38:06,880 --> 02:38:09,960
The only thing right now
I want you to capture it in.

2674
02:38:09,960 --> 02:38:13,000
Now you guys should be able to do it
in this switch

2675
02:38:13,000 --> 02:38:18,960
and this is will be your homework
so we'll explain your homework.

2676
02:38:18,960 --> 02:38:21,640
Okay. So let me send you this right.

2677
02:38:22,000 --> 02:38:26,160
And what we can do is we can take an

2678
02:38:27,840 --> 02:38:32,600
after this assignment.

2679
02:38:32,600 --> 02:38:37,920
We can do it

2680
02:38:40,120 --> 02:38:44,800
just just to follow this,
just you for now.

2681
02:38:45,360 --> 02:38:48,000
And this will be your later homework.

2682
02:38:48,240 --> 02:38:52,800
Can be

2683
02:39:05,120 --> 02:39:05,480
learned.

2684
02:39:06,120 --> 02:39:08,480
I send it in the course announcement.

2685
02:39:08,760 --> 02:39:14,720
Okay?

2686
02:39:14,720 --> 02:39:16,960
Okay. All right. I guess I'm going to.

2687
02:39:17,920 --> 02:39:20,160
So it's 109.

2688
02:39:20,160 --> 02:39:23,400
So basically, guys,
what I'm going to give you

2689
02:39:24,000 --> 02:39:26,040
I'm going to give you 10 minutes to do it.

2690
02:39:26,200 --> 02:39:26,560
Right.

2691
02:39:26,560 --> 02:39:29,880
10 minutes to do it,
and then 15 minutes for a break.

2692
02:39:29,880 --> 02:39:33,240
So I want you to be back,
but I want you to complete the assignment,

2693
02:39:34,200 --> 02:39:38,280
complete tasks, and be back by

2694
02:39:39,960 --> 02:39:42,600
135 to 3135.

2695
02:39:43,680 --> 02:39:46,960
This way you guys have 10 minutes
for assignment and 15 minutes for break.

2696
02:39:46,960 --> 02:39:58,680
If you finish your assignment early,
you can have a longer break.

2697
02:39:58,680 --> 02:40:02,280
All right, This with me. Copy this right

2698
02:40:04,960 --> 02:40:17,080
now, to

2699
02:40:17,200 --> 02:40:20,040
me, the right scanner's scanners

2700
02:40:20,880 --> 02:40:23,880
is there to enable our and console.

2701
02:40:24,320 --> 02:40:26,320
Then here we provided they suction.

2702
02:40:26,320 --> 02:40:29,720
Right here
we capture and they charge our book value.

2703
02:40:29,760 --> 02:40:31,040
That's why we use it next.

2704
02:40:31,040 --> 02:40:35,400
And from next we use in the character
and the first place.

2705
02:40:35,400 --> 02:40:38,800
Right
And then here declaring one variable.

2706
02:40:38,800 --> 02:40:41,160
But we don't know the value yet, right?

2707
02:40:41,200 --> 02:40:44,480
We don't know the value
then here inside our switch.

2708
02:40:44,480 --> 02:40:44,760
Right.

2709
02:40:44,760 --> 02:40:50,400
So you're saying yay, I'm providing
a different values for a great right.

2710
02:40:50,680 --> 02:40:53,440
My value great is a chart type of value.

2711
02:40:53,760 --> 02:40:56,760
So the values my matching cases

2712
02:40:56,760 --> 02:40:59,920
are also as a chart type, right?

2713
02:40:59,920 --> 02:41:01,920
So let's say needs is eight.

2714
02:41:02,160 --> 02:41:05,760
Then you get excellent case
be you good Casey

2715
02:41:05,840 --> 02:41:11,200
average case D band and default
we name it acceptable right

2716
02:41:11,640 --> 02:41:13,800
and then you said any explanation

2717
02:41:14,360 --> 02:41:16,720
is not equal to not acceptable

2718
02:41:17,040 --> 02:41:20,000
and you will print
a great an explanation right

2719
02:41:21,320 --> 02:41:23,480
And then you guys what do you do
you test with different

2720
02:41:24,080 --> 02:41:27,840
in variable my greatest eight
they go A's excellent right.

2721
02:41:27,840 --> 02:41:32,640
They always tell me the group
migrate is me your grade is that right?

2722
02:41:32,640 --> 02:41:35,320
And then let's check anything else.

2723
02:41:36,000 --> 02:41:37,040
Please enter your grade.

2724
02:41:37,040 --> 02:41:40,880
My three D they go to enter another group.

2725
02:41:41,360 --> 02:41:43,200
So my code. What?

2726
02:41:43,200 --> 02:41:46,040
My code works.

2727
02:41:46,040 --> 02:41:49,280
So for a switch we're seeing rates,
which is a value based.

2728
02:41:49,280 --> 02:41:54,280
So what happened matching
now is why we are taking that is right.

2729
02:41:54,280 --> 02:41:58,880
We are we are checking for the matching
values for this particular variable.

2730
02:41:58,880 --> 02:41:59,160
Right.

2731
02:41:59,160 --> 02:42:03,560
And once our code,
because our code knows the exact

2732
02:42:03,560 --> 02:42:06,640
now only because it holds that value,
our code will jump

2733
02:42:06,640 --> 02:42:09,640
right away into the matching each right

2734
02:42:10,680 --> 02:42:11,520
matching

2735
02:42:14,880 --> 02:42:16,280
and right.

2736
02:42:16,280 --> 02:42:17,560
Let's look into here.

2737
02:42:17,560 --> 02:42:18,280
What do we have?

2738
02:42:18,280 --> 02:42:21,120
Right. So rules we are right

2739
02:42:21,120 --> 02:42:25,360
you will able right.

2740
02:42:25,360 --> 02:42:26,440
That's what we say.

2741
02:42:26,440 --> 02:42:29,440
The value of the case
must be the same as data type

2742
02:42:29,880 --> 02:42:31,960
break statement be used to

2743
02:42:33,040 --> 02:42:34,840
get out from this statement.

2744
02:42:34,840 --> 02:42:35,760
Get out from the switch.

2745
02:42:35,760 --> 02:42:41,600
Statement break is optional, but if we're
not going to have it, it's our code.

2746
02:42:41,600 --> 02:42:44,760
Our Joe will continue running
into the next cases.

2747
02:42:45,840 --> 02:42:48,360
Default is our block is very optional.

2748
02:42:48,720 --> 02:42:49,480
No, only difference.

2749
02:42:49,480 --> 02:42:52,760
It can be anywhere inside our switch
blocked Duplicate

2750
02:42:52,760 --> 02:42:59,880
cases are not allowed.

2751
02:42:59,880 --> 02:43:03,960
And in here, right in here
we see me talking about the limitation

2752
02:43:04,240 --> 02:43:06,960
so the switch case
can check only for equality.

2753
02:43:07,080 --> 02:43:09,080
So each case in the inside

2754
02:43:09,120 --> 02:43:12,480
the switch case, we cannot say that
the value is greater than something

2755
02:43:12,800 --> 02:43:16,080
that the value can be equal to this
or equal that.

2756
02:43:16,080 --> 02:43:20,280
So there is work, so there is
no relational and no logical apparatus.

2757
02:43:20,280 --> 02:43:20,480
Right.

2758
02:43:20,480 --> 02:43:24,400
And there's a limitation in our data types
that we can use with this,

2759
02:43:24,400 --> 02:43:28,240
which also the code
is about upper lower case,

2760
02:43:29,280 --> 02:43:30,080
upper lorikeets.

2761
02:43:30,080 --> 02:43:31,160
That was for your string.

2762
02:43:31,160 --> 02:43:34,040
This right, That was for your string

2763
02:43:34,040 --> 02:43:35,880
and right for a string.

2764
02:43:35,880 --> 02:43:38,000
So what you guys were doing here

2765
02:43:39,120 --> 02:43:42,120
when you convert something
to the uppercase, right?

2766
02:43:42,120 --> 02:43:46,560
When you convert something
to the uppercase, then matching cases.

2767
02:43:46,880 --> 02:43:50,760
Matching cases
must be also in the uppercase.

2768
02:43:50,960 --> 02:43:53,160
That was the
that was the first one. Right.

2769
02:43:53,160 --> 02:43:55,560
So in here, if you would captured country,

2770
02:43:55,840 --> 02:44:00,160
then I want you to country
to convert the country to the uppercase.

2771
02:44:00,160 --> 02:44:00,760
Right.

2772
02:44:00,760 --> 02:44:03,360
Some of you did to the lowercase.
It's fine. Right.

2773
02:44:03,360 --> 02:44:07,000
Then if you kept a converted
to the uppercase, then all matching cases

2774
02:44:07,280 --> 02:44:09,760
must be in the upper cases. Right?

2775
02:44:10,040 --> 02:44:12,800
So if instead of the uppercase
you will move to,

2776
02:44:13,480 --> 02:44:15,520
if instead of the lower you will go to the

2777
02:44:17,000 --> 02:44:18,360
uppercase, then

2778
02:44:18,360 --> 02:44:22,840
all the things in here
must be in the upper right.

2779
02:44:22,840 --> 02:44:27,360
All the matching pieces must be
in the uppercase Y, because matching cases

2780
02:44:27,360 --> 02:44:31,320
should match the values
that you have inside your switch.

2781
02:44:31,360 --> 02:44:32,080
Right.

2782
02:44:32,120 --> 02:44:35,000
But if it will be Milwaukee,
then it's two three.

2783
02:44:35,040 --> 02:44:37,080
So whichever one you list, use it.

2784
02:44:37,120 --> 02:44:41,280
But just to practice,
I ask you to do it with the uppercase.

2785
02:44:42,640 --> 02:44:43,400
All right.

2786
02:44:43,400 --> 02:44:44,160
Any questions?

2787
02:44:44,160 --> 02:44:46,720
This any questions for the switch?

2788
02:44:46,720 --> 02:44:48,320
Why do we need a switch?

2789
02:44:48,320 --> 02:44:49,560
When to use it?

2790
02:44:49,560 --> 02:44:52,680
What is the syntax?
What is the limitation?

2791
02:44:52,680 --> 02:45:21,520
What is the pros console with it?

2792
02:45:21,520 --> 02:45:24,800
There was something
except in both upper and lower.

2793
02:45:25,280 --> 02:45:25,560
Okay.

2794
02:45:25,560 --> 02:45:30,240
Forgot module example to ignore
the case is completely to.

2795
02:45:30,240 --> 02:45:36,520
We have a code that sees equals a equals
ignore keys, but the equals or equals

2796
02:45:36,520 --> 02:45:41,360
ignore keys
we can use all inside the f k only inside

2797
02:45:41,400 --> 02:45:47,240
if y because when you say equals, right,
when we say equals does we have to provide

2798
02:45:48,280 --> 02:45:49,600
another value.

2799
02:45:49,600 --> 02:45:54,000
We have to provide another comparison
to which we try

2800
02:45:54,000 --> 02:45:57,840
to check a current variable
because what is it food for?

2801
02:45:57,840 --> 02:46:00,160
Is it string type of variable?

2802
02:46:00,520 --> 02:46:05,440
This drink table variable will have
some type of value inside, right?

2803
02:46:05,560 --> 02:46:07,560
It will have some type of note.

2804
02:46:07,560 --> 02:46:12,480
Now what equals does it compare in right,
the way we compare

2805
02:46:12,480 --> 02:46:16,560
the numbers here, if number one is large
is equals to number two, right?

2806
02:46:16,920 --> 02:46:18,000
Same thing. What do we do?

2807
02:46:18,000 --> 02:46:22,200
We have we are comparing one string value
to another.

2808
02:46:22,640 --> 02:46:25,640
So in here you have to provide two values.

2809
02:46:25,640 --> 02:46:27,360
You have to give two values.

2810
02:46:27,360 --> 02:46:30,640
And when you compare them one value

2811
02:46:30,720 --> 02:46:33,640
to another one, whether it's a string,
whether it's a number,

2812
02:46:33,640 --> 02:46:35,440
what are you guys going to get to?

2813
02:46:35,440 --> 02:46:39,200
Is going to get a Boolean expression
in expression

2814
02:46:39,200 --> 02:46:44,240
is not going to work for it switches.

2815
02:46:44,240 --> 02:46:49,360
So using equals or equals
ignore keys inside our switch here is

2816
02:46:49,360 --> 02:47:07,080
not going to work. Oh,

2817
02:47:08,920 --> 02:47:11,080
we said something new this

2818
02:47:43,800 --> 02:47:47,200
E what if this and multiple countries
speak English?

2819
02:47:47,200 --> 02:47:49,560
So basically we you

2820
02:47:50,760 --> 02:47:53,160
you kind of like want to use or right.

2821
02:47:53,200 --> 02:47:56,800
Do you want to say here in the countries
United States

2822
02:47:56,800 --> 02:48:00,360
or the countries and England
or the countries of Australia.

2823
02:48:00,360 --> 02:48:02,720
So their language is English, right?

2824
02:48:03,200 --> 02:48:05,880
So we can not.

2825
02:48:06,360 --> 02:48:09,960
Okay,
so there is a way guys write this or what

2826
02:48:09,960 --> 02:48:11,760
for example,
can you guys send me this code?

2827
02:48:11,760 --> 02:48:16,040
I'll show you, even though it's
not going to look a nice coding.

2828
02:48:16,400 --> 02:48:18,360
But can it be done?

2829
02:48:18,360 --> 02:48:20,040
Yes, it can be done.

2830
02:48:20,600 --> 02:48:30,360
Okay,

2831
02:48:30,360 --> 02:48:34,480
if it can, you guys send me that code
with the

2832
02:48:34,480 --> 02:49:00,320
with the countries in

2833
02:49:14,480 --> 02:49:16,320
I they got someone already.

2834
02:49:16,320 --> 02:49:20,080
Someone already did it right.

2835
02:49:20,080 --> 02:49:21,160
Same on a copy.

2836
02:49:21,160 --> 02:49:24,880
I copy your record. I think

2837
02:49:27,400 --> 02:49:29,040
if I click

2838
02:49:29,040 --> 02:49:31,680
but let me, let me copy
someone who didn't want to do it

2839
02:49:31,680 --> 02:49:33,680
For example, it

2840
02:49:39,080 --> 02:49:39,840
ended

2841
02:49:46,040 --> 02:50:01,560
with the persistence.

2842
02:50:01,560 --> 02:50:03,240
Then this is what you get it right?

2843
02:50:03,240 --> 02:50:04,960
So that's what you do, right?

2844
02:50:04,960 --> 02:50:08,440
So you capture the writing, capture
the countries you save.

2845
02:50:08,440 --> 02:50:09,480
It's United States.

2846
02:50:09,480 --> 02:50:13,840
Then distinguish this is have gone
is found very Turkey's Turkish

2847
02:50:13,880 --> 02:50:17,040
right so the only thing
what I would ask you before this write

2848
02:50:17,040 --> 02:50:19,960
remember when you think of
different variations, right.

2849
02:50:20,280 --> 02:50:25,560
So if I'm going to enter the USA,
use it and

2850
02:50:27,040 --> 02:50:32,360
that way right.

2851
02:50:32,360 --> 02:50:34,200
All right.

2852
02:50:34,200 --> 02:50:37,040
We were not able to determine
a language, right?

2853
02:50:37,040 --> 02:50:39,960
We were not able to determine
the language. Why?

2854
02:50:39,960 --> 02:50:41,800
Because you say

2855
02:50:41,800 --> 02:50:45,880
with the first uppercase is not the same
that you see all in the uppercase, Right.

2856
02:50:45,880 --> 02:50:48,480
So in here to eliminate any issues.

2857
02:50:48,480 --> 02:50:51,240
So that's why I asked
you convert to the uppercase.

2858
02:50:51,240 --> 02:50:51,720
Right.

2859
02:50:51,920 --> 02:50:55,680
So and then once we convert
the country that we enter in

2860
02:50:56,760 --> 02:50:58,800
through our console, Right.

2861
02:50:58,800 --> 02:51:02,520
So then if you convert this country
to the uppercase,

2862
02:51:02,880 --> 02:51:07,320
then make sure all the countries
are read them in the upper right.

2863
02:51:07,600 --> 02:51:10,200
All the values are written in the upper to

2864
02:51:11,240 --> 02:51:12,720
speak.

2865
02:51:12,720 --> 02:51:15,600
So now the question was, hey,

2866
02:51:15,960 --> 02:51:18,720
what if there is a multiple countries
right?

2867
02:51:18,720 --> 02:51:23,280
What are those are multiple countries
that speak English, right?

2868
02:51:23,480 --> 02:51:27,360
So now is there way technically,
what do we want to say?

2869
02:51:28,200 --> 02:51:33,560
The is USA, all the countries, Australia,
all the countries.

2870
02:51:33,560 --> 02:51:34,600
England. Right.

2871
02:51:34,600 --> 02:51:38,360
So we know that using or operator
is not applicable in here.

2872
02:51:38,360 --> 02:51:41,160
We cannot say like that or let's say

2873
02:51:42,200 --> 02:51:44,480
now because it's in uppercase, right.

2874
02:51:44,480 --> 02:51:45,960
We cannot say like this, right.

2875
02:51:45,960 --> 02:51:49,920
We cannot say this way,
we cannot say this. Why?

2876
02:51:49,920 --> 02:51:53,040
Because those operators are not valid.

2877
02:51:53,040 --> 02:51:54,880
Operate for our switch.

2878
02:51:54,880 --> 02:51:56,920
But what do we can do this?

2879
02:51:57,200 --> 02:52:00,520
What we can do?

2880
02:52:00,520 --> 02:52:03,720
We can provide multiple cases, right?

2881
02:52:03,720 --> 02:52:05,160
What are we can say?

2882
02:52:05,160 --> 02:52:07,720
We can say case U.S.. Right.

2883
02:52:07,720 --> 02:52:08,880
And then

2884
02:52:08,880 --> 02:52:14,480
if we're not going to provide the value,
we can just write it like this is right?

2885
02:52:14,480 --> 02:52:15,480
States England

2886
02:52:17,760 --> 02:52:20,040
and then we can the another

2887
02:52:23,280 --> 02:52:28,600
is, for example, right.

2888
02:52:29,280 --> 02:52:32,560
So this way I think our guys
what is going to happen, right?

2889
02:52:32,680 --> 02:52:34,720
So think what is going to happen.

2890
02:52:35,760 --> 02:52:37,880
So why do logically

2891
02:52:37,880 --> 02:52:41,160
when we think right so for example,
I intend U.S.

2892
02:52:41,400 --> 02:52:42,040
right.

2893
02:52:42,360 --> 02:52:45,040
I heard you say

2894
02:52:45,120 --> 02:52:47,280
it will be stored this variable.

2895
02:52:47,640 --> 02:52:50,640
Then you are saying
it convert into the uppercase.

2896
02:52:50,840 --> 02:52:54,200
It becomes big U.S., right,
Because big U.S.

2897
02:52:54,600 --> 02:52:58,880
So now you could just right away
to the matching cases.

2898
02:52:58,880 --> 02:52:59,480
Right.

2899
02:52:59,520 --> 02:53:03,480
And it wants to execute after code
the after the semicolon.

2900
02:53:03,840 --> 02:53:06,320
But there is no code and there's no rape.

2901
02:53:06,360 --> 02:53:07,080
Right.

2902
02:53:07,080 --> 02:53:10,440
So then what happens if there's no code,
no break, Right.

2903
02:53:10,440 --> 02:53:13,080
Your code will fall to the next case.

2904
02:53:13,920 --> 02:53:16,560
Now, it will fall to the next case, Right.

2905
02:53:16,560 --> 02:53:18,840
And there is no code
inside the next case, right?

2906
02:53:18,840 --> 02:53:19,880
There is no code.

2907
02:53:19,880 --> 02:53:22,880
Then what we'll do
is we'll fall onto another case.

2908
02:53:23,280 --> 02:53:25,640
And now when they fall that case,

2909
02:53:25,920 --> 02:53:30,920
then it will execute this statement
and then it will see the break.

2910
02:53:30,920 --> 02:53:34,400
As soon as it sees a break,
it will get out from your switch.

2911
02:53:34,400 --> 02:53:35,000
Right.

2912
02:53:35,160 --> 02:53:38,360
So this way
we can handle this particular scenario.

2913
02:53:38,360 --> 02:53:42,160
But but does it look
does it look nice and clean?

2914
02:53:42,600 --> 02:53:43,800
That's a different question.

2915
02:53:43,800 --> 02:53:46,400
Probably
if that will be a particular scenario.

2916
02:53:46,400 --> 02:53:49,520
Maybe in this
case. Right. Maybe this case,

2917
02:53:50,760 --> 02:53:52,000
if you want to provide the

2918
02:53:52,000 --> 02:53:55,880
values like this, I probably would go
for logical operations.

2919
02:53:55,880 --> 02:53:56,120
Right?

2920
02:53:56,120 --> 02:53:58,840
For the logical or what can it be done?

2921
02:53:59,200 --> 02:54:00,520
Yes, it can be done right.

2922
02:54:00,520 --> 02:54:01,920
Let's see if we go back.

2923
02:54:01,920 --> 02:54:05,040
I don't know if it's going to go over this
spaces or not.

2924
02:54:06,360 --> 02:54:08,440
Center country, you would say, right,

2925
02:54:09,160 --> 02:54:12,600
I'm entering lowercase U.S., right?

2926
02:54:12,600 --> 02:54:14,600
I'm entering lowercase.

2927
02:54:14,600 --> 02:54:16,720
Now, what's going to happen? My U.S.

2928
02:54:16,760 --> 02:54:21,880
is getting converted to the uppercase
and going to see it found.

2929
02:54:21,880 --> 02:54:23,920
Imagine there was no code then

2930
02:54:23,920 --> 02:54:26,680
in full into the next case,
then fold to the next case.

2931
02:54:27,120 --> 02:54:28,640
And now there Australia.

2932
02:54:28,640 --> 02:54:31,200
Then what it does it initialize that.

2933
02:54:31,200 --> 02:54:34,200
Okay, so this is a way
how it could have the case.

2934
02:54:35,640 --> 02:54:38,400
But as I mentioned,
probably I would rather go

2935
02:54:38,400 --> 02:54:42,160
for a logical upper than instead of
the right in the cases. This

2936
02:54:43,440 --> 02:54:43,800
that makes

2937
02:54:43,800 --> 02:54:54,560
sense based.

2938
02:54:54,560 --> 02:54:59,000
If you understood the purpose of break,
then this makes then this makes sense.

2939
02:54:59,040 --> 02:55:00,000
Right? Why?

2940
02:55:00,000 --> 02:55:02,000
Because there's nothing that stops
you code

2941
02:55:02,280 --> 02:55:04,920
falling to the next case
and then to the next case.

2942
02:55:04,920 --> 02:55:06,920
And then only
when it sees a break in this.

2943
02:55:06,920 --> 02:55:07,680
Get that

2944
02:55:11,840 --> 02:55:12,400
surrogate's.

2945
02:55:12,400 --> 02:55:16,240
Any other questions for switch

2946
02:55:25,040 --> 02:55:26,680
in these break in the code

2947
02:55:26,680 --> 02:55:29,760
or in the class right now

2948
02:55:35,520 --> 02:55:37,040
import encoding of this

2949
02:55:37,040 --> 02:55:39,760
I mean there's a there's me there's other

2950
02:55:41,080 --> 02:55:45,480
we can use a break in other statements
and of course we are going to look in

2951
02:55:45,480 --> 02:55:49,080
more of the tomorrow class
in which statement we can use a break

2952
02:55:50,920 --> 02:55:53,480
or in here if you guys going to the break,

2953
02:55:53,480 --> 02:55:55,600
what are what is going to
happen this one or this thing

2954
02:55:56,560 --> 02:55:57,360
and use a break?

2955
02:55:57,360 --> 02:56:17,400
Of course you can use a break,
but what is going happen?

2956
02:56:17,400 --> 02:56:18,840
So what will happen? Right.

2957
02:56:18,840 --> 02:56:21,040
So let's say let's run through USC, right?

2958
02:56:21,240 --> 02:56:26,800
So what I will do, what I will do,
it will find the matching case, right?

2959
02:56:26,800 --> 02:56:29,800
It found the matching case we did not see

2960
02:56:29,800 --> 02:56:33,440
because there was no line
inside the matching case then.

2961
02:56:33,560 --> 02:56:34,560
So the break.

2962
02:56:34,560 --> 02:56:36,720
And that's why they're out,

2963
02:56:36,720 --> 02:56:37,920
right? That's why it's got out.

2964
02:56:37,920 --> 02:56:40,680
And because nothing was happening in here.

2965
02:56:40,680 --> 02:56:41,000
Right.

2966
02:56:41,000 --> 02:56:44,800
So the language will be now
and then that's why it will print us

2967
02:56:44,920 --> 02:56:57,640
now right.

2968
02:56:57,640 --> 02:56:58,680
Followed you collaborators.

2969
02:56:58,680 --> 02:57:01,040
Then you guys will have to go for it.

2970
02:57:01,040 --> 02:57:03,960
You will have to say, hey,
it won't be a switch.

2971
02:57:03,960 --> 02:57:07,040
It will be even if country is equal

2972
02:57:07,120 --> 02:57:12,520
to say, or country equals to England,
all country equals to Australia,

2973
02:57:12,760 --> 02:57:16,320
then the language is English, right?

2974
02:57:16,320 --> 02:57:17,560
That's what you will go.

2975
02:57:17,560 --> 02:57:20,280
You won't be able to go for the switch.

2976
02:57:20,280 --> 02:57:20,560
Right.

2977
02:57:20,560 --> 02:57:24,920
So you go either for switch,
you go either for if statement, right.

2978
02:57:25,280 --> 02:57:26,560
If states.

2979
02:57:26,560 --> 02:57:31,000
So all of this variation is
just remember always remember

2980
02:57:32,280 --> 02:57:33,600
why we use the right.

2981
02:57:33,600 --> 02:57:38,040
So once you know why there is a switch
once you know why there is a e

2982
02:57:38,120 --> 02:57:41,680
why there's a logical operators,
why there's a relational upgraded right.

2983
02:57:42,000 --> 02:57:46,800
It will be easier later
for you to based on the exercise,

2984
02:57:47,160 --> 02:57:49,880
to know which statement,

2985
02:57:49,920 --> 02:57:53,640
which keywords, which

2986
02:57:53,640 --> 02:57:55,760
which things to do right.

2987
02:57:55,760 --> 02:58:00,600
So switch statement once again,
it's a great alternative for if else if

2988
02:58:00,640 --> 02:58:04,800
right when we have to test
for multiple things right.

2989
02:58:04,800 --> 02:58:07,480
So the only thing
what are we doing within this switch.

2990
02:58:07,480 --> 02:58:10,760
We testing for multiple values right.

2991
02:58:10,800 --> 02:58:14,520
Multiple values
that our variable can have.

2992
02:58:14,640 --> 02:58:17,400
Right
and all variable can have use in switch.

2993
02:58:17,400 --> 02:58:20,280
We strictly checking for the equality,
right?

2994
02:58:20,720 --> 02:58:21,480
We then switch.

2995
02:58:21,480 --> 02:58:25,480
We cannot say hey
that the value is greater

2996
02:58:25,480 --> 02:58:28,920
than something values
smaller than something value

2997
02:58:28,920 --> 02:58:33,840
is equal to this or a equals to the right
is strictly value based.

2998
02:58:33,840 --> 02:58:38,160
So once your variable because your
variable holds a particular value, right,

2999
02:58:38,400 --> 02:58:41,960
and right away
it knows what values it holds, it finds it

3000
02:58:41,960 --> 02:58:44,040
finds a matching,
gives this and jumps to it.

3001
02:58:44,040 --> 02:58:45,840
That's why we say let's switch.

3002
02:58:45,840 --> 02:58:47,360
Case is faster.

3003
02:58:47,360 --> 02:58:49,880
Except there's some limitations, right?

3004
02:58:49,880 --> 02:58:52,160
Except there's some limitations.

3005
02:58:52,160 --> 02:58:55,480
So if you know in your code,
any time you have to check for equality,

3006
02:58:55,840 --> 02:58:57,360
then go for a switch.

3007
02:58:57,360 --> 02:58:58,720
Right? Go for a switch in.

3008
02:58:58,720 --> 02:58:59,280
Of course,

3009
02:58:59,280 --> 02:59:04,560
there's no need of using logical operators
or use of the relational operators.

3010
02:59:04,880 --> 02:59:06,120
Go ahead and use this switch.

3011
02:59:06,120 --> 02:59:08,080
But if you know in the scenario

3012
02:59:08,080 --> 02:59:11,600
where you have to check the equality
of three numbers, right. Why?

3013
02:59:11,600 --> 02:59:14,720
Because you will have to compare
one number to another number in

3014
02:59:14,720 --> 02:59:17,720
in the same time,
second number to the third number.

3015
02:59:18,000 --> 02:59:21,320
So you know that the switch case can now
do this type of operation.

3016
02:59:21,320 --> 02:59:24,360
So you will go right away, which we used

3017
02:59:26,360 --> 02:59:27,080
to use.

3018
02:59:28,320 --> 02:59:28,760
Okay.

3019
02:59:28,760 --> 02:59:31,800
So in
here, this will be your homework, right?

3020
02:59:31,880 --> 02:59:33,840
And remember what we said for a switch.

3021
02:59:33,840 --> 02:59:36,680
Every single scenario
that you do with switch,

3022
02:59:37,040 --> 02:59:39,280
you guys can do it with the eve, right?

3023
02:59:39,760 --> 02:59:42,920
But not every eve scenario
you can do within the switch.

3024
02:59:43,440 --> 02:59:44,760
So what are you guys going to have?

3025
02:59:44,760 --> 02:59:47,400
You guys are going to have a homework.

3026
02:59:47,400 --> 02:59:47,560
Okay.

3027
02:59:47,560 --> 02:59:50,160
You guys are going to have a homework
in which

3028
02:59:50,920 --> 02:59:53,520
we want you to a calculator, right?

3029
02:59:54,240 --> 02:59:57,480
So but the calculator,
it will be very interactive calculator.

3030
02:59:57,600 --> 02:59:58,080
Right?

3031
02:59:58,080 --> 03:00:02,600
So first you need to capture two numbers
from the user, right?

3032
03:00:02,960 --> 03:00:07,920
I want you to capture two users
and I want you to capture the operation

3033
03:00:07,920 --> 03:00:11,840
that user want to perform,
whether users want to perform addition,

3034
03:00:11,840 --> 03:00:15,320
subtraction, multiplication or division,
you're not defining it.

3035
03:00:15,320 --> 03:00:16,920
Use it as telling you, right?

3036
03:00:16,920 --> 03:00:21,720
So you take in three inputs, two numbers
in the operation that user wants to do.

3037
03:00:21,720 --> 03:00:25,680
And then based on the operator, right,
the fusion will be entering you.

3038
03:00:25,680 --> 03:00:28,320
Plus you will have to perform addition.

3039
03:00:28,320 --> 03:00:32,560
If a user will be in a minus,
you will have to do the subtraction,

3040
03:00:32,560 --> 03:00:35,440
if user will enter multiplication
and so on.

3041
03:00:35,440 --> 03:00:36,000
Right.

3042
03:00:36,120 --> 03:00:39,480
So this assignment I want you to do
trying two different ways.

3043
03:00:39,480 --> 03:00:40,480
I want you to try

3044
03:00:41,640 --> 03:00:44,920
using each statement and I want you to try

3045
03:00:46,080 --> 03:00:48,320
to use it using the switch case.

3046
03:00:48,400 --> 03:00:48,840
Okay.

3047
03:00:48,840 --> 03:00:52,960
So this way you guys can see that
it can be done using both ways,

3048
03:00:53,200 --> 03:00:56,880
but then you guys will see which way
to the code will look cleaner, which way

3049
03:00:56,880 --> 03:01:01,440
maybe you will perform more it,
but eventually task can be completed

3050
03:01:02,640 --> 03:01:04,600
completed using two different statements.

3051
03:01:04,600 --> 03:01:05,000
Okay.

3052
03:01:05,520 --> 03:01:06,840
So that will be a homework.

3053
03:01:06,840 --> 03:01:11,240
I'll post them
guys posted and our course announcement.

3054
03:01:12,280 --> 03:01:13,600
Okay.

3055
03:01:13,600 --> 03:01:15,040
And I see.

3056
03:01:15,040 --> 03:01:17,640
And of course, guys,
there will be more ripple assignments.

3057
03:01:17,640 --> 03:01:19,520
I think we did not release logical

3058
03:01:19,520 --> 03:01:22,520
so I will release logical today
and I will release

3059
03:01:24,040 --> 03:01:27,160
I will release of the switch statement.

3060
03:01:27,720 --> 03:01:28,160
Good.

3061
03:01:28,160 --> 03:01:32,200
And at the same time,
what you guys are going to have in

3062
03:01:32,360 --> 03:01:34,440
you guys going to have you guys
going to have a quiz?

3063
03:01:35,040 --> 03:01:35,520
Okay.

3064
03:01:36,000 --> 03:01:39,240
Are you guys going
to have your first quiz?

3065
03:01:40,400 --> 03:01:41,200
And I

3066
03:01:41,200 --> 03:01:45,280
will give you a of course, it's one
we will give you a few days to do it.

3067
03:01:45,520 --> 03:01:46,200
Okay.

3068
03:01:46,200 --> 03:01:48,520
So you guys are going
to have your first quiz

3069
03:01:50,880 --> 03:01:53,080
where the quiz

3070
03:01:53,280 --> 03:01:54,360
is one

3071
03:01:55,600 --> 03:01:57,720
or the unit.

3072
03:01:58,040 --> 03:01:59,560
Oh, it's already available.

3073
03:01:59,560 --> 03:02:01,160
I don't know if it should be available.

3074
03:02:01,160 --> 03:02:03,640
Okay, I'm going to end. Okay.

3075
03:02:03,960 --> 03:02:07,160
So now when it comes to quizzes, guys

3076
03:02:07,160 --> 03:02:08,600
When it comes to quizzes.

3077
03:02:08,600 --> 03:02:11,560
So quizzes are

3078
03:02:11,560 --> 03:02:12,800
did you guys completed it?

3079
03:02:12,800 --> 03:02:14,600
It should be conditional statement.

3080
03:02:14,600 --> 03:02:17,200
It should be included in the switched.

3081
03:02:17,200 --> 03:02:18,880
Oh, I've got to assign it to you. Okay.

3082
03:02:18,880 --> 03:02:19,640
Okay. That's good.

3083
03:02:19,640 --> 03:02:21,600
Then October 21st, 28.

3084
03:02:21,600 --> 03:02:24,040
Okay,
then he did explain it to you guys, right?

3085
03:02:24,040 --> 03:02:30,160
So remember quizzes are we are not going
they have a start to have the end, right.

3086
03:02:30,160 --> 03:02:32,720
We not going to reopen them
if you missed that. Right.

3087
03:02:32,720 --> 03:02:34,160
They have a deadline.

3088
03:02:34,160 --> 03:02:37,320
They have a limitation
in the number of times of doing it.

3089
03:02:37,320 --> 03:02:42,360
So if you decide to open it
and then complete it later, then open

3090
03:02:42,360 --> 03:02:46,120
it completely later,
then they will count as a first attempt.

3091
03:02:46,120 --> 03:02:48,720
Right.
Then you guys have only two items. Okay.

3092
03:02:48,720 --> 03:02:50,440
If you guys done already, that's good.

3093
03:02:50,440 --> 03:02:52,080
If you're not done,
please make sure you do.

3094
03:02:52,080 --> 03:02:55,560
That thing has got to give
you till October 28, which is up.

3095
03:02:56,000 --> 03:03:00,120
And then you go, you guys are going to have other quizzes as well when it happens.

3096
03:03:01,320 --> 03:03:02,600
Okay.

3097
03:03:02,600 --> 03:03:03,320
All right.

3098
03:03:03,480 --> 03:03:07,240
So what are we going to do this today?

3099
03:03:07,320 --> 03:03:09,400
Today we start anyways.

3100
03:03:09,400 --> 03:03:11,760
We're going to do an introduction
and then this.

3101
03:03:11,760 --> 03:03:14,320
We will continue tomorrow.

3102
03:03:14,320 --> 03:03:19,600
What we will do is
we will start our introduction to loops.

3103
03:03:19,960 --> 03:03:25,160
Okay, so loops, it's a very, very
important concept that we have, right?

3104
03:03:25,160 --> 03:03:28,800
In any programing language
you guys can think of.

3105
03:03:29,360 --> 03:03:30,440
All this

3106
03:03:30,960 --> 03:03:33,200
loops conditional statement.

3107
03:03:33,200 --> 03:03:35,040
They are exist.

3108
03:03:35,520 --> 03:03:39,720
But before we going to go to the loops,
I want to look at a very,

3109
03:03:39,720 --> 03:03:42,880
very small topic this
I want to look at the very small topic

3110
03:03:43,960 --> 03:03:47,480
about operators, about operation.

3111
03:03:47,480 --> 03:03:51,960
Remember this so far what we learn, we
learn different set of operators, right?

3112
03:03:52,280 --> 03:03:53,560
You guys looked into that.

3113
03:03:53,560 --> 03:03:57,600
Simon Operator You guys looked
at the arithmetic operators, right?

3114
03:03:57,600 --> 03:03:58,800
Plus minus.

3115
03:03:58,800 --> 03:04:02,840
You guys look at the relational operators
rate are equal, less than equal.

3116
03:04:03,480 --> 03:04:06,240
We looked into logical operators, right?

3117
03:04:06,240 --> 03:04:09,720
Logical and logical or
and now what are we going to be

3118
03:04:09,720 --> 03:04:13,600
looking into, increment
and decrement operators?

3119
03:04:13,640 --> 03:04:13,880
Well,

3120
03:04:14,880 --> 03:04:18,480
we're going to quickly.

3121
03:04:18,480 --> 03:04:21,040
So let me see my class

3122
03:04:23,080 --> 03:04:23,720
increment.

3123
03:04:23,720 --> 03:04:25,680
I want to do the introduction.

3124
03:04:25,680 --> 03:04:28,800
So this way you guys will be easier

3125
03:04:28,800 --> 03:04:31,120
for us for tomorrow.

3126
03:04:31,800 --> 03:04:45,080
We can look up.

3127
03:04:46,480 --> 03:04:48,480
So guys,

3128
03:04:48,480 --> 03:04:51,600
let's take our well look into basics.

3129
03:04:52,320 --> 03:04:55,440
If I'm going to take a variable right,
I'm going to take a variable

3130
03:04:55,440 --> 03:04:58,200
nom and for example,
won't seen them equals to

3131
03:04:59,400 --> 03:05:02,520
one one then. Now

3132
03:05:04,040 --> 03:05:06,360
if I want to add one

3133
03:05:06,680 --> 03:05:11,360
to my variable number, right,
I want to one for example.

3134
03:05:11,360 --> 03:05:12,120
Just one. Right.

3135
03:05:12,120 --> 03:05:15,720
So the way we can do it, we can say no
plus one, right?

3136
03:05:16,000 --> 03:05:19,520
So we say now plus one,
we will perform this arithmetic operation

3137
03:05:19,800 --> 03:05:23,040
and then what we will do,
we will reassign to this variable.

3138
03:05:23,120 --> 03:05:23,640
Right.

3139
03:05:23,760 --> 03:05:26,120
So now what will happen
is my number, right?

3140
03:05:26,120 --> 03:05:29,160
Our now will have the value of one or one.

3141
03:05:29,160 --> 03:05:29,680
Right?

3142
03:05:30,120 --> 03:05:32,640
So this is the very first way
that you guys learn.

3143
03:05:33,200 --> 03:05:35,640
Then you guys learn another way
that there is

3144
03:05:35,640 --> 03:05:39,000
a shorter way how we can add one right?

3145
03:05:39,000 --> 03:05:41,800
You guys are locked into this
shorthand operator.

3146
03:05:41,800 --> 03:05:43,560
Shorthand assignment operator. Right.

3147
03:05:43,560 --> 03:05:46,520
How can we add one
less to due to my variable name

3148
03:05:49,720 --> 03:05:53,080
is the right.

3149
03:05:53,080 --> 03:05:56,240
So this is what you learn before
now plus equals to one.

3150
03:05:56,400 --> 03:05:58,760
Right. Let's equal to one. Okay.

3151
03:05:58,760 --> 03:06:00,320
That's what you guys done before, right?

3152
03:06:00,320 --> 03:06:02,240
You guys did not learn plus plus yet.

3153
03:06:02,240 --> 03:06:06,480
We want to look into those two different
ways that you guys saw before, Right?

3154
03:06:06,480 --> 03:06:09,160
So we said, hey,
because these are medical operations.

3155
03:06:09,160 --> 03:06:11,160
Sometimes they can be very popular,

3156
03:06:11,160 --> 03:06:13,640
but you have to use
there's a shorter with you write right?

3157
03:06:13,640 --> 03:06:18,720
So this non plus equals one,
it's exactly the same as this way, right?

3158
03:06:18,720 --> 03:06:21,880
So this way is
just a longer version of this.

3159
03:06:21,880 --> 03:06:23,400
So what are we doing this in Haiti?

3160
03:06:23,400 --> 03:06:26,560
Take my variable
and I want to exact the same thing.

3161
03:06:26,720 --> 03:06:27,080
Right.

3162
03:06:27,320 --> 03:06:30,000
So now if I'm going
to bring my number, I know

3163
03:06:31,400 --> 03:06:33,600
that we will be one or two, right?

3164
03:06:33,920 --> 03:06:36,520
Code executes, come to the box.

3165
03:06:36,520 --> 03:06:39,360
And now there is another way.

3166
03:06:39,360 --> 03:06:41,520
This time there is another way.

3167
03:06:41,520 --> 03:06:47,280
How we can add one to our variable right?

3168
03:06:47,280 --> 03:06:48,160
There's another way.

3169
03:06:48,160 --> 03:06:52,120
How we can add to our variable
and to add one

3170
03:06:52,240 --> 03:06:56,680
just number or just one
to any variable that we work with,

3171
03:06:56,680 --> 03:07:00,840
Java gives us an increment
and decrement operators, right?

3172
03:07:01,200 --> 03:07:04,400
So it says, Hey,
any time you want to add one

3173
03:07:04,400 --> 03:07:08,320
to the variable, right, not to the value,
the variable, what do you use

3174
03:07:08,920 --> 03:07:11,400
plus plus, you know what this

3175
03:07:11,400 --> 03:07:14,520
plus plus is is mean.

3176
03:07:14,680 --> 03:07:16,760
It means I am increment

3177
03:07:17,640 --> 03:07:20,840
the value of variable by one branch.

3178
03:07:20,880 --> 03:07:24,080
And now if I'm going to change it,

3179
03:07:24,080 --> 03:07:26,360
I'm going to print that optimum.

3180
03:07:26,360 --> 03:07:29,880
So my value
will become one of the right one.

3181
03:07:30,680 --> 03:07:32,120
That's what it does. Right.

3182
03:07:32,120 --> 03:07:34,800
And is there an increment? Right.

3183
03:07:34,800 --> 03:07:37,120
This is this is what we do increment.

3184
03:07:37,120 --> 03:07:39,280
Increment, Increment

3185
03:07:41,480 --> 03:07:47,160
the value of the variable by one.

3186
03:07:47,280 --> 03:07:47,800
Right.

3187
03:07:47,920 --> 03:07:51,600
So as the increment theory,
we also have a decrement.

3188
03:07:51,600 --> 03:07:51,840
Right.

3189
03:07:51,840 --> 03:07:55,000
So what we can have, we can have now
minus minus.

3190
03:07:55,360 --> 03:07:57,680
So what is a num, minus minus.

3191
03:07:57,680 --> 03:08:01,200
It will do it will it will decrement

3192
03:08:01,920 --> 03:08:04,120
one for my variable

3193
03:08:09,680 --> 03:08:10,920
decrement,

3194
03:08:11,520 --> 03:08:13,560
decrement something

3195
03:08:16,000 --> 03:08:17,200
that's only That's right.

3196
03:08:17,200 --> 03:08:20,640
That's all it does
is it either increments you value by one

3197
03:08:20,960 --> 03:08:25,080
or it decrements your value by increments
or decrements.

3198
03:08:25,080 --> 03:08:27,480
That's why the call increment
and decrement operate. Right.

3199
03:08:27,720 --> 03:08:29,720
So the only one tiny thing is remember.

3200
03:08:29,720 --> 03:08:33,120
So this increment, Right,
this increment and decrement

3201
03:08:33,120 --> 03:08:36,440
operators, they can be used
only these variables, right?

3202
03:08:36,440 --> 03:08:38,160
This increment and decrement.

3203
03:08:38,160 --> 03:08:41,040
We cannot use them with values.

3204
03:08:41,040 --> 03:08:44,160
For example,
I cannot say for example right,

3205
03:08:45,040 --> 03:08:48,320
I cannot say ten
plus plus I cannot see such a thing.

3206
03:08:48,600 --> 03:08:50,920
He cannot see such a thing.

3207
03:08:51,360 --> 03:08:54,480
So all this increment or increment

3208
03:08:54,480 --> 03:08:58,080
or decrement
can be used with our variables only.

3209
03:08:58,080 --> 03:09:01,080
We cannot use increment the values

3210
03:09:05,640 --> 03:09:06,320
value

3211
03:09:07,080 --> 03:09:09,560
that once all these variables

3212
03:09:13,200 --> 03:09:15,840
will always be up.

3213
03:09:16,160 --> 03:09:16,680
Right.

3214
03:09:16,680 --> 03:09:22,800
Very, very poor to work for.

3215
03:09:22,800 --> 03:09:24,520
Float. Let's see this.

3216
03:09:24,520 --> 03:09:25,960
No, no. We'll have more of a float.

3217
03:09:25,960 --> 03:09:29,080
Much like slope F equals

3218
03:09:30,400 --> 03:09:31,800
thousand 99.

3219
03:09:31,800 --> 03:09:34,440
Right? This is our food,
this is our float.

3220
03:09:34,800 --> 03:09:36,360
And then what do we have to say?

3221
03:09:36,360 --> 03:09:40,280
We have to say F plus, plus F
plus it work.

3222
03:09:40,320 --> 03:09:43,800
Now let's try to prove right.

3223
03:09:43,800 --> 03:09:46,680
So it just increments our

3224
03:09:46,680 --> 03:09:47,880
value by one, right?

3225
03:09:47,880 --> 03:09:51,400
As long as we have a numerical,
so long as we have the net.

3226
03:09:52,600 --> 03:09:56,760
So now it's a when you look at it,
it's very, very simple.

3227
03:09:56,760 --> 03:09:59,240
Right? Very, very simple.

3228
03:09:59,240 --> 03:10:03,720
Operator
But then Y in Java, we need those.

3229
03:10:03,720 --> 03:10:06,720
Operator Okay, so now this increment

3230
03:10:06,720 --> 03:10:09,760
and decrement
hopper is this we will be using

3231
03:10:10,920 --> 03:10:13,440
in our loops, Okay.

3232
03:10:13,720 --> 03:10:15,480
In our loops.

3233
03:10:15,480 --> 03:10:18,000
So now what are the loops? Loops?

3234
03:10:18,240 --> 03:10:21,600
We can think of them like a cycles loop.

3235
03:10:21,600 --> 03:10:23,160
It's like a cycle.

3236
03:10:23,160 --> 03:10:27,120
It's a cycle of the repetitive quote.

3237
03:10:27,320 --> 03:10:28,600
Okay. For example.

3238
03:10:28,600 --> 03:10:29,240
Right.

3239
03:10:29,840 --> 03:10:35,680
For example, if I want to take
for example, I want to say hello to you.

3240
03:10:35,840 --> 03:10:36,360
Right.

3241
03:10:36,480 --> 03:10:38,080
Let's say we don't know loops right now.

3242
03:10:38,080 --> 03:10:40,640
We don't know loops right now. Right.

3243
03:10:40,640 --> 03:10:44,440
I want to say hello you right system

3244
03:10:46,200 --> 03:10:47,640
that out

3245
03:10:48,040 --> 03:10:50,800
that print line and I want to say hello

3246
03:10:51,840 --> 03:10:54,240
there the station

3247
03:10:54,520 --> 03:10:56,640
we're there first thing. Right?

3248
03:10:56,640 --> 03:10:58,040
So now

3249
03:10:58,640 --> 03:11:00,960
we pretend that
this is our main method, right?

3250
03:11:00,960 --> 03:11:04,680
So for example, is only one statement
right now.

3251
03:11:04,680 --> 03:11:08,040
What if I want to say hello three times?

3252
03:11:08,080 --> 03:11:08,760
Right?

3253
03:11:08,760 --> 03:11:11,520
Let's say
I don't know the concept of loops right?

3254
03:11:11,520 --> 03:11:14,760
So then what I would have to do,
I would have to repeat this lines of code,

3255
03:11:15,000 --> 03:11:15,480
right?

3256
03:11:15,720 --> 03:11:17,760
Oh, let's say four times
I want to say hello.

3257
03:11:17,920 --> 03:11:18,480
Right.

3258
03:11:18,720 --> 03:11:22,920
So will it do the job or printing
Hello four times?

3259
03:11:23,160 --> 03:11:25,320
Yes, it does do a job.

3260
03:11:25,320 --> 03:11:29,320
But now when you look into my code, right
When I look into my code,

3261
03:11:29,320 --> 03:11:33,760
what I'm doing in here,
I'm doing repetition, right?

3262
03:11:33,760 --> 03:11:36,840
I'm doing the repetitive, I'm
repeating the statement.

3263
03:11:36,960 --> 03:11:37,280
Right.

3264
03:11:37,280 --> 03:11:39,160
I am repeating the statement.

3265
03:11:39,160 --> 03:11:41,440
And what kind of statement? Repeating

3266
03:11:42,680 --> 03:11:44,720
and repeating the same statement.

3267
03:11:44,720 --> 03:11:45,560
Right.

3268
03:11:45,600 --> 03:11:47,160
So now, did it do a job?

3269
03:11:47,160 --> 03:11:50,800
Yes, it did a job,
but does my code looks good

3270
03:11:51,240 --> 03:11:54,240
my code does not look really good. Right?

3271
03:11:54,360 --> 03:11:57,000
So now what is the scenario?

3272
03:11:57,000 --> 03:12:00,600
I want to say hello hundred times right
then.

3273
03:12:00,600 --> 03:12:02,920
This is just a simple example, right?

3274
03:12:02,920 --> 03:12:05,880
When it comes to our automation,
of course, there will be different

3275
03:12:05,880 --> 03:12:07,080
things that we're going to do.

3276
03:12:07,080 --> 03:12:10,800
But right now, what if I want you to say
hello 100 times now?

3277
03:12:10,800 --> 03:12:11,680
What will happen?

3278
03:12:11,680 --> 03:12:12,080
I will.

3279
03:12:12,080 --> 03:12:14,720
I will buy a hundred lines of my code

3280
03:12:15,640 --> 03:12:20,280
by repeating exactly the same lines saying
hello right.

3281
03:12:20,280 --> 03:12:23,360
So now Java says, Hey, whenever

3282
03:12:23,360 --> 03:12:28,560
you have this same code
where there is just one line,

3283
03:12:28,800 --> 03:12:31,800
whether it's a block code, Java says, Hey,

3284
03:12:31,800 --> 03:12:38,000
whenever you have a block of code
that you want to repeat, right,

3285
03:12:38,000 --> 03:12:41,360
that you want to repeat multiple times,
please

3286
03:12:41,360 --> 03:12:43,800
go ahead and use loops, right?

3287
03:12:44,400 --> 03:12:45,880
Please go ahead and use loops.

3288
03:12:45,880 --> 03:12:47,560
So what are loops in Java?

3289
03:12:47,560 --> 03:12:51,200
Loops in Java is a statement that do words

3290
03:12:51,480 --> 03:12:54,400
that they repeat this same

3291
03:12:54,400 --> 03:12:57,920
block of code based on some condition.

3292
03:12:58,200 --> 03:12:59,640
Right? Based on some condition.

3293
03:12:59,640 --> 03:13:03,000
And This condition
we will look into ways to.

3294
03:13:03,560 --> 03:13:05,800
Okay.
So now when it comes to loops, right.

3295
03:13:05,800 --> 03:13:07,840
And I'm sure you guys already have a look.

3296
03:13:07,840 --> 03:13:10,400
So how many loops in Java we have

3297
03:13:15,360 --> 03:13:26,600
loops now.

3298
03:13:28,160 --> 03:13:30,200
What kind of loops we have?

3299
03:13:30,200 --> 03:13:31,800
We have a loop.

3300
03:13:32,520 --> 03:13:35,120
Then what we have is

3301
03:13:35,640 --> 03:13:38,720
we will have for loop.

3302
03:13:38,720 --> 03:13:41,280
Okay, what else

3303
03:13:43,160 --> 03:13:43,600
we have?

3304
03:13:43,600 --> 03:13:43,920
I do.

3305
03:13:43,920 --> 03:13:47,880
Well, we have a dual.

3306
03:13:47,920 --> 03:13:48,560
Okay.

3307
03:13:48,760 --> 03:13:53,800
And there's one more loop that you guys
are actually going to look next weekend

3308
03:13:54,360 --> 03:13:59,160
because for that loop to look, there is
a specific condition must be matched.

3309
03:13:59,400 --> 03:14:02,040
But now we don't know
those specific conditions.

3310
03:14:02,440 --> 03:14:05,600
So there is another loop
that we're going to look

3311
03:14:05,600 --> 03:14:08,760
it will be enhanced for

3312
03:14:08,760 --> 03:14:11,160
hand, for loop.

3313
03:14:11,160 --> 03:14:14,640
Think of it like a
an improved version of the for

3314
03:14:14,640 --> 03:14:18,920
will be enhanced for a loop
we will hold called advance for loop

3315
03:14:20,320 --> 03:14:23,640
or insert program
and you guys will be able for each loop

3316
03:14:24,800 --> 03:14:26,560
for each.

3317
03:14:26,560 --> 03:14:31,560
So no jealousies is hanging
whenever you want to repeat this

3318
03:14:31,560 --> 03:14:37,240
same block of code here, I'm meeting you
for different type of loops.

3319
03:14:37,600 --> 03:14:39,560
So now what do we have to make sure?

3320
03:14:39,560 --> 03:14:42,600
Now we have to make sure
that we learn each loop

3321
03:14:43,080 --> 03:14:48,720
and we underspent in which situation
we should go for it.

3322
03:14:48,720 --> 03:14:50,480
Particular loop. Right?

3323
03:14:50,480 --> 03:14:54,360
So I did what the guys and in this order
we will be learning loops today.

3324
03:14:54,360 --> 03:14:58,160
We are not going to touch for and
I don't know if you will come to the door,

3325
03:14:58,160 --> 03:15:01,200
but at least we will try to practice
and we will start with that.

3326
03:15:01,240 --> 03:15:02,600
Wow. Right.

3327
03:15:02,600 --> 03:15:02,920
Okay.

3328
03:15:02,920 --> 03:15:06,120
So four different variations,
obviously They are different, right?

3329
03:15:06,120 --> 03:15:09,480
Java would not us exactly the same things.

3330
03:15:10,680 --> 03:15:13,640
Exact the same loops if they would work
and the same ones.

3331
03:15:13,680 --> 03:15:14,160
Right.

3332
03:15:14,760 --> 03:15:16,920
So But all of this because

3333
03:15:16,920 --> 03:15:20,000
every single loop of this, it's
a it's a loop.

3334
03:15:20,000 --> 03:15:24,680
So it means every this loop has a power

3335
03:15:24,960 --> 03:15:28,240
of repeating this same block of code.

3336
03:15:28,880 --> 03:15:29,640
Right.

3337
03:15:29,800 --> 03:15:32,600
And number of times,
depending on the situation of how

3338
03:15:32,600 --> 03:15:37,240
we want to write all this loops,
why we are going to learn is loops.

3339
03:15:37,480 --> 03:15:41,360
So this way we can eliminate,
we can avoid.

3340
03:15:41,360 --> 03:15:44,880
You have repetitive code right?

3341
03:15:44,880 --> 03:15:48,240
This code does the job
but doesn't look professional, right?

3342
03:15:48,240 --> 03:15:49,720
It doesn't look good. Right?

3343
03:15:49,720 --> 03:15:54,440
There should be a better way to write
Hello five times.

3344
03:15:54,440 --> 03:15:55,800
What? With the help of what?

3345
03:15:55,800 --> 03:15:58,280
With the help of loop.

3346
03:15:58,280 --> 03:15:59,840
With the help of loop.

3347
03:15:59,840 --> 03:16:01,920
So now what are we going to do?

3348
03:16:01,920 --> 03:16:06,960
We are going to start this very,
very first loop is very first loop,

3349
03:16:07,480 --> 03:16:09,800
and we're going to look into our way of

3350
03:16:10,320 --> 03:16:14,840
getting the first one to look
at will be our one, right?

3351
03:16:16,080 --> 03:16:17,920
So always give an example.

3352
03:16:17,920 --> 03:16:21,960
Always give an example.

3353
03:16:21,960 --> 03:16:24,640
Let me take a moment

3354
03:16:25,040 --> 03:16:29,880
when you say integer prime,
I know it's I don't know.

3355
03:16:29,880 --> 03:16:32,880
It's 2:00, right integer time.

3356
03:16:32,880 --> 03:16:35,440
It's 2:00 or let's make it I don't know.

3357
03:16:35,840 --> 03:16:38,560
Let's go 24 hours at 45.

3358
03:16:39,360 --> 03:16:45,840
So you can repeat the same sentence.

3359
03:16:45,840 --> 03:16:48,120
Right For now. It just a print statement.

3360
03:16:48,120 --> 03:16:53,520
But eventually, with the help of loop,
we can repeat a block of code,

3361
03:16:53,720 --> 03:16:58,440
get a block of clock.

3362
03:16:58,440 --> 03:17:00,920
So why loop?

3363
03:17:01,360 --> 03:17:02,840
Oh, I'm taking the variable. Right.

3364
03:17:02,840 --> 03:17:04,520
I'm taking the variable same time.

3365
03:17:04,520 --> 03:17:07,320
Time. It's 2:00, right? 14, 14.

3366
03:17:07,320 --> 03:17:08,560
So now I want to see. Right.

3367
03:17:08,560 --> 03:17:13,000
I'm going to bring the eve first
and then I want you to see this.

3368
03:17:13,320 --> 03:17:19,760
For example, I want to if time eased,
I don't know if time is less than 20.

3369
03:17:19,960 --> 03:17:20,520
Right.

3370
03:17:20,600 --> 03:17:23,640
For example,
I'm going to see if time is less than 20.

3371
03:17:23,640 --> 03:17:27,280
Read less than 8:00
or let's say less than 7:00.

3372
03:17:27,680 --> 03:17:30,960
I'm going to say, for example,
right now is a date system

3373
03:17:32,040 --> 03:17:33,360
around

3374
03:17:34,400 --> 03:17:35,800
the queen line.

3375
03:17:35,800 --> 03:17:36,520
Right?

3376
03:17:37,560 --> 03:17:39,600
Okay. I don't know. It's a new date.

3377
03:17:39,600 --> 03:17:41,520
So basically, whatever. Right.

3378
03:17:41,520 --> 03:17:43,280
The way to go too much with the details.

3379
03:17:43,280 --> 03:17:47,040
But then we're going to right now
the way learn

3380
03:17:47,040 --> 03:17:49,280
that our eve statement works, right?

3381
03:17:50,160 --> 03:17:52,520
So when we learned our
if statement works, our

3382
03:17:52,520 --> 03:17:54,960
if statement works
with the condition, right.

3383
03:17:55,560 --> 03:17:58,080
If the condition is true,

3384
03:17:58,080 --> 03:18:02,360
then I am allowed to go inside my eve
block, Right.

3385
03:18:02,360 --> 03:18:04,520
I'm allowed to go inside if work.

3386
03:18:04,520 --> 03:18:07,800
And in this case,
14 is less than 17 right.

3387
03:18:08,280 --> 03:18:09,880
I wanted to put 19 this way.

3388
03:18:09,880 --> 03:18:11,880
It's 14 is less than 17.

3389
03:18:11,880 --> 03:18:15,240
That's
why we're going to print two days, right?

3390
03:18:15,880 --> 03:18:17,120
So now what?

3391
03:18:17,120 --> 03:18:21,600
Again, new this all I'll do now
instead of the eve,

3392
03:18:22,040 --> 03:18:26,400
What I'm going to do, I'm going to type
what I'm going to say

3393
03:18:26,400 --> 03:18:29,400
while time is less

3394
03:18:30,000 --> 03:18:32,760
than 17 and I'm going to see

3395
03:18:34,720 --> 03:18:38,040
me and I'm going to say it's a date.

3396
03:18:38,400 --> 03:18:42,120
Okay, So now let me ask you guys,
what will be the difference

3397
03:18:42,400 --> 03:18:46,360
between this statement
and what will be the difference

3398
03:18:46,360 --> 03:19:03,360
between this statement?

3399
03:19:03,360 --> 03:19:08,960
So in here right in here, what do we have

3400
03:19:10,400 --> 03:19:12,480
right? Remember, Eve, what is it?

3401
03:19:12,480 --> 03:19:14,960
Eve is a keyboard, right?

3402
03:19:14,960 --> 03:19:18,000
Every keyboard
has a special meaning for Jill.

3403
03:19:18,440 --> 03:19:21,080
So when the Java sees Eve right away,

3404
03:19:21,120 --> 03:19:24,840
when the Java Eve,
it knows I have to check the condition.

3405
03:19:25,080 --> 03:19:26,640
That's what I want, right?

3406
03:19:26,640 --> 03:19:28,680
Because it eve is a conditional statement.

3407
03:19:29,080 --> 03:19:30,000
So now objects.

3408
03:19:30,000 --> 03:19:34,080
Hey, is less than 17 years
condition is true, right?

3409
03:19:34,080 --> 03:19:37,280
Because 14 is less than 17,
condition is true.

3410
03:19:37,280 --> 03:19:40,200
I can go inside this block of code now.

3411
03:19:40,200 --> 03:19:43,200
Let me ask you guys
how many times this block of code line

3412
03:19:43,200 --> 03:19:47,080
15 will get executed?

3413
03:19:47,080 --> 03:19:49,960
One time.
This is executed one time. Right?

3414
03:19:50,960 --> 03:19:52,920
So now when it comes to

3415
03:19:52,920 --> 03:19:55,880
our loop, right when it comes to our

3416
03:19:56,720 --> 03:20:00,480
So while it's also will be
another keyword, right?

3417
03:20:00,480 --> 03:20:03,280
It's well, it's another key word in Java.

3418
03:20:03,760 --> 03:20:05,400
So now

3419
03:20:05,640 --> 03:20:08,200
when the Java
when I'm going to click on Run

3420
03:20:09,320 --> 03:20:11,960
in Java she's one right it's a keyword

3421
03:20:11,960 --> 03:20:16,200
so it knows okay the using loop
what a loop means.

3422
03:20:16,560 --> 03:20:19,560
I have to repeat black of code.

3423
03:20:20,200 --> 03:20:21,880
How often do I have?

3424
03:20:21,880 --> 03:20:25,120
How long do I have
to repeat the block of code?

3425
03:20:25,120 --> 03:20:27,360
As long as the condition is true.

3426
03:20:27,720 --> 03:20:29,840
So what the well do?

3427
03:20:29,840 --> 03:20:33,280
Well, we'll also check the condition.

3428
03:20:34,080 --> 03:20:38,720
And if condition is true,
then that will do.

3429
03:20:38,720 --> 03:20:40,800
It will go inside.

3430
03:20:41,000 --> 03:20:42,040
And while black.

3431
03:20:42,040 --> 03:20:43,800
Remember, guys, what do we mean by block?

3432
03:20:43,800 --> 03:20:45,080
This is the block.

3433
03:20:45,080 --> 03:20:46,680
It goes inside the world.

3434
03:20:46,680 --> 03:20:48,440
Look in worry will do it.

3435
03:20:48,440 --> 03:20:53,480
We'll repeat block of code
and number of times.

3436
03:20:53,640 --> 03:20:59,480
How many times
as long as the condition will be true.

3437
03:20:59,800 --> 03:21:01,200
So now what happens?

3438
03:21:01,200 --> 03:21:03,240
Your java comes in season while. Okay.

3439
03:21:03,240 --> 03:21:06,120
While it means I have to repeat
block of code, that's what Java knows.

3440
03:21:06,120 --> 03:21:07,120
I have to run.

3441
03:21:07,120 --> 03:21:10,560
But before I repeat block of code,
I have to check the condition.

3442
03:21:10,560 --> 03:21:12,520
Hey, is the condition is true?

3443
03:21:12,520 --> 03:21:15,560
Yes, condition is true
because 14 is less than 17.

3444
03:21:15,560 --> 03:21:18,040
So I'm going inside block of code.

3445
03:21:18,440 --> 03:21:22,520
So this will be executed once then.

3446
03:21:22,520 --> 03:21:25,720
Because remember this
Java cannot make a decision on its own.

3447
03:21:26,160 --> 03:21:31,360
Java does what you instructed it
to do then, because Java knows.

3448
03:21:31,360 --> 03:21:31,880
Okay, you know what?

3449
03:21:31,880 --> 03:21:35,200
I have to repeat this block of code
now what Java

3450
03:21:35,200 --> 03:21:37,800
Java archeologist exist by itself.

3451
03:21:38,200 --> 03:21:43,560
Java will go back and what it will do,
it will check the condition again.

3452
03:21:43,840 --> 03:21:46,800
So what it now Lee of time
when I'm going back again, it's

3453
03:21:46,800 --> 03:22:03,240
what is the value of time when I'm
going back again, a value is still 14.

3454
03:22:03,240 --> 03:22:03,400
Right?

3455
03:22:03,400 --> 03:22:05,520
Remember
as you could go step to the bottom

3456
03:22:06,320 --> 03:22:08,320
where did you initialize your variable?

3457
03:22:08,320 --> 03:22:10,560
You initialize the variable in here.

3458
03:22:10,560 --> 03:22:12,760
Are there any where draw the line?

3459
03:22:12,760 --> 03:22:14,480
I'm changing the value of the variable.

3460
03:22:14,480 --> 03:22:19,760
This is there anywhere
I'm changing the value of the variable.

3461
03:22:19,760 --> 03:22:21,360
I'm not changing. Right.

3462
03:22:21,360 --> 03:22:22,720
So now what happens?

3463
03:22:22,720 --> 03:22:24,840
Your time is still 14.

3464
03:22:24,840 --> 03:22:27,000
14 is still less than 17.

3465
03:22:27,200 --> 03:22:29,680
So your code is still
your code is still true.

3466
03:22:29,680 --> 03:22:32,840
It will print again, then goes back
because time is not changing.

3467
03:22:32,840 --> 03:22:35,240
It will continue. Continue printing.

3468
03:22:35,640 --> 03:22:37,400
So there's this

3469
03:22:37,400 --> 03:22:40,680
what do we call this type of loop
we call this type of loop infinite.

3470
03:22:41,160 --> 03:22:45,520
So what this loop will do
is it will continuously

3471
03:22:45,520 --> 03:22:48,880
run your code until you out of the memory.

3472
03:22:48,880 --> 03:22:49,280
Right.

3473
03:22:49,280 --> 03:22:52,680
Which probably is going to take,
I don't know, maybe couple of days.

3474
03:22:53,280 --> 03:22:56,360
Right. So now what do we have to do?

3475
03:22:56,360 --> 03:23:00,840
Guess we have to somehow stop our look.

3476
03:23:00,840 --> 03:23:01,200
Right.

3477
03:23:01,200 --> 03:23:04,280
We have to somehow step our look.

3478
03:23:04,280 --> 03:23:06,920
We can use a break, right?
So maybe I use the wrong word.

3479
03:23:07,200 --> 03:23:11,360
So Now we have to make sure
that at some point

3480
03:23:11,720 --> 03:23:13,920
a condition becomes true, Right?

3481
03:23:14,400 --> 03:23:17,680
So now that's where what we guys can do
that's

3482
03:23:17,680 --> 03:23:22,560
where we can add our use,
our increment or decrement.

3483
03:23:22,560 --> 03:23:23,720
Operator. Right.

3484
03:23:23,720 --> 03:23:27,560
So now it means inside my block of code,

3485
03:23:27,560 --> 03:23:31,360
what I'm going to do,
I'm going to start incrementing my time.

3486
03:23:31,560 --> 03:23:34,680
I'm going to say time plus plus

3487
03:23:35,920 --> 03:23:38,160
five plus plus, right?

3488
03:23:38,160 --> 03:23:40,320
So now what will happen, right?

3489
03:23:40,320 --> 03:23:45,960
So now what will happen now when your code
goes right, When your code runs right.

3490
03:23:46,520 --> 03:23:49,840
So now at first, initial values
time is 14.

3491
03:23:49,960 --> 03:23:53,040
Hey, is 14 less than 17 years?

3492
03:23:53,040 --> 03:23:53,960
Condition is true.

3493
03:23:53,960 --> 03:23:57,360
When condition is true, I can go inside.

3494
03:23:57,360 --> 03:23:58,720
I can go inside.

3495
03:23:58,720 --> 03:24:01,560
So this way I'm going to print it
one time.

3496
03:24:02,280 --> 03:24:04,640
Then what happens with our time this time?

3497
03:24:04,640 --> 03:24:06,000
Plus plus what will happen?

3498
03:24:06,000 --> 03:24:09,280
What will be the value of my time

3499
03:24:10,040 --> 03:24:12,480
now will be 15.

3500
03:24:12,480 --> 03:24:15,160
Now your Java knows
your Java cannot just stop.

3501
03:24:15,160 --> 03:24:16,920
Your java are running in cycles.

3502
03:24:16,920 --> 03:24:19,720
This runs in cycles
as long as the condition true.

3503
03:24:19,720 --> 03:24:23,840
So your java always will go back
and change the condition.

3504
03:24:24,120 --> 03:24:27,360
Now when it goes back,
what is the value of time

3505
03:24:27,360 --> 03:24:32,560
this when it goes
back, it's 15 now check in.

3506
03:24:32,560 --> 03:24:34,800
Hey, is 15 less than 17?

3507
03:24:34,800 --> 03:24:39,560
Is the condition troubles next?

3508
03:24:39,560 --> 03:24:41,280
Now my condition is true.

3509
03:24:41,280 --> 03:24:45,040
So now what I'm doing second time,
I'm going inside the loop.

3510
03:24:45,400 --> 03:24:48,720
I am go in second time,
print my statement,

3511
03:24:48,720 --> 03:24:53,000
and then once I enter it, block of code,
what I see, I see again increment.

3512
03:24:53,320 --> 03:24:58,680
So now my variable
will get incremented to 16 right then?

3513
03:24:58,680 --> 03:25:01,680
Java cannot stop. It's a
well it's a while.

3514
03:25:01,680 --> 03:25:06,000
It sees while it has to say,
it says I have to run the code

3515
03:25:06,000 --> 03:25:09,080
while condition is true which that

3516
03:25:09,080 --> 03:25:12,200
the programmer
put inside this block of code.

3517
03:25:12,200 --> 03:25:12,440
Right.

3518
03:25:12,440 --> 03:25:13,440
So then it goes back.

3519
03:25:13,440 --> 03:25:16,800
Now it checks. Hey is 16
less than 17 years?

3520
03:25:16,800 --> 03:25:21,160
Condition is true on going
that third time inside the loop.

3521
03:25:21,360 --> 03:25:23,160
Now I will print the third time.

3522
03:25:23,160 --> 03:25:25,000
It's a day now.

3523
03:25:25,000 --> 03:25:28,760
My time will get incremented to 17 in
Java.

3524
03:25:28,760 --> 03:25:31,560
Still doesn't start.
This Java can start by itself.

3525
03:25:31,560 --> 03:25:33,680
It still goes back.

3526
03:25:33,680 --> 03:25:36,080
Then what? It goes back now checks.

3527
03:25:36,080 --> 03:25:39,360
Hey, is that when you less than 17.

3528
03:25:39,360 --> 03:25:40,640
So what is the condition

3529
03:25:42,320 --> 03:25:45,120
now? The condition will be false.

3530
03:25:45,480 --> 03:25:50,120
Now when condition is false
Java don't have a permission

3531
03:25:50,360 --> 03:25:52,240
to enter a block of code.

3532
03:25:52,240 --> 03:25:56,320
So now only then
your Java will start, right?

3533
03:25:56,320 --> 03:25:58,560
It will it? We won't be able to enter.

3534
03:25:58,560 --> 03:25:59,640
You will just

3535
03:25:59,640 --> 03:26:04,280
you will just skip the entire well and
then they will continue the code in here.

3536
03:26:04,320 --> 03:26:06,720
Right. Will continue the current year.

3537
03:26:06,720 --> 03:26:10,720
So now here what we see and you see
you think multiple things, right?

3538
03:26:10,720 --> 03:26:11,040
Probably.

3539
03:26:11,040 --> 03:26:12,560
So what do we see now?

3540
03:26:12,560 --> 03:26:14,560
We're looking into the well loop.

3541
03:26:14,560 --> 03:26:18,560
Well, it's a first loop
that we introducing regardless of

3542
03:26:18,560 --> 03:26:22,920
what kind of look we are using loops are,
they are to repeat a block of code,

3543
03:26:23,240 --> 03:26:27,560
which block of code
that you put inside its own curly braces.

3544
03:26:27,560 --> 03:26:30,040
Right.
That you put inside those curly braces.

3545
03:26:30,040 --> 03:26:33,720
Now how this block of code
will be executed,

3546
03:26:33,720 --> 03:26:36,920
this block of work will be executed
based the condition.

3547
03:26:37,320 --> 03:26:41,880
As long as the condition is true,
this code will be repeating,

3548
03:26:41,880 --> 03:26:45,120
repeating, repeating, repeating right now

3549
03:26:45,440 --> 03:26:49,320
because if we are not going
to have any increment or decrement,

3550
03:26:49,320 --> 03:26:53,520
our code will be running forever
running for a loop.

3551
03:26:53,520 --> 03:26:54,720
We call it infinite loop.

3552
03:26:54,720 --> 03:26:59,560
So now what are we
we throwing in increment or decrement

3553
03:26:59,560 --> 03:27:01,280
in the here to do what?

3554
03:27:01,280 --> 03:27:05,400
To make sure our loop emits
a false condition.

3555
03:27:05,400 --> 03:27:07,840
Okay, so now let's copy this to our

3556
03:27:09,200 --> 03:27:13,800
SO right this

3557
03:27:17,440 --> 03:27:19,240
do want

3558
03:27:19,240 --> 03:27:45,520
to. Yep.

3559
03:27:45,520 --> 03:27:49,800
So we we are we are using those
to meet this specific condition.

3560
03:27:49,800 --> 03:27:51,400
Yeah. If you want to

3561
03:27:51,400 --> 03:27:54,600
just break the loop tomorrow
guys, we will look into those keywords.

3562
03:27:54,600 --> 03:27:57,320
We can use some different keywords. Right.

3563
03:27:57,760 --> 03:28:08,040
Let me try to debug this to show you.

3564
03:28:08,040 --> 03:28:10,560
So what happened? Right.
What happened happening here?

3565
03:28:10,920 --> 03:28:12,720
We declare the variable time.

3566
03:28:12,720 --> 03:28:14,000
Time as equals 14.

3567
03:28:14,000 --> 03:28:20,040
Hey, is 14 less than 17 years condition
is true Jarvis's eve keyboard right?

3568
03:28:20,520 --> 03:28:23,160
Eve it means you have to check
for the condition.

3569
03:28:23,400 --> 03:28:27,000
And then if condition is true,
it can allow to go inside.

3570
03:28:27,000 --> 03:28:27,960
BLOCK Right.

3571
03:28:27,960 --> 03:28:30,120
So that's what Java does conditional
what's true.

3572
03:28:30,120 --> 03:28:31,320
It does one statement.

3573
03:28:31,320 --> 03:28:32,520
That's it, right? Why?

3574
03:28:32,520 --> 03:28:38,160
Because it was it was a it was a code that
we put inside the conditional statement.

3575
03:28:38,400 --> 03:28:38,920
Right.

3576
03:28:39,360 --> 03:28:42,440
So now what your Java seed is,
when it goes to the line

3577
03:28:42,440 --> 03:28:45,600
14, it's say so
it is a world now it knows.

3578
03:28:45,600 --> 03:28:48,360
Okay, while I have to repeat block of code

3579
03:28:48,600 --> 03:28:51,880
but before I repeat that block of code
to have to check the condition.

3580
03:28:52,160 --> 03:28:55,960
If the condition will be true,
I will continuously running

3581
03:28:56,200 --> 03:28:59,600
the block of code which deploys inside.

3582
03:28:59,760 --> 03:29:00,240
Right.

3583
03:29:00,360 --> 03:29:04,200
So now time is what is 14, right?

3584
03:29:04,200 --> 03:29:06,000
And then condition was true.

3585
03:29:06,000 --> 03:29:07,480
It goes inside, right?

3586
03:29:07,480 --> 03:29:11,160
It prints each a day,
then goes back again, checks.

3587
03:29:11,160 --> 03:29:12,480
Here is the time.

3588
03:29:12,480 --> 03:29:14,760
Time is still 14, right?
That's how you look.

3589
03:29:14,760 --> 03:29:18,280
Will continue continue
repeating block Of course.

3590
03:29:18,280 --> 03:29:20,400
Right this one year Java That's right.

3591
03:29:20,600 --> 03:29:24,080
When we don't have any increment
or deployment, that's what it does, right?

3592
03:29:24,080 --> 03:29:25,280
And then if you want to

3593
03:29:26,280 --> 03:29:28,360
just continues the run, it's very good.

3594
03:29:28,360 --> 03:29:31,560
See, your loop runs, right? Runs.

3595
03:29:31,840 --> 03:29:33,920
How do you know runs right
here. Right. Is can jump.

3596
03:29:33,920 --> 03:29:38,080
And so what we got we got the infinite
loop print, we got an infinite loop.

3597
03:29:38,080 --> 03:29:42,120
So now what we have to do,
we have to either

3598
03:29:42,760 --> 03:29:45,120
increment or depending on how

3599
03:29:45,360 --> 03:29:48,800
time plus, plus, plus.

3600
03:29:49,200 --> 03:29:53,000
And now if I'm going to debug again,
which we going to debug again.

3601
03:29:53,640 --> 03:29:57,400
So now this debugging
will be very hard to stop

3602
03:29:57,440 --> 03:30:00,960
if you got an infinite loop, you just have
to press the red button in here.

3603
03:30:01,080 --> 03:30:01,520
Okay.

3604
03:30:01,720 --> 03:30:04,000
If you forget,
then just click on Terminate.

3605
03:30:05,400 --> 03:30:07,280
You guys will have to do

3606
03:30:11,400 --> 03:30:13,520
so. Time What is the value of time?

3607
03:30:13,680 --> 03:30:15,560
The value of time is 14, right?

3608
03:30:15,560 --> 03:30:17,080
So now please, please, please.

3609
03:30:17,080 --> 03:30:18,120
Whenever you guys quote,

3610
03:30:18,120 --> 03:30:21,120
especially when you was going to
go for a loop, make sure your

3611
03:30:22,320 --> 03:30:24,080
make sure you using the debug.

3612
03:30:24,080 --> 03:30:24,720
Right.

3613
03:30:24,760 --> 03:30:29,680
So hey, is the time is this 14 years
time was 14 rice with java goes inside

3614
03:30:30,080 --> 03:30:33,800
now it executes it's a day right now
it's executes it's a day

3615
03:30:33,800 --> 03:30:37,720
and then what happens is the time right
so pay attention to the time

3616
03:30:37,720 --> 03:30:39,200
time gets increment.

3617
03:30:39,200 --> 03:30:41,400
Now the time is equal to 15.

3618
03:30:41,400 --> 03:30:45,120
Then your Java knows again
it needs to go back because it's a while.

3619
03:30:45,200 --> 03:30:45,600
Right.

3620
03:30:45,600 --> 03:30:50,520
You're repeating block of context
condition again, 15 is less than 17 years.

3621
03:30:50,520 --> 03:30:51,440
Condition is true.

3622
03:30:51,440 --> 03:30:53,760
I can go inside the block of code
on print.

3623
03:30:53,760 --> 03:30:54,960
It's a day.

3624
03:30:54,960 --> 03:30:55,600
And then what?

3625
03:30:55,600 --> 03:30:57,040
I'm going to do is the time.

3626
03:30:57,040 --> 03:30:59,000
I'm going to increment my time.

3627
03:30:59,000 --> 03:31:00,600
Now my time is 16.

3628
03:31:00,600 --> 03:31:03,920
16 is still less than 17. Right?

3629
03:31:03,920 --> 03:31:06,240
And then now what I have,
I have it's a day

3630
03:31:07,080 --> 03:31:09,240
and then I'm going to increment my time.

3631
03:31:09,600 --> 03:31:13,800
You guys see my time get changed,
but your code is still one back

3632
03:31:13,800 --> 03:31:16,040
because Java cannot stop by itself.

3633
03:31:16,400 --> 03:31:18,480
Java checks the condition now.

3634
03:31:18,480 --> 03:31:19,680
It will check the condition.

3635
03:31:19,680 --> 03:31:22,800
Hey, you're 17. Less than 17.

3636
03:31:23,040 --> 03:31:25,880
No condition is false. Condition Is false.

3637
03:31:25,880 --> 03:31:28,000
I cannot enter the block of code
right now.

3638
03:31:28,000 --> 03:31:33,480
What it will do, you will stop.

3639
03:31:33,480 --> 03:31:34,920
So let me ask you this.

3640
03:31:34,920 --> 03:31:37,680
Let me ask what's going to happen
if I'm going to do time?

3641
03:31:38,040 --> 03:31:39,880
Minus, minus, what do you get?

3642
03:31:39,880 --> 03:31:49,440
This thing is going to happen.

3643
03:31:49,440 --> 03:31:51,720
It will become an infinite, right.

3644
03:31:51,720 --> 03:31:56,960
It will become an infinite
Y, because every time I am decrement

3645
03:31:57,080 --> 03:31:58,440
in that time, right?

3646
03:31:58,440 --> 03:32:03,360
First time
it was 14, then it will become 13.

3647
03:32:03,480 --> 03:32:03,800
Right

3648
03:32:04,800 --> 03:32:06,760
now it will become 13 and.

3649
03:32:06,760 --> 03:32:07,120
Then it.

3650
03:32:07,120 --> 03:32:10,680
And every time
what will be happening with the condition?

3651
03:32:11,040 --> 03:32:13,120
Condition? It will be true, right?

3652
03:32:13,120 --> 03:32:15,400
And then your numbers can just go

3653
03:32:19,080 --> 03:32:22,120
and then your numbers will just go
minus, minus, minus,

3654
03:32:22,120 --> 03:32:25,960
minus minus is will go on to
and it will be forever true.

3655
03:32:25,960 --> 03:32:26,280
Right.

3656
03:32:26,280 --> 03:32:27,760
It will be forever true.

3657
03:32:27,760 --> 03:32:30,040
You will just run, run, run, run, run.

3658
03:32:30,040 --> 03:32:34,800
So that's why it's important to identify
whether you guys want to use increment.

3659
03:32:35,640 --> 03:32:38,280
Who would
you guys want to use the decrement.

3660
03:32:38,280 --> 03:32:40,760
Right. Increment or difference.

3661
03:32:41,640 --> 03:32:42,280
Okay.

3662
03:32:42,440 --> 03:32:43,440
Let me ask you this.

3663
03:32:43,440 --> 03:32:47,000
Right now
I'm just going to draw different scenarios

3664
03:32:47,000 --> 03:32:50,040
that you and you guys will be telling me
what to put what

3665
03:32:50,040 --> 03:32:53,520
not to put. Okay.

3666
03:32:53,720 --> 03:32:56,880
So for example, guys,
what I would like to do, right,

3667
03:32:57,720 --> 03:33:00,800
I want to print right now.

3668
03:33:00,920 --> 03:33:02,040
I want to print

3669
03:33:03,760 --> 03:33:05,560
numbers

3670
03:33:06,440 --> 03:33:09,120
from 1 to 20

3671
03:33:10,240 --> 03:33:12,280
4 to 20. How can I do it right?

3672
03:33:12,520 --> 03:33:17,560
How can I doing this?

3673
03:33:17,560 --> 03:33:19,680
We can bring a new variable, guys.

3674
03:33:19,680 --> 03:33:22,880
You know, we are not
this is just a first example, right?

3675
03:33:23,200 --> 03:33:24,880
So now this is different example.

3676
03:33:24,880 --> 03:33:27,760
I want to print numbers from 1 to 20.
How can I do it?

3677
03:33:27,760 --> 03:33:51,480
This know now

3678
03:33:51,920 --> 03:33:54,480
I want to print the numbers from 1 to 20.

3679
03:33:54,560 --> 03:33:56,560
Right? So now let's declare

3680
03:33:57,920 --> 03:34:02,280
let's declare a variable right?

3681
03:34:02,280 --> 03:34:05,520
I'm not going to touch this time
because this time it will.

3682
03:34:06,360 --> 03:34:08,000
I will kill this time for that excess.

3683
03:34:08,000 --> 03:34:08,760
That's right.

3684
03:34:08,760 --> 03:34:12,400
So now
I want to print from 1 to 20, right.

3685
03:34:12,680 --> 03:34:14,720
So I can go to south once it's out.

3686
03:34:14,760 --> 03:34:16,960
Which is out. This is out for now.

3687
03:34:16,960 --> 03:34:21,080
What I'm doing, I'm
repeating exactly the same block of right.

3688
03:34:21,440 --> 03:34:25,880
So now instead of the repeating the same
block of what, I can go for a loop.

3689
03:34:25,880 --> 03:34:28,440
So now let me take a variable integer.

3690
03:34:28,440 --> 03:34:31,080
I equal to one right?

3691
03:34:31,080 --> 03:34:33,960
So I have a variable
that holds the value of one.

3692
03:34:34,280 --> 03:34:37,800
So now how can I meet this variable

3693
03:34:38,160 --> 03:34:41,800
to be true 20 times
and then I can just printed, right?

3694
03:34:42,720 --> 03:34:44,400
So now I can say well, right.

3695
03:34:44,400 --> 03:34:46,240
Because that's all we have.

3696
03:34:46,240 --> 03:34:49,080
While I is a lot less or greater, this

3697
03:34:56,480 --> 03:34:59,480
is a greater key.

3698
03:34:59,600 --> 03:35:04,600
While I ease more than 23,
then what are we doing this then?

3699
03:35:04,600 --> 03:35:08,000
What are we doing?

3700
03:35:08,000 --> 03:35:10,800
I want you print the numbers from 1 to 20.

3701
03:35:10,800 --> 03:35:12,120
How can I do

3702
03:35:19,200 --> 03:35:19,400
what?

3703
03:35:19,400 --> 03:35:21,960
I can do now I'll take right.

3704
03:35:22,440 --> 03:35:25,200
So now the only difference right now,

3705
03:35:25,200 --> 03:35:28,240
instead of printing, it's a day, right?

3706
03:35:28,600 --> 03:35:33,000
What I'm going to print, I'm
going to print the value of this variable.

3707
03:35:33,440 --> 03:35:33,680
Right?

3708
03:35:33,680 --> 03:35:35,840
I'm going to print
the value of this variable

3709
03:35:35,840 --> 03:35:39,840
y because I know the value
of this variable changes, right?

3710
03:35:39,840 --> 03:35:42,000
Changes. Now, how can I make it change?

3711
03:35:42,280 --> 03:35:43,440
I just make it up.

3712
03:35:43,440 --> 03:35:47,120
Plus, plus, plus, plus.

3713
03:35:47,120 --> 03:35:54,200
Okay, so now let's analyze this.

3714
03:35:54,200 --> 03:35:56,680
Analyze it. Right.

3715
03:35:57,200 --> 03:35:57,520
Okay.

3716
03:35:57,840 --> 03:36:00,960
We're going to look only at this part
right now.

3717
03:36:00,960 --> 03:36:05,080
Integers initialize in the variable
I equals to one.

3718
03:36:05,560 --> 03:36:10,120
So now while it means
I have to repeat a block of code,

3719
03:36:10,120 --> 03:36:15,640
which block of code
applies from here to here right now?

3720
03:36:15,640 --> 03:36:18,960
But before I'm allowed to repeat this
block of clip,

3721
03:36:19,040 --> 03:36:20,760
I have to check the conditional.

3722
03:36:20,760 --> 03:36:23,760
I'm. Hey,
is that condition true or false? This

3723
03:36:31,480 --> 03:36:32,040
if false.

3724
03:36:32,040 --> 03:36:42,360
So what happens when the condition is fold
this What happens when condition false.

3725
03:36:42,360 --> 03:36:43,280
I cannot enter.

3726
03:36:43,280 --> 03:36:44,720
I cannot enter in here.

3727
03:36:44,720 --> 03:36:46,720
Then your java goes out.

3728
03:36:46,720 --> 03:36:49,320
It goes out outside of the wild look.

3729
03:36:49,520 --> 03:36:52,680
And if there is no statement,
it's the end of the mean.

3730
03:36:52,840 --> 03:36:54,720
And then it sees the end of the class.

3731
03:36:54,720 --> 03:36:56,560
And that's why you will stop read.

3732
03:36:56,560 --> 03:37:00,080
That's why it won't step. Right.

3733
03:37:00,120 --> 03:37:04,080
That's why when we say in here, right,
I want to print numbers from 1 to 20.

3734
03:37:04,080 --> 03:37:06,840
Nothing that printed one
because condition was false.

3735
03:37:07,240 --> 03:37:08,560
Now what do we have to do?

3736
03:37:08,560 --> 03:37:11,200
We have to make sure we meet the true
condition.

3737
03:37:11,200 --> 03:37:12,600
How do we make the true condition?

3738
03:37:12,600 --> 03:37:21,120
This.

3739
03:37:21,120 --> 03:37:23,240
Let's just do the rest.

3740
03:37:23,240 --> 03:37:24,880
If I want to include 20,

3741
03:37:25,880 --> 03:37:26,880
what should be my upgrade?

3742
03:37:26,880 --> 03:37:28,880
I want to include 20

3743
03:37:30,000 --> 03:37:32,200
less or equal minus one people.

3744
03:37:33,240 --> 03:37:35,280
And then while debugging. Right?

3745
03:37:35,320 --> 03:37:36,120
Always. Always.

3746
03:37:36,120 --> 03:37:37,720
I know it's easy guys, right?

3747
03:37:37,720 --> 03:37:39,480
But always try to keep up too.

3748
03:37:39,480 --> 03:37:41,360
This thing right

3749
03:37:42,760 --> 03:37:45,000
integer AI is equal to one.

3750
03:37:45,640 --> 03:37:47,440
One is less than 20.

3751
03:37:47,440 --> 03:37:48,360
Condition is true.

3752
03:37:48,360 --> 03:37:51,600
Going inside by printing the value of one.

3753
03:37:51,840 --> 03:37:55,960
And then what happens with our one
one will be increments.

3754
03:37:55,960 --> 03:37:56,240
Right?

3755
03:37:56,240 --> 03:38:01,800
Incrementing the level of I begin to write
two is still less than 20

3756
03:38:02,040 --> 03:38:04,720
condition is true print the value of I

3757
03:38:05,360 --> 03:38:09,160
it was two
now on the line 27 I'm incrementing right

3758
03:38:09,480 --> 03:38:13,680
and your cycle come
continuous continuous continuous.

3759
03:38:13,680 --> 03:38:17,800
It will continue this all the way
until the value of

3760
03:38:17,800 --> 03:38:20,400
I write

3761
03:38:20,880 --> 03:38:22,240
was 20. Right.

3762
03:38:22,240 --> 03:38:24,080
So now what happened?

3763
03:38:24,080 --> 03:38:27,000
The value of I became 21.

3764
03:38:27,640 --> 03:38:30,200
You still did not stop your java

3765
03:38:30,240 --> 03:38:34,280
one back to the line 23
because it has to check the condition

3766
03:38:34,600 --> 03:38:38,880
now you'll be checking
the condition 21 is not less than.

3767
03:38:38,880 --> 03:38:41,040
20 condition will be false.

3768
03:38:41,040 --> 03:38:43,320
Now one condition is full Java.

3769
03:38:43,320 --> 03:38:45,240
I don't have permission now.

3770
03:38:45,240 --> 03:38:47,480
It will continue to this.

3771
03:38:47,480 --> 03:38:47,760
Right?

3772
03:38:47,760 --> 03:38:50,600
You will continue to this one.

3773
03:38:50,600 --> 03:38:54,600
Now, this way,
when we see with the helpful loop

3774
03:38:54,840 --> 03:38:59,040
we were able to repeat this block code

3775
03:39:00,240 --> 03:39:02,600
while this condition was true.

3776
03:39:02,760 --> 03:39:05,160
Right? Well, this comes first.

3777
03:39:05,160 --> 03:39:07,920
So in this scenario,
condition was to 20 times.

3778
03:39:07,920 --> 03:39:12,840
That's why we see
the numbers are printed from 1 to 21 to

3779
03:39:15,240 --> 03:39:17,880
so what if I want to print them all
in one liners?

3780
03:39:18,480 --> 03:39:20,920
I don't want to print them vertically.

3781
03:39:20,920 --> 03:39:24,040
I want to print horizontally
on an all in one line

3782
03:39:27,560 --> 03:39:28,960
and just use print.

3783
03:39:28,960 --> 03:39:32,520
I can just go,

3784
03:39:33,840 --> 03:39:35,720
okay, So I did prints

3785
03:39:35,720 --> 03:39:38,280
and now maybe we will need to add
some space in there.

3786
03:39:38,720 --> 03:39:42,600
Space and it stops plus space.

3787
03:39:43,320 --> 03:39:45,720
And then let me readjust
and blend in here.

3788
03:39:46,280 --> 03:39:50,760
So now, right now
I have one, two, three, four, five.

3789
03:39:50,760 --> 03:39:55,920
All the way to 20, all the way to 20.

3790
03:39:55,920 --> 03:39:59,040
All right, guys, let me ask you then,
what if I want

3791
03:39:59,040 --> 03:40:03,600
you print, I want you print

3792
03:40:04,720 --> 03:40:06,840
numbers from

3793
03:40:10,040 --> 03:40:12,880
me. The one

3794
03:40:15,000 --> 03:40:17,640
now here was from 1 to 20.

3795
03:40:17,720 --> 03:40:33,520
Right now I want you print from 50 to 1.

3796
03:40:33,520 --> 03:40:35,320
So now you know, right?

3797
03:40:35,320 --> 03:40:39,160
We are starting from the highest value
to the lowest, right?

3798
03:40:39,160 --> 03:40:39,840
So now what?

3799
03:40:39,840 --> 03:40:41,880
It means we have to do the decrement.

3800
03:40:41,880 --> 03:40:44,880
Okay, so what will be my starting point?

3801
03:40:44,880 --> 03:40:48,240
This integer, let's take another variable
is they integer.

3802
03:40:48,600 --> 03:40:55,160
Why? I'm printing from 50 to 1 this.

3803
03:40:55,720 --> 03:40:58,160
So what is the what
should I initialize my variable to

3804
03:40:59,480 --> 03:41:00,600
50 right.

3805
03:41:00,600 --> 03:41:02,640
I'm going to initialize it to 50.

3806
03:41:03,000 --> 03:41:06,280
Then give me the condition. This

3807
03:41:16,800 --> 03:41:19,880
and now I'll go with my while

3808
03:41:19,880 --> 03:41:23,040
because this is
the only that we learn right?

3809
03:41:23,040 --> 03:41:25,480
So now we have to configure the condition.

3810
03:41:25,480 --> 03:41:31,400
So now we will say, Wow, why did I say 50?

3811
03:41:31,400 --> 03:41:32,680
Okay, sure we can use it.

3812
03:41:32,680 --> 03:41:35,360
Well, 50 is less than equal than one.

3813
03:41:35,360 --> 03:41:35,920
Okay, fine.

3814
03:41:35,920 --> 03:41:38,000
I'll put 50. Right, I'll put 50.

3815
03:41:38,160 --> 03:41:41,080
Okay But then what will be your statement?

3816
03:41:41,160 --> 03:41:42,400
What are you guys going to print?

3817
03:41:42,400 --> 03:41:45,320
I want you print now is from 50 to 1.

3818
03:41:45,960 --> 03:41:50,000
Now, am I going to do it?

3819
03:41:50,000 --> 03:41:54,480
So now who has got to have holds
the value of that variable less?

3820
03:41:54,480 --> 03:41:55,280
How can I do it

3821
03:41:57,240 --> 03:41:57,840
right?

3822
03:41:57,840 --> 03:41:59,480
So in here, guys, right.

3823
03:41:59,480 --> 03:42:02,200
We have to specify this variable, right?

3824
03:42:02,200 --> 03:42:04,320
We have to specify this variable,

3825
03:42:04,320 --> 03:42:08,360
and then this variable holds
what the value of 15.

3826
03:42:08,640 --> 03:42:11,280
Now, well,
this variable holds the value of 50.

3827
03:42:11,280 --> 03:42:14,480
What I can do, I can print it, right,
I can print it.

3828
03:42:14,760 --> 03:42:26,040
And then what else is important
to do This?

3829
03:42:26,040 --> 03:42:31,560
Then it's important to decrement,
write, decrement.

3830
03:42:31,560 --> 03:42:32,960
So this way, right.

3831
03:42:32,960 --> 03:42:35,880
So what will happen at this example?

3832
03:42:35,920 --> 03:42:36,800
Right?

3833
03:42:36,800 --> 03:42:40,600
May is $50
or it is 50 less or equal than one.

3834
03:42:40,600 --> 03:42:48,360
This what is our condition, true or false?

3835
03:42:48,360 --> 03:42:49,240
Mission is false.

3836
03:42:49,240 --> 03:43:07,920
How do I make this condition true?

3837
03:43:07,920 --> 03:43:11,160
So while condition is not less, if

3838
03:43:11,160 --> 03:43:14,720
my variable has a high value right,

3839
03:43:14,720 --> 03:43:18,040
so now my operator should be greater,
right?

3840
03:43:18,480 --> 03:43:21,840
My operator
should be greater than it should be.

3841
03:43:21,920 --> 03:43:22,400
Good.

3842
03:43:23,000 --> 03:43:25,080
Now this is what will be happening, right?

3843
03:43:25,360 --> 03:43:28,200
Hey, is 50 more than one? Yes.

3844
03:43:28,200 --> 03:43:29,600
Condition is true.

3845
03:43:29,600 --> 03:43:30,840
I am going inside.

3846
03:43:30,840 --> 03:43:35,120
First time I'm going to print 50 right
then what I'm doing

3847
03:43:35,120 --> 03:43:38,640
I am decrement to my Y will become 49.

3848
03:43:38,960 --> 03:43:43,880
My code goes back now it says he is a
y still more than one. Yes.

3849
03:43:43,880 --> 03:43:45,920
Last time I checked it was 49.

3850
03:43:45,920 --> 03:43:48,240
Is 49 still still more than one is.

3851
03:43:48,240 --> 03:43:49,440
Condition is true.

3852
03:43:49,440 --> 03:43:52,440
I'm going inside again now all 349.

3853
03:43:52,760 --> 03:43:55,720
What I'm going to do
is why I'm going to do minus one.

3854
03:43:56,120 --> 03:44:00,200
Now going back,
the value of Y is 48 is 42.

3855
03:44:00,200 --> 03:44:01,360
More than one is.

3856
03:44:01,360 --> 03:44:04,280
Okay, then go inside,
print the value of y,

3857
03:44:04,720 --> 03:44:07,640
valid y and then do what is white.

3858
03:44:07,960 --> 03:44:11,760
Continue discriminating, continue
discriminating, continue discriminate.

3859
03:44:11,760 --> 03:44:12,360
Right.

3860
03:44:12,360 --> 03:44:17,600
We will continue decrement
until the value of one becomes one.

3861
03:44:18,360 --> 03:44:18,960
Right.

3862
03:44:18,960 --> 03:44:22,360
And then one once the value of one becomes

3863
03:44:22,800 --> 03:44:27,840
we say hey, is one is more or equal,
then one is condition is true.

3864
03:44:27,840 --> 03:44:29,280
Okay, no problem.

3865
03:44:29,280 --> 03:44:31,680
Then what was the last value of Y?

3866
03:44:31,680 --> 03:44:34,920
It was one then we are decrement

3867
03:44:35,240 --> 03:44:38,120
one minus one will give me zero.

3868
03:44:38,800 --> 03:44:41,880
Java goes back is zero more than

3869
03:44:42,640 --> 03:44:47,000
no Now our condition became false opinion
Go inside

3870
03:44:47,280 --> 03:44:50,880
your java won't be able to enter
this block of code right

3871
03:44:50,880 --> 03:44:53,920
So this way it continue execution of that

3872
03:44:54,200 --> 03:44:57,440
next statement right? Yeah.

3873
03:45:00,920 --> 03:45:01,280
Okay.

3874
03:45:01,280 --> 03:45:03,440
The same thing we will meet the needs

3875
03:45:05,880 --> 03:45:07,560
needs right there.

3876
03:45:07,560 --> 03:45:10,720
So now what we did fear decrement.

3877
03:45:10,720 --> 03:45:12,960
That's where we started
from the highest value.

3878
03:45:13,320 --> 03:45:17,320
And we're printing all the way
to the lowest

3879
03:45:18,000 --> 03:45:23,160
to the lowest.

3880
03:45:23,160 --> 03:45:24,480
Okay, this

3881
03:45:25,360 --> 03:45:29,040
last thing I'm going to do,
and then it's 243.

3882
03:45:29,040 --> 03:45:33,000
I'm going to wait for that.

3883
03:45:33,000 --> 03:45:34,160
Maybe we

3884
03:45:38,200 --> 03:45:41,280
guys, I want you print numbers from

3885
03:45:42,960 --> 03:45:45,600
1 to 10,

3886
03:45:45,600 --> 03:45:53,560
but I want you print only even numbers.

3887
03:45:53,560 --> 03:45:57,960
Are you guys going to do it?

3888
03:45:57,960 --> 03:45:59,240
But my you have to use print.

3889
03:45:59,240 --> 03:46:02,240
Remember when we learn the difference
between print in print, like print

3890
03:46:02,240 --> 03:46:10,680
will print everything in one line.

3891
03:46:10,680 --> 03:46:12,720
Okay. Can you guys tried to do it?

3892
03:46:12,720 --> 03:46:13,280
Are you going?

3893
03:46:13,280 --> 03:46:16,360
I need the even numbers from 1 to 10.

3894
03:46:16,720 --> 03:46:19,360
It means I want to print only two,
four, six,

3895
03:46:19,360 --> 03:46:51,080
eight, ten.

3896
03:46:51,080 --> 03:46:54,080
Okay, so go ahead and read your quotes.

3897
03:46:54,080 --> 03:46:56,760
And this way we. This way. I'll see.

3898
03:46:57,800 --> 03:47:01,200
And this
way you guys will see that your classmates

3899
03:47:01,200 --> 03:47:04,320
think of different options to

3900
03:49:21,560 --> 03:49:22,040
exist

3901
03:49:22,040 --> 03:49:46,800
with a new class.

3902
03:49:46,800 --> 03:49:49,960
So no one will do this, you guys.

3903
03:49:50,520 --> 03:49:51,720
Then there's your friend.

3904
03:49:51,720 --> 03:49:53,040
Different quote, right?

3905
03:49:53,040 --> 03:49:55,520
So now what I need to write.

3906
03:49:55,520 --> 03:49:57,240
This is so the way we should analyze.

3907
03:49:57,240 --> 03:49:59,760
Okay,
I need to bring the numbers from 1 to 10.

3908
03:50:00,120 --> 03:50:05,280
It means I want to continuously
the sum statement.

3909
03:50:05,280 --> 03:50:06,480
Right. Repeating the statement.

3910
03:50:06,480 --> 03:50:09,360
I want you print two, four, six, eight.

3911
03:50:09,360 --> 03:50:10,040
Right.

3912
03:50:10,120 --> 03:50:13,320
So now I want to have
the repetitive statement away.

3913
03:50:13,320 --> 03:50:15,960
You just think, okay,
I need a loop right now.

3914
03:50:15,960 --> 03:50:17,880
We know just one loop. Okay.

3915
03:50:17,880 --> 03:50:19,760
So the way the Y loop works, right?

3916
03:50:19,760 --> 03:50:23,160
So first, what do we have?

3917
03:50:23,160 --> 03:50:25,240
I have to have a zero, right?

3918
03:50:25,240 --> 03:50:27,560
I'm going to same teacher I equals, right?

3919
03:50:27,920 --> 03:50:29,760
So no different ways.

3920
03:50:29,760 --> 03:50:31,720
How we can go two different ways, right?

3921
03:50:31,720 --> 03:50:35,520
So now integer,
I want to print numbers from 1 to 10.

3922
03:50:35,680 --> 03:50:37,120
Right. Sure.

3923
03:50:37,120 --> 03:50:42,120
Some of you guys started from two
and then what you did inside your world

3924
03:50:42,120 --> 03:50:43,200
right for the

3925
03:50:43,200 --> 03:50:47,440
Why would you repeat the block of what
you have to make a true condition, Right?

3926
03:50:47,440 --> 03:50:50,120
You have to make
the true condition. So now

3927
03:50:51,240 --> 03:50:53,040
to make the true condition, you say, hey,

3928
03:50:53,040 --> 03:50:56,320
I is less or equal then, right?

3929
03:50:56,760 --> 03:50:59,120
Because you want to print only 14.

3930
03:50:59,120 --> 03:51:03,920
And now what you guys did,
you started from the even number.

3931
03:51:04,080 --> 03:51:06,920
So you can start printing
that even number.

3932
03:51:07,320 --> 03:51:12,840
And then what you guys did,
you did you increment what you did it

3933
03:51:13,080 --> 03:51:18,120
instrumentation by two right
You did it implementation by two.

3934
03:51:18,440 --> 03:51:18,720
Right.

3935
03:51:18,720 --> 03:51:20,960
So this way what happens right

3936
03:51:22,080 --> 03:51:24,960
is to less than ten years
condition is true.

3937
03:51:24,960 --> 03:51:26,520
First thermal print two.

3938
03:51:26,520 --> 03:51:29,680
Then what do we have
instead of incrementing by one?

3939
03:51:29,680 --> 03:51:30,360
What are you doing?

3940
03:51:30,360 --> 03:51:34,920
You are adding to no extent
you are is equals to for your car

3941
03:51:34,920 --> 03:51:39,200
your your java goes back
hey is for less than ten years.

3942
03:51:39,200 --> 03:51:42,720
Condition is true
quote condition true and going 2.4.

3943
03:51:43,080 --> 03:51:44,120
Then what happens?

3944
03:51:44,120 --> 03:51:46,240
Four plus two we're going to get six.

3945
03:51:46,240 --> 03:51:48,200
Hey, is six less than five years?

3946
03:51:48,200 --> 03:51:51,360
Condition is true
and printing six in command

3947
03:51:51,360 --> 03:51:54,680
by two, it will be eight
and of course it will be ten after that.

3948
03:51:54,680 --> 03:51:58,560
Right after you print eight, then ten,
then after you are

3949
03:51:58,560 --> 03:52:01,680
is equals to ten,
you still incrementing by two.

3950
03:52:01,800 --> 03:52:05,880
You I implementing
by two will be equal to 12.

3951
03:52:06,280 --> 03:52:07,960
Then you are going back.

3952
03:52:07,960 --> 03:52:09,560
Eight is 12 less than ten?

3953
03:52:09,560 --> 03:52:11,640
No, 12 is not less than ten.

3954
03:52:11,640 --> 03:52:17,080
Okay, let me try to bring the value
outside of the loop as well, because all

3955
03:52:23,200 --> 03:52:34,000
we while.

3956
03:52:34,000 --> 03:52:37,200
So what do you guys think
will be the value if I'm going to print 90

3957
03:52:37,800 --> 03:52:39,680
will be the value

3958
03:53:03,280 --> 03:53:04,120
of the 19

3959
03:53:04,120 --> 03:53:29,040
on the line 19.

3960
03:53:29,040 --> 03:53:31,240
Okay.

3961
03:53:31,240 --> 03:53:39,840
See, any time you confuse
what you look as you do debug,

3962
03:53:39,840 --> 03:53:42,480
what is the value of
I guess what is the value of I

3963
03:53:47,720 --> 03:53:48,920
you develop.

3964
03:53:48,920 --> 03:53:51,480
I is too good. Right.

3965
03:53:51,480 --> 03:53:51,920
Okay.

3966
03:53:51,920 --> 03:54:00,440
Now I'm taking
the condition is the condition or false?

3967
03:54:00,440 --> 03:54:00,840
Okay.

3968
03:54:00,840 --> 03:54:03,480
If my condition is true,
where am I will jump

3969
03:54:04,920 --> 03:54:13,960
to which line?

3970
03:54:13,960 --> 03:54:15,680
No, I'm still in here, guys. I'm.

3971
03:54:15,680 --> 03:54:16,880
I'm checking my condition.

3972
03:54:16,880 --> 03:54:19,480
So if the condition is true,
I will go inside.

3973
03:54:19,480 --> 03:54:21,960
Then my code will jump to the line.
13 Right.

3974
03:54:22,440 --> 03:54:24,840
Then wants to jump to the line 13.

3975
03:54:24,840 --> 03:54:29,680
Then it will execute the line 14
So what happens on the line 14 This

3976
03:54:33,200 --> 03:54:33,960
where

3977
03:54:33,960 --> 03:54:37,320
incrementing the value by two
we are in two.

3978
03:54:37,320 --> 03:54:41,240
So before we have to allow us to execute,
it will be two plus two

3979
03:54:41,400 --> 03:54:44,480
after that where my code goes case

3980
03:54:44,480 --> 03:54:53,160
after line 14, it goes back to the 11.

3981
03:54:53,160 --> 03:54:58,160
You cannot just stop your Java,
don't have the power to stop.

3982
03:54:58,160 --> 03:54:58,920
Right.

3983
03:54:58,920 --> 03:55:03,360
So it so the it knows you have to repeat
the block of plots on your java goes back

3984
03:55:03,880 --> 03:55:04,600
it goes back.

3985
03:55:04,600 --> 03:55:09,360
So what happened with that
I was equals to four condition is true.

3986
03:55:09,360 --> 03:55:13,080
I'm going inside
one wire while I went inside.

3987
03:55:13,120 --> 03:55:17,040
I'm going to print this statement
and then I'm going to increment.

3988
03:55:17,040 --> 03:55:21,480
So now my I will get increment and can I
if my while block.

3989
03:55:21,480 --> 03:55:25,200
No, I cannot because of my Well, look,
I have to go back right.

3990
03:55:25,200 --> 03:55:28,600
And this way your Java will continuously

3991
03:55:28,600 --> 03:55:31,320
going back and checking the condition.

3992
03:55:32,000 --> 03:55:35,480
I'm still right
until well condition is true.

3993
03:55:35,480 --> 03:55:39,240
So now we now from eight
we won't return till ten.

3994
03:55:39,720 --> 03:55:42,040
Eight is ten is still less than ten years.

3995
03:55:42,040 --> 03:55:43,280
Condition is true.

3996
03:55:43,280 --> 03:55:46,120
Okay cool condition is two. I'm printing

3997
03:55:47,360 --> 03:55:48,600
am printing ten.

3998
03:55:48,600 --> 03:55:50,400
Right? I'm still printing ten.

3999
03:55:50,400 --> 03:55:52,440
Now what's going to happen was I was

4000
03:56:03,840 --> 03:56:05,480
increment by two, right?

4001
03:56:05,480 --> 03:56:07,960
It increments by two, it will become 12.

4002
03:56:07,960 --> 03:56:09,600
And then that's my Java stop.

4003
03:56:09,600 --> 03:56:13,040
Now what happens with Java where it will
go, Guess

4004
03:56:13,280 --> 03:56:19,560
which line, which line my code will go.

4005
03:56:19,880 --> 03:56:28,320
Right now it's on the line 14 five

4006
03:56:29,800 --> 03:56:33,080
Java code always, always will go back.

4007
03:56:33,600 --> 03:56:36,280
It has to go back. It cannot just exist.

4008
03:56:36,360 --> 03:56:37,760
It cannot just divide.

4009
03:56:37,760 --> 03:56:42,880
So what it does, it will increment your I,
then it goes back

4010
03:56:42,880 --> 03:56:48,080
you will see did increment that increment
but Java does not have ability to stop.

4011
03:56:48,080 --> 03:56:52,200
Your Java will stop
only and only based on the condition.

4012
03:56:52,400 --> 03:56:56,280
So what it does it, it has to go back now
one is going back

4013
03:56:56,560 --> 03:57:01,640
it checking the condition
now only one the condition becomes false

4014
03:57:01,640 --> 03:57:06,600
because 12 is not less than ten now
it exists right.

4015
03:57:06,600 --> 03:57:10,040
It now it not enters the well cycle
and it goes back.

4016
03:57:10,680 --> 03:57:12,560
Now when it goes back, right.

4017
03:57:12,560 --> 03:57:15,160
So now it has to print on the line. 19.

4018
03:57:15,160 --> 03:57:17,760
What is the value of I right now guess

4019
03:57:30,080 --> 03:57:30,760
it's all

4020
03:57:30,760 --> 03:57:36,880
right so the last value of
I want to be incremented it was 12 right.

4021
03:57:36,880 --> 03:57:40,240
That's why what it's going to do it's
going to point 12 right.

4022
03:57:40,640 --> 03:57:42,240
Then why?

4023
03:57:42,240 --> 03:57:46,200
Because as long as the value I was ten.

4024
03:57:46,560 --> 03:57:50,120
You were inside this cycle,
inside this cycle,

4025
03:57:50,120 --> 03:57:54,560
what you were doing, you were keep
incrementing incrementing increment.

4026
03:57:54,560 --> 03:57:56,000
And you are right.

4027
03:57:56,000 --> 03:58:01,400
So the last value that happened when you
I was equals to ten, which you did,

4028
03:58:01,400 --> 03:58:06,760
you added two to it and after you added
two, then you checked the condition.

4029
03:58:06,760 --> 03:58:11,680
Condition was false, but you still added
up to write these two elements.

4030
03:58:12,400 --> 03:58:13,800
Right? So this was one way.

4031
03:58:13,800 --> 03:58:16,600
Yes. This one way. How to do right.

4032
03:58:16,600 --> 03:58:17,520
This was one way.

4033
03:58:17,520 --> 03:58:19,680
How to do print all it did.

4034
03:58:19,680 --> 03:58:21,920
Now let's go back to the exercise.

4035
03:58:21,920 --> 03:58:23,760
Did we print all even numbers?

4036
03:58:23,760 --> 03:58:28,720
Yes, we Did two, four, six, eight, ten
right now a second away.

4037
03:58:28,800 --> 03:58:30,640
Right now it's slipping away.

4038
03:58:30,640 --> 03:58:33,000
How some of you guys did it right.

4039
03:58:33,000 --> 03:58:35,360
It's also a great weight, right?

4040
03:58:35,360 --> 03:58:37,600
It's also gain weight,
another weight, Great weight,

4041
03:58:37,800 --> 03:58:40,480
but using different operator
and the condition.

4042
03:58:40,480 --> 03:58:43,520
Right. We

4043
03:58:53,160 --> 03:58:54,000
another way.

4044
03:58:54,000 --> 03:58:56,480
Right. So now

4045
03:58:57,200 --> 03:59:01,040
I'm going to take this and

4046
03:59:04,120 --> 03:59:07,040
the mistake was to see if you make

4047
03:59:10,360 --> 03:59:13,200
another way Another way.

4048
03:59:13,200 --> 03:59:15,240
So what do we have right now? Right.

4049
03:59:15,320 --> 03:59:17,520
What do we have? Right.

4050
03:59:17,520 --> 03:59:21,080
So another way to do it,
you have a variable, right?

4051
03:59:21,080 --> 03:59:26,760
You initialize it to one because what
we want is we want even numbers 1 to 10.

4052
03:59:26,880 --> 03:59:27,600
Right?

4053
03:59:27,840 --> 03:59:31,800
So now what you did, you said, hey,
you put your condition right

4054
03:59:31,960 --> 03:59:34,280
and you want that
all the way. Go all the way till ten.

4055
03:59:34,680 --> 03:59:37,920
Now you're saying, hey, you want to print

4056
03:59:38,360 --> 03:59:41,760
more than what you did
This print statement, right?

4057
03:59:41,760 --> 03:59:45,600
This print statement, what you did,
you put it inside

4058
03:59:45,600 --> 03:59:48,360
that block,
the put inside that you blocked.

4059
03:59:48,600 --> 03:59:51,480
So it means for Java B printing it.

4060
03:59:51,480 --> 03:59:54,160
What your Java has to do,
you have to check condition.

4061
03:59:54,360 --> 03:59:54,600
Right.

4062
03:59:54,600 --> 03:59:58,800
You have to check condition
you Now let me debug this form. This

4063
03:59:59,760 --> 04:00:01,240
one there's just one thing I

4064
04:00:01,240 --> 04:00:06,360
want to show you guys, right?

4065
04:00:06,640 --> 04:00:09,800
So a value is equal to one, right?

4066
04:00:09,840 --> 04:00:11,640
We try to go another way.

4067
04:00:11,640 --> 04:00:15,240
Now less is equals 218 is less than ten.

4068
04:00:15,240 --> 04:00:15,520
Right.

4069
04:00:15,520 --> 04:00:18,640
Is one less than ten years
condition is true.

4070
04:00:18,640 --> 04:00:20,040
I am going inside.

4071
04:00:20,040 --> 04:00:20,720
Right.

4072
04:00:20,760 --> 04:00:24,000
So now while I end there, my wild book

4073
04:00:24,360 --> 04:00:27,800
right will enter my wild book
Jarvis's eve.

4074
04:00:28,320 --> 04:00:32,000
So as soon as a Jarvis is Eve
when you guys know if it's in the

4075
04:00:32,000 --> 04:00:33,840
conditional statement.

4076
04:00:33,840 --> 04:00:36,520
So now what do you what Java has to do?

4077
04:00:36,520 --> 04:00:40,920
The Java has to check the condition
before it goes inside.

4078
04:00:40,920 --> 04:00:41,160
Right?

4079
04:00:41,160 --> 04:00:44,960
So now
while taking this condition was false,

4080
04:00:45,480 --> 04:00:48,400
you were not able to access this. Right.

4081
04:00:48,680 --> 04:00:54,240
But then what you still do is still inside
you while what are you doing?

4082
04:00:54,240 --> 04:00:58,320
You increment in your E,
So now the value of E was one.

4083
04:00:59,080 --> 04:01:01,200
Now you want to increment E by one.

4084
04:01:01,560 --> 04:01:04,640
So now the very value eight
will become two.

4085
04:01:05,040 --> 04:01:07,240
Your Java goes back to the while.

4086
04:01:07,280 --> 04:01:10,920
Now it says Hey, is the tool less than ten

4087
04:01:11,640 --> 04:01:14,360
condition is true right now
condition is true.

4088
04:01:14,360 --> 04:01:14,760
Okay.

4089
04:01:14,760 --> 04:01:19,640
I'm able to enter my world block
that starts from here and in there.

4090
04:01:20,040 --> 04:01:24,800
Now, while entering inside my wild look,
I see if statements right?

4091
04:01:24,840 --> 04:01:30,360
I say to each statement now I'm saying,
Hey, Eve e which holds the value of two

4092
04:01:30,680 --> 04:01:35,880
more to if there is no reminder
at this point, condition becomes true.

4093
04:01:35,880 --> 04:01:37,600
And when condition becomes true,

4094
04:01:37,600 --> 04:01:40,240
what are we going to go ahead,
going to print. Right?

4095
04:01:40,240 --> 04:01:45,080
So now we are printing two
and then what are we doing is the two.

4096
04:01:45,840 --> 04:01:48,360
We will go over this, this
and now while doing

4097
04:01:48,360 --> 04:01:51,480
the two, we are incrementing our rate.

4098
04:01:51,840 --> 04:01:55,800
So now will have the value of three three.

4099
04:01:55,880 --> 04:01:58,160
Right? Three is still less than ten.

4100
04:01:58,440 --> 04:02:02,560
And now what about
my condition is my condition draws this

4101
04:02:08,480 --> 04:02:09,280
my eight

4102
04:02:09,280 --> 04:02:14,000
is the current value of three.

4103
04:02:14,000 --> 04:02:14,880
It's false, right?

4104
04:02:14,880 --> 04:02:18,200
Because when you divide three by two,
there will be some reminder, right?

4105
04:02:18,200 --> 04:02:19,320
There will be some reminder.

4106
04:02:19,320 --> 04:02:21,120
So now condition is false.

4107
04:02:21,120 --> 04:02:23,760
You cannot print, but you still increment.

4108
04:02:23,880 --> 04:02:25,040
You still increment.

4109
04:02:25,040 --> 04:02:29,160
Right now your eight becomes
four condition for a while.

4110
04:02:29,160 --> 04:02:31,360
It's true condition for if.

4111
04:02:31,360 --> 04:02:32,200
What about right?

4112
04:02:32,200 --> 04:02:34,400
The value of is two for

4113
04:02:38,120 --> 04:02:42,920
in. Okay.

4114
04:02:43,360 --> 04:02:45,840
So no condition will be true right now.

4115
04:02:45,840 --> 04:02:46,400
What are we doing?

4116
04:02:46,400 --> 04:02:49,240
If condition is true,
can I go inside? Yes, I can go inside.

4117
04:02:49,320 --> 04:02:50,760
I'm printing eight now.

4118
04:02:50,760 --> 04:02:52,560
It will be four so now.

4119
04:02:52,560 --> 04:02:58,920
Your condition for it, Eve always
will be true for all the even numbers.

4120
04:02:58,920 --> 04:02:59,640
Right.

4121
04:02:59,760 --> 04:03:02,400
And how many times my wow will be true.

4122
04:03:02,400 --> 04:03:04,200
My world will be true ten times.

4123
04:03:04,200 --> 04:03:07,200
Because I started for one
all the way to ten.

4124
04:03:07,240 --> 04:03:09,960
Right.
So this would when I'm go into debug right

4125
04:03:11,000 --> 04:03:11,920
now it's six.

4126
04:03:11,920 --> 04:03:14,200
That's why it went inside right.

4127
04:03:14,280 --> 04:03:15,480
We got incremented.

4128
04:03:15,480 --> 04:03:20,520
Now when it's seven it can go inside that
block first and so on.

4129
04:03:20,520 --> 04:03:22,760
Now with blueprint eight. Right.

4130
04:03:22,760 --> 04:03:26,320
So now value of is nine nine.

4131
04:03:26,520 --> 04:03:31,560
If you try to divide by two
there is a reminder condition false right.

4132
04:03:31,560 --> 04:03:36,600
I'm incrementing eight becomes ten right.

4133
04:03:36,600 --> 04:03:37,400
That's what I'm showing.

4134
04:03:37,400 --> 04:03:40,080
I am showing in debugging how to use it.

4135
04:03:40,080 --> 04:03:42,240
Okay, I'll show you how to use it. Okay.

4136
04:03:42,240 --> 04:03:47,560
So now when that I when the A's equals
to ten right condition is true.

4137
04:03:47,760 --> 04:03:51,280
Why? Because ten divided by two,
there's no reminder, right?

4138
04:03:51,320 --> 04:03:52,440
There's no reminder.

4139
04:03:52,440 --> 04:03:54,880
And then we print in a way.

4140
04:03:54,880 --> 04:03:57,200
Now we exist in the you statement.

4141
04:03:57,600 --> 04:04:02,560
At the end of the while you have a
and you're going to increment that.

4142
04:04:02,560 --> 04:04:04,120
Now your E will turn

4143
04:04:05,080 --> 04:04:05,680
right

4144
04:04:05,800 --> 04:04:08,560
now your code still goes back
and it checks.

4145
04:04:08,560 --> 04:04:12,840
Three is the 11 Lisbon ten
So now at this point, condition is false.

4146
04:04:13,320 --> 04:04:15,440
Now what happens? You exist, right?

4147
04:04:16,440 --> 04:04:19,000
So now if you guys want to

4148
04:04:19,000 --> 04:04:22,440
if you guys want to debug right,
what you have to do,

4149
04:04:22,440 --> 04:04:26,240
you have to put a breakpoint.

4150
04:04:26,240 --> 04:04:30,160
You guys have to put a breakpoints
from where

4151
04:04:30,160 --> 04:04:32,560
you want to start your slow
execution. Right.

4152
04:04:32,800 --> 04:04:35,040
I don't want to start sluggish action
here.

4153
04:04:35,280 --> 04:04:39,600
Now, this is an example where I want to
say to you that will please right

4154
04:04:39,600 --> 04:04:43,480
you do left, which was the most right
and it brings the breakpoint.

4155
04:04:43,480 --> 04:04:46,240
And then after that
you just have to click on debug

4156
04:04:46,680 --> 04:04:49,560
the bargain debugging first time.

4157
04:04:49,560 --> 04:04:51,480
If you doing it, this window will show up.

4158
04:04:51,480 --> 04:04:54,600
You just have to click on Switch
and then you just do

4159
04:04:54,640 --> 04:04:57,520
step over, step over, step over and over.

4160
04:04:58,240 --> 04:05:00,760
And if you dive again,
you just click on Stop.

4161
04:05:02,000 --> 04:05:05,120
It's okay.

4162
04:05:05,240 --> 04:05:07,440
So I'm going to give you homework.

4163
04:05:07,440 --> 04:05:10,280
And of course
we are going to continue tomorrow.

4164
04:05:10,840 --> 04:05:12,400
We are going to continue tomorrow.

4165
04:05:12,400 --> 04:05:16,840
So guys, please try to make sure
you complete the homework for a while.

4166
04:05:16,840 --> 04:05:18,040
Loop. Okay?

4167
04:05:18,040 --> 04:05:20,760
And please make sure you look over them

4168
04:05:21,800 --> 04:05:24,240
for loop for tomorrow class

4169
04:05:24,240 --> 04:05:28,200
and then we'll just do more exercises
and more practices tomorrow.

4170
04:05:28,320 --> 04:05:31,400
Okay? And I will of course, I will post

4171
04:05:31,400 --> 04:05:35,040
I will post all the tasks in the homework
in the course

4172
04:05:35,040 --> 04:05:38,760
announcement,
and God will be there on campus.

4173
04:05:38,880 --> 04:05:41,240
All right.

4174
04:05:41,240 --> 04:05:43,520
All right.
Thank you, guys. Good job, everyone.

4175
04:05:43,520 --> 04:05:46,080
I know right now, probably you
you'll give us a little bit

4176
04:05:46,080 --> 04:05:48,760
more of this that Please, please, please
make sure you guys,

4177
04:05:49,200 --> 04:05:50,680
you guys keep practicing. All right

4178
04:05:51,880 --> 04:05:52,240
okay.

4179
04:05:52,240 --> 04:05:53,080
Thank you, guys.

4180
04:05:53,080 --> 04:05:55,000
I'll see all of you tomorrow.

4181
04:05:55,000 --> 04:05:55,440
Okay.

4182
04:05:56,880 --> 04:05:59,520
Bye, everyone.
