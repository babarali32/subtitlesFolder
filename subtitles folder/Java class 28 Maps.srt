1
00:00:08,400 --> 00:00:12,520
We there were three tasks

2
00:00:13,680 --> 00:00:18,240
of the day.

3
00:00:18,240 --> 00:00:20,520
We will learn how to

4
00:00:20,720 --> 00:00:24,560
read and write data to excel, file,
how to create new Excel files,

5
00:00:25,240 --> 00:00:28,320
how to detect from other files
like properties.

6
00:00:29,560 --> 00:00:32,160
So now you guys will be interacting
with the things

7
00:00:32,160 --> 00:00:35,800
which are out of your intelligence,
out of your ID.

8
00:00:36,600 --> 00:00:39,080
Now you will start interacting
with real stuff

9
00:00:39,080 --> 00:00:42,360
from your computer over the internet
and all that.

10
00:00:42,360 --> 00:00:45,800
With the help of Selenium and other API
is that we will be teaching you.

11
00:00:47,760 --> 00:00:49,720
Now, finally the training is over

12
00:00:49,720 --> 00:00:53,280
and you are ready for the battle.

13
00:00:53,280 --> 00:00:53,840
Are you ready?

14
00:00:53,840 --> 00:00:54,960
Soldiers

15
00:00:56,640 --> 00:00:58,960
out of your training
ground, intelligent or

16
00:01:01,360 --> 00:01:04,920
we will lose right away.

17
00:01:05,200 --> 00:01:07,200
For my soldiers returning backwards

18
00:01:08,320 --> 00:01:10,760
to see, seeing the APIs of Excel. And

19
00:01:12,040 --> 00:01:22,200
what are we?

20
00:01:22,200 --> 00:01:25,280
Some of us will be able to take

21
00:01:34,040 --> 00:01:35,320
it. Great.

22
00:01:35,320 --> 00:01:38,400
Where is Colonel Lobo?

23
00:01:38,400 --> 00:01:39,120
Right.

24
00:01:39,680 --> 00:01:44,440
He will be helping you out.

25
00:01:46,120 --> 00:01:47,160
Don't worry.

26
00:01:47,160 --> 00:01:51,720
You have Lieutenant General Major Simon
that will help you out.

27
00:01:51,720 --> 00:01:52,440
Right.

28
00:01:52,520 --> 00:01:55,280
Lieutenant Dan Sebastian. For you.

29
00:01:55,280 --> 00:01:55,960
To whom

30
00:01:57,880 --> 00:02:00,120
do you have any in the army?

31
00:02:00,840 --> 00:02:05,240
I will lead your army for a few days.

32
00:02:06,000 --> 00:02:09,160
Look within breakthrough.

33
00:02:10,080 --> 00:02:12,280
Oh, you mean the. Yep.

34
00:02:12,320 --> 00:02:20,000
I have some friends who are friends
in the army, in ISI, in Special Branch

35
00:02:20,240 --> 00:02:23,240
Police, and everywhere.

36
00:02:25,800 --> 00:02:27,280
Actually, a lot of my friends,

37
00:02:27,280 --> 00:02:30,800
they go to jobs in that field
because, you know, this is Pakistan.

38
00:02:31,000 --> 00:02:34,200
And I don't want to say, but

39
00:02:34,200 --> 00:02:37,440
most of that happens in
the Pakistan is controlled

40
00:02:37,440 --> 00:02:42,120
by Security Security Institute.

41
00:02:43,400 --> 00:02:45,320
I don't need army training.

42
00:02:45,320 --> 00:02:45,920
I am here.

43
00:02:47,080 --> 00:02:49,320
So you have served the army in Afghanistan
or somewhere?

44
00:02:50,200 --> 00:02:52,280
I had a classmate being a friend

45
00:02:54,080 --> 00:02:59,040
looking for soldiers. US.

46
00:02:59,840 --> 00:03:01,640
That's great.

47
00:03:02,400 --> 00:03:03,480
17 years.

48
00:03:03,480 --> 00:03:05,480
All my involved.

49
00:03:06,320 --> 00:03:07,080
All right, guys.

50
00:03:07,080 --> 00:03:10,400
No jokes with NASIR.

51
00:03:10,600 --> 00:03:12,760
I said you are better, You are best.

52
00:03:12,760 --> 00:03:16,240
You are our best friend.

53
00:03:20,720 --> 00:03:21,360
Alright,

54
00:03:21,360 --> 00:03:35,160
so let's start from the tasks.

55
00:03:35,160 --> 00:03:38,560
Well, thrown

56
00:03:38,560 --> 00:03:41,760
into it.

57
00:03:44,080 --> 00:03:47,880
So it's still hard

58
00:03:47,880 --> 00:03:50,760
for you like you have been fighting

59
00:03:51,360 --> 00:03:54,240
real wars.

60
00:03:55,080 --> 00:03:58,680
Well, Java is on top of the

61
00:04:13,200 --> 00:04:16,480
master is 80 to 80 years old.

62
00:04:16,920 --> 00:04:24,880
But on that side,
I hope you guys don't do this.

63
00:04:24,880 --> 00:04:27,200
I was reading this news.

64
00:04:27,680 --> 00:04:37,560
There was a lady who blew up.

65
00:04:37,560 --> 00:04:46,800
I think it's a petrol pump or something
like that.

66
00:04:46,800 --> 00:04:50,680
Yeah,
she was having a bad time with her manager

67
00:04:51,240 --> 00:04:54,960
and she destroyed the complete warehouse
or something like that

68
00:04:56,360 --> 00:04:56,920
in the yellow.

69
00:04:56,920 --> 00:04:59,200
Are, you
know, your enemy is building Java.

70
00:04:59,200 --> 00:05:00,240
They need a lot of freedom.

71
00:05:00,240 --> 00:05:21,800
Enemies.

72
00:05:21,800 --> 00:05:24,920
Lady blew up on.

73
00:05:24,920 --> 00:05:27,640
Okay, let me create a package.

74
00:05:28,200 --> 00:05:30,960
I was here during the break

75
00:05:50,760 --> 00:05:53,360
and you guys send me

76
00:05:56,840 --> 00:05:58,880
in. You guys send me the requirements
for the

77
00:05:58,880 --> 00:06:14,080
for the task.

78
00:06:14,080 --> 00:06:21,160
These task are from yesterday's class.

79
00:06:21,160 --> 00:06:32,560
I think Leonie has to do tasks
very serious this time.

80
00:06:32,560 --> 00:06:35,680
I that we had a couple of minutes
about the capsule.

81
00:06:36,000 --> 00:06:37,400
Can you repeat? Yes.

82
00:06:37,400 --> 00:06:40,920
So we can use capsules
if we are having like high fever

83
00:06:40,920 --> 00:06:43,400
or pain in the neck or something
like that.

84
00:06:43,400 --> 00:06:52,160
Right.

85
00:06:52,160 --> 00:06:54,920
You mean encapsulation, see.

86
00:06:54,920 --> 00:07:00,360
So encapsulation
is when you hide your data by making your

87
00:07:01,320 --> 00:07:04,320
member variables private

88
00:07:05,200 --> 00:07:09,960
and then creating oblique methods
to access

89
00:07:10,920 --> 00:07:14,840
those fields are to set
the that are to those fields.

90
00:07:16,160 --> 00:07:17,960
So for example, if you are

91
00:07:17,960 --> 00:07:21,960
if you think about the Facebook,
they take a lot of that out.

92
00:07:21,960 --> 00:07:24,480
First name,
last name, username and password, right?

93
00:07:25,000 --> 00:07:26,400
So if you are storing that,

94
00:07:26,400 --> 00:07:29,520
that inside the class,
you don't want to make them public

95
00:07:30,080 --> 00:07:32,960
because that way
everyone will be able to access them

96
00:07:32,960 --> 00:07:38,160
and everyone will be able to modify them
without any rules.

97
00:07:38,160 --> 00:07:38,520
Right.

98
00:07:38,520 --> 00:07:41,920
For example, the Facebook might have rules
if a user is already

99
00:07:43,520 --> 00:07:46,080
if someone has signed up
with the same username,

100
00:07:47,760 --> 00:07:50,280
no two persons can have same username.

101
00:07:50,280 --> 00:07:54,120
So when you are trying to create
your username, Facebook first checks

102
00:07:54,880 --> 00:07:58,320
if this username already exist,
if this is the case

103
00:07:58,320 --> 00:08:01,440
they show you and added, If not,
then they allow you

104
00:08:01,680 --> 00:08:05,320
to be data in the banking sector
or other websites.

105
00:08:05,320 --> 00:08:09,320
They have rules like let's say
for example, you can not have a password

106
00:08:09,320 --> 00:08:11,040
less than eight characters.

107
00:08:11,040 --> 00:08:12,240
You can not have a password

108
00:08:12,240 --> 00:08:16,160
that does not contain maybe
special characters, uppercase, lowercase,

109
00:08:16,520 --> 00:08:20,680
all of those checks,
they are performed in the getters.

110
00:08:21,240 --> 00:08:23,040
You get a certain method

111
00:08:24,000 --> 00:08:26,280
and once you pass those rules,
then do that.

112
00:08:26,280 --> 00:08:28,840
I said to the fields of that class.

113
00:08:28,840 --> 00:08:32,280
And similarly, when you have to access
that data, for example,

114
00:08:32,280 --> 00:08:37,520
if you are using a banking application,
you cannot access your account balance

115
00:08:38,640 --> 00:08:42,000
without providing
the correct username and password.

116
00:08:42,440 --> 00:08:45,920
So you also have rules
if you have to access the data.

117
00:08:46,280 --> 00:08:46,920
So you write

118
00:08:46,920 --> 00:08:51,480
all those rules in getters and seconds
and you make your fields private

119
00:08:51,560 --> 00:08:55,200
so that everyone goes through those rules
before

120
00:08:55,360 --> 00:09:05,720
they can access their data.

121
00:09:05,720 --> 00:09:07,040
Example

122
00:09:08,560 --> 00:09:09,040
Well,

123
00:09:09,600 --> 00:09:12,600
the thing that you have just
explained looting.

124
00:09:12,600 --> 00:09:14,640
What was I to

125
00:09:15,960 --> 00:09:16,480
what?

126
00:09:17,280 --> 00:09:23,000
What was that LLC?

127
00:09:23,520 --> 00:09:28,680
That was not an example.

128
00:09:28,680 --> 00:09:31,840
You mean some client? I want you.

129
00:09:31,880 --> 00:09:37,320
You want me to write some kind
of code in the ID?

130
00:09:37,320 --> 00:09:38,800
Okay. So

131
00:09:40,400 --> 00:09:42,720
I think the encapsulation laws

132
00:09:44,280 --> 00:09:47,400
here, here we go.

133
00:09:47,400 --> 00:09:49,800
Alexa, you don't have

134
00:09:50,120 --> 00:09:55,440
access to the GitHub.

135
00:09:55,440 --> 00:09:57,320
I have shared this coding to get up.

136
00:09:57,320 --> 00:10:00,600
So for example, you see here name,

137
00:10:00,720 --> 00:10:04,160
username, password and balance, right?

138
00:10:04,160 --> 00:10:06,240
So I make all of them private

139
00:10:07,680 --> 00:10:11,440
and then I make it public.

140
00:10:11,880 --> 00:10:14,400
Speaking. Get the name right.

141
00:10:14,960 --> 00:10:17,600
I want new examples.

142
00:10:17,600 --> 00:10:19,320
Okay. Okay. Okay.

143
00:10:19,320 --> 00:10:20,280
My Prince.

144
00:10:20,280 --> 00:10:25,760
I will create a new example for you.

145
00:10:25,760 --> 00:10:28,560
What kind of example
you want me to create.

146
00:10:28,560 --> 00:10:33,360
Can you give me some kind of description?

147
00:10:33,360 --> 00:10:37,040
Like, for example, how many fields
you want, what kind of methods

148
00:10:37,040 --> 00:10:44,200
you want to include?

149
00:10:44,200 --> 00:10:48,520
Alexa, Can we do it after the class
at the end of the at the end of the class?

150
00:10:49,680 --> 00:10:56,760
Because it will take some time.

151
00:10:56,760 --> 00:10:57,280
Maybe.

152
00:10:58,880 --> 00:10:59,120
Please

153
00:10:59,120 --> 00:11:02,480
remind me at the end of the class
or maybe during the break.

154
00:11:02,480 --> 00:11:03,120
Okay.

155
00:11:03,880 --> 00:11:06,600
He is going to forget
by the end of the class.

156
00:11:06,760 --> 00:11:07,960
No, you. You can.

157
00:11:07,960 --> 00:11:12,360
Can you remind me?

158
00:11:12,360 --> 00:11:15,240
Actually, I had a good sleep today. The

159
00:11:16,280 --> 00:11:17,640
I am fresh.

160
00:11:17,640 --> 00:11:21,640
The sleep has a huge impact on your brain
and all that you do.

161
00:11:21,640 --> 00:11:24,120
And the next day

162
00:11:26,360 --> 00:11:27,160
I forgot.

163
00:11:27,160 --> 00:11:29,000
It will be your homework.

164
00:11:29,000 --> 00:11:38,200
All right.

165
00:11:38,200 --> 00:11:45,000
Okay, so let's do the tasks.

166
00:11:45,000 --> 00:11:50,880
I am not.

167
00:11:50,880 --> 00:11:53,120
Yup, I am in. Good morning.

168
00:11:53,120 --> 00:11:58,800
Although I have a paper tomorrow
to create a set collection

169
00:12:00,080 --> 00:12:02,520
in which you need to add

170
00:12:02,840 --> 00:12:07,320
the names of the countries in this set.

171
00:12:07,320 --> 00:12:10,080
We want all the objects

172
00:12:10,320 --> 00:12:13,680
to be sorted in alphabetical order.

173
00:12:14,800 --> 00:12:16,920
Use two different ways

174
00:12:16,920 --> 00:12:19,840
to retrieve
all the elements from that sector.

175
00:12:19,840 --> 00:12:23,520
So first,
the requirement says we must have a

176
00:12:24,640 --> 00:12:26,080
a set.

177
00:12:26,320 --> 00:12:28,560
I think you did not burn your head
and that's

178
00:12:28,560 --> 00:12:32,000
why you look happy.

179
00:12:32,000 --> 00:12:34,400
I have a paper until midnight today.

180
00:12:35,840 --> 00:12:40,800
I burned things
ex on the beach last night.

181
00:12:40,800 --> 00:12:42,400
So there are two requirements.

182
00:12:42,400 --> 00:12:46,920
First,
we have to use a set and the second is

183
00:12:48,000 --> 00:12:51,680
the data
should be sorted in alphabetical order.

184
00:12:51,680 --> 00:12:52,760
So can you guys tell me?

185
00:12:52,760 --> 00:12:55,160
We discussed about three steps.

186
00:12:56,360 --> 00:12:59,000
The start that spoke to that

187
00:12:59,240 --> 00:13:03,640
alphabetical order
is called the Preset Guide.

188
00:13:03,640 --> 00:13:05,880
So we will say

189
00:13:06,360 --> 00:13:12,160
reset and we have to store
the names of the countries.

190
00:13:12,160 --> 00:13:14,720
That means the data time should be

191
00:13:16,520 --> 00:13:18,320
starting right

192
00:13:19,720 --> 00:13:21,400
there followed

193
00:13:22,200 --> 00:13:23,920
countries

194
00:13:24,160 --> 00:13:26,680
is equal to new

195
00:13:26,680 --> 00:13:31,200
and then the user of

196
00:13:35,880 --> 00:13:40,040
and then we have to access the data
using two different ways.

197
00:13:40,040 --> 00:13:40,800
Right.

198
00:13:41,360 --> 00:13:45,520
So let's start from Alexey.

199
00:13:45,520 --> 00:13:49,520
So the add metric,
because it is coming from the collections

200
00:13:49,520 --> 00:13:52,840
framework and every class
in the collection framework

201
00:13:52,840 --> 00:13:55,160
implements that collection interface.

202
00:13:55,840 --> 00:13:59,840
And these add remove
and all of these common meters,

203
00:14:01,600 --> 00:14:03,240
they are

204
00:14:03,920 --> 00:14:05,680
coming from that collections framework.

205
00:14:05,680 --> 00:14:08,600
So if I show you, if I click on preset

206
00:14:12,200 --> 00:14:14,960
and if I you see

207
00:14:17,680 --> 00:14:20,120
it implement the set interface

208
00:14:20,760 --> 00:14:27,040
and this set interface,
it is actually extending.

209
00:14:27,040 --> 00:14:28,240
Yep, yep.

210
00:14:28,240 --> 00:14:29,640
We can write, we can even write.

211
00:14:29,640 --> 00:14:32,600
Collection is equal to set same

212
00:14:33,680 --> 00:14:36,360
parent child relationship right.

213
00:14:36,360 --> 00:14:41,600
All these are they are collections
all the, all the P30 sets, they are sets,

214
00:14:41,800 --> 00:14:45,520
they are implementing that set interface.

215
00:14:45,520 --> 00:14:48,280
So if you guys see in here

216
00:14:49,520 --> 00:14:53,640
all the classes in the collection
framework and they are actually

217
00:14:53,640 --> 00:14:54,760
implementing.

218
00:14:54,760 --> 00:14:57,720
So this is the top class,
the Iterable class, right.

219
00:14:57,760 --> 00:15:03,360
The use you guys remember
the event operator that we used to get.

220
00:15:03,360 --> 00:15:06,120
So here is backed by iterator

221
00:15:06,680 --> 00:15:09,920
and because all the classes,
the implements, that means

222
00:15:10,400 --> 00:15:13,800
you will be able to get this return
from all the classes in

223
00:15:13,800 --> 00:15:14,920
the collection framework

224
00:15:18,560 --> 00:15:20,520
and you guys don't need to worry about

225
00:15:20,520 --> 00:15:23,280
this is for the lambda expressions

226
00:15:24,960 --> 00:15:29,360
and this is for another type of iterator
with which we will all be discussing.

227
00:15:29,360 --> 00:15:33,480
So all the classes.

228
00:15:33,480 --> 00:15:37,400
So this I travel from the travel
interface, this collection interface

229
00:15:37,440 --> 00:15:42,800
is extending this I travel and you guys
see in the array list and the link list.

230
00:15:43,040 --> 00:15:44,840
This size method was there.

231
00:15:44,840 --> 00:15:51,160
The use implemented was there contains
method the iterator right the operator

232
00:15:51,160 --> 00:15:54,800
method that gives you the iterator
and the table extends

233
00:15:55,000 --> 00:15:58,800
object estimate.

234
00:15:58,800 --> 00:16:03,160
Actually the table does not extend
the object because object in the class.

235
00:16:03,720 --> 00:16:06,360
So but all the classes in Java Bay

236
00:16:06,360 --> 00:16:10,440
extend from object. Yes.

237
00:16:10,440 --> 00:16:14,400
We will be having a review class tomorrow

238
00:16:15,720 --> 00:16:18,200
so I prefer to array

239
00:16:19,960 --> 00:16:23,960
and remove contains at all.

240
00:16:23,960 --> 00:16:25,520
Remove all remove.

241
00:16:25,520 --> 00:16:28,520
If this is the remove method that

242
00:16:29,520 --> 00:16:32,280
Lubo and Simon you guys were using.

243
00:16:32,280 --> 00:16:32,960
Right.

244
00:16:32,960 --> 00:16:37,040
This is that remove if from that
that takes this lambda expression

245
00:16:38,200 --> 00:16:43,120
and so they are all present
inside the collection framework.

246
00:16:43,440 --> 00:16:45,600
So again, what we can do,

247
00:16:46,560 --> 00:16:50,240
we don't have to memorize different
different methods

248
00:16:51,320 --> 00:16:53,240
for all the collection framework.

249
00:16:53,240 --> 00:16:55,240
We don't have to get methods in this act.

250
00:16:57,000 --> 00:16:59,040
So get method is not present

251
00:16:59,040 --> 00:17:02,000
in the collections framework

252
00:17:04,360 --> 00:17:06,880
and we go to DB diving again.

253
00:17:07,840 --> 00:17:09,920
So this is the table interface.

254
00:17:09,920 --> 00:17:12,920
This is the collection interface
that I have just shown to you.

255
00:17:13,960 --> 00:17:17,880
This is a list and that list,
the method is present inside this list.

256
00:17:18,240 --> 00:17:20,160
What do you see in here? This

257
00:17:21,800 --> 00:17:23,560
is not implementing this list.

258
00:17:23,560 --> 00:17:25,560
That's why we don't have that method.

259
00:17:26,960 --> 00:17:28,640
Also the sets.

260
00:17:28,640 --> 00:17:32,400
They don't store
the data based on the indexes.

261
00:17:33,200 --> 00:17:37,320
So that method is used to get the data
based on the indexes.

262
00:17:37,480 --> 00:17:39,840
That's why it's not present over here.

263
00:17:40,040 --> 00:17:42,240
I told you that the are

264
00:17:43,040 --> 00:17:47,640
the the most wide
use case of the subclass.

265
00:17:47,840 --> 00:17:49,200
All three are class.

266
00:17:49,200 --> 00:17:56,120
Okay said preset and linked
I set is to only remove the duplicate

267
00:17:56,280 --> 00:17:59,440
from other collections
and to sort your data.

268
00:18:00,240 --> 00:18:00,640
There.

269
00:18:00,640 --> 00:18:04,440
That's the use case that I have seen

270
00:18:05,160 --> 00:18:06,800
in the industry.

271
00:18:07,160 --> 00:18:13,040
So that's why it has very limited
functionality.

272
00:18:13,040 --> 00:18:18,720
Okay, so there is no get

273
00:18:18,720 --> 00:18:24,840
method available in here.

274
00:18:24,840 --> 00:18:29,200
So how what I can do,
I can call the same add method.

275
00:18:29,200 --> 00:18:29,760
Right.

276
00:18:29,760 --> 00:18:30,120
Thank you.

277
00:18:30,120 --> 00:18:33,840
Alexey and I have the countries

278
00:18:35,880 --> 00:18:39,280
over here, so let me add

279
00:18:39,280 --> 00:19:04,680
a few countries over here.

280
00:19:04,680 --> 00:19:06,360
Okay.

281
00:19:06,680 --> 00:19:11,320
So let's put Ukraine on the top

282
00:19:11,720 --> 00:19:17,960
because keep calls.

283
00:19:17,960 --> 00:19:23,080
So how can I trade through this data?

284
00:19:23,080 --> 00:19:26,760
So the iterator is there, the loops,
they are there

285
00:19:26,920 --> 00:19:29,760
right?

286
00:19:29,760 --> 00:19:33,000
So one simple way, because I

287
00:19:34,600 --> 00:19:36,880
was the reason for it being all

288
00:19:39,080 --> 00:19:39,920
legacy,

289
00:19:39,920 --> 00:19:42,600
you have used the retained all else
method as well.

290
00:19:42,600 --> 00:19:47,240
So we we only had to retrieve
the elements from the side.

291
00:19:47,520 --> 00:19:50,880
So it's your C the right what we can do
we can see

292
00:19:52,400 --> 00:19:54,720
string country

293
00:19:56,000 --> 00:20:02,440
and then we can see right.

294
00:20:02,440 --> 00:20:08,360
And then we can print out to start.

295
00:20:08,360 --> 00:20:20,880
So this is one of the ways to get
your data from any of the collections.

296
00:20:20,880 --> 00:20:21,600
All right, guys.

297
00:20:21,600 --> 00:20:26,160
So I put Ukraine on the top,
but I see Belgium on the top

298
00:20:26,520 --> 00:20:30,120
while I do this happening.

299
00:20:30,120 --> 00:20:32,400
Alexi I am sorry. Or the Ukrainians

300
00:20:33,600 --> 00:20:36,560
because their the last position

301
00:20:37,720 --> 00:20:38,720
that you see,

302
00:20:38,720 --> 00:20:41,480
I put it on the top right it's yellow.

303
00:20:42,200 --> 00:20:45,840
So because this is a preset

304
00:20:46,200 --> 00:20:48,920
it will still be data

305
00:20:49,680 --> 00:20:59,880
in sorted order.

306
00:20:59,880 --> 00:21:02,040
All right

307
00:21:02,240 --> 00:21:14,120
But it

308
00:21:18,320 --> 00:21:19,200
okay so

309
00:21:19,200 --> 00:21:24,720
and one of the simple ways if you want to
just print out through that our

310
00:21:25,320 --> 00:21:29,960
so you can also directly just use intel

311
00:21:30,040 --> 00:21:33,640
and then put the name of the

312
00:21:33,640 --> 00:21:39,640
of this any of the collections.

313
00:21:39,640 --> 00:21:40,000
Yeah.

314
00:21:40,440 --> 00:21:42,840
So you will see that
that in this format this

315
00:21:46,240 --> 00:21:51,080
and then your favorite operator
is also there right

316
00:21:52,240 --> 00:21:54,400
so how can I get the right

317
00:21:55,320 --> 00:21:59,280
this side to interface
it is implementing the collection

318
00:21:59,280 --> 00:22:02,440
interface
and the title table is present there.

319
00:22:03,040 --> 00:22:06,400
So how can I get to the operator?

320
00:22:07,800 --> 00:22:12,320
I need to write, I triple in
and then I create

321
00:22:12,600 --> 00:22:16,960
is equal to the name of any
any of the collection.

322
00:22:16,960 --> 00:22:18,000
In our case it would.

323
00:22:18,000 --> 00:22:20,360
So so I will say countries dot.

324
00:22:21,280 --> 00:22:24,160
I try to write.

325
00:22:24,160 --> 00:22:29,920
So can you guys tell me
what is this descending iterator?

326
00:22:29,920 --> 00:22:32,080
Any guesses about this descending.

327
00:22:32,080 --> 00:22:33,520
So first let me

328
00:22:34,680 --> 00:22:38,280
let me show you this simple.

329
00:22:38,280 --> 00:22:42,560
So from Z to here, so

330
00:22:45,240 --> 00:22:47,920
there are three famous matters in this.

331
00:22:47,920 --> 00:22:51,840
I create the right one I can use to check

332
00:22:51,840 --> 00:22:56,160
if there are any elements
left in the iterator or not.

333
00:22:56,160 --> 00:22:57,120
Right.

334
00:22:57,800 --> 00:23:01,000
So I can call the first method,
which is iterator.

335
00:23:01,000 --> 00:23:03,360
Dot has an x

336
00:23:05,280 --> 00:23:11,080
and then I can simply say I prefer dot

337
00:23:11,880 --> 00:23:24,880
next, let me put a line here

338
00:23:24,880 --> 00:23:41,600
so you guys can distinguish, Oh,

339
00:23:41,600 --> 00:23:43,920
we get that by using before the loop,

340
00:23:44,920 --> 00:23:48,840
and then we get by using Dehydrator as

341
00:23:53,720 --> 00:23:57,720
and I can
I use this symbol for loop as well

342
00:23:57,720 --> 00:24:02,440
Guys, no need to string here,

343
00:24:02,640 --> 00:24:06,800
all because the genetic apparatus
will also work,

344
00:24:06,800 --> 00:24:10,360
but it's better to have that data type.

345
00:24:10,880 --> 00:24:14,280
You guys remember what happens
if we don't specify the data type?

346
00:24:14,720 --> 00:24:17,400
You might get some issues at runtime

347
00:24:17,520 --> 00:24:21,520
and we never want to have issues on
runtime.

348
00:24:21,520 --> 00:24:25,320
It's always better
to get the headers at compile time.

349
00:24:25,800 --> 00:24:29,680
Just please leave each of the solution
where they are.

350
00:24:29,680 --> 00:24:32,760
We want to know all layers of solution.

351
00:24:32,760 --> 00:24:36,480
We will do that in the review class. If

352
00:24:51,160 --> 00:24:51,840
yeah.

353
00:24:51,840 --> 00:24:56,600
So we cannot be simple for law
to guarantee data from this act.

354
00:24:57,000 --> 00:24:57,760
Okay.

355
00:24:58,440 --> 00:25:06,800
Because there is no get method.

356
00:25:06,800 --> 00:25:08,160
All right.

357
00:25:08,160 --> 00:25:18,320
Do you guys have any questions?

358
00:25:18,320 --> 00:25:19,520
I think it's clear.

359
00:25:19,520 --> 00:25:23,280
No need of comments here
right these days to loop.

360
00:25:23,280 --> 00:25:24,040
They are clear.

361
00:25:24,040 --> 00:25:26,680
Do you guys want me to put some comments?

362
00:25:26,680 --> 00:25:29,120
Maybe
you guys will forget after some time.

363
00:25:29,360 --> 00:25:32,640
So getting the dirt

364
00:25:32,960 --> 00:25:36,160
from insert using

365
00:25:37,440 --> 00:25:40,480
one hand or little

366
00:25:40,480 --> 00:25:42,680
symbol for loop.

367
00:25:43,160 --> 00:25:46,080
Not possible because

368
00:25:47,440 --> 00:25:52,160
in all that method is pleasant and

369
00:25:54,040 --> 00:25:56,760
so maybe

370
00:26:22,440 --> 00:26:24,480
Gohmert's always good

371
00:26:24,480 --> 00:26:28,960
if someone don't need them,
there can be delete comments.

372
00:26:29,040 --> 00:26:41,040
Yes, there was this example
on the internet. Oops

373
00:26:42,120 --> 00:26:43,880
for comments like this.

374
00:26:43,880 --> 00:26:46,560
If they see this dark sign. Right.

375
00:26:47,080 --> 00:26:48,720
We had this. They did use

376
00:26:49,720 --> 00:26:53,800
using a loops.

377
00:26:53,800 --> 00:27:00,680
And so in the industry the standard is
we don't write a lot of comments.

378
00:27:00,840 --> 00:27:04,040
Actually what we do is
we write the code in such a way

379
00:27:04,440 --> 00:27:07,280
that no one needs the comments.

380
00:27:07,640 --> 00:27:08,760
So this is the standard.

381
00:27:08,760 --> 00:27:13,920
Write your code in such a way
that it's super, super easy to read.

382
00:27:13,920 --> 00:27:16,320
Readability
is a very big issue in the industry,

383
00:27:16,920 --> 00:27:19,760
so we only use the comments severely.

384
00:27:20,920 --> 00:27:24,240
It can differ from company to company,
but at least the companies

385
00:27:24,240 --> 00:27:29,840
that I have been working,
they they had this rule

386
00:27:29,840 --> 00:27:32,960
that every developer has to use

387
00:27:32,960 --> 00:27:35,680
these simple basic operations and

388
00:27:36,760 --> 00:27:39,920
write the code in such a way
that everyone can understand.

389
00:27:41,640 --> 00:27:44,240
If you look,

390
00:27:44,560 --> 00:27:48,760
you guys are in learning, okay,

391
00:27:48,760 --> 00:28:19,600
so should we move to the next task?

392
00:28:19,600 --> 00:28:34,560
Okay, you guys send me the requirements
for the next task.

393
00:28:34,560 --> 00:28:39,840
So some of you were asking
for the recording link.

394
00:28:39,840 --> 00:28:42,400
I thought the card has already
shared the link.

395
00:28:42,400 --> 00:28:45,160
Then that's why I didn't feel
I wake up at 3 a.m.

396
00:28:45,160 --> 00:28:46,080
and deliver messages.

397
00:28:46,080 --> 00:28:51,920
Hey, scheduling, scheduling a scheduling
event again in order to explain your code.

398
00:28:51,920 --> 00:28:58,400
If you commented, I like this one.

399
00:28:58,400 --> 00:29:01,040
Yeah. I also placed them

400
00:29:02,320 --> 00:29:03,840
in the first class.

401
00:29:03,840 --> 00:29:06,080
If you guys remember

402
00:29:08,280 --> 00:29:10,680
when we were teaching you
about the comments

403
00:29:12,240 --> 00:29:16,320
variable as this is a comment
that I have to declare this thing variable

404
00:29:16,320 --> 00:29:31,920
and put the comment inside that variable.

405
00:29:31,920 --> 00:29:33,840
Yep. I will show that.

406
00:29:33,840 --> 00:29:35,800
I will check that. Now

407
00:29:49,720 --> 00:29:54,600
create a set of cities.

408
00:29:54,600 --> 00:29:58,880
Let me copy.

409
00:29:58,880 --> 00:30:02,280
So you had to create a set of

410
00:30:02,280 --> 00:30:04,520
city is not at a list of cities

411
00:30:06,000 --> 00:30:09,560
why you created an ad at least

412
00:30:16,040 --> 00:30:16,680
for one. Yes.

413
00:30:16,680 --> 00:30:19,160
We can do this set like this.

414
00:30:20,360 --> 00:30:27,960
Okay.

415
00:30:27,960 --> 00:30:30,480
How many of you

416
00:30:30,600 --> 00:30:33,000
watch the recording again

417
00:30:33,160 --> 00:30:36,800
after class
to understand it in a better way?

418
00:30:37,840 --> 00:30:38,160
Maybe.

419
00:30:38,160 --> 00:30:40,560
Let's say if you have missed something or

420
00:30:41,680 --> 00:30:44,720
me in

421
00:30:49,360 --> 00:30:53,040
or I will share building criteria.

422
00:30:53,720 --> 00:30:55,440
Actually, I was waiting for this zoom.

423
00:30:55,440 --> 00:30:58,560
I was refreshing the page again and again
because sometimes

424
00:30:58,560 --> 00:31:02,560
if the video is
big, it takes like 2 hours to

425
00:31:04,040 --> 00:31:06,360
to process that video.

426
00:31:06,360 --> 00:31:09,280
So then I and then then I saw the

427
00:31:10,200 --> 00:31:12,280
how many hours in your day, guys

428
00:31:16,160 --> 00:31:18,720
they don't have any life

429
00:31:19,080 --> 00:31:22,640
does hash said maintains
the insertion order no time

430
00:31:22,680 --> 00:31:25,680
and it does not maintain the linked link
the one maintains

431
00:31:25,680 --> 00:31:32,160
the other.

432
00:31:32,160 --> 00:31:32,880
It should be linked.

433
00:31:32,880 --> 00:31:38,040
I said create a set of 30 then with
you want to make sure that oh okay.

434
00:31:38,040 --> 00:31:39,680
Yes you guys are right.

435
00:31:39,680 --> 00:31:43,440
We should be using the link sent

436
00:31:44,880 --> 00:31:47,160
for selenium class forever to upload

437
00:31:49,480 --> 00:31:50,720
what I will do

438
00:31:50,720 --> 00:31:54,800
if you guys don't
get to your selenium class

439
00:31:54,800 --> 00:31:58,600
in like 3 hours,
send me a message or tag me in.

440
00:31:58,600 --> 00:32:01,760
This portion of the video
has not been shared.

441
00:32:02,280 --> 00:32:07,440
I will share that with you.

442
00:32:07,440 --> 00:32:10,680
And if you guys are facing
any other issues because I will now

443
00:32:10,680 --> 00:32:14,280
stop teaching after now
from the next week.

444
00:32:14,760 --> 00:32:18,320
So if you guys face any other issues
during your next courses or

445
00:32:18,920 --> 00:32:21,560
anything like that,
you can still, if you don't get proper

446
00:32:21,560 --> 00:32:23,760
response in this sport,
general or something like that,

447
00:32:23,960 --> 00:32:27,720
you can always tag me or in this channel
or send me a direct message

448
00:32:30,840 --> 00:32:34,400
so I create a set of cities.

449
00:32:34,680 --> 00:32:38,080
Okay,
so we created a site in which you want

450
00:32:38,080 --> 00:32:41,920
to make sure
the ad insertion order is maintained.

451
00:32:41,920 --> 00:32:44,600
So because we want the insertion order

452
00:32:45,480 --> 00:32:49,600
and that's why we use the link, dissect.

453
00:32:49,600 --> 00:32:50,440
Okay.

454
00:32:51,240 --> 00:32:54,920
And then what we want,
we want to remove any city

455
00:32:55,800 --> 00:32:58,920
that starts with

456
00:32:58,920 --> 00:33:01,080
the letter E, Right.

457
00:33:01,320 --> 00:33:06,840
So if so, guys will will this operation,
will this operation change the.

458
00:33:06,840 --> 00:33:13,680
It can change the size of this disk.

459
00:33:13,680 --> 00:33:15,640
So what what should I do?

460
00:33:15,640 --> 00:33:21,920
Should I use the enhanced
for loop or vibrator.

461
00:33:21,920 --> 00:33:24,360
The vibrator. Right.

462
00:33:24,360 --> 00:33:28,160
So I can go to the operator
in the same way

463
00:33:28,160 --> 00:33:32,600
and I can see it greater.

464
00:33:32,600 --> 00:33:35,160
I think you should take automation
as well.

465
00:33:35,560 --> 00:33:39,840
I will be teaching a skill
and then at the end I will be teaching you

466
00:33:42,320 --> 00:33:44,160
that in Jenkins we are.

467
00:33:44,160 --> 00:33:47,840
We will automate everything from deploying

468
00:33:47,840 --> 00:33:51,760
your code,
your Jenkins will convert, pull up,

469
00:33:51,800 --> 00:33:55,240
it will execute your test case,
it will send you an email.

470
00:33:55,240 --> 00:33:57,280
Your best guess is passed or failed.

471
00:33:57,280 --> 00:33:58,840
You can just

472
00:33:59,520 --> 00:34:02,720
rest that you you
you don't even need to press anything.

473
00:34:03,040 --> 00:34:07,800
You would just need to push your code
and everything will be done automatically.

474
00:34:07,800 --> 00:34:11,760
You will be just getting an email
whether all the task is his boss

475
00:34:11,800 --> 00:34:14,840
or failed or everything has been deployed
successfully or not,

476
00:34:16,800 --> 00:34:18,920
you should find the job as well.

477
00:34:19,040 --> 00:34:21,960
Yes, that's, that's what I, I do actually.

478
00:34:23,320 --> 00:34:25,560
And so load not worry about that as well.

479
00:34:27,360 --> 00:34:29,080
You should teach everything.

480
00:34:29,080 --> 00:34:30,840
Last week it happened to me a lot.

481
00:34:30,840 --> 00:34:31,480
My girls

482
00:34:31,480 --> 00:34:35,240
could not attend the Selenium session,
but they don't get a chance to watch.

483
00:34:35,240 --> 00:34:37,120
It was posted at 4 a.m.

484
00:34:37,120 --> 00:34:39,120
so you guys can. You guys can tell me.

485
00:34:40,840 --> 00:34:41,520
I mean,

486
00:34:41,520 --> 00:34:45,840
the syntax all we have been hiding
so many previously in this syntax.

487
00:34:45,920 --> 00:34:49,000
If you are one of the course you
you can join syntax as well.

488
00:34:49,480 --> 00:34:54,280
But once you have the industry experience
so like for example,

489
00:34:54,360 --> 00:34:57,760
they are law and then

490
00:34:58,360 --> 00:35:00,440
there was another who

491
00:35:02,400 --> 00:35:05,920
just slipped through my mind.

492
00:35:05,920 --> 00:35:08,920
There was another instructor
who used to be selenium.

493
00:35:08,920 --> 00:35:12,160
They were previously
the student of syntax.

494
00:35:13,720 --> 00:35:17,800
If we have any questions regarding job,
we can text you straight up. Yep.

495
00:35:17,960 --> 00:35:21,840
So we will be creating a separate channel
for all of that.

496
00:35:21,840 --> 00:35:23,280
So don't worry about that.

497
00:35:23,280 --> 00:35:25,920
My girls.

498
00:35:25,920 --> 00:35:28,640
So spring

499
00:35:29,600 --> 00:35:31,640
and then

500
00:35:31,920 --> 00:35:34,080
I Prater

501
00:35:34,080 --> 00:35:36,720
is equal to

502
00:35:36,800 --> 00:35:39,280
the they might be having separate groups

503
00:35:39,280 --> 00:35:42,520
for the girls right daughters

504
00:35:42,520 --> 00:35:42,840
I'll.

505
00:35:42,840 --> 00:35:45,960
Okay so how can I get the data.

506
00:35:45,960 --> 00:35:50,720
I just need to see cities that I clicked.

507
00:35:50,720 --> 00:35:52,160
So now I have dehydrator

508
00:35:53,240 --> 00:35:55,600
I can again same same thing.

509
00:35:55,600 --> 00:35:57,120
I can write a loop.

510
00:35:57,120 --> 00:36:02,120
I can say I created all pairs.

511
00:36:02,120 --> 00:36:05,600
It means that the syntax will not tie
it as without experience.

512
00:36:06,080 --> 00:36:14,040
If you guys can teach like for example,
we don't have any issues,

513
00:36:14,040 --> 00:36:17,440
just tell me there's
actually a better way to do that.

514
00:36:17,440 --> 00:36:20,640
We will tell you that we have experience,
but you have to believe us

515
00:36:20,640 --> 00:36:23,760
as a group.

516
00:36:23,760 --> 00:36:26,000
If you guys can pass my interview.

517
00:36:26,360 --> 00:36:30,200
I mean, I will be taking the interview
and if you guys can pass in Java.

518
00:36:30,200 --> 00:36:30,840
But why not?

519
00:36:30,840 --> 00:36:35,840
You guys are more
than welcome to join syntax.

520
00:36:35,840 --> 00:36:38,040
I just need to ask one question.

521
00:36:38,280 --> 00:36:42,360
Can we call a static method inside
a non static

522
00:36:42,360 --> 00:36:48,440
method right.

523
00:36:48,440 --> 00:36:50,600
And all of you will fail because I

524
00:36:57,320 --> 00:36:59,760
yes, I will help you pass.

525
00:36:59,760 --> 00:37:04,000
So now what I can do,

526
00:37:04,000 --> 00:37:08,160
I can restore the city

527
00:37:09,960 --> 00:37:13,720
and I can see I create the next

528
00:37:18,560 --> 00:37:20,320
and we can put a live condition now.

529
00:37:20,320 --> 00:37:21,960
So if

530
00:37:22,520 --> 00:37:25,280
so guys do you I

531
00:37:25,560 --> 00:37:28,200
remember the method from the string class

532
00:37:29,280 --> 00:37:33,840
that can help us
if they're going to help us check if a

533
00:37:33,960 --> 00:37:37,960
a string is from a specif specific

534
00:37:37,960 --> 00:37:42,680
character or not.

535
00:37:42,680 --> 00:37:43,320
Yeah.

536
00:37:43,840 --> 00:37:46,000
This starts with method, right?

537
00:37:46,440 --> 00:37:48,840
So I just need to check if this city

538
00:37:49,560 --> 00:37:51,800
dark starts weird

539
00:37:54,640 --> 00:37:56,320
E right.

540
00:37:56,320 --> 00:38:00,720
And if this condition is met
then using which method

541
00:38:00,720 --> 00:38:11,640
I can remove this from this act.

542
00:38:11,640 --> 00:38:13,800
You remove method. Right?

543
00:38:13,800 --> 00:38:17,520
So I'd prefer not remove

544
00:38:20,360 --> 00:38:27,520
so checking

545
00:38:27,520 --> 00:38:31,200
if a string

546
00:38:36,240 --> 00:38:39,280
with a

547
00:38:39,280 --> 00:38:40,080
or not.

548
00:38:40,080 --> 00:38:48,720
Right.

549
00:38:48,720 --> 00:38:51,800
Removing it back

550
00:38:53,200 --> 00:38:55,520
safely from db

551
00:38:58,080 --> 00:38:59,720
from this act,

552
00:39:00,480 --> 00:39:06,360
turn it into uppercase.

553
00:39:06,360 --> 00:39:11,600
So in the requirement, if it was mentioned
only about to be uppercase dammit,

554
00:39:12,160 --> 00:39:15,640
you want to include the lowercase as well.

555
00:39:15,640 --> 00:39:16,240
You mean.

556
00:39:16,960 --> 00:39:20,680
So you see in real life applications
you should always cater

557
00:39:20,680 --> 00:39:28,760
for these conditions,
but the uppercase is fine.

558
00:39:28,760 --> 00:39:31,520
So you guys can see this

559
00:39:33,000 --> 00:39:35,800
two lowercase dot

560
00:39:37,400 --> 00:39:41,000
and then right,

561
00:39:41,000 --> 00:39:43,600
because it is a city
always in uppercase. Yep.

562
00:39:44,240 --> 00:39:48,120
So you guys can also do this
first, convert everything to lowercase

563
00:39:48,120 --> 00:39:56,440
and then check for the lowercase.

564
00:39:56,440 --> 00:39:59,120
So city, if, if you face any issues,

565
00:40:00,480 --> 00:40:08,280
you can always post in this post.

566
00:40:08,280 --> 00:40:15,600
So let me, let me do this.

567
00:40:15,720 --> 00:40:16,240
Okay.

568
00:40:16,240 --> 00:40:20,640
And, and let's just try to check
if the city is removed

569
00:40:24,120 --> 00:40:26,720
from the list on the set of Mark

570
00:40:26,720 --> 00:40:40,880
I did yesterday.

571
00:40:40,880 --> 00:40:44,320
So I still see that city in here. Guys,

572
00:40:45,680 --> 00:40:46,520
what is going on?

573
00:40:46,520 --> 00:40:49,400
Why I still see the city

574
00:40:59,160 --> 00:41:01,720
this out.

575
00:41:01,720 --> 00:41:09,880
Okay, You guys are north

576
00:41:09,960 --> 00:41:14,200
champs, right?

577
00:41:14,200 --> 00:41:16,880
So I first bring the list

578
00:41:17,280 --> 00:41:21,080
that has this city, then I remove it
and then I put into that.

579
00:41:21,080 --> 00:41:24,480
We can use

580
00:41:24,960 --> 00:41:26,200
all clear

581
00:41:37,920 --> 00:41:43,200
on. Let me check

582
00:41:43,200 --> 00:41:45,360
if we are missing something from the

583
00:42:05,400 --> 00:42:09,000
when you guys go through this slides,

584
00:42:09,000 --> 00:42:13,280
is there anything that is confusing you?

585
00:42:13,280 --> 00:42:24,680
The last task is very interesting.

586
00:42:24,680 --> 00:42:24,960
Okay.

587
00:42:24,960 --> 00:42:30,040
Next to solve the last task
as well, create

588
00:42:30,040 --> 00:42:35,040
a collection
that will hold objects of stolen type.

589
00:42:35,040 --> 00:42:48,840
So there.

590
00:42:48,840 --> 00:42:49,440
Okay.

591
00:42:49,440 --> 00:42:52,680
Because if you guys go to the slides
before the next class,

592
00:42:53,280 --> 00:42:56,760
you guys can ask any questions
or if maybe something is confusing,

593
00:42:56,760 --> 00:43:00,000
you create a set.

594
00:43:00,320 --> 00:43:02,640
So in here we have to create a collection

595
00:43:03,840 --> 00:43:05,600
that will hold

596
00:43:05,600 --> 00:43:08,760
objects off to the side, right?

597
00:43:09,200 --> 00:43:10,800
So that means

598
00:43:11,160 --> 00:43:14,640
I have to create a student class
for the stars

599
00:43:15,520 --> 00:43:18,280
and then create the objects of that class.

600
00:43:18,280 --> 00:43:23,240
And then for those objects in this act,

601
00:43:23,240 --> 00:43:27,200
in this set,
we do not care about the insertion order.

602
00:43:27,360 --> 00:43:28,280
All right?

603
00:43:28,280 --> 00:43:32,960
So I can use the hazard
or I can use any of this art, right?

604
00:43:34,080 --> 00:43:36,480
Each student object

605
00:43:36,480 --> 00:43:39,360
should have in name and the entirety

606
00:43:39,760 --> 00:43:43,080
display name of each student.

607
00:43:43,400 --> 00:43:43,880
Right.

608
00:43:44,000 --> 00:43:46,080
So there are two simple features

609
00:43:46,960 --> 00:43:49,160
inside the student

610
00:43:49,720 --> 00:43:56,760
name.

611
00:43:56,760 --> 00:44:06,680
I did it by constructor.

612
00:44:06,680 --> 00:44:11,960
Okay, so student name.

613
00:44:11,960 --> 00:44:13,920
And then

614
00:44:15,640 --> 00:44:16,440
Student

615
00:44:16,440 --> 00:44:23,480
I will be here to deconstruct

616
00:44:26,280 --> 00:44:29,800
and then I have to

617
00:44:30,000 --> 00:44:32,040
display the name. So.

618
00:44:32,040 --> 00:44:34,920
So I created some kind of matter guys

619
00:44:36,240 --> 00:44:40,120
or not, we haven't done it with hash map.

620
00:44:40,120 --> 00:44:42,600
Do you mean
you have already learned the maps

621
00:44:45,960 --> 00:44:46,960
key and value?

622
00:44:46,960 --> 00:44:49,640
Okay, that's great. Today
we will discuss about that.

623
00:44:49,800 --> 00:44:52,040
Then we can use that

624
00:44:54,640 --> 00:44:56,480
map terms also.

625
00:44:56,480 --> 00:44:58,640
Okay. So

626
00:45:02,000 --> 00:45:03,480
lost the annex.

627
00:45:03,480 --> 00:45:04,720
That's that's great.

628
00:45:04,720 --> 00:45:10,800
So we need to print out the

629
00:45:13,560 --> 00:45:23,320
the name of the office student.

630
00:45:23,320 --> 00:45:26,880
So that's I'll name

631
00:45:27,960 --> 00:45:28,720
right

632
00:45:30,800 --> 00:45:33,040
who I have this student class

633
00:45:34,080 --> 00:45:34,720
for me

634
00:45:35,400 --> 00:45:36,920
and here

635
00:45:56,640 --> 00:45:58,200
I'd also

636
00:46:00,120 --> 00:46:01,440
know but the task

637
00:46:01,440 --> 00:46:06,120
the only is about the name of the student
right now.

638
00:46:06,120 --> 00:46:08,760
It's also fine
if you guys have been doing pretty

639
00:46:10,800 --> 00:46:13,960
so start

640
00:46:13,960 --> 00:46:16,560
what should be our today specifying

641
00:46:16,760 --> 00:46:18,840
in this environment of recognize

642
00:46:21,280 --> 00:46:24,720
what type of objects
I will be storing in this work.

643
00:46:25,840 --> 00:46:28,640
The student of so I type

644
00:46:28,960 --> 00:46:32,920
the name of that class,
I can call it student

645
00:46:34,360 --> 00:46:42,440
and then new hashtag
because I don't care about the order.

646
00:46:42,440 --> 00:46:43,920
So let's have the performance.

647
00:46:45,200 --> 00:46:46,720
I said, Always

648
00:46:46,720 --> 00:46:50,200
give me a good performance.

649
00:46:50,200 --> 00:46:51,240
Okay.

650
00:46:52,200 --> 00:46:54,560
So create a collection that will hold

651
00:46:54,560 --> 00:46:57,000
the objects of student type.

652
00:46:58,400 --> 00:47:00,240
We don't care about order.

653
00:47:00,240 --> 00:47:03,120
Each student
objects have name and student I.D.

654
00:47:03,640 --> 00:47:06,840
and then display the name

655
00:47:07,080 --> 00:47:08,160
of each student.

656
00:47:08,160 --> 00:47:08,840
Right.

657
00:47:09,120 --> 00:47:11,760
So I say

658
00:47:19,320 --> 00:47:20,880
I say

659
00:47:20,880 --> 00:47:24,240
student, don't add new

660
00:47:25,920 --> 00:47:27,680
student

661
00:47:32,120 --> 00:47:33,160
Alexi

662
00:47:34,000 --> 00:47:37,200
with an extra E here

663
00:47:38,120 --> 00:47:40,320
and all ready.

664
00:47:40,320 --> 00:47:49,880
One, two, three.

665
00:47:49,880 --> 00:47:52,520
Then we have

666
00:47:53,480 --> 00:47:54,720
all month

667
00:47:57,560 --> 00:48:00,480
and the idea will be

668
00:48:01,320 --> 00:48:01,680
poly.

669
00:48:01,680 --> 00:48:07,600
One, two, three.

670
00:48:07,600 --> 00:48:12,800
We need to.

671
00:48:12,800 --> 00:48:14,600
And then

672
00:48:15,320 --> 00:48:17,760
we have I show right

673
00:48:20,160 --> 00:48:22,320
for all manual.

674
00:48:22,720 --> 00:48:28,560
One, two, three.

675
00:48:28,560 --> 00:48:30,840
I can do

676
00:48:35,320 --> 00:48:35,560
that.

677
00:48:35,800 --> 00:48:37,640
Sorry about that.

678
00:48:37,640 --> 00:48:40,440
I hope you don't mind.

679
00:48:40,600 --> 00:48:45,880
Okay, let me put all auto on quickly

680
00:48:51,960 --> 00:48:54,120
then we have Sebastian.

681
00:48:54,120 --> 00:49:00,400
We mean one, two, three.

682
00:49:00,400 --> 00:49:01,440
Okay.

683
00:49:03,080 --> 00:49:05,440
Two. Yeah.

684
00:49:06,600 --> 00:49:07,320
And then

685
00:49:08,280 --> 00:49:13,560
I have
to get the objects, all the objects,

686
00:49:13,560 --> 00:49:17,080
and then I have to call the method
print name

687
00:49:17,800 --> 00:49:20,440
on that object as well.

688
00:49:20,440 --> 00:49:21,120
Right.

689
00:49:21,440 --> 00:49:23,160
Well, I forgot about GAO.

690
00:49:23,160 --> 00:49:25,800
One, two, three.

691
00:49:25,800 --> 00:49:30,600
So what I can do, I can see 44 eight.

692
00:49:30,960 --> 00:49:32,120
All right.

693
00:49:32,280 --> 00:49:36,000
And then student

694
00:49:37,200 --> 00:49:38,120
we're done

695
00:49:38,120 --> 00:49:42,120
with and then. Student

696
00:49:44,400 --> 00:49:45,480
And once you have

697
00:49:45,480 --> 00:49:47,920
the object, I can see the student dog

698
00:49:49,080 --> 00:49:50,960
came to me, right?

699
00:49:50,960 --> 00:49:53,160
Because I only have to access the data.

700
00:49:53,160 --> 00:49:55,840
So I can safely use the enhanced follow up

701
00:50:02,520 --> 00:50:02,880
to it.

702
00:50:02,880 --> 00:50:04,280
Ildiko

703
00:50:06,960 --> 00:50:07,800
Break Manager

704
00:50:07,800 --> 00:50:12,600
One, two, three.

705
00:50:12,600 --> 00:50:15,240
Okay, so and I see big names, objects for

706
00:50:17,160 --> 00:50:19,040
so this is how we can store

707
00:50:19,040 --> 00:50:22,080
any of the objects

708
00:50:22,080 --> 00:50:31,240
inside a list, any of the objects,
any questions that is from this

709
00:50:40,320 --> 00:50:41,520
in English.

710
00:50:41,520 --> 00:50:46,800
Alexey Ukraine of

711
00:50:52,680 --> 00:50:54,440
So are you guys ready to move

712
00:50:54,440 --> 00:51:06,920
to the next class?

713
00:51:06,920 --> 00:51:08,760
Maybe Lubo. Okay.

714
00:51:08,760 --> 00:51:14,160
On the request of Alexey, we have the Lubo

715
00:51:20,760 --> 00:51:22,920
and let me put myself as

716
00:51:28,440 --> 00:51:28,720
well.

717
00:51:28,720 --> 00:51:29,520
I want to

718
00:51:31,320 --> 00:51:32,560
thank you.

719
00:51:33,360 --> 00:51:38,640
Okay?

720
00:51:38,640 --> 00:51:47,280
Okay, then I understand that this task

721
00:51:47,280 --> 00:51:50,280
is better to do by hash map.

722
00:51:51,640 --> 00:51:56,240
Yes. These kind of data,
when you have to store the objects

723
00:51:56,240 --> 00:52:00,080
with their identities, it's
always better to use the hash maps.

724
00:52:00,360 --> 00:52:02,960
Actually, in collections framework,

725
00:52:03,720 --> 00:52:07,240
the most widely used

726
00:52:07,240 --> 00:52:09,320
data structure is the hash map

727
00:52:09,320 --> 00:52:11,400
because it's super, super fast.

728
00:52:12,400 --> 00:52:15,240
Are you guys having some kind of issues
with Zoom?

729
00:52:16,680 --> 00:52:20,520
Did you all get this connector

730
00:52:27,600 --> 00:52:29,040
next to the hash maps?

731
00:52:29,040 --> 00:52:32,040
Then?

732
00:52:32,040 --> 00:52:52,040
All right, guys.

733
00:52:52,040 --> 00:52:54,320
So next class

734
00:52:54,720 --> 00:52:56,360
is very easy again,

735
00:52:56,360 --> 00:52:59,400
I guess next
class is on maps and it's very easy

736
00:53:00,480 --> 00:53:03,040
because almost all of

737
00:53:03,840 --> 00:53:07,240
the methods that you guys have learned,

738
00:53:07,240 --> 00:53:10,160
they are kind of present in the map

739
00:53:10,480 --> 00:53:13,320
again, easy again.

740
00:53:13,320 --> 00:53:16,560
You guys don't like easy stuff

741
00:53:24,920 --> 00:53:26,440
you say about back.

742
00:53:26,440 --> 00:53:29,360
So now you guys know, you take
I always say that

743
00:53:29,360 --> 00:53:31,200
everything is easy

744
00:53:51,000 --> 00:53:54,360
and you end up are

745
00:54:04,800 --> 00:54:06,000
okay.

746
00:54:06,000 --> 00:54:09,160
No I think I'll do this class
it really easy you're easy to

747
00:54:10,480 --> 00:54:12,080
easy difficult

748
00:54:13,360 --> 00:54:15,640
the the last batch

749
00:54:15,640 --> 00:54:19,800
Let let me show you something.

750
00:54:19,800 --> 00:54:21,920
I don't know if that

751
00:54:22,080 --> 00:54:31,440
that message is still there.

752
00:54:31,440 --> 00:54:32,760
You see that student?

753
00:54:32,760 --> 00:54:36,080
Like we have trust issues
because of this guy.

754
00:54:36,600 --> 00:54:39,600
I forget an easy because a

755
00:54:39,600 --> 00:54:43,480
previous had I always used to say,

756
00:54:44,400 --> 00:54:46,880
I always used to say that, hey guys,

757
00:54:47,160 --> 00:54:49,480
this class is super, super easy.

758
00:54:49,880 --> 00:54:54,560
And now if any of this data,
this is that something is easy

759
00:54:55,360 --> 00:55:14,280
to believe it.

760
00:55:14,280 --> 00:55:15,240
All right. So

761
00:55:17,720 --> 00:55:20,840
a map is an object.

762
00:55:21,600 --> 00:55:25,440
So you guys want the examples first?

763
00:55:25,440 --> 00:55:45,880
Oh, my God.

764
00:55:45,880 --> 00:55:48,840
Like or like I like it.

765
00:55:49,120 --> 00:55:51,720
Let me let.

766
00:55:51,720 --> 00:55:53,760
So you guys want examples first?

767
00:55:53,800 --> 00:55:55,000
All the theory

768
00:56:01,080 --> 00:56:01,880
examples.

769
00:56:01,880 --> 00:56:19,320
Okay.

770
00:56:19,320 --> 00:56:32,480
And I want you,
everyone of you, to follow me.

771
00:56:32,480 --> 00:56:36,360
So what we have been doing up
till now is first

772
00:56:36,360 --> 00:56:39,240
we learned about the arrays

773
00:56:40,320 --> 00:56:42,960
and ADD is they have so many issues,

774
00:56:42,960 --> 00:56:46,200
they are not flexible.

775
00:56:46,200 --> 00:56:49,680
And we can only if we store

776
00:56:49,680 --> 00:56:55,360
the data inside an area, the only way to
if we need their data again,

777
00:56:55,960 --> 00:56:59,640
we only need only thing that we can do
is either

778
00:57:00,440 --> 00:57:02,520
iterate through that complete list,

779
00:57:03,480 --> 00:57:05,920
check all the elements one by one.

780
00:57:07,040 --> 00:57:12,000
And if that element is, we get
that element from the adding, right?

781
00:57:13,280 --> 00:57:14,680
So all the data

782
00:57:14,680 --> 00:57:18,120
was index based, I would say, okay

783
00:57:18,480 --> 00:57:22,000
then we learned about the ArrayList right
there.

784
00:57:22,000 --> 00:57:25,080
This solve
some of the issues of the arrays.

785
00:57:25,480 --> 00:57:27,680
They were flexible.

786
00:57:27,680 --> 00:57:30,920
They had methods to manipulate the data

787
00:57:31,920 --> 00:57:34,800
and they were have different
implementations.

788
00:57:35,400 --> 00:57:37,600
Great to retrieve the data.

789
00:57:37,640 --> 00:57:39,440
Sometimes to manipulate that.

790
00:57:39,440 --> 00:57:41,640
But still we have this issue that

791
00:57:43,320 --> 00:57:46,320
if still we are looking for something

792
00:57:46,960 --> 00:57:52,280
from the array list or from the array
internally, what Java is doing Java

793
00:57:52,280 --> 00:57:57,240
is picking each element from that list
because they are index based

794
00:57:58,040 --> 00:58:00,960
and comparing
if their thing is equal to or not.

795
00:58:00,960 --> 00:58:03,920
So for example, if I create an ADI,

796
00:58:05,280 --> 00:58:08,160
so can you guys tell me the syntax
for to create an ADI?

797
00:58:09,680 --> 00:58:26,640
Do you guys remember the syntax?

798
00:58:26,640 --> 00:58:29,520
So the for example in this Adi Right.

799
00:58:31,280 --> 00:58:32,560
What Java.

800
00:58:32,560 --> 00:58:36,000
What if we are doing everything
so what we have to do, let's

801
00:58:36,000 --> 00:58:38,280
see if we are looking for something.
We have to.

802
00:58:38,640 --> 00:58:40,800
I train through

803
00:58:42,320 --> 00:58:45,240
this array

804
00:58:48,240 --> 00:58:51,240
and check all the elements

805
00:59:00,680 --> 00:59:04,440
and then we can tell

806
00:59:05,280 --> 00:59:08,160
if that element is present inside

807
00:59:10,000 --> 00:59:11,880
that array or not.

808
00:59:11,880 --> 00:59:15,880
So yes, in the added list
we have that method contains,

809
00:59:16,920 --> 00:59:21,360
but internally that contains
method is again doing the same thing.

810
00:59:21,360 --> 00:59:26,680
So for example, if an element is inside
the list, I pick all the elements.

811
00:59:26,680 --> 00:59:29,400
I go through all the elements one by one.

812
00:59:29,400 --> 00:59:36,880
If that element is present,
then I can check that out.

813
00:59:36,920 --> 00:59:40,520
Otherwise, I will not be

814
00:59:41,960 --> 00:59:43,440
getting that element.

815
00:59:43,440 --> 00:59:44,360
Then what?

816
00:59:44,360 --> 00:59:47,280
Then we learned about the

817
00:59:47,280 --> 00:59:49,200
array list. Right?

818
00:59:49,200 --> 00:59:50,200
So ArrayList.

819
00:59:50,200 --> 00:59:52,960
This solved some of the issues of

820
01:00:31,360 --> 01:00:32,120
there was a

821
01:00:32,120 --> 01:00:35,960
melding method here inside this ArrayList

822
01:00:37,520 --> 01:00:38,520
to do the same thing.

823
01:00:38,520 --> 01:00:42,520
So for example, add a list or contains

824
01:00:42,520 --> 01:00:44,640
and then I specify

825
01:00:46,440 --> 01:00:55,000
in there, say maybe 70.

826
01:00:55,000 --> 01:00:59,280
So I get it from
because 70 is present in here.

827
01:00:59,280 --> 01:01:04,200
But if I show you the internal
implementation of this contains.

828
01:01:04,200 --> 01:01:08,760
So I have
I clicked on that method index off

829
01:01:10,000 --> 01:01:12,040
and then you guys will see

830
01:01:12,040 --> 01:01:14,600
that internally, the Java guys,

831
01:01:15,360 --> 01:01:17,760
they are also using a loop.

832
01:01:17,760 --> 01:01:20,800
They are
I printing through all the elements

833
01:01:20,800 --> 01:01:24,160
one by one
that I present inside of that list.

834
01:01:24,360 --> 01:01:28,480
And if that element is found,
then the return as the value.

835
01:01:28,480 --> 01:01:33,600
So can you guys tell me if I have a list
that has 1 million entries

836
01:01:33,920 --> 01:01:38,520
and the number that I am looking for it
present at the last index,

837
01:01:38,520 --> 01:01:42,320
how many iterations I have to do before
I can find

838
01:01:42,320 --> 01:01:51,000
that element?

839
01:01:51,000 --> 01:01:52,520
1 million, right?

840
01:01:52,520 --> 01:01:56,120
If that element is present
in maybe somewhere in between,

841
01:01:56,360 --> 01:01:59,040
I maybe have to go through 500 key
elements.

842
01:01:59,040 --> 01:02:01,120
Right. So what do you guys think?

843
01:02:01,120 --> 01:02:09,240
Is it a good way
to start something in the computer? No.

844
01:02:10,160 --> 01:02:13,360
So to solve this very big issue,

845
01:02:14,000 --> 01:02:18,520
Java guys introduced the maps.

846
01:02:19,560 --> 01:02:22,800
Now in eddies, or at

847
01:02:22,920 --> 01:02:29,160
least what happens is that all the data
in the case of Arrays,

848
01:02:30,640 --> 01:02:33,560
all the ArrayList, all the data is stored

849
01:02:34,440 --> 01:02:40,560
internally inside adding.

850
01:02:40,560 --> 01:02:42,360
So we pick the first element.

851
01:02:42,360 --> 01:02:46,320
And so again,
so these are index zero one, two,

852
01:02:47,800 --> 01:02:50,720
three, four, five, six.

853
01:02:51,000 --> 01:02:53,520
So what we do, we

854
01:02:55,000 --> 01:02:57,080
explore some elements in here.

855
01:02:57,080 --> 01:03:07,400
In here, and then we search through

856
01:03:07,400 --> 01:03:13,560
all the elements, starting from first one
by here, here, here and here.

857
01:03:13,560 --> 01:03:16,800
So in the computer science

858
01:03:16,800 --> 01:03:19,800
department there, there has been a tons

859
01:03:19,800 --> 01:03:22,880
and tons of research on how to design

860
01:03:23,400 --> 01:03:26,400
efficient algorithms that can help us

861
01:03:27,000 --> 01:03:31,560
store, manipulate and search to do that.

862
01:03:31,800 --> 01:03:32,680
Right.

863
01:03:32,720 --> 01:03:36,240
So Imagine you are using the Facebook,
Facebook, have you

864
01:03:36,560 --> 01:03:39,040
billions of users, right?

865
01:03:39,040 --> 01:03:41,960
If you are logging into your account,

866
01:03:42,560 --> 01:03:46,040
you enter your username and password
and think if you

867
01:03:46,040 --> 01:03:49,240
if Facebook has to compare

868
01:03:49,240 --> 01:03:53,040
all those 7 billion entries

869
01:03:53,440 --> 01:03:57,080
and once all of those are compared,
then if Facebook like takes,

870
01:03:57,520 --> 01:04:00,120
it will take days for the Facebook

871
01:04:00,560 --> 01:04:04,240
to find if you are a valid user or not.

872
01:04:04,240 --> 01:04:04,960
Right.

873
01:04:05,160 --> 01:04:07,320
So in those cases,

874
01:04:07,680 --> 01:04:09,840
we cannot use these data structure.

875
01:04:10,640 --> 01:04:14,080
It is clear that is the big drawback
of these data structures

876
01:04:15,160 --> 01:04:15,880
or is

877
01:04:15,880 --> 01:04:18,440
anyone is confused If I have to do
searching,

878
01:04:19,080 --> 01:04:22,200
is it clear why this ad is released

879
01:04:22,320 --> 01:04:41,920
and link list are bad data structures?

880
01:04:41,920 --> 01:04:47,680
Because in the worst case
I might have to go through all the entries

881
01:04:48,360 --> 01:04:51,120
before I can find my diatribe.

882
01:04:52,080 --> 01:04:55,800
In the worst case. Yes.

883
01:04:56,440 --> 01:04:58,360
To search. Right.

884
01:04:59,040 --> 01:05:01,920
So for the big data,

885
01:05:01,920 --> 01:05:04,920
like, for example, Facebook, Amazon
or any other big company,

886
01:05:06,280 --> 01:05:08,440
it's devastating.

887
01:05:08,960 --> 01:05:11,880
So in the case of list as well.

888
01:05:11,880 --> 01:05:25,320
So they are efficient
in manipulating their data.

889
01:05:25,320 --> 01:05:28,200
But again,
if some element is present in here

890
01:05:28,200 --> 01:05:33,200
and that is the element
that I am looking for,

891
01:05:33,200 --> 01:05:37,000
then I have to first check first
check the content of this

892
01:05:38,400 --> 01:05:40,320
class. I am searching for that.

893
01:05:40,320 --> 01:05:44,080
If it is matched, then I do.

894
01:05:44,600 --> 01:05:46,960
Then I say I have found the list.

895
01:05:46,960 --> 01:05:50,880
Otherwise I go check the next,
I go check the next next.

896
01:05:50,880 --> 01:05:54,600
And I keep on looking for the data.

897
01:05:54,600 --> 01:05:57,120
So what? Computer science This.

898
01:05:57,520 --> 01:06:00,000
They created a special data structure

899
01:06:00,480 --> 01:06:04,080
that the data structure
is very, very special

900
01:06:05,880 --> 01:06:06,680
I think this

901
01:06:06,680 --> 01:06:12,600
this guy should be given a Nobel Prize.

902
01:06:12,600 --> 01:06:17,280
So this data structure is is doing it.

903
01:06:17,280 --> 01:06:20,400
He uses a special mathematical term, a

904
01:06:20,400 --> 01:06:24,400
special duty,
the special maths behind this function.

905
01:06:24,400 --> 01:06:25,960
It is called

906
01:06:27,240 --> 01:06:29,400
the hash function.

907
01:06:29,400 --> 01:06:33,000
All the cryptocurrencies,
they are based on these hash functions.

908
01:06:33,480 --> 01:06:37,480
If we do not have these hash functions,

909
01:06:37,920 --> 01:06:40,880
no cryptocurrency would have ever existed.

910
01:06:40,880 --> 01:06:43,360
They are all based on this hash
hash function.

911
01:06:43,680 --> 01:06:45,840
What is the beauty of this hash functions?

912
01:06:46,400 --> 01:06:51,600
Let's say
I want to start under from this list.

913
01:06:52,440 --> 01:06:54,680
I will enter this hundred

914
01:06:55,920 --> 01:06:57,720
to this function

915
01:06:57,720 --> 01:07:01,320
and as the output it will,
it will return me

916
01:07:01,400 --> 01:07:04,560
to the exact direct

917
01:07:04,560 --> 01:07:09,840
index of that and data We are back
there to is present.

918
01:07:09,840 --> 01:07:13,800
So it does some kind of magic
which you guys don't need to worry about.

919
01:07:14,640 --> 01:07:18,640
So I get I put in that line here
that I am looking for

920
01:07:18,640 --> 01:07:22,960
and it directly gives me
the index of data from that computer.

921
01:07:24,080 --> 01:07:24,640
So if

922
01:07:24,640 --> 01:07:27,760
I am looking for 100, it will say
that is good. Yes.

923
01:07:28,200 --> 01:07:30,880
Without searching guys, without searching

924
01:07:31,200 --> 01:07:35,080
by just looking at the data,
it will say that it's good.

925
01:07:35,080 --> 01:07:39,880
Yes, this data is present
and it is present at index number three.

926
01:07:39,880 --> 01:07:41,360
How beautiful. Right.

927
01:07:41,360 --> 01:07:45,000
So it will directly
it will tell me the index in here,

928
01:07:46,200 --> 01:07:48,160
the index of this element.

929
01:07:48,160 --> 01:07:53,120
If I want to search for, let's say 200,
this is not present in here.

930
01:07:53,200 --> 01:07:55,560
So again,
I will input this blue 100 in here.

931
01:07:55,560 --> 01:08:00,840
I will input to the data and it will
tell me that this data is not present.

932
01:08:00,840 --> 01:08:03,760
It will return me minus one.

933
01:08:03,840 --> 01:08:06,120
So these are hash functions.

934
01:08:06,560 --> 01:08:09,280
We give them a key.

935
01:08:09,280 --> 01:08:13,680
Key in our case is this data
and they tell us the exact memory

936
01:08:13,680 --> 01:08:16,200
location inside our computer.

937
01:08:16,760 --> 01:08:17,240
We are there.

938
01:08:17,240 --> 01:08:20,880
Data is present. So you're searching.

939
01:08:21,840 --> 01:08:23,600
So there is a special terminology.

940
01:08:23,600 --> 01:08:28,560
We call them the in in this case
we call that we have to go through

941
01:08:28,560 --> 01:08:32,760
and elements in the worst case
before we can find are elements

942
01:08:34,040 --> 01:08:36,280
like an inventory check.

943
01:08:37,800 --> 01:08:41,200
So using these data

944
01:08:41,240 --> 01:08:45,440
and using this hash functions,
they develop the maps.

945
01:08:47,040 --> 01:08:48,560
There is one more beautiful

946
01:08:48,560 --> 01:08:51,320
about the maps in our real life place.

947
01:08:52,080 --> 01:08:53,160
Do we have

948
01:08:53,160 --> 01:08:58,200
always told me that based on the indexes
or do we use some real life information?

949
01:08:58,200 --> 01:09:01,040
For example, let's say

950
01:09:01,040 --> 01:09:06,240
I all
my data is stored somewhere in a computer.

951
01:09:06,240 --> 01:09:08,880
I only tell them about the SSN number

952
01:09:09,440 --> 01:09:12,160
and they can get them right.

953
01:09:12,160 --> 01:09:15,600
So what happens is that in real life,
the entities

954
01:09:15,600 --> 01:09:18,720
they are based on not indexes,

955
01:09:18,960 --> 01:09:23,600
but they are based on some numbers
which have special meanings, right?

956
01:09:24,120 --> 01:09:27,440
So for example, relatively beautiful that.

957
01:09:27,440 --> 01:09:32,600
If I create a data structure
that instead of storing the data

958
01:09:32,600 --> 01:09:38,040
based on index index zero index one,
it stores the data based on SSN number.

959
01:09:39,240 --> 01:09:41,400
So maps can do that as well.

960
01:09:42,040 --> 01:09:44,440
There are no indexes in MAP.

961
01:09:44,640 --> 01:09:48,000
Rather, we create our own indexes.

962
01:09:48,440 --> 01:09:50,960
We can use any type of data.

963
01:09:51,000 --> 01:09:54,600
We can associate any type of key
with our data.

964
01:09:55,080 --> 01:09:57,600
We just provide that key to the map

965
01:09:57,720 --> 01:10:02,040
and it returns us that data
so we have real life.

966
01:10:02,320 --> 01:10:07,840
We can use real life data
to create our own indexes.

967
01:10:07,840 --> 01:10:14,360
So for example,

968
01:10:14,360 --> 01:10:18,520
so for example, if I go in here

969
01:10:19,480 --> 01:10:23,240
instead of always,
always storing your data

970
01:10:23,240 --> 01:10:28,080
starting from index 0123,
I can create my custom indexes.

971
01:10:28,080 --> 01:10:30,600
For example,
this is how we create a map, by the way.

972
01:10:30,600 --> 01:10:32,640
So we say map

973
01:10:34,320 --> 01:10:36,440
then Diamond operator, same as before.

974
01:10:36,920 --> 01:10:40,800
And instead of one vector type
we specify two

975
01:10:40,960 --> 01:10:45,840
because indexes they are
they work on two data types.

976
01:10:45,840 --> 01:10:49,800
So let's say I specify integer and then

977
01:10:51,000 --> 01:10:51,920
spin.

978
01:10:52,400 --> 01:10:53,080
Right?

979
01:10:53,880 --> 01:10:56,000
And I see

980
01:10:58,080 --> 01:11:00,960
student info

981
01:11:02,760 --> 01:11:05,520
is equal to new

982
01:11:06,320 --> 01:11:11,840
hash map. Yes,

983
01:11:13,360 --> 01:11:15,760
I will share the data.

984
01:11:16,120 --> 01:11:18,880
So instead of

985
01:11:20,080 --> 01:11:21,840
Alexa a new example.

986
01:11:21,840 --> 01:11:24,720
You want me to do this in a new file?

987
01:11:24,720 --> 01:11:30,080
You mean?

988
01:11:30,080 --> 01:11:35,600
Okay, so just let me write to three lines
and then the next example

989
01:11:35,920 --> 01:11:38,240
because it is related
to these things in here.

990
01:11:38,720 --> 01:11:44,280
And that's why I'm doing it in here.

991
01:11:44,280 --> 01:11:48,320
So instead of using always those indexes

992
01:11:48,320 --> 01:11:52,120
that start from zero 1 to 3,
what I can do, I can see.

993
01:11:52,840 --> 01:11:56,640
So this book method,
I used to put some data inside of the map.

994
01:11:56,640 --> 01:12:01,840
I can see, let's say
maybe I want to start my index from ten.

995
01:12:01,840 --> 01:12:06,840
Okay, I can do that.

996
01:12:08,600 --> 01:12:10,360
Maybe the next index.

997
01:12:10,360 --> 01:12:12,120
I don't want it to be 11.

998
01:12:13,400 --> 01:12:15,560
I want it to be, let's say 100.

999
01:12:15,920 --> 01:12:16,320
Okay.

1000
01:12:16,320 --> 01:12:23,440
I can also do that.

1001
01:12:23,440 --> 01:12:25,120
And now

1002
01:12:25,400 --> 01:12:28,200
so these indexes, they can be anything.

1003
01:12:28,400 --> 01:12:29,360
What I can do?

1004
01:12:29,360 --> 01:12:33,120
For example,
I can store your SSN numbers as indexes.

1005
01:12:33,600 --> 01:12:37,680
So for example, let's assume
this would be SSN number of Alexey.

1006
01:12:37,680 --> 01:12:38,280
Right?

1007
01:12:38,440 --> 01:12:41,240
This is the SSN number of Jimmy.

1008
01:12:41,840 --> 01:12:44,840
I don't need to do that.

1009
01:12:44,840 --> 01:12:49,920
That restriction that the index is will be
0123 is starting from 0123

1010
01:12:50,240 --> 01:12:54,520
and keep on going
is as the number of elements in that list.

1011
01:12:55,280 --> 01:12:58,800
I can put anything as the index inside
a map

1012
01:12:59,080 --> 01:13:03,080
and I can put the data
at that specific index.

1013
01:13:03,680 --> 01:13:06,320
And simply by

1014
01:13:06,320 --> 01:13:09,480
writing this student in for dark,

1015
01:13:09,880 --> 01:13:12,240
yet I specify the

1016
01:13:13,400 --> 01:13:14,760
index

1017
01:13:15,760 --> 01:13:26,840
and I get back my data.

1018
01:13:26,840 --> 01:13:29,520
So I get my bet, I get back my data

1019
01:13:30,800 --> 01:13:34,800
so I can now create custom indexes.

1020
01:13:35,240 --> 01:13:39,360
These indexes, they can be alphabet
or they can be numbered,

1021
01:13:39,360 --> 01:13:44,880
they can be integers, booleans, numbers,
whatever I want.

1022
01:13:44,880 --> 01:13:49,080
And now I can associate
real life information in here.

1023
01:13:49,440 --> 01:13:52,920
I can store maybe your names as the index.

1024
01:13:52,920 --> 01:13:56,640
I can use your names as the index
and as a data.

1025
01:13:56,640 --> 01:13:59,320
Maybe I am storing
how much money you are earning.

1026
01:13:59,320 --> 01:14:01,320
Where do you live? All that.

1027
01:14:01,320 --> 01:14:04,080
So now the final flexibility

1028
01:14:04,080 --> 01:14:07,280
that we are getting
with the help of this maps fast.

1029
01:14:07,280 --> 01:14:09,960
They are super, super fast.

1030
01:14:09,960 --> 01:14:12,160
Second custom indexes.

1031
01:14:12,160 --> 01:14:17,280
I can put anything as the index and I can
search there that I using that index.

1032
01:14:17,440 --> 01:14:20,160
So hash
map is just a collection of p value.

1033
01:14:20,520 --> 01:14:24,360
Yes. Sebastian does, it make sense. Why?

1034
01:14:24,600 --> 01:14:29,360
Why hash maps are back and then add is
ArrayList linked list and all that

1035
01:14:31,680 --> 01:14:39,720
I can will do three int and and string.

1036
01:14:39,720 --> 01:14:41,760
Yes yes we can do that.

1037
01:14:42,400 --> 01:14:47,520
So if I put printed in me
will I get four, four, five as printout.

1038
01:14:47,840 --> 01:14:51,360
So no, this is a one way relation.

1039
01:14:51,360 --> 01:14:55,280
We cannot, we, we can not pass the values.

1040
01:14:55,280 --> 01:14:58,320
So these are called values,
they are called keys.

1041
01:14:59,520 --> 01:15:03,360
So if you want to get the associated key.

1042
01:15:03,800 --> 01:15:06,640
We have to use some other methods
that I will teach you later.

1043
01:15:06,880 --> 01:15:14,400
But right now
it is not possible by default.

1044
01:15:14,400 --> 01:15:16,480
So give me that contains value.

1045
01:15:16,800 --> 01:15:21,720
It will only tell you if that value
is present, not inside of that map.

1046
01:15:23,160 --> 01:15:23,640
Okay.

1047
01:15:23,640 --> 01:15:26,760
It will not give you the key
for that value.

1048
01:15:28,200 --> 01:15:31,200
Yes, we can do something
by strings and all that.

1049
01:15:31,480 --> 01:15:34,280
So now I will show you 8

1050
01:15:34,280 --> 01:15:37,440
to 10 examples and then things will become
super, super clear.

1051
01:15:37,440 --> 01:15:40,960
At this point, I just want you
to understand the benefits of maps.

1052
01:15:40,960 --> 01:15:43,080
Why should you learn maps?

1053
01:15:43,080 --> 01:15:52,840
If that is clear,
then we can move forward.

1054
01:15:52,840 --> 01:15:56,840
Okay, so now let's move some examples in

1055
01:15:56,840 --> 01:16:00,680
then will be super, super clear.

1056
01:16:00,680 --> 01:16:01,520
Okay.

1057
01:16:01,560 --> 01:16:07,240
So let me put some comments for you.

1058
01:16:07,240 --> 01:16:07,920
Things

1059
01:16:09,920 --> 01:16:12,720
are stored based

1060
01:16:13,360 --> 01:16:15,800
on the indexes.

1061
01:16:17,320 --> 01:16:27,320
Easy peasy, hard.

1062
01:16:27,320 --> 01:16:28,960
Those are all right.

1063
01:16:28,960 --> 01:16:33,040
I have to go through

1064
01:16:33,840 --> 01:16:36,840
all the elements

1065
01:16:37,440 --> 01:16:38,520
in the

1066
01:16:39,160 --> 01:16:40,880
workspace

1067
01:17:02,840 --> 01:17:04,640
internally

1068
01:17:08,680 --> 01:17:10,360
contains

1069
01:17:10,560 --> 01:17:12,760
method is

1070
01:17:15,080 --> 01:17:18,680
knowing the same

1071
01:17:19,600 --> 01:17:23,280
and going through all the elements

1072
01:17:25,920 --> 01:17:35,280
who served.

1073
01:17:35,280 --> 01:17:39,240
I think if you to go to sleep
at least your brain efficiency

1074
01:17:39,280 --> 01:17:42,480
increases by 30%

1075
01:17:46,400 --> 01:17:50,240
more too easy peasy.

1076
01:17:50,240 --> 01:17:51,240
Okay,

1077
01:17:55,800 --> 01:17:58,920
so now let's say

1078
01:18:00,040 --> 01:18:01,480
physical

1079
01:18:03,480 --> 01:18:05,600
then it's
why Why are you guys don't type it?

1080
01:18:06,080 --> 01:19:05,520
It will be better for you, believe me.

1081
01:19:05,520 --> 01:19:07,320
Me, I just get connected again.

1082
01:19:07,320 --> 01:19:09,120
It was something wrong with my computer.

1083
01:19:09,120 --> 01:19:13,440
Don't send it
and people will start typing it.

1084
01:19:13,440 --> 01:19:39,680
Okay.

1085
01:19:39,680 --> 01:19:42,800
It's like switch case.

1086
01:19:42,800 --> 01:19:44,640
Yep. Yep.

1087
01:19:44,640 --> 01:19:48,200
Switch also uses the hash function

1088
01:19:48,200 --> 01:19:51,920
behind the scenes.

1089
01:19:51,920 --> 01:19:53,440
Yes, you are right.

1090
01:19:53,440 --> 01:19:57,960
That's why you should always use switch
cases instead of if health conditions.

1091
01:19:57,960 --> 01:19:58,880
If it is possible

1092
01:20:03,800 --> 01:20:05,720
actually switch and a hash maps.

1093
01:20:05,720 --> 01:20:13,000
They are both developed
using hash functions.

1094
01:20:13,000 --> 01:20:15,720
This.

1095
01:20:15,720 --> 01:20:20,640
So by the way, we use the boot method
to insert the data in the map

1096
01:20:21,480 --> 01:20:24,440
and we use the get method to get back

1097
01:20:24,480 --> 01:20:41,280
the data.

1098
01:20:41,280 --> 01:20:42,720
Let me know once you guys are done

1099
01:20:42,720 --> 01:20:50,120
typing this code, these demos,
they belong to 28.

1100
01:20:50,120 --> 01:21:22,480
Yes, they belong to 28.

1101
01:21:22,480 --> 01:21:24,680
We will take a break.

1102
01:21:24,680 --> 01:21:26,520
Let's have a break.

1103
01:21:26,520 --> 01:21:27,600
Okay.

1104
01:21:27,600 --> 01:21:33,000
So guys, during the break,
I want all of you to

1105
01:21:34,600 --> 01:21:37,360
either have Excel on your computer

1106
01:21:38,400 --> 01:21:42,880
or have that loops on your computer

1107
01:21:42,880 --> 01:21:45,760
or have that open office.

1108
01:21:45,960 --> 01:21:56,840
So let me show you.

1109
01:21:56,840 --> 01:22:06,640
They are all free alternatives,
all Microsoft Excel,

1110
01:22:06,640 --> 01:22:09,840
so you guys can install any of these.

1111
01:22:09,840 --> 01:22:14,280
I have only two monitors.

1112
01:22:14,280 --> 01:22:16,160
I think there's enough.

1113
01:22:16,160 --> 01:22:20,160
Alex, You want more?

1114
01:22:20,160 --> 01:22:22,800
Nothing is free. In the US. It's the same

1115
01:22:25,080 --> 01:22:26,480
everywhere.

1116
01:22:27,000 --> 01:22:29,320
But that open source software,

1117
01:22:29,440 --> 01:22:32,800
they are actually free.

1118
01:22:32,800 --> 01:22:35,320
I am a student, so actually free.

1119
01:22:35,320 --> 01:22:36,720
I want more monitors.

1120
01:22:36,720 --> 01:22:39,040
Can you send us an extra monitors?

1121
01:22:39,040 --> 01:22:41,160
I think they are super, super cheap.

1122
01:22:41,160 --> 01:22:44,320
I think you can get a monitor
for 50 to $60, right?

1123
01:22:45,560 --> 01:22:46,320
A good one.

1124
01:22:46,320 --> 01:22:49,440
Maybe around hundred or 120,

1125
01:22:49,440 --> 01:22:51,720
or you can import it from Ukraine.

1126
01:22:51,720 --> 01:22:56,320
Alexi much for the monitor.

1127
01:22:56,320 --> 01:22:59,520
$3. Good.

1128
01:22:59,600 --> 01:23:02,040
At least your best friend

1129
01:23:05,920 --> 01:23:07,720
who calls.

1130
01:23:07,720 --> 01:23:10,000
Yes, you can extend the monitor far too
cause

1131
01:23:11,360 --> 01:23:15,080
I think WPC is better.

1132
01:23:15,080 --> 01:23:21,480
You know, $15, $20

1133
01:23:27,320 --> 01:23:36,000
and do you guys remember how to know?

1134
01:23:36,000 --> 01:23:37,520
Google search will not work.

1135
01:23:37,520 --> 01:23:40,920
They can work, but it's hard.

1136
01:23:40,920 --> 01:23:42,400
They use different API.

1137
01:23:42,400 --> 01:23:46,320
We will not be learning those APIs

1138
01:23:46,640 --> 01:23:48,720
in Google sheets we can use,

1139
01:23:48,720 --> 01:24:05,160
but we will not be using in here.

1140
01:24:05,160 --> 01:24:12,800
Also,
everyone plays with all this website.

1141
01:24:12,800 --> 01:24:17,480
Let me put in the course announcements
that Excel is also good.

1142
01:24:18,120 --> 01:24:29,680
Actually is actually better.

1143
01:24:29,680 --> 01:24:33,840
So now I am going to show you something
very important. Guys

1144
01:24:45,280 --> 01:24:47,720
with you.

1145
01:24:47,720 --> 01:24:48,400
Don't get run.

1146
01:24:48,400 --> 01:24:52,360
See if the guy went out and today

1147
01:24:52,680 --> 01:24:57,480
he just leaves right?

1148
01:24:57,480 --> 01:25:01,080
So every one of you
have you guys open this this website

1149
01:25:11,000 --> 01:25:12,080
you have shared in the course

1150
01:25:12,080 --> 01:25:36,400
announcements channel.

1151
01:25:36,400 --> 01:25:58,360
You just give me one woman game. Yes.

1152
01:25:58,400 --> 01:26:01,440
You guys need to install the Apache
for you as well

1153
01:26:01,520 --> 01:26:05,920
because we will be rating the selfies
with the help of this library.

1154
01:26:07,560 --> 01:26:09,000
Can we just start and maybe

1155
01:26:09,000 --> 01:26:12,240
a project and enter dependencies

1156
01:26:12,240 --> 01:26:15,600
we will be teaching you maven
I think in the next week or so,

1157
01:26:16,560 --> 01:26:19,680
but if you know how to use Maven here,
you can,

1158
01:26:19,680 --> 01:26:22,080
you can do the minimum as

1159
01:26:26,200 --> 01:26:27,960
a you guys have to install it.

1160
01:26:27,960 --> 01:26:31,280
During the break
I will show you how to that

1161
01:26:31,720 --> 01:26:35,520
and then you have to resolve your issues

1162
01:26:36,560 --> 01:26:37,160
during the

1163
01:26:37,160 --> 01:26:41,320
break
so that we don't waste a lot of time.

1164
01:26:41,320 --> 01:26:44,400
So is there anyone who has still

1165
01:26:44,400 --> 01:27:10,840
not opened this website?

1166
01:27:10,840 --> 01:27:13,080
So I want you to pay attention.

1167
01:27:13,080 --> 01:27:16,960
If you guys don't pay attention,
you will be a lot of issues.

1168
01:27:16,960 --> 01:27:25,680
So there are multiple links in here.

1169
01:27:25,680 --> 01:27:29,160
You guys, please don't open
any of these links.

1170
01:27:29,240 --> 01:27:36,320
You see this binder in distribution?

1171
01:27:36,320 --> 01:27:38,480
This is for Mac users

1172
01:27:41,160 --> 01:27:43,560
and this one is for

1173
01:27:48,360 --> 01:27:51,760
Windows users.

1174
01:27:51,760 --> 01:27:54,600
Okay, so please don't make this mistake.

1175
01:27:54,600 --> 01:27:56,760
Let me repeat again.

1176
01:27:56,840 --> 01:28:01,320
You guys don't need to click on
any of these links in here.

1177
01:28:01,320 --> 01:28:04,320
You have to open binary distribution.

1178
01:28:04,320 --> 01:28:06,720
There are two links
in the binary distribution world.

1179
01:28:06,720 --> 01:28:11,400
Say one cheers and the underdog B, D, Z.

1180
01:28:11,400 --> 01:28:12,920
It is for Mac users

1181
01:28:14,000 --> 01:28:17,640
and the other one is their Phase Z IP.

1182
01:28:18,320 --> 01:28:20,640
It is for Windows

1183
01:28:20,640 --> 01:28:24,480
user.

1184
01:28:24,480 --> 01:28:30,080
Everyone has understood
which link you have to click.

1185
01:28:30,080 --> 01:28:30,400
Okay.

1186
01:28:32,240 --> 01:28:33,960
Yes, I know someone will still do it

1187
01:28:33,960 --> 01:28:41,440
wrong. Yes.

1188
01:28:41,640 --> 01:28:45,840
Binary distribution
and then zip for windows

1189
01:28:46,720 --> 01:28:56,080
Dart, d z for Mac users.

1190
01:28:56,080 --> 01:28:58,200
So now because I am using Windows,

1191
01:28:59,400 --> 01:29:02,640
I will click on this zip.

1192
01:29:03,120 --> 01:29:05,400
Please do not click on the zip.

1193
01:29:05,640 --> 01:29:11,440
If you are using a mac.

1194
01:29:11,440 --> 01:29:12,160
Okay.

1195
01:29:12,400 --> 01:29:16,880
I am clicking on this name
because I have windows.

1196
01:29:16,880 --> 01:29:31,080
Please do not click on this
if you are using a mac,

1197
01:29:31,080 --> 01:29:36,800
let's switch to second gear.

1198
01:29:36,800 --> 01:29:37,480
Okay.

1199
01:29:37,480 --> 01:29:40,320
And now on this website

1200
01:29:41,440 --> 01:29:45,960
you can have you can download from this,
this link or any of the links.

1201
01:29:45,960 --> 01:29:49,920
It does not matter which one works for
you, you can use any of that.

1202
01:29:50,040 --> 01:29:50,400
Okay.

1203
01:29:51,360 --> 01:29:53,520
So I will be using this suggested link

1204
01:29:53,520 --> 01:30:00,840
for download these files.

1205
01:30:00,840 --> 01:30:01,560
Yes, Nicolai.

1206
01:30:01,560 --> 01:30:09,960
That's why I am downloading
the downloading the zip file.

1207
01:30:09,960 --> 01:30:13,080
So are you guys

1208
01:30:13,440 --> 01:30:17,440
bear on this, am using this link

1209
01:30:20,200 --> 01:30:27,000
in because I have windows. Yes.

1210
01:30:27,120 --> 01:30:30,000
So once depending upon which software

1211
01:30:30,000 --> 01:30:34,360
you have to download,

1212
01:30:34,360 --> 01:30:39,640
it will be downloaded on your computer.

1213
01:30:39,640 --> 01:30:41,720
So this for Mac is then is please.

1214
01:30:41,760 --> 01:30:55,120
If you have Mac then then if you it.

1215
01:30:55,120 --> 01:30:59,680
What about static
we use we can call a static method

1216
01:31:00,120 --> 01:31:03,000
inside the instance method and

1217
01:31:04,600 --> 01:31:06,120
we can also deliver

1218
01:31:06,120 --> 01:31:12,440
right.

1219
01:31:12,440 --> 01:31:13,520
Okay.

1220
01:31:13,600 --> 01:31:15,840
You see.

1221
01:31:15,840 --> 01:31:17,880
So all right
you can click any of these links

1222
01:31:20,720 --> 01:31:33,440
and great Alex.

1223
01:31:33,440 --> 01:31:36,080
Which one do I have to click to download.

1224
01:31:36,080 --> 01:31:37,880
Now you are.

1225
01:31:37,880 --> 01:31:40,040
I have not. You are already downloaded it

1226
01:31:42,000 --> 01:31:42,760
said if

1227
01:31:47,760 --> 01:31:49,800
so now

1228
01:31:54,520 --> 01:31:58,080
you guys will see something like this.

1229
01:31:58,080 --> 01:32:00,960
So depending upon

1230
01:32:01,320 --> 01:32:04,560
which software you are using,
I am using ADR.

1231
01:32:05,520 --> 01:32:08,040
So that's why I see the icon like this

1232
01:32:09,800 --> 01:32:10,640
looks.

1233
01:32:10,680 --> 01:32:14,280
But if you have zip or
if you have anything else, you might see

1234
01:32:14,280 --> 01:32:15,720
a different icon.

1235
01:32:15,720 --> 01:32:19,520
Do you guys know how to extract
something on your computer.

1236
01:32:19,520 --> 01:32:26,760
It is in the zip format.

1237
01:32:26,760 --> 01:32:33,640
Okay, so now I want all of you
to extract these files.

1238
01:32:33,640 --> 01:32:34,320
Okay.

1239
01:32:35,040 --> 01:32:37,000
So I see, I see right

1240
01:32:37,000 --> 01:32:40,920
click ironically, then what I can do,

1241
01:32:40,920 --> 01:32:44,200
I can open it with binary
or I can click on this extract.

1242
01:32:44,200 --> 01:32:49,320
All you guys might not have this option
extract all depending upon which Windows

1243
01:32:49,600 --> 01:32:54,840
version you are using
or if you are using Mac, then

1244
01:32:55,480 --> 01:33:00,600
if I if this is the same
like for the last days,

1245
01:33:00,600 --> 01:33:04,480
how do I you on Mac Illini
you don't know how to extract files on Mac

1246
01:33:04,880 --> 01:33:08,560
against someone gadolinium
or if you are a mac user,

1247
01:33:08,560 --> 01:33:10,680
how to extract some data on Mac

1248
01:33:13,960 --> 01:33:15,400
I what

1249
01:33:17,800 --> 01:33:19,800
it's already extracted for me

1250
01:33:20,640 --> 01:33:24,320
so I say extract all

1251
01:33:26,640 --> 01:33:31,040
so you can install wind
audio from internet.

1252
01:33:31,040 --> 01:33:33,720
If you don't see that option

1253
01:33:36,480 --> 01:33:37,840
all the windows user,

1254
01:33:37,840 --> 01:33:40,080
they can just double click on that file

1255
01:33:41,000 --> 01:33:42,360
like this

1256
01:33:46,160 --> 01:33:47,400
and they will be able to see

1257
01:33:47,400 --> 01:33:50,960
some kind of pop up that shows all of you.

1258
01:33:51,240 --> 01:33:55,840
So if you guys are double clicking on this
and if you see the expecting

1259
01:33:55,840 --> 01:33:59,080
the expected data
that is not actually expected,

1260
01:34:00,360 --> 01:34:03,840
it is just showing you that that data.

1261
01:34:04,240 --> 01:34:13,560
So I explicitly want you to extract that.

1262
01:34:13,560 --> 01:34:14,800
Where do I go?

1263
01:34:14,800 --> 01:34:16,960
Go, go to New York, New York, Illinois.

1264
01:34:18,120 --> 01:34:24,960
There you will see a very big bridge.

1265
01:34:24,960 --> 01:34:27,840
I am in New York,
then go to So somewhere else

1266
01:34:30,360 --> 01:34:30,920
you go

1267
01:34:39,280 --> 01:34:39,640
give me

1268
01:34:39,640 --> 01:34:42,520
and anyone
else can can you please go about

1269
01:34:43,760 --> 01:34:46,520
that extraction?

1270
01:34:46,520 --> 01:34:49,160
So I say extract

1271
01:34:51,360 --> 01:34:53,520
and then I click on

1272
01:34:54,000 --> 01:34:58,640
Extract button.

1273
01:34:58,640 --> 01:35:03,840
And now, depending upon your computer,

1274
01:35:03,840 --> 01:35:07,360
it should it should create a separate
folder like this.

1275
01:35:07,720 --> 01:35:10,480
I want every one of you
to have this separate folder.

1276
01:35:11,280 --> 01:35:13,440
And if you go inside that folder

1277
01:35:14,440 --> 01:35:16,440
you will see Boy Bash

1278
01:35:16,480 --> 01:35:18,600
being or something like that.

1279
01:35:19,720 --> 01:35:21,720
And then you should see

1280
01:35:21,720 --> 01:35:44,560
this stack.

1281
01:35:44,560 --> 01:35:48,320
All questions about Mac users.

1282
01:35:48,320 --> 01:35:50,920
So next time you guys remember how to

1283
01:35:52,840 --> 01:35:54,840
import

1284
01:35:55,040 --> 01:35:57,760
the jobs in your intelligence, right?

1285
01:35:57,760 --> 01:36:02,400
Same as as you did for the selenium.

1286
01:36:02,400 --> 01:36:04,240
So now

1287
01:36:04,320 --> 01:36:09,120
go to file.

1288
01:36:09,120 --> 01:36:14,080
Now go to file.

1289
01:36:14,080 --> 01:36:17,040
Is everyone done
downloading and extracting the data

1290
01:36:29,800 --> 01:36:32,120
is the same as you download movies

1291
01:36:35,000 --> 01:36:40,160
could not see the extract option.

1292
01:36:40,160 --> 01:36:40,760
Okay.

1293
01:36:40,760 --> 01:36:41,120
You know,

1294
01:36:41,120 --> 01:36:44,320
you can just copy the all of this data
and you can place it

1295
01:36:44,320 --> 01:36:46,280
anywhere in a different folder.

1296
01:36:46,280 --> 01:36:49,040
If you guys are seeing this.

1297
01:36:49,040 --> 01:36:53,800
Okay, we just need that data.

1298
01:36:53,800 --> 01:36:56,840
Create a new folder
somewhere else on your computer and don't

1299
01:36:56,840 --> 01:37:00,600
forget about the part
and just copy and paste this that out

1300
01:37:00,600 --> 01:37:10,960
to that folder.

1301
01:37:10,960 --> 01:37:12,480
Can if. Are you done Illini?

1302
01:37:13,640 --> 01:37:15,680
Are you guys done extracting the data

1303
01:37:34,400 --> 01:37:35,760
to download

1304
01:37:35,760 --> 01:37:37,800
that is taking time want the extraction

1305
01:37:42,960 --> 01:37:44,040
extraction.

1306
01:37:44,040 --> 01:37:49,040
Are you using a Pentium three computer
you'll your guitar There is no zip on Mac.

1307
01:37:49,040 --> 01:37:52,320
Yes it will not be on Mac
it will be a dot b

1308
01:37:52,320 --> 01:37:53,880
d that

1309
01:37:55,400 --> 01:38:00,520
I am having Mac and it is hard.

1310
01:38:00,520 --> 01:38:05,040
Sorry, I don't know Illini
How did you do it for the Selenium

1311
01:38:05,040 --> 01:38:08,680
is the same, same
as you did for the Selenium

1312
01:38:15,120 --> 01:38:16,600
guy. It's the same

1313
01:38:16,600 --> 01:38:18,960
as you download the jobs for Selenium.

1314
01:38:20,000 --> 01:38:22,840
Silverstein and mine not showing this

1315
01:38:24,000 --> 01:38:25,880
on YouTube.

1316
01:38:25,880 --> 01:38:29,560
So you guys have forgot about how to do

1317
01:38:29,560 --> 01:38:35,600
that.

1318
01:38:35,600 --> 01:38:42,120
You are not showing on YouTube.

1319
01:38:42,120 --> 01:38:48,400
Okay.

1320
01:38:48,400 --> 01:38:49,320
Okay.

1321
01:38:49,320 --> 01:38:53,160
Princes Illini,
I will buy a mac next time,

1322
01:38:53,880 --> 01:38:56,280
maybe before I show you something.

1323
01:38:56,280 --> 01:39:00,240
Same idea of downloading.

1324
01:39:00,240 --> 01:39:05,160
I am ready to extend my laptop to Mac.

1325
01:39:05,160 --> 01:39:06,880
That is what I am getting.

1326
01:39:06,880 --> 01:39:12,440
Okay, let me check.

1327
01:39:12,440 --> 01:39:13,920
Yes, this is what we want.

1328
01:39:15,120 --> 01:39:15,800
Go to

1329
01:39:15,800 --> 01:39:21,200
that for been 5.1 folder.

1330
01:39:21,200 --> 01:39:38,000
Yes, it is correct.

1331
01:39:38,000 --> 01:39:38,920
Yes, it is.

1332
01:39:38,920 --> 01:39:42,560
So it's actually a good idea.

1333
01:39:42,560 --> 01:39:46,800
Just double click on that folder.

1334
01:39:46,800 --> 01:39:50,040
Maybe something wrong with the mon again

1335
01:40:24,720 --> 01:40:26,280
and we move next.

1336
01:40:26,280 --> 01:40:32,200
No, Alex,

1337
01:40:32,200 --> 01:40:36,000
you want to leave your prince
or princess behind?

1338
01:40:37,720 --> 01:40:38,240
Finally.

1339
01:40:38,240 --> 01:40:41,680
Great idea.

1340
01:40:41,680 --> 01:40:45,240
And there are still prince and princess,

1341
01:40:46,800 --> 01:40:49,480
which we take which we need to with us.

1342
01:40:49,760 --> 01:40:50,560
We have a break.

1343
01:40:50,560 --> 01:40:57,200
People can ask at this time,
is there anyone who is still extracting

1344
01:40:57,200 --> 01:40:59,200
or maybe downloading data to

1345
01:41:08,880 --> 01:41:11,440
now 70 people wait for five people?

1346
01:41:11,440 --> 01:41:12,720
Yep. Yep.

1347
01:41:12,720 --> 01:41:15,320
Alex There is also not good.

1348
01:41:15,640 --> 01:41:19,560
So now everyone
get back to your intelligent

1349
01:41:25,640 --> 01:41:28,760
Leave no man behind.

1350
01:41:28,920 --> 01:41:30,360
So now click on

1351
01:41:30,360 --> 01:41:36,600
file, click on file

1352
01:41:37,920 --> 01:41:39,520
and then

1353
01:41:39,800 --> 01:41:48,960
project structure.

1354
01:41:48,960 --> 01:41:50,320
Alexia, you have noticed this

1355
01:41:50,320 --> 01:41:53,040
When you are talking to girls,
your English is perfect

1356
01:41:53,200 --> 01:41:55,920
when you have to ask our questions
that you would just type.

1357
01:41:55,920 --> 01:41:58,080
I don't even understand it properly.

1358
01:41:58,240 --> 01:42:02,720
What is this behavior?

1359
01:42:02,720 --> 01:42:13,440
I mean, so now click on file

1360
01:42:14,520 --> 01:42:18,000
and then project structure

1361
01:42:18,000 --> 01:42:25,920
Magic.

1362
01:42:25,920 --> 01:42:29,800
You have to be very clear with girls
and the girls, they are never clear

1363
01:42:29,800 --> 01:42:30,640
with you

1364
01:42:35,600 --> 01:42:36,440
so far.

1365
01:42:36,440 --> 01:42:47,320
And then project structure,

1366
01:42:47,320 --> 01:42:51,680
there was a famous dialog
in an Indian movie in which Katrina says,

1367
01:42:52,320 --> 01:42:54,840
Maja,
How to get to hold it on your husband.

1368
01:42:54,840 --> 01:42:59,520
Nadella So her boyfriend was about
to leave, and then she says, So she is.

1369
01:42:59,520 --> 01:43:01,680
He was in a different world.

1370
01:43:01,680 --> 01:43:05,120
So then the boyfriend looks at her
and then say, What do you want?

1371
01:43:05,440 --> 01:43:07,080
Then she says, Met you.

1372
01:43:07,080 --> 01:43:08,120
Get them to go get them.

1373
01:43:08,120 --> 01:43:17,600
You have to not.

1374
01:43:17,600 --> 01:43:19,680
Okay, so

1375
01:43:20,000 --> 01:43:22,040
this is the window.

1376
01:43:22,600 --> 01:43:24,160
Okay?

1377
01:43:24,160 --> 01:43:25,800
We are we will be importing.

1378
01:43:25,800 --> 01:43:28,080
So now you have to go to libraries

1379
01:43:31,160 --> 01:43:33,120
and starting modules.

1380
01:43:33,120 --> 01:43:38,160
Now you have to go to modules.

1381
01:43:38,160 --> 01:43:39,920
Can we get subtitles?

1382
01:43:39,920 --> 01:43:44,720
So there was there was a girl
who was talking to her boyfriend,

1383
01:43:45,160 --> 01:43:48,280
and her boyfriend
was about to leave, to somewhere.

1384
01:43:49,080 --> 01:43:54,080
So. And then, then, then she is
he acted like she is not happy with that.

1385
01:43:54,080 --> 01:43:55,880
So it's not a boyfriend. Ask that.

1386
01:43:55,880 --> 01:43:57,840
What is wrong with you?

1387
01:43:57,840 --> 01:43:59,480
Then she says, I want

1388
01:44:01,200 --> 01:44:02,680
you and you guys help me.

1389
01:44:02,680 --> 01:44:04,920
How can I say that?

1390
01:44:05,080 --> 01:44:09,040
Please go ahead.

1391
01:44:09,040 --> 01:44:10,640
I want you to walk back.

1392
01:44:10,640 --> 01:44:14,880
You don't go from here.

1393
01:44:14,880 --> 01:44:16,800
So modules

1394
01:44:18,320 --> 01:44:19,880
and now.

1395
01:44:19,920 --> 01:44:23,600
Because in the previous class
or so we created be

1396
01:44:24,000 --> 01:44:28,120
asked Dick Batch ten and batch 11.

1397
01:44:28,120 --> 01:44:30,360
In my country we can have four wives

1398
01:44:36,600 --> 01:44:40,560
but it's just kind of a thing
that no one can

1399
01:44:40,880 --> 01:44:46,160
no one will ever dare to do that.

1400
01:44:46,160 --> 01:44:49,440
Only one is more than enough.

1401
01:44:49,480 --> 01:44:53,400
So modules
and then you guys have to select as that

1402
01:44:53,520 --> 01:44:59,200
batch 11 from here.

1403
01:44:59,200 --> 01:45:02,560
Everybody is polymorphism.

1404
01:45:02,640 --> 01:45:04,040
So do you guys see this batch

1405
01:45:04,040 --> 01:45:08,240
11 option in here?

1406
01:45:08,240 --> 01:45:15,120
Lena It's not about money.

1407
01:45:15,120 --> 01:45:17,280
So now

1408
01:45:18,440 --> 01:45:20,880
you will see this and option.

1409
01:45:20,880 --> 01:45:23,200
So depending upon which word

1410
01:45:23,200 --> 01:45:26,040
you are using,
you might see this option somewhere here

1411
01:45:26,040 --> 01:45:28,160
or you might see some option
if you get it.

1412
01:45:28,160 --> 01:45:30,280
But look for that plus sign.

1413
01:45:30,280 --> 01:45:34,040
I see this plus sign.

1414
01:45:34,040 --> 01:45:35,680
My product has different name.

1415
01:45:35,680 --> 01:45:36,200
Is it okay?

1416
01:45:36,200 --> 01:45:40,600
Yes, it is okay.

1417
01:45:40,600 --> 01:45:41,280
Okay.

1418
01:45:41,680 --> 01:45:48,000
So once I click on that plus sign. Yes.

1419
01:45:48,000 --> 01:45:51,960
And if you are right,
then you have to click on jobs

1420
01:45:51,960 --> 01:45:55,920
or directories. Yes.

1421
01:45:55,920 --> 01:46:01,840
Same as selenium.

1422
01:46:01,840 --> 01:46:08,280
Do you guys see this, dogs or directories?

1423
01:46:08,280 --> 01:46:09,000
Okay.

1424
01:46:09,240 --> 01:46:14,520
Once I did contact,
now I have to specify that folder.

1425
01:46:14,520 --> 01:46:20,600
The part of that folder
in which I have extracted my files.

1426
01:46:20,600 --> 01:46:24,400
Usually those files that we downloaded
and the next selected.

1427
01:46:24,840 --> 01:46:26,880
Now I need to go to that file.

1428
01:46:26,880 --> 01:46:31,560
So in my case
I downloaded it inside downloads

1429
01:46:32,960 --> 01:46:35,720
and then

1430
01:46:35,760 --> 01:46:38,920
it was in compressed

1431
01:46:40,280 --> 01:46:46,040
and then Apache Point here.

1432
01:46:46,040 --> 01:46:48,600
Do I need this just for Java? Whoops.

1433
01:46:48,720 --> 01:46:52,040
No. You guys will be needing this
for your frameworks as well

1434
01:46:52,320 --> 01:46:57,040
and for your whole testing. It.

1435
01:46:57,040 --> 01:47:04,240
Do you guys see your dogs?

1436
01:47:04,240 --> 01:47:05,800
Okay, now

1437
01:47:06,320 --> 01:47:09,600
expand this lib folder.

1438
01:47:09,600 --> 01:47:11,040
Expand this little folder.

1439
01:47:11,040 --> 01:47:14,440
You guys will see more dos

1440
01:47:16,560 --> 01:47:17,720
and expand this

1441
01:47:17,720 --> 01:47:22,520
or x and mail folder as well.

1442
01:47:22,520 --> 01:47:24,960
It does not show java or directory.

1443
01:47:24,960 --> 01:47:29,240
That means all by
you have not extracted the files.

1444
01:47:29,240 --> 01:47:32,560
Or if or maybe you have
you have downloaded

1445
01:47:32,560 --> 01:47:36,760
the wrong jobs.

1446
01:47:36,760 --> 01:47:37,840
It does not

1447
01:47:39,200 --> 01:47:41,880
only new modules or import module.

1448
01:47:41,880 --> 01:47:45,960
Make sure you are on this modules option
and then you are not clicking on this.

1449
01:47:45,960 --> 01:47:50,000
Plus, although you are clicking on this
plus sign you have to click on.

1450
01:47:50,000 --> 01:47:53,160
There are two plus signs on this,
this window.

1451
01:47:53,520 --> 01:47:55,520
So let me go back.

1452
01:47:55,520 --> 01:48:00,600
Make sure, guys, if you click on here,
you will see new module on that option

1453
01:48:00,600 --> 01:48:02,760
that you are seeing,
although you are to click on this

1454
01:48:02,760 --> 01:48:07,960
plus sign this one, not this one.

1455
01:48:09,600 --> 01:48:13,040
Yeah.

1456
01:48:13,040 --> 01:48:15,080
And then make sure you are in here.

1457
01:48:15,240 --> 01:48:16,160
In here it is.

1458
01:48:16,160 --> 01:48:21,080
And dependencies.

1459
01:48:21,080 --> 01:48:24,480
No Bill, is it. Okay.

1460
01:48:24,480 --> 01:48:27,000
You see that option on
you see that option.

1461
01:48:27,240 --> 01:48:29,120
Okay.

1462
01:48:29,120 --> 01:48:36,800
Is there anyone else
who is facing any issues.

1463
01:48:36,800 --> 01:48:37,560
Yeah.

1464
01:48:38,520 --> 01:48:43,280
So click on this

1465
01:48:43,280 --> 01:48:47,040
plus sign.

1466
01:48:47,040 --> 01:48:50,760
It is not inside the or excel

1467
01:48:50,840 --> 01:48:51,960
and will

1468
01:48:55,720 --> 01:48:58,280
so jobs or directories.

1469
01:49:00,160 --> 01:49:02,760
Yes. I also have in a separate folder

1470
01:49:02,760 --> 01:49:08,600
everyone has have it in a separate folder.

1471
01:49:08,600 --> 01:49:10,680
So once I click on that plus

1472
01:49:12,600 --> 01:49:17,160
now I need to go to the folder here.

1473
01:49:17,200 --> 01:49:19,880
I have downloaded

1474
01:49:20,920 --> 01:49:24,280
my jars and extracted those jobs.

1475
01:49:24,320 --> 01:49:26,240
So in my case

1476
01:49:27,120 --> 01:49:30,840
I don't have anything in that lame

1477
01:49:34,800 --> 01:49:35,720
because you have not

1478
01:49:35,720 --> 01:49:39,360
extracting that file after

1479
01:49:40,320 --> 01:49:43,200
you have not expected in that file,

1480
01:49:43,200 --> 01:49:46,560
you are still opening the zip file
from your intelligent.

1481
01:49:46,800 --> 01:49:48,320
You have to go to the folder.

1482
01:49:48,320 --> 01:49:50,760
So this is what you are doing.

1483
01:49:50,760 --> 01:49:53,960
You are opening this

1484
01:49:54,120 --> 01:49:57,400
for door to be and that's
why you see nothing inside this live.

1485
01:49:57,960 --> 01:50:02,120
You have to
the folder that contains the expected

1486
01:50:02,120 --> 01:50:08,640
that this one not the zip the one.

1487
01:50:08,640 --> 01:50:14,640
That's why I told you
to explicitly extract from their data.

1488
01:50:14,640 --> 01:50:25,160
But I show both Laban and ExxonMobil.

1489
01:50:25,160 --> 01:50:26,160
Melanie open

1490
01:50:27,280 --> 01:50:30,600
why you have done the okay button.

1491
01:50:30,920 --> 01:50:37,360
I didn't tell you to do that.

1492
01:50:37,360 --> 01:50:43,240
Now remove those file
and repeal the steps in.

1493
01:50:43,240 --> 01:50:46,440
So I go inside of the folder

1494
01:50:48,400 --> 01:50:50,200
where I extract, delete

1495
01:50:50,200 --> 01:50:54,800
those jobs, okay?

1496
01:50:55,440 --> 01:51:00,920
And then I will see all of my jobs.

1497
01:51:00,920 --> 01:51:01,320
Yeah.

1498
01:51:01,680 --> 01:51:04,440
The lib folder, it contains the jar,

1499
01:51:04,440 --> 01:51:06,640
the X and my folder and all of that.

1500
01:51:07,960 --> 01:51:12,560
So now I want you to hold down your shift
button or control button

1501
01:51:12,560 --> 01:51:15,960
and then use the downwards arrow
or use your mouse

1502
01:51:16,760 --> 01:51:19,680
to select all of these jars

1503
01:51:20,520 --> 01:51:21,720
like this

1504
01:51:35,880 --> 01:51:39,240
to go back to the step. Yes.

1505
01:51:39,640 --> 01:51:42,480
And then expand the folders

1506
01:51:42,480 --> 01:51:45,120
and select all the jars. This

1507
01:51:46,680 --> 01:51:48,440
I don't know how I could do that in Mac.

1508
01:51:48,440 --> 01:51:50,360
Or maybe the view can be different,

1509
01:51:51,360 --> 01:51:52,520
but you have to select

1510
01:51:52,520 --> 01:51:55,960
all the docs like this down your control

1511
01:51:56,680 --> 01:52:01,720
button or shift,

1512
01:52:01,720 --> 01:52:05,440
but it is hidden now.

1513
01:52:05,440 --> 01:52:08,440
Well, I did it and done

1514
01:52:10,560 --> 01:52:12,920
full command in Mac.

1515
01:52:12,920 --> 01:52:14,360
Can I click on okay it? Yes.

1516
01:52:14,360 --> 01:52:16,520
Those will see the exact same view.

1517
01:52:16,520 --> 01:52:20,040
And if you guys able to select
all the jars you can click on.

1518
01:52:20,040 --> 01:52:23,040
Okay. No, no.

1519
01:52:23,040 --> 01:52:31,960
All of the other jobs as well
which are outside of these folders.

1520
01:52:31,960 --> 01:52:33,880
So let me show you the last sample.

1521
01:52:33,880 --> 01:52:44,760
So those who are bored with the last step,

1522
01:52:44,760 --> 01:52:49,320
I am selecting the right file.

1523
01:52:49,320 --> 01:53:16,920
So let me create a new file.

1524
01:53:16,920 --> 01:53:18,600
So those

1525
01:53:18,960 --> 01:53:21,560
who write Discord in

1526
01:53:21,560 --> 01:53:25,240
any of the job file
and if you don't get any errors,

1527
01:53:25,440 --> 01:53:28,600
that means you have done it correctly
and you can be on break. Now.

1528
01:53:29,440 --> 01:53:32,520
I have copied and pasted
because in the life questions

1529
01:53:32,960 --> 01:53:37,520
those who die of discord
and this import is there for you.

1530
01:53:37,680 --> 01:53:39,160
It means you are good

1531
01:53:43,000 --> 01:53:44,560
you. When we come back,

1532
01:53:44,560 --> 01:53:48,360
once all the issues are resolved,
maybe after three days

1533
01:53:48,480 --> 01:53:55,600
alone.

1534
01:53:55,600 --> 01:53:56,520
Well,

1535
01:53:57,960 --> 01:54:03,280
we'll see you on Saturday.

1536
01:54:03,280 --> 01:54:08,280
How many of you are getting any issues?

1537
01:54:08,280 --> 01:54:08,720
Click on.

1538
01:54:08,720 --> 01:54:10,080
Okay, Maryam, click on.

1539
01:54:10,080 --> 01:54:13,360
Okay. Yes.

1540
01:54:13,360 --> 01:54:16,480
And and maybe by quality.

1541
01:54:16,600 --> 01:54:18,880
Yes. After selecting the jobs press.

1542
01:54:18,880 --> 01:54:20,280
Okay. Yes.

1543
01:54:20,880 --> 01:54:24,360
So the mirror disconnect from the class

1544
01:54:25,120 --> 01:54:29,720
and initiate a new meeting and then share
that meetings link in the export

1545
01:54:29,720 --> 01:54:33,440
channel and everyone who is using Mac,
you guys can follow that link.

1546
01:54:33,680 --> 01:54:37,200
So the meeting
will guide you about the Mac.

1547
01:54:37,200 --> 01:54:39,320
So this is how you guys can be sure

1548
01:54:39,320 --> 01:54:43,040
if you write this line of code

1549
01:54:43,200 --> 01:54:45,120
and if you don't get any errors,

1550
01:54:45,120 --> 01:54:48,600
if your code is compiling successfully,
that means you guys are

1551
01:54:48,600 --> 01:54:51,480
good. Yes.

1552
01:54:52,240 --> 01:54:54,480
Are the remaining ones as well.

1553
01:54:54,480 --> 01:54:57,320
That 4.5.1

1554
01:54:57,640 --> 01:55:01,360
like this.

1555
01:55:01,360 --> 01:55:03,480
Sebastian, you are good.

1556
01:55:03,480 --> 01:55:04,440
You can you can leave.

1557
01:55:05,760 --> 01:55:06,720
It tells me one

1558
01:55:06,720 --> 01:55:10,520
of those doors is an empty library.

1559
01:55:10,520 --> 01:55:13,560
Can you share this screenshot?

1560
01:55:13,560 --> 01:55:15,640
You are also bold

1561
01:55:16,960 --> 01:55:19,440
always gaps. Yes.

1562
01:55:20,480 --> 01:55:24,480
When Mac users

1563
01:55:24,480 --> 01:55:28,520
please join the meeting shared by a link
shared by a dummy press.

1564
01:55:28,520 --> 01:55:29,880
Okay. Yes. Marina Press.

1565
01:55:29,880 --> 01:55:35,040
Okay.

1566
01:55:35,040 --> 01:55:37,000
Nothing. You are also good.

1567
01:55:37,000 --> 01:55:40,920
You can leave.

1568
01:55:40,920 --> 01:55:44,600
Will we get the virus
if we selected to the whole folder?

1569
01:55:44,920 --> 01:55:48,960
No, there is no virus.

1570
01:55:48,960 --> 01:55:52,880
But some of your antivirus
is or other security softwares.

1571
01:55:52,880 --> 01:55:55,440
They might warn you about these doors

1572
01:55:56,040 --> 01:55:59,640
because they can contain actually viruses.

1573
01:55:59,640 --> 01:56:08,800
Should I click on as good?

1574
01:56:08,800 --> 01:56:10,480
Yes, click on. Okay.

1575
01:56:10,480 --> 01:56:16,600
Don't click on me.

1576
01:56:16,600 --> 01:56:19,080
Mine is also I am done. See you tomorrow.

1577
01:56:19,680 --> 01:56:22,200
What time should we come
in? In 20 minutes.

1578
01:56:22,200 --> 01:56:24,120
We do. I find the link for them again.

1579
01:56:24,120 --> 01:56:27,840
Elena is in the
let me hear it in the course and also

1580
01:56:27,840 --> 01:56:39,480
our standard. I

1581
01:56:41,080 --> 01:56:44,480
think
there will be a video on the internet

1582
01:56:44,640 --> 01:57:17,640
and the.

1583
01:57:17,640 --> 01:57:19,880
Here we go. Okay,
let me share this with you.

1584
01:57:20,360 --> 01:57:22,760
So those who are facing
you shoot a very short video.

1585
01:57:22,760 --> 01:57:23,760
3 minutes.

1586
01:57:23,760 --> 01:58:01,240
You guys can follow this video.

1587
01:58:01,240 --> 01:58:07,400
I, I think here also on

1588
01:58:07,400 --> 01:58:10,880
this is the main to be the dialog one

1589
01:58:12,160 --> 01:58:14,240
it's find the one you

1590
01:58:14,320 --> 01:58:16,480
you just need to make sure that

1591
01:58:18,320 --> 01:58:20,760
when you write this line
you don't get any errors

1592
01:58:22,320 --> 01:58:24,520
if you don't
if are not getting any other thoughts,

1593
01:58:24,560 --> 01:58:25,680
that's fine

1594
01:58:47,600 --> 01:58:48,160
with you.

1595
01:58:48,160 --> 01:59:07,560
You you are not importing all the dos,

1596
01:59:07,560 --> 01:59:10,040
but until 130, maybe now

1597
01:59:12,040 --> 01:59:29,960
30, 20.

1598
01:59:29,960 --> 01:59:33,440
Not worry, I am not going on break.

1599
01:59:33,720 --> 01:59:37,200
I will help you solve your issues.

1600
01:59:37,200 --> 01:59:39,840
50% of difference you guys can post here.

1601
01:59:39,960 --> 01:59:42,840
The remaining 50%
you guys can post in this sports channel

1602
01:59:44,160 --> 01:59:47,720
and you guys can also follow that video
from the course announcement.

1603
01:59:47,720 --> 01:59:48,360
Seven

1604
01:59:50,040 --> 01:59:52,240
Please share screenshot

1605
01:59:52,400 --> 02:00:00,960
if you are getting any errors.

1606
02:00:00,960 --> 02:00:04,320
Mac users please do on the link
in the course announcement

1607
02:00:05,520 --> 02:00:07,920
and then we will show you how to do that.

1608
02:00:08,960 --> 02:00:09,840
The others.

1609
02:00:09,840 --> 02:00:13,000
If you are facing any issues,
please share the screenshot here

1610
02:00:13,280 --> 02:00:28,880
or in the sports channel.

1611
02:00:28,880 --> 02:00:30,600
Yes. Access of workbook.

1612
02:00:30,600 --> 02:00:32,440
If you're tired this don't get any errors.

1613
02:00:32,440 --> 02:00:33,960
You are going to

1614
02:00:40,680 --> 02:00:43,360
hear highlighted in back

1615
02:00:43,360 --> 02:00:46,680
in. That means you have done
something wrong Olga.

1616
02:00:47,040 --> 02:00:49,760
That means what do we do in the course?

1617
02:00:49,760 --> 02:00:56,200
And also questions and check which steps
you are missing.

1618
02:00:56,200 --> 02:00:56,640
Thanks.

1619
02:00:56,640 --> 02:01:13,240
I got an order on perfect.

1620
02:01:13,240 --> 02:01:18,600
And you guys have all installed either
WP s openoffice or excel as well.

1621
02:01:18,600 --> 02:01:21,800
Right?

1622
02:01:21,800 --> 02:01:23,080
And great. Great.

1623
02:01:23,080 --> 02:01:31,440
Now you guys, you guys can be on
break for 2 to 10 minutes.

1624
02:01:31,440 --> 02:01:33,360
I simply shared a screenshot.

1625
02:01:33,360 --> 02:01:36,600
Also share the screenshot of your jars

1626
02:01:36,800 --> 02:01:54,560
of your structure.

1627
02:01:54,560 --> 02:01:56,160
I think everyone has left.

1628
02:01:56,160 --> 02:02:00,040
Is there anyone still or am I talking to a

1629
02:02:01,400 --> 02:02:03,840
just my computer screen

1630
02:02:09,000 --> 02:02:14,480
or I think the video.

1631
02:02:14,480 --> 02:02:15,360
Great.

1632
02:02:15,520 --> 02:02:17,240
You are good

1633
02:02:18,160 --> 02:02:19,600
to BBC is okay? Yes.

1634
02:02:19,600 --> 02:02:21,480
Why yellow lamp?

1635
02:02:21,480 --> 02:02:25,360
This one.

1636
02:02:25,360 --> 02:02:30,000
This yellow lamp is telling you something
about your piece of code.

1637
02:02:30,000 --> 02:02:34,240
Or like for example,
if you want to replace it with a block.

1638
02:02:34,280 --> 02:02:34,680
Right.

1639
02:02:34,680 --> 02:02:38,080
Those different type of

1640
02:02:38,760 --> 02:02:45,320
comments,

1641
02:02:45,320 --> 02:02:47,520
is there anyone who is facing any issues

1642
02:02:57,640 --> 02:02:58,720
in a and property?

1643
02:02:58,720 --> 02:03:05,120
The original chair shared the screenshot.

1644
02:03:05,120 --> 02:03:07,360
It's fine now you're going to ignore this.

1645
02:03:08,080 --> 02:03:10,760
I will teach you about this
in the next class.

1646
02:03:11,200 --> 02:03:12,880
Yes. You are good

1647
02:03:42,200 --> 02:03:43,360
or you are missing.

1648
02:03:43,360 --> 02:03:45,400
Does that means you are missing jobs

1649
02:03:48,640 --> 02:03:49,680
that Andre you are missing?

1650
02:03:49,680 --> 02:03:51,480
Just watch the video from the course

1651
02:03:51,480 --> 02:03:54,240
and all sports channel
and redo the whole process.

1652
02:03:55,200 --> 02:03:56,040
Not not.

1653
02:03:56,040 --> 02:03:57,480
You don't need to download again.

1654
02:03:57,480 --> 02:04:02,280
I think you have downloaded
the characters,

1655
02:04:02,280 --> 02:04:15,080
but it will be good
if you watch the it from the start.

1656
02:04:15,080 --> 02:04:15,480
Okay.

1657
02:04:15,480 --> 02:05:47,280
I will be back in 2 minutes.

1658
02:05:47,280 --> 02:05:49,560
Is there anyone who is still facing issues

1659
02:06:10,680 --> 02:06:11,240
then near

1660
02:06:11,240 --> 02:06:17,600
the mean time? It's

1661
02:06:56,840 --> 02:06:59,520
are we ready or are we

1662
02:07:05,880 --> 02:07:06,360
okay?

1663
02:07:06,360 --> 02:07:06,960
Time?

1664
02:07:07,160 --> 02:07:18,400
Is everyone back.

1665
02:07:18,400 --> 02:07:21,680
So it's good to include the
all the libraries.

1666
02:07:21,840 --> 02:07:24,600
Okay I think they will not hardly.

1667
02:07:25,520 --> 02:07:26,320
And more thing.

1668
02:07:26,320 --> 02:07:28,560
Guys, please don't deliver this folder.

1669
02:07:28,960 --> 02:07:32,280
If you delete this folder, integrity
will not be able

1670
02:07:32,280 --> 02:07:36,360
to find those jobs in the future
and you will again be issues.

1671
02:07:36,360 --> 02:07:39,360
So the folder
in which you have expressed in your jobs,

1672
02:07:39,920 --> 02:07:43,680
you should not delete that folder or place
those data

1673
02:07:43,680 --> 02:07:46,520
somewhere else
and re-import in your intelligence.

1674
02:07:46,720 --> 02:07:47,240
Okay.

1675
02:07:47,240 --> 02:07:49,760
Because I see a lot of students
accidentally

1676
02:07:50,760 --> 02:07:53,480
delete the files and

1677
02:07:53,480 --> 02:07:55,800
when they open their project software,
some time,

1678
02:07:56,560 --> 02:08:04,360
nothing works.

1679
02:08:04,360 --> 02:08:08,120
Okay, so we were discussing about ripping

1680
02:08:08,160 --> 02:08:11,200
maps right?

1681
02:08:11,200 --> 02:08:12,080
Some maps.

1682
02:08:12,080 --> 02:08:14,960
They allow us to store the data

1683
02:08:15,960 --> 02:08:19,800
in the form of ease and devalues.

1684
02:08:19,800 --> 02:08:23,280
So how? How can I create a map? I Right.

1685
02:08:23,480 --> 02:08:25,720
So as we have three types

1686
02:08:26,280 --> 02:08:29,480
for this class cache set set

1687
02:08:29,920 --> 02:08:34,400
and then link said
we also have these two types for the maps

1688
02:08:34,920 --> 02:08:38,600
ash map three map
and then link the hash map.

1689
02:08:38,600 --> 02:08:40,920
So same behavior remap.

1690
02:08:40,920 --> 02:08:44,480
It will start your data
in ascending order.

1691
02:08:45,240 --> 02:08:47,560
Hash map will not store that

1692
02:08:47,760 --> 02:08:51,280
in any specific order,
but it's the fastest one.

1693
02:08:52,440 --> 02:08:54,960
And then we have the

1694
02:08:54,960 --> 02:08:59,560
link, the hash map, which will store the,
which will keep your insertion order.

1695
02:08:59,560 --> 02:09:02,360
So all we created the map, we write

1696
02:09:04,680 --> 02:09:09,400
hash map right.

1697
02:09:09,400 --> 02:09:13,240
And then I specified the diamond operator

1698
02:09:13,920 --> 02:09:18,840
and previously we were specifying
only one data type, right?

1699
02:09:19,160 --> 02:09:23,960
If we had both store integers
we used, we have been floating.

1700
02:09:24,120 --> 02:09:27,200
We have been specifying integer
if things we've think.

1701
02:09:27,240 --> 02:09:29,680
But in here we need to that types

1702
02:09:30,720 --> 02:09:31,400
So faster

1703
02:09:31,400 --> 02:09:35,640
data type
is treated as a key, as a string.

1704
02:09:35,640 --> 02:09:38,280
So let's say for example, if as a key,

1705
02:09:38,720 --> 02:09:42,080
if as a key you want to store
maybe the strings.

1706
02:09:42,520 --> 02:09:42,920
Okay.

1707
02:09:43,320 --> 02:09:45,480
And then as the data,

1708
02:09:46,880 --> 02:09:49,800
I want to store

1709
02:09:49,800 --> 02:09:56,560
the integers, right.

1710
02:09:57,680 --> 02:09:59,920
So new and then hash,

1711
02:10:00,160 --> 02:10:04,320
because these are classes.

1712
02:10:04,320 --> 02:10:07,120
So we had the add method.

1713
02:10:08,840 --> 02:10:10,600
So this is not a part of collections

1714
02:10:10,600 --> 02:10:14,160
framework,
but it is widely used with collections.

1715
02:10:14,160 --> 02:10:17,440
So we kind of
sometimes you in the industry,

1716
02:10:17,440 --> 02:10:19,600
you guys will see these terminologies

1717
02:10:20,600 --> 02:10:23,640
interchanging, they will use this
terminology interchangeably,

1718
02:10:23,640 --> 02:10:27,840
but this is not a part of collection,
it's a separate hierarchy.

1719
02:10:28,680 --> 02:10:31,120
So that's why we don't have backed
ADD method.

1720
02:10:31,120 --> 02:10:33,240
We have this put method.

1721
02:10:33,240 --> 02:10:38,040
So what we can do, we can see fruit

1722
02:10:39,200 --> 02:10:42,640
dot port

1723
02:10:43,920 --> 02:10:46,840
and now I can put my data.

1724
02:10:46,840 --> 02:10:49,200
So let's say for example,

1725
02:10:50,080 --> 02:10:53,920
I put apple and then its price.

1726
02:10:54,520 --> 02:10:56,240
Yeah.

1727
02:10:56,240 --> 02:11:01,320
Then maybe I save fruit and or or

1728
02:11:03,480 --> 02:11:07,960
mango and then I say 15

1729
02:11:09,880 --> 02:11:12,960
and then fruit or put

1730
02:11:15,720 --> 02:11:17,280
orange

1731
02:11:17,560 --> 02:11:18,240
in there.

1732
02:11:20,320 --> 02:11:21,880
So can you guys tell me

1733
02:11:21,880 --> 02:11:26,760
which of these two data types
are being used as keys,

1734
02:11:27,360 --> 02:11:37,680
which of them is being used as key
and which one is being used as value.

1735
02:11:37,680 --> 02:11:43,520
So the first time type that we specify
is created as key.

1736
02:11:43,520 --> 02:11:46,080
So apple and mango orange,
they are keys here

1737
02:11:46,760 --> 02:11:49,480
and these are the values
against those keys.

1738
02:11:50,200 --> 02:11:54,560
So the keys they can be integer,
they can be a string boolean,

1739
02:11:54,560 --> 02:12:00,280
any data type, you can have any data type
as key and any data type as value.

1740
02:12:00,280 --> 02:12:02,440
There is no restriction.

1741
02:12:02,440 --> 02:12:02,880
Okay?

1742
02:12:02,880 --> 02:12:06,320
It is no restriction.

1743
02:12:06,320 --> 02:12:09,600
So fruit diet

1744
02:12:10,960 --> 02:12:14,200
or maybe you

1745
02:12:16,120 --> 02:12:16,760
I show

1746
02:12:16,760 --> 02:12:22,680
you are still having issues.

1747
02:12:22,680 --> 02:12:26,400
Google this out of status
log log for there could not be find.

1748
02:12:26,400 --> 02:12:29,680
It means that you are not importing

1749
02:12:29,680 --> 02:12:31,560
all the jobs

1750
02:12:34,320 --> 02:12:38,880
through the output.

1751
02:12:38,880 --> 02:12:40,440
Okay I want

1752
02:12:40,440 --> 02:12:44,760
if you are facing an issue with the jobs
leave that and focus on in here

1753
02:12:45,640 --> 02:12:48,520
where you will be needing those jobs
after the next week.

1754
02:12:48,560 --> 02:12:49,920
So you guys still have time.

1755
02:12:49,920 --> 02:12:54,600
Let's focus on the class.

1756
02:12:54,600 --> 02:12:55,800
Please don't.

1757
02:12:56,040 --> 02:13:15,680
You can pause,
but don't be distracted by that.

1758
02:13:15,680 --> 02:13:22,600
So I mean, this is how I insert the data
inside an map using.

1759
02:13:22,600 --> 02:13:50,720
The parameter.

1760
02:13:50,720 --> 02:13:54,120
I have a lot of input, so make sure.

1761
02:13:54,840 --> 02:13:57,120
Yes, map maps are not part of collection,

1762
02:13:57,120 --> 02:14:00,720
so make sure or month.

1763
02:14:00,720 --> 02:14:02,240
If you are specifying

1764
02:14:02,240 --> 02:14:06,360
a string on the first place,
you are putting a string in here.

1765
02:14:07,560 --> 02:14:08,120
If you are

1766
02:14:08,120 --> 02:14:11,840
specifying and the second as the value,
you are putting an integer.

1767
02:14:12,000 --> 02:14:15,880
If you try to fit it
or you try to insert it wrong data type,

1768
02:14:15,880 --> 02:14:18,000
you will be getting in that a

1769
02:14:23,200 --> 02:14:26,160
Yes, I put hash start instead of hash map.

1770
02:14:27,360 --> 02:14:30,040
What is equal to and total same. Yes.

1771
02:14:30,040 --> 02:14:30,840
Then is

1772
02:14:44,520 --> 02:14:47,640
now as we have

1773
02:14:47,640 --> 02:14:50,000
building methods to manipulate the data

1774
02:14:52,200 --> 02:14:54,320
in collections framework

1775
02:14:54,320 --> 02:14:57,440
with arrays with Adel is with search.

1776
02:14:58,920 --> 02:15:01,200
We also have some meters

1777
02:15:01,200 --> 02:15:03,600
inside our to be maps.

1778
02:15:03,800 --> 02:15:08,120
So for example,
if you want to get the data

1779
02:15:08,960 --> 02:15:11,160
for a specific

1780
02:15:16,440 --> 02:15:20,600
so I can get the data, I, I just say fruit

1781
02:15:21,880 --> 02:15:26,840
or to get and here I specify the key

1782
02:15:27,960 --> 02:15:29,640
for which I want to get to that.

1783
02:15:29,640 --> 02:15:37,600
So for example, let's say the TV,
and if now I execute

1784
02:15:37,600 --> 02:15:47,920
my port, I get this 80,

1785
02:15:49,280 --> 02:16:02,520
okay, Okay.

1786
02:16:04,000 --> 02:16:08,920
So this is how we get the data from a map.

1787
02:16:09,120 --> 02:16:12,000
So if I, if you are getting null,

1788
02:16:12,040 --> 02:16:17,640
we make sure the case is case
sensitive again.

1789
02:16:18,480 --> 02:16:21,800
So if you if I put in start of capital K,

1790
02:16:21,840 --> 02:16:30,120
if I put lowercase square,

1791
02:16:30,120 --> 02:16:34,680
then I will be getting then.

1792
02:16:34,680 --> 02:16:35,160
Okay.

1793
02:16:35,160 --> 02:16:38,640
So make sure you guys are

1794
02:16:40,160 --> 02:16:42,320
how to make a ignore case in there.

1795
02:16:42,320 --> 02:16:44,800
So you have to

1796
02:16:45,120 --> 02:16:47,280
afford to pay that off

1797
02:16:47,280 --> 02:16:50,200
when you are putting the data,
you have to make sure it is

1798
02:16:51,040 --> 02:16:53,480
in the lowercase or uppercase
and then you have to keep

1799
02:16:53,480 --> 02:16:56,680
the same behavior
when you are getting that data.

1800
02:16:57,080 --> 02:16:59,680
So there is no thing that you can

1801
02:17:00,840 --> 02:17:04,120
convert your data
to uppercase or lowercase at runtime.

1802
02:17:05,520 --> 02:17:12,680
Why? I got this issue, it's fine.

1803
02:17:12,800 --> 02:17:13,840
And if you can ignore it, if

1804
02:17:16,000 --> 02:17:17,520
you can ignore this,

1805
02:17:17,520 --> 02:17:22,760
you guys can ignore all this.

1806
02:17:22,760 --> 02:17:28,880
Okay,

1807
02:17:28,880 --> 02:17:31,920
so this is how we get it in that
we specify the key

1808
02:17:31,920 --> 02:17:37,200
and we get the corresponding value
and they are sensitive.

1809
02:17:37,200 --> 02:17:42,520
No, it was not
because I specified the wrong case file.

1810
02:17:42,520 --> 02:17:48,360
Give me.

1811
02:17:48,360 --> 02:17:48,960
Okay.

1812
02:17:48,960 --> 02:17:52,040
And if I have to remove

1813
02:17:53,800 --> 02:17:57,200
any of data from my map,

1814
02:17:57,880 --> 02:18:01,320
I can do that by specifying the key

1815
02:18:02,040 --> 02:18:06,600
for let's say I don't want this
all in inside this map, right?

1816
02:18:06,600 --> 02:18:09,480
So what I can do, I can say a fruit

1817
02:18:10,960 --> 02:18:13,360
not remove.

1818
02:18:13,360 --> 02:18:17,000
And I can specify any of the keys

1819
02:18:17,160 --> 02:18:20,080
from here.

1820
02:18:20,080 --> 02:18:22,560
And that data will be removed,

1821
02:18:24,160 --> 02:18:26,720
both the keys and the value.

1822
02:18:28,160 --> 02:18:31,440
And it also returns
the value that it removes

1823
02:18:31,640 --> 02:18:36,240
so that you guys you are showed that
there was 20 against this audience.

1824
02:18:36,720 --> 02:18:40,160
And now if I print out of that nav

1825
02:18:40,320 --> 02:18:51,560
map here,

1826
02:18:51,560 --> 02:18:54,480
I don't see that orange in here.

1827
02:18:55,000 --> 02:18:58,600
Yeah, that orange has been removed.

1828
02:18:58,600 --> 02:19:02,760
Is it possible to get my index
We are getting by index

1829
02:19:02,840 --> 02:19:07,200
you mean one by one starting
from the first entry to the last one

1830
02:19:10,920 --> 02:19:11,200
there.

1831
02:19:11,200 --> 02:19:14,480
There
is no index or anything like that in maps,

1832
02:19:15,040 --> 02:19:17,680
but we can use the iterator
to get all the values

1833
02:19:29,840 --> 02:19:31,160
like three.

1834
02:19:31,160 --> 02:19:34,920
For example.

1835
02:19:34,920 --> 02:19:35,840
No, there is no.

1836
02:19:35,840 --> 02:19:39,880
I think the index is they are things

1837
02:19:39,880 --> 02:19:41,560
in our case

1838
02:19:44,760 --> 02:19:46,200
they are doing this.

1839
02:19:46,760 --> 02:19:49,320
Why am I pretty caught is first

1840
02:19:49,320 --> 02:19:52,080
because in hash map.

1841
02:19:52,080 --> 02:19:55,760
In hash map we cannot guarantee the order.

1842
02:19:55,760 --> 02:20:07,360
Remember, I am using a hash map.

1843
02:20:07,360 --> 02:20:10,960
Okay. Now,

1844
02:20:12,800 --> 02:20:15,800
if we are, are we now

1845
02:20:18,080 --> 02:20:26,880
just call back.

1846
02:20:26,880 --> 02:20:30,200
So we have created this map

1847
02:20:32,280 --> 02:20:33,800
and then

1848
02:20:34,440 --> 02:20:37,160
we have inserted some data

1849
02:20:38,160 --> 02:20:42,520
using the output method.

1850
02:20:42,520 --> 02:20:46,520
So I specify the key, the value, the key,
the value

1851
02:20:46,800 --> 02:20:48,680
given the value

1852
02:20:52,440 --> 02:20:53,040
question.

1853
02:20:53,040 --> 02:20:55,960
Make sure you don't want to be beaten
by Aisha

1854
02:20:56,880 --> 02:21:02,040
because she was having issues
for the last 30 minutes.

1855
02:21:02,040 --> 02:21:06,720
So root daughter get will return mean be

1856
02:21:08,040 --> 02:21:11,280
the value corresponding

1857
02:21:11,760 --> 02:21:14,240
you also joined right now

1858
02:21:14,240 --> 02:21:17,120
is is there anyone who is still

1859
02:21:22,360 --> 02:21:24,680
are you surprised how old they are you

1860
02:21:29,640 --> 02:21:32,560
so let me repeat those who have joined.

1861
02:21:33,240 --> 02:21:35,160
Let's move on.

1862
02:21:35,280 --> 02:21:37,080
So let me quickly do that.

1863
02:21:37,080 --> 02:21:39,120
So we have created a map

1864
02:21:40,200 --> 02:21:45,600
and we have specified string and integer

1865
02:21:45,600 --> 02:21:50,840
because we the keys to be string
and the values to be integer.

1866
02:21:50,960 --> 02:21:55,400
Then using the put method, we have
inserted some data inside to be map.

1867
02:21:55,400 --> 02:21:57,200
Let me share code with you.

1868
02:21:57,200 --> 02:22:00,080
So those who have joined

1869
02:22:03,000 --> 02:22:07,440
and then we are now learning about
the methods that are present in maps.

1870
02:22:07,440 --> 02:22:12,120
So if we want to get feedback now
from a map which the key for example,

1871
02:22:12,120 --> 02:22:15,640
give me and we get the corresponding value

1872
02:22:16,320 --> 02:22:19,040
like 18 in here,

1873
02:22:19,040 --> 02:22:21,840
if we want to remove, we specify the key

1874
02:22:22,960 --> 02:22:26,040
and that E is now removed from this map.

1875
02:22:26,640 --> 02:22:29,360
So maps, they work most of the time.

1876
02:22:29,360 --> 02:22:32,160
They work based on keys.

1877
02:22:32,440 --> 02:22:34,600
So the next method

1878
02:22:35,480 --> 02:22:37,680
is if you want to check

1879
02:22:37,680 --> 02:22:42,400
if a certain thing is present inside

1880
02:22:43,320 --> 02:22:45,600
the map or not.

1881
02:22:45,600 --> 02:22:50,280
So let's say, for example,

1882
02:22:50,280 --> 02:22:55,680
I want to check if in this map

1883
02:22:59,160 --> 02:23:02,280
contains the key

1884
02:23:02,280 --> 02:23:03,240
goal or not.

1885
02:23:03,240 --> 02:23:09,320
Right.

1886
02:23:09,320 --> 02:23:12,040
So I can use this contains key method

1887
02:23:12,400 --> 02:23:14,640
to check for keys

1888
02:23:18,160 --> 02:23:21,000
and now I get false.

1889
02:23:21,000 --> 02:23:24,560
That means this key is not present

1890
02:23:25,520 --> 02:23:28,000
inside this map.

1891
02:23:28,520 --> 02:23:31,240
If I say let's say

1892
02:23:31,240 --> 02:23:35,600
maybe mango,

1893
02:23:35,600 --> 02:23:38,200
then I read that

1894
02:23:41,560 --> 02:23:43,120
it true, right?

1895
02:23:43,120 --> 02:23:44,920
So I get it to

1896
02:23:47,960 --> 02:23:50,120
and I can also check for the values.

1897
02:23:50,200 --> 02:23:53,000
So let's say, for example,

1898
02:23:53,960 --> 02:23:57,080
I want to check

1899
02:24:00,880 --> 02:24:03,520
if a certain value is present

1900
02:24:03,520 --> 02:24:06,920
inside this map or not.

1901
02:24:06,920 --> 02:24:10,640
So let's say, for example, I can see

1902
02:24:10,640 --> 02:24:15,080
maybe if Value hundred is present as a
as a value or not, inside of this.

1903
02:24:15,080 --> 02:24:22,960
Well, so I get a false

1904
02:24:24,920 --> 02:24:30,360
so it

1905
02:24:30,360 --> 02:24:32,760
will return you

1906
02:26:03,560 --> 02:26:06,680
are these methods clear days

1907
02:26:09,720 --> 02:26:13,480
How to see the equal to Apple

1908
02:26:13,560 --> 02:26:17,040
is equal to ten back and how to add
so this works

1909
02:26:17,680 --> 02:26:22,120
because of the boosting method
that I will teach you in the review class.

1910
02:26:22,800 --> 02:26:23,800
So a lot

1911
02:26:24,320 --> 02:26:27,880
you can modify as per your needs

1912
02:26:27,880 --> 02:26:29,240
and if you want

1913
02:26:35,120 --> 02:26:40,120
to think

1914
02:26:40,120 --> 02:26:43,200
you can, we use ignore case for example?

1915
02:26:43,200 --> 02:26:48,240
No, we can not do that here.

1916
02:26:48,240 --> 02:26:59,280
You have to be careful
when inserting the entertainment.

1917
02:26:59,280 --> 02:27:01,080
And then there is another map.

1918
02:27:01,080 --> 02:27:03,280
Can we use lowercase or uppercase?

1919
02:27:03,520 --> 02:27:06,840
Not at the time
when you are retrieving Beretta,

1920
02:27:07,720 --> 02:27:11,280
but you have to use that lowercase
when you are inserting the data

1921
02:27:12,640 --> 02:27:14,600
so that you always know

1922
02:27:14,600 --> 02:27:21,000
that your keys are in lowercase.

1923
02:27:21,000 --> 02:27:23,960
So this is empty
method is also present in here

1924
02:27:26,360 --> 02:27:27,560
where this method will return.

1925
02:27:27,560 --> 02:27:42,560
Guys.

1926
02:27:42,560 --> 02:27:45,840
All right, It will return a boolean value
and the value

1927
02:27:45,840 --> 02:27:52,120
will be false.

1928
02:27:52,120 --> 02:27:56,840
If I have an error in another class
and it bothers me, please repeat

1929
02:27:56,840 --> 02:28:00,240
how to ignore.

1930
02:28:00,240 --> 02:28:01,160
Okay,

1931
02:28:02,040 --> 02:28:03,160
give me one moment.

1932
02:28:03,160 --> 02:28:05,000
Let me just complete this exercise.

1933
02:28:05,000 --> 02:28:07,280
So there is one more thing.

1934
02:28:07,280 --> 02:28:10,240
If You want to replace Alexa.

1935
02:28:10,320 --> 02:28:12,800
Obviously, if we want to replace

1936
02:28:13,320 --> 02:28:17,840
the value of a certain key.

1937
02:28:17,840 --> 02:28:23,040
So for example, you can use

1938
02:28:24,240 --> 02:28:27,240
the replacement in here,

1939
02:28:27,840 --> 02:28:32,280
so you can say, let's maybe for the mango

1940
02:28:36,320 --> 02:28:39,120
instead of 15,

1941
02:28:39,120 --> 02:28:44,720
let's say party for.

1942
02:28:44,720 --> 02:28:55,320
And now if we printed the map again,

1943
02:28:55,320 --> 02:29:08,400
we see 35 mango.

1944
02:29:08,400 --> 02:29:12,480
So if a file is bothering you,
you can double click

1945
02:29:12,480 --> 02:29:15,600
on your shift button quickly.

1946
02:29:15,600 --> 02:29:17,160
You can type

1947
02:29:19,280 --> 02:29:25,680
Explore's.

1948
02:29:25,680 --> 02:29:28,400
Okay, Alexa, do you see this
excludes option

1949
02:29:38,920 --> 02:29:42,120
double click your shift button

1950
02:29:42,120 --> 02:29:43,360
twice,

1951
02:29:44,520 --> 02:29:46,000
double click your shift button

1952
02:29:46,000 --> 02:30:05,160
and then type excludes.

1953
02:30:05,160 --> 02:30:06,840
Then you show it again.

1954
02:30:06,840 --> 02:30:07,880
I did nothing.

1955
02:30:07,880 --> 02:30:12,080
I just double
click my shift button on on here

1956
02:30:12,320 --> 02:30:16,800
this list, double click on this.

1957
02:30:16,800 --> 02:30:25,440
Shift them.

1958
02:30:25,440 --> 02:30:38,320
You guys see this option?

1959
02:30:38,320 --> 02:30:40,360
Okay, now click on this.

1960
02:30:40,360 --> 02:30:41,920
Excuse

1961
02:30:43,480 --> 02:30:44,760
and then click

1962
02:30:44,760 --> 02:30:47,760
on this last button to exclude the fires

1963
02:30:48,360 --> 02:31:01,960
that are bothering you.

1964
02:31:01,960 --> 02:31:08,880
I am always using that really helpful.

1965
02:31:08,880 --> 02:31:18,000
What do you mean really helpful for what?

1966
02:31:18,000 --> 02:31:20,960
To select the files.

1967
02:31:21,400 --> 02:31:30,360
Oops.

1968
02:31:30,360 --> 02:31:33,640
So now you have to go back to your project

1969
02:31:42,520 --> 02:31:44,560
or my project

1970
02:31:44,840 --> 02:31:47,000
Eclipse Workspace

1971
02:31:47,000 --> 02:31:49,520
and then ask that fetch 11.

1972
02:31:50,200 --> 02:31:57,400
So not directly

1973
02:31:57,480 --> 02:31:57,840
eclipse

1974
02:32:01,960 --> 02:32:03,480
programs like everybody

1975
02:32:03,480 --> 02:32:09,480
else. I

1976
02:32:14,560 --> 02:32:15,760
let me find

1977
02:32:31,720 --> 02:32:33,240
give me a little

1978
02:32:41,800 --> 02:32:43,400
they are in

1979
02:32:43,400 --> 02:32:46,240
us journal the idea of project okay

1980
02:33:01,120 --> 02:33:03,960
and we were earlier point there

1981
02:33:04,200 --> 02:33:08,920
and then I run and then s C

1982
02:33:08,920 --> 02:33:14,440
and then you can select any of the file
that is bothering you select.

1983
02:33:14,440 --> 02:33:16,640
So for example,
this file is having issues.

1984
02:33:17,840 --> 02:33:20,880
So if I click on okay

1985
02:33:21,480 --> 02:33:23,280
then invalidate

1986
02:33:23,280 --> 02:33:26,280
will not include that file

1987
02:33:26,280 --> 02:33:30,600
in compilation.

1988
02:33:30,600 --> 02:33:35,240
So for example, if I click on
okay then I will not be getting anything.

1989
02:33:36,280 --> 02:33:37,600
I'll do I do on Mac.

1990
02:33:37,600 --> 02:33:41,040
It's same on Mac as well

1991
02:33:42,600 --> 02:33:45,480
with all the files. Alex

1992
02:33:46,680 --> 02:33:49,520
All files are bothering you

1993
02:33:50,520 --> 02:33:51,040
in in here.

1994
02:33:51,040 --> 02:33:52,360
Same on Mac as well.

1995
02:33:52,360 --> 02:33:54,720
The only thing that can be different is

1996
02:33:55,280 --> 02:34:05,200
how to look at your files.

1997
02:34:05,200 --> 02:34:10,520
That is what I see. Yes.

1998
02:34:10,560 --> 02:34:12,960
You have to now find your project.

1999
02:34:12,960 --> 02:34:14,760
Right? We are.
Your project is looked at here.

2000
02:34:14,760 --> 02:34:17,320
So for example,
I get the directory from here.

2001
02:34:17,960 --> 02:34:20,840
I was also unable to find my project,

2002
02:34:20,840 --> 02:34:24,600
so my projects are located
in this directory.

2003
02:34:24,600 --> 02:34:26,600
So you can also close that window

2004
02:34:27,560 --> 02:34:29,400
and you can check part.

2005
02:34:29,400 --> 02:34:31,720
So my projects that are present in here.

2006
02:34:31,720 --> 02:34:34,080
So you have to move to this statically.

2007
02:34:34,080 --> 02:34:36,480
And I think here is one more solution.

2008
02:34:36,480 --> 02:34:41,280
Tell this Mac and by Windows computers,

2009
02:34:41,280 --> 02:34:44,760
but is not it
better to go and put a mistake in there.

2010
02:34:44,760 --> 02:34:46,960
Quite. Yes. It's also good.

2011
02:34:47,160 --> 02:34:58,240
It's also good to correct
if you know how to correct it.

2012
02:34:58,240 --> 02:35:00,240
Expensive to buy another.

2013
02:35:00,240 --> 02:35:01,520
I think you will get better.

2014
02:35:01,520 --> 02:35:03,720
You will get a better one.

2015
02:35:03,720 --> 02:35:06,440
A good Windows

2016
02:35:06,440 --> 02:35:07,920
laptop or a computer.

2017
02:35:07,920 --> 02:35:12,800
This many.

2018
02:35:12,800 --> 02:35:13,200
Yeah.

2019
02:35:13,720 --> 02:35:20,280
Here is the third
one is ready to exchange.

2020
02:35:20,280 --> 02:35:23,960
Would one
take that feature out for example?

2021
02:35:23,960 --> 02:35:31,280
You don't want to include the files
that are the problems.

2022
02:35:31,280 --> 02:35:32,120
There must be.

2023
02:35:32,120 --> 02:35:38,520
There must be something like that.

2024
02:35:38,520 --> 02:35:52,160
I will search it
and I will let you know in the next class.

2025
02:35:52,160 --> 02:35:56,160
Okay, so

2026
02:35:56,280 --> 02:35:59,080
this is how we use before this
course start.

2027
02:35:59,320 --> 02:36:04,320
You always told told that no active
background needed, but you never said that

2028
02:36:04,400 --> 02:36:07,840
this course is good for people
who never saw the computer before.

2029
02:36:08,960 --> 02:36:11,160
And maybe, maybe next day.

2030
02:36:11,160 --> 02:36:15,960
We shouldn't say you should know
how to use mobile phone or a laptop.

2031
02:36:15,960 --> 02:36:29,520
Right.

2032
02:36:29,520 --> 02:36:31,760
But let's do one more example
of our thing that

2033
02:36:42,000 --> 02:36:42,480
is there

2034
02:36:42,480 --> 02:36:46,760
anyone who has shifted
from Android to Apple iPhone?

2035
02:36:47,800 --> 02:36:52,080
I am planning to do that,
but I don't see a lot of features.

2036
02:36:52,080 --> 02:36:56,120
Like for example, in my Android,
I can use multiple accounts

2037
02:36:56,120 --> 02:37:00,480
for Facebook, WhatsApp, I can have bought
WhatsApp, Facebook accounts

2038
02:37:00,880 --> 02:37:04,480
like that and like things like that.

2039
02:37:04,560 --> 02:37:06,720
I don't see a lot of features

2040
02:37:06,720 --> 02:37:21,120
in the iPhone right?

2041
02:37:21,120 --> 02:37:21,800
Okay.

2042
02:37:25,200 --> 02:37:25,880
Thank you, guys.

2043
02:37:25,880 --> 02:37:33,760
Okay, So let's do
one more example about the maps, guys.

2044
02:37:33,760 --> 02:37:38,360
So this time, let's say I want to store

2045
02:37:38,360 --> 02:37:41,400
the keys as the index

2046
02:37:41,400 --> 02:37:44,320
and then the strings

2047
02:37:44,320 --> 02:37:49,360
as the value.

2048
02:37:49,360 --> 02:37:54,480
If you have complete set party,
then go for it.

2049
02:37:54,640 --> 02:37:57,360
No, I don't.

2050
02:37:57,360 --> 02:38:03,480
I never saw a computer before at all.

2051
02:38:03,480 --> 02:38:04,440
Seriously, Alexi

2052
02:38:09,240 --> 02:38:09,960
No, I

2053
02:38:09,960 --> 02:38:13,760
am not planning to have because they cause
a lot of problems right now.

2054
02:38:13,760 --> 02:38:16,920
I have multiple monitors
and windows, computer work perfectly.

2055
02:38:16,920 --> 02:38:20,160
I don't have to buy those extra cables
and all of that.

2056
02:38:20,520 --> 02:38:22,440
I can connect with my laptop.

2057
02:38:22,440 --> 02:38:24,480
Three, four pair monitors easily.

2058
02:38:24,480 --> 02:38:26,840
No, If you just need cable.

2059
02:38:26,840 --> 02:38:28,320
I saw a lot of video.

2060
02:38:28,320 --> 02:38:31,280
The there is a ton of things
that you will be needing for that.

2061
02:38:31,280 --> 02:38:40,000
But if you want to do that,

2062
02:38:40,000 --> 02:38:43,800
yes, we will do that as well.

2063
02:38:43,800 --> 02:38:52,040
So guys, let's this time now.

2064
02:38:52,040 --> 02:38:54,920
Okay, guys, I never ask any question.

2065
02:38:55,920 --> 02:38:58,880
So last time let's use the link

2066
02:39:00,480 --> 02:39:02,680
hash map.

2067
02:39:03,240 --> 02:39:04,800
Okay.

2068
02:39:04,800 --> 02:39:06,840
And again, the diamond operator

2069
02:39:08,320 --> 02:39:12,040
and then I need to specify the key.

2070
02:39:12,040 --> 02:39:16,200
So let's say this time
the key, they are integers

2071
02:39:16,760 --> 02:39:25,880
and this time the data is of five string.

2072
02:39:25,880 --> 02:39:34,480
Okay.

2073
02:39:34,480 --> 02:39:38,200
Me this.

2074
02:39:38,200 --> 02:39:41,640
Let me find a better example for

2075
02:39:50,960 --> 02:39:52,360
Iran on that example.

2076
02:39:52,360 --> 02:39:53,800
So let's say

2077
02:39:54,840 --> 02:39:57,880
now I want to store the keys
as the numbers

2078
02:39:59,240 --> 02:40:02,720
and so let me call it as

2079
02:40:03,840 --> 02:40:05,520
students.

2080
02:40:06,120 --> 02:40:07,680
And then

2081
02:40:08,000 --> 02:40:09,480
they are named as the keys.

2082
02:40:09,480 --> 02:40:12,480
So I will say new

2083
02:40:12,480 --> 02:40:16,520
linked hash map.

2084
02:40:16,520 --> 02:40:19,640
So now, because this time I have my keys

2085
02:40:19,640 --> 02:40:24,040
as integer, so I will

2086
02:40:24,120 --> 02:40:27,680
now insert the keys

2087
02:40:28,440 --> 02:40:30,600
as integer and the values

2088
02:40:33,520 --> 02:40:36,840
of values will be like this.

2089
02:40:36,840 --> 02:40:39,200
So I can do that as well, right?

2090
02:40:39,280 --> 02:40:45,960
I can use any type of data as keys,
any type of data as values.

2091
02:40:46,120 --> 02:40:49,560
Just it should just be an object

2092
02:40:49,560 --> 02:40:53,640
of a class.

2093
02:40:53,640 --> 02:40:59,280
Okay.

2094
02:40:59,280 --> 02:41:03,920
And if I try to duplicate that data

2095
02:41:06,840 --> 02:41:11,200
so maps, they cannot have duplicate keys.

2096
02:41:11,280 --> 02:41:13,840
The keys, they should always be unique.

2097
02:41:14,480 --> 02:41:18,800
Okay, data can duplicate,
but the keys, they should all

2098
02:41:18,920 --> 02:41:49,480
always be unique.

2099
02:41:49,480 --> 02:41:51,120
So now

2100
02:41:53,080 --> 02:41:55,400
first I had let's see now I

2101
02:41:55,400 --> 02:41:58,880
am trying to insert a thing
down is with the same key

2102
02:42:00,560 --> 02:42:02,440
so I cannot do that

2103
02:42:02,440 --> 02:42:26,960
is there should be unique. It

2104
02:42:30,120 --> 02:42:33,560
and real life example again
like house keys.

2105
02:42:33,560 --> 02:42:37,920
Yep yep yep.

2106
02:42:37,920 --> 02:42:41,760
So in here let's say
we are inserting the roll numbers and the

2107
02:42:41,760 --> 02:42:45,160
and the names of these students

2108
02:42:47,960 --> 02:42:48,840
and no,

2109
02:42:48,840 --> 02:42:54,000
we will not be getting that on time matter
then that will be replaced.

2110
02:42:54,000 --> 02:42:58,520
So maybe a rendered and then with
Are you happy now?

2111
02:42:59,640 --> 02:43:04,360
Okay, so

2112
02:43:04,360 --> 02:43:07,640
now if I print out this map

2113
02:43:30,360 --> 02:43:32,760
or with this key, then

2114
02:43:34,320 --> 02:43:37,120
instead of let's see, I am

2115
02:43:37,680 --> 02:43:41,640
so it will retain the last value
that you have placed me.

2116
02:43:41,640 --> 02:43:44,800
Because because we have we are

2117
02:43:44,800 --> 02:43:50,120
we have tried to insert that again
with the key that was already there.

2118
02:43:50,880 --> 02:43:54,680
That's why you see
the key is same then and then then

2119
02:43:55,640 --> 02:43:58,520
so is cannot be duplicate.

2120
02:43:59,040 --> 02:44:02,880
If we try to insert the data

2121
02:44:02,880 --> 02:44:06,560
with the same key that is already present

2122
02:44:06,560 --> 02:44:08,720
it will overwrite that data.

2123
02:44:09,640 --> 02:44:16,560
Now I am not happy.

2124
02:44:16,560 --> 02:44:22,080
Okay, let's do this.

2125
02:44:22,080 --> 02:44:27,200
What are what I really get
now guys, for the key.

2126
02:44:27,240 --> 02:44:37,600
Then what output I will get to.

2127
02:44:37,640 --> 02:44:41,280
Now I get the MLC because last

2128
02:44:42,000 --> 02:44:44,400
I inserted Alexi with this key.

2129
02:44:45,120 --> 02:44:46,320
Okay.

2130
02:44:46,320 --> 02:44:49,280
So it will be still on the first place,
but it will be replaced.

2131
02:44:50,240 --> 02:44:51,560
And then

2132
02:44:51,960 --> 02:44:54,000
the next key is 20 we see.

2133
02:44:54,000 --> 02:44:57,960
Then if and then the next key is know. So.

2134
02:44:58,800 --> 02:44:59,520
All right.

2135
02:44:59,520 --> 02:45:04,920
So if I, if I put Alexi
after inserting Denis

2136
02:45:04,920 --> 02:45:07,360
and he know
and I am using linked the high set,

2137
02:45:08,960 --> 02:45:11,640
will I see Alexi still
and the first location

2138
02:45:11,640 --> 02:45:25,480
or will I see it at the last location.

2139
02:45:25,480 --> 02:45:28,560
So because the length has set

2140
02:45:28,560 --> 02:45:31,680
maintains the insertion order,

2141
02:45:31,920 --> 02:45:35,680
I inserted this key first and maps.

2142
02:45:35,680 --> 02:45:38,880
They work on the keys they based.

2143
02:45:38,880 --> 02:45:41,360
They are based on the keys.

2144
02:45:41,360 --> 02:45:44,120
So it will always be the first entry

2145
02:45:44,760 --> 02:45:48,760
whether you are replacing it
at the last in the middle or anyway.

2146
02:45:49,720 --> 02:45:53,400
So once you insert a key that key.

2147
02:45:53,400 --> 02:45:57,040
So this is how it is working.

2148
02:45:57,040 --> 02:46:02,880
So this is a map.

2149
02:46:02,880 --> 02:46:07,240
I have two portions,
one for ski, one for my values.

2150
02:46:08,320 --> 02:46:13,560
So I insert, I put Alexi in here,

2151
02:46:14,360 --> 02:46:18,600
then I replace it with
and then I again replace it with Alexi.

2152
02:46:18,600 --> 02:46:23,400
So this, this is not this will not change
this this location, this first index.

2153
02:46:24,360 --> 02:46:24,640
Okay?

2154
02:46:24,640 --> 02:46:27,560
It will always be first

2155
02:46:27,720 --> 02:46:31,800
because we we already had inserted
that key in the first place.

2156
02:46:31,800 --> 02:46:34,440
So it is dependent on key.

2157
02:46:34,440 --> 02:46:36,600
So no matter when you are replacing that,

2158
02:46:36,600 --> 02:46:39,600
it will always be the first one.

2159
02:46:39,600 --> 02:46:42,600
Then we inserted the next

2160
02:46:43,920 --> 02:46:46,880
20 and the corresponding data

2161
02:46:49,080 --> 02:46:52,920
so it will maintain the order.

2162
02:46:52,920 --> 02:46:55,200
Yeah, for the keys.

2163
02:46:56,000 --> 02:46:57,960
And then we have under

2164
02:47:01,680 --> 02:47:03,840
and then you know,

2165
02:47:03,840 --> 02:47:07,320
so when we again try to do this then
and then next

2166
02:47:07,320 --> 02:47:11,120
the first job I will search
if the ski is already present or not.

2167
02:47:11,120 --> 02:47:17,160
If this is present,
then it will replace this again.

2168
02:47:17,160 --> 02:47:17,600
Yeah.

2169
02:47:19,320 --> 02:47:21,880
So therefore all the Lingard hash

2170
02:47:21,880 --> 02:47:34,600
map works in Java.

2171
02:47:34,600 --> 02:47:35,160
All right.

2172
02:47:35,160 --> 02:47:45,720
Is it clear, guys, can you zoom out

2173
02:47:45,720 --> 02:47:49,240
so we can see the nodes on the computer
on the next line?

2174
02:47:49,240 --> 02:48:04,960
Actually,

2175
02:48:04,960 --> 02:48:08,160
what happened if we put Alexi between and

2176
02:48:08,320 --> 02:48:10,240
and then is

2177
02:48:12,080 --> 02:48:13,400
like this

2178
02:48:16,320 --> 02:48:17,440
like this

2179
02:48:18,560 --> 02:48:21,040
still it will this key is first

2180
02:48:21,960 --> 02:48:24,080
if however if we do this

2181
02:48:25,000 --> 02:48:27,240
then what
will be the order of the database?

2182
02:48:27,360 --> 02:48:28,920
If I do this

2183
02:48:43,840 --> 02:48:47,800
the E here

2184
02:48:49,320 --> 02:48:52,320
so it retains the order based on keys.

2185
02:48:53,000 --> 02:48:53,840
Is it clear now?

2186
02:48:55,640 --> 02:48:57,720
Not it
is not starting with number Parliament.

2187
02:48:57,720 --> 02:48:59,760
It is linked to hash map.

2188
02:48:59,760 --> 02:49:06,840
It is returning B insertion order.

2189
02:49:06,840 --> 02:49:10,320
So how do we know
how many of a certainty is there?

2190
02:49:10,320 --> 02:49:12,960
If the list is a larger
and you are not aware of it

2191
02:49:13,280 --> 02:49:16,480
and this for example,
to remove repeated entries

2192
02:49:17,680 --> 02:49:22,480
so so how do we know
how many of a certain key

2193
02:49:22,520 --> 02:49:26,800
so one key can have
There can be one unique key in a map.

2194
02:49:27,120 --> 02:49:29,480
This cannot be duplicate keys.

2195
02:49:29,480 --> 02:49:33,600
And if you are trying to insert in data
with that key

2196
02:49:34,440 --> 02:49:37,560
cluster, you can try to check that

2197
02:49:37,600 --> 02:49:41,600
to using for example, contains
method or any other method.

2198
02:49:41,600 --> 02:49:45,000
If the data for that key
is already present or not.

2199
02:49:45,960 --> 02:49:46,440
Okay.

2200
02:49:46,800 --> 02:49:50,440
If that is present then
maybe you don't want to replace there.

2201
02:49:50,640 --> 02:49:53,560
Otherwise you want to place
there is one more method.

2202
02:49:54,520 --> 02:49:55,320
So for

2203
02:49:55,320 --> 02:50:00,480
example, you want to replace the net.

2204
02:50:00,480 --> 02:50:01,440
All right.

2205
02:50:02,640 --> 02:50:08,840
So now if the key for this
and if this then is already

2206
02:50:08,840 --> 02:50:12,200
present inside the map,
it will replace it.

2207
02:50:13,320 --> 02:50:13,960
Okay?

2208
02:50:13,960 --> 02:50:17,080
Otherwise it will do nothing

2209
02:50:17,600 --> 02:50:18,000
as well.

2210
02:50:18,000 --> 02:50:20,000
Do you know what they would go for?

2211
02:50:20,000 --> 02:50:20,960
It is no.

2212
02:50:20,960 --> 02:50:23,160
Denis, can you share this screenshot?

2213
02:50:24,720 --> 02:50:27,360
So guys, now

2214
02:50:28,200 --> 02:50:30,880
if I don't have this

2215
02:50:31,960 --> 02:50:34,680
then only

2216
02:50:34,680 --> 02:50:44,080
will I see the ten here.

2217
02:50:44,080 --> 02:50:46,400
Now I will not see it.

2218
02:50:47,160 --> 02:50:50,760
But if this data will this

2219
02:50:50,760 --> 02:50:57,000
he is already present,
then it will be replaced.

2220
02:50:57,960 --> 02:50:58,200
Okay.

2221
02:50:58,200 --> 02:51:00,720
So maybe you want to use the replace
method.

2222
02:51:02,000 --> 02:51:02,520
Maybe.

2223
02:51:02,520 --> 02:51:06,240
Maybe you want to use the replacement part

2224
02:51:06,240 --> 02:51:07,640
or your your question

2225
02:51:07,640 --> 02:51:14,840
is the other way around. Yes.

2226
02:51:15,040 --> 02:51:21,240
If we don't have the key,
we cannot replace it.

2227
02:51:21,240 --> 02:51:31,800
If we don't have the key,
we cannot replace it.

2228
02:51:31,800 --> 02:51:34,640
You guys will never tell me about these

2229
02:51:35,800 --> 02:51:36,840
special things.

2230
02:51:36,840 --> 02:51:41,840
Right?

2231
02:51:41,840 --> 02:51:45,840
Yeah. Oh.

2232
02:51:46,280 --> 02:51:49,040
Oh, this is related to this class, Denis.

2233
02:51:50,600 --> 02:51:53,800
People use these kind of things
to do magic, right?

2234
02:51:53,800 --> 02:52:02,040
For black magic magic.

2235
02:52:02,040 --> 02:52:07,000
It's very simple.

2236
02:52:07,000 --> 02:52:08,680
Voodoo Toy is part of Java.

2237
02:52:08,680 --> 02:52:11,520
Maybe there is some kind of

2238
02:52:12,080 --> 02:52:13,400
or there is voodoo doll.

2239
02:52:13,400 --> 02:52:16,400
And by the way, this, that

2240
02:52:18,360 --> 02:52:20,480
easy peasy.

2241
02:52:20,720 --> 02:52:23,560
So that is maybe you want to try this help

2242
02:52:32,040 --> 02:52:34,800
if you are having trouble melting stress.

2243
02:52:34,800 --> 02:52:38,760
This is the app for you
Voodoo is great for stress relief.

2244
02:52:39,240 --> 02:52:42,600
Are you frustrated?

2245
02:52:42,600 --> 02:52:46,000
No, I did it.

2246
02:52:46,120 --> 02:52:47,040
Everyone, please.

2247
02:52:47,040 --> 02:52:49,200
By person, by

2248
02:52:50,520 --> 02:52:52,560
It's a

2249
02:52:54,840 --> 02:52:55,640
punching bag

2250
02:52:55,640 --> 02:53:03,040
is also good.

2251
02:53:03,040 --> 02:53:06,600
So is it clear, guys, this example

2252
02:53:25,440 --> 02:53:26,680
support.

2253
02:53:27,000 --> 02:53:31,320
If that is not present,
people will install them better.

2254
02:53:31,600 --> 02:53:35,040
If that guy is already present,
it will replace that data.

2255
02:53:35,040 --> 02:53:55,440
But replace only replaces
if that data is already present.

2256
02:53:55,440 --> 02:54:01,840
So this is the difference between replace.

2257
02:54:01,840 --> 02:54:13,560
Oops.

2258
02:54:13,560 --> 02:54:19,440
We can only replace the value,
not the key.

2259
02:54:19,440 --> 02:54:21,360
No. How can we replace the key? Right.

2260
02:54:21,360 --> 02:54:22,880
Because keys. They are unique.

2261
02:54:22,880 --> 02:54:24,880
We can remove one key.

2262
02:54:24,880 --> 02:54:26,920
We can remove and then insert the new one.

2263
02:54:26,920 --> 02:54:35,840
If this is what you mean by replacing key.

2264
02:54:35,840 --> 02:54:40,600
All right,
so let me show you another thing.

2265
02:54:41,880 --> 02:54:43,320
So this class is easy, right?

2266
02:54:43,320 --> 02:54:46,440
Easy peasy.

2267
02:54:46,440 --> 02:54:54,080
It's similar to the collections framework.

2268
02:54:54,080 --> 02:55:08,320
Okay, Let me make it hard for you.

2269
02:55:08,320 --> 02:55:09,240
We will go deeper.

2270
02:55:09,240 --> 02:55:12,800
We are not going deeper.

2271
02:55:12,800 --> 02:55:15,640
You guys are not ready.

2272
02:55:15,640 --> 02:55:20,680
Okay,

2273
02:55:20,680 --> 02:55:23,000
So let's say I have two maps

2274
02:55:23,760 --> 02:55:29,280
and I want to combine those two maps.

2275
02:55:29,280 --> 02:55:33,000
Yes, it is not a collection framework,
but it's very similar to that.

2276
02:55:33,400 --> 02:55:36,200
So in industry, people can use sometimes

2277
02:55:36,280 --> 02:55:39,840
these things you.

2278
02:55:39,840 --> 02:55:42,720
So okay,

2279
02:55:44,200 --> 02:55:47,320
let me use a

2280
02:55:47,800 --> 02:55:51,640
tree map this time.

2281
02:55:51,640 --> 02:55:55,560
So tree map and then the next to

2282
02:55:56,000 --> 02:56:02,280
the keys will be string.

2283
02:56:04,080 --> 02:56:07,080
And this time let's say let's use double

2284
02:56:31,920 --> 02:56:34,720
U and then

2285
02:56:35,400 --> 02:56:36,120
bring

2286
02:56:39,000 --> 02:56:41,120
what is pendulum

2287
02:56:41,120 --> 02:56:44,080
edge device that

2288
02:56:44,080 --> 02:56:47,040
just keeps on swinging from here

2289
02:56:47,040 --> 02:56:52,520
and it's heavily
used in heavily studied in physics

2290
02:56:59,280 --> 02:57:03,400
of okay, so let me put some

2291
02:57:03,520 --> 02:57:06,760
more of these in here

2292
02:57:11,640 --> 02:57:14,760
to say X

2293
02:57:17,680 --> 02:57:20,880
and then how much for the end, Alexey

2294
02:57:22,200 --> 02:57:24,480
how much in the Ukraine for flags

2295
02:57:31,120 --> 02:57:35,360
people use as a showpiece as well.

2296
02:57:35,360 --> 02:57:40,360
3199 in here.

2297
02:57:40,360 --> 02:57:41,200
Okay.

2298
02:57:42,040 --> 02:57:42,840
When you

2299
02:57:44,040 --> 02:57:58,880
put the out for 2.5

2300
02:58:00,240 --> 02:58:02,640
so tomato is not for

2301
02:58:04,400 --> 02:58:32,440
3.2 guys

2302
02:58:33,480 --> 02:58:36,560
notice this in

2303
02:58:38,520 --> 02:58:41,760
in primitive data type

2304
02:58:42,040 --> 02:58:44,440
java used to convert your

2305
02:58:45,720 --> 02:58:47,760
primitives automatically.

2306
02:58:47,760 --> 02:58:50,400
For example, if I have specified double

2307
02:58:51,360 --> 02:58:55,200
and if I try to use an integer
now I get an error.

2308
02:58:55,920 --> 02:58:59,640
That auto conversion
is not applicable in here

2309
02:58:59,840 --> 02:59:03,320
because now we are dealing with objects.

2310
02:59:04,160 --> 02:59:04,520
Yeah.

2311
02:59:05,000 --> 02:59:07,120
So if I am specifying double

2312
02:59:07,120 --> 02:59:11,320
and I try to put an integer,
it will auto convert that.

2313
02:59:11,320 --> 02:59:18,080
Yeah,
we have to be careful about that as well.

2314
02:59:18,080 --> 02:59:48,160
Let me it in here somewhere.

2315
02:59:48,160 --> 02:59:51,880
Yes. No costing because now
we are dealing with the wrapper classes.

2316
02:59:51,960 --> 03:00:03,120
They are separate objects.

2317
03:00:03,120 --> 03:00:06,360
So I need to put this 10.0

2318
03:00:06,360 --> 03:00:28,240
in here.

2319
03:00:28,240 --> 03:00:29,720
Lola, how much

2320
03:00:30,760 --> 03:00:33,040
for one could Alexi

2321
03:00:33,040 --> 03:00:35,200
one can you put to

2322
03:00:48,720 --> 03:00:50,720
and let's say I have another

2323
03:00:52,320 --> 03:00:52,960
list.

2324
03:00:52,960 --> 03:00:55,080
So three map

2325
03:00:56,480 --> 03:00:58,200
and then

2326
03:00:59,000 --> 03:01:00,800
there can copy this

2327
03:01:28,680 --> 03:01:31,720
configure the $1.5 controller

2328
03:01:33,360 --> 03:01:34,240
that I see.

2329
03:01:34,240 --> 03:01:37,120
That's why you also have the

2330
03:01:45,400 --> 03:01:55,720
0.3%, right?

2331
03:01:55,800 --> 03:01:58,600
Give me some more things

2332
03:01:59,920 --> 03:02:03,480
to put inside this map.

2333
03:02:03,480 --> 03:02:07,880
Sweet potatoes are the

2334
03:02:17,840 --> 03:02:21,440
be it for $2.

2335
03:02:21,440 --> 03:02:24,640
Okay, so now

2336
03:02:24,640 --> 03:02:33,960
let's say
I want to combine these two maps.

2337
03:02:33,960 --> 03:02:36,360
So can I do the same with collections?

2338
03:02:36,680 --> 03:02:41,640
If I have two different list,
can I combine them into a single list

2339
03:02:41,640 --> 03:02:43,360
in a collection

2340
03:02:51,320 --> 03:02:54,400
using which method?

2341
03:02:54,400 --> 03:02:58,240
Can you guys tell me
the name of the method using which I can

2342
03:02:58,240 --> 03:03:02,160
combine two lists completely
without going through all the elements

2343
03:03:02,160 --> 03:03:03,440
one by one

2344
03:03:08,960 --> 03:03:10,280
there was a

2345
03:03:10,280 --> 03:03:15,560
add method to add the elements one by one,
and there was another method

2346
03:03:15,560 --> 03:03:19,960
to add all the elements
at once from one list.

2347
03:03:20,400 --> 03:03:23,880
Add. All right, so we have

2348
03:03:26,120 --> 03:03:29,200
the book all method in

2349
03:03:30,200 --> 03:03:32,880
maps, same as the case

2350
03:03:32,880 --> 03:03:39,720
with ADD all methods.

2351
03:03:39,720 --> 03:03:45,360
So if I say put all three of the list
one and two.

2352
03:03:45,360 --> 03:03:50,760
Now all the data from both
the maps will be combined

2353
03:03:51,600 --> 03:04:01,840
inside this third list.

2354
03:04:01,840 --> 03:04:06,280
Then we do that in child classes.

2355
03:04:06,280 --> 03:04:12,000
You mean if in here you are using a parent
that are type and in another

2356
03:04:12,000 --> 03:04:16,000
you are using a child
data type inside the map.

2357
03:04:16,000 --> 03:04:16,920
Denis

2358
03:04:28,120 --> 03:04:29,800
So now

2359
03:04:30,240 --> 03:04:34,080
I see all of my data combined

2360
03:04:35,440 --> 03:04:39,440
and then we put in one line, one,

2361
03:04:40,040 --> 03:04:44,080
then we put in one line.

2362
03:04:44,080 --> 03:04:45,640
What do you mean by one line?

2363
03:04:45,640 --> 03:04:46,960
Aleks

2364
03:04:49,520 --> 03:04:51,640
So data from this map

2365
03:04:59,360 --> 03:05:00,040
growth,

2366
03:05:00,080 --> 03:05:07,560
you mean like this, like this?

2367
03:05:08,000 --> 03:05:13,160
No, it's not possible.

2368
03:05:13,160 --> 03:05:20,200
It's not possible.

2369
03:05:20,200 --> 03:05:22,920
Is it clear, guys, what is happening here?

2370
03:05:23,520 --> 03:05:34,960
Is it clear?

2371
03:05:34,960 --> 03:05:38,800
Okay,
so we can insert the null values as well.

2372
03:05:39,760 --> 03:05:42,480
So for example

2373
03:05:42,480 --> 03:05:44,960
if I is the to

2374
03:05:45,440 --> 03:05:48,960
used do not put I can use.

2375
03:05:49,520 --> 03:05:52,120
Oh I can not actually so null

2376
03:05:55,560 --> 03:05:57,440
and null.

2377
03:05:57,440 --> 03:06:02,520
So if I tried to do this can we do like
we did add a list in analyst together.

2378
03:06:02,560 --> 03:06:04,840
You showed one example previous.

2379
03:06:05,760 --> 03:06:07,960
Can we do

2380
03:06:08,800 --> 03:06:11,520
like would did ArrayList

2381
03:06:13,560 --> 03:06:16,440
in the list add it to get the

2382
03:06:18,440 --> 03:06:20,840
I don't understand your question

2383
03:06:21,440 --> 03:06:24,240
so if we try to insert a null values

2384
03:06:26,440 --> 03:06:29,320
inside a tree map,

2385
03:06:29,320 --> 03:06:31,360
you guys will be getting this null pointer

2386
03:06:31,360 --> 03:06:33,600
exception because remap

2387
03:06:34,680 --> 03:06:37,080
has to solve to be values

2388
03:06:37,080 --> 03:06:41,080
and for sorting it compares
all the data types

2389
03:06:41,280 --> 03:06:44,400
and when during the comparison
it gets this error.

2390
03:06:45,160 --> 03:06:48,840
So for the

2391
03:06:48,880 --> 03:06:50,440
three maps

2392
03:06:51,400 --> 03:06:55,440
null is are not allowed.

2393
03:06:56,480 --> 03:06:59,640
But we can combine any map
or just map anywhere.

2394
03:06:59,720 --> 03:07:06,840
So for example, let's say

2395
03:07:07,920 --> 03:07:09,840
okay, and I want to show this as well.

2396
03:07:09,840 --> 03:07:13,080
So if we have the hash map

2397
03:07:17,160 --> 03:07:19,720
and if now here

2398
03:07:25,560 --> 03:07:30,960
in in three maps,

2399
03:07:31,920 --> 03:07:35,640
so I have this hash map
and this is tree map.

2400
03:07:35,640 --> 03:07:38,040
So nodes are not allowed tree map.

2401
03:07:39,160 --> 03:07:41,640
So let's see if they are allowed

2402
03:07:43,600 --> 03:07:50,600
in the hash map.

2403
03:07:50,600 --> 03:07:54,000
So because tree map
has to compare the values,

2404
03:07:54,000 --> 03:07:59,320
because it has to far
to be values in here.

2405
03:07:59,320 --> 03:08:01,960
So we will not be getting any issues

2406
03:08:03,040 --> 03:08:04,360
in here.

2407
03:08:04,840 --> 03:08:08,800
Yeah, but again,
when we will be combining this, actually

2408
03:08:08,800 --> 03:08:13,480
let me show this
null thing in a separate example.

2409
03:08:13,480 --> 03:08:17,240
Let's keep this example
only for the put on.

2410
03:08:18,480 --> 03:08:20,520
If it is clear I will create a new file

2411
03:08:35,360 --> 03:08:36,360
so it is allowed

2412
03:08:36,360 --> 03:08:39,960
that one of the maps can be hash map.

2413
03:08:39,960 --> 03:08:45,640
The other one is tree map and then I can
combine more null and all that.

2414
03:08:45,640 --> 03:08:50,120
I don't understand the difference between
hash map remember and then dash map.

2415
03:08:51,280 --> 03:08:52,640
Hash map

2416
03:08:52,640 --> 03:08:55,920
will not
maintain the information ordered tree

2417
03:08:55,920 --> 03:09:01,920
map will far field back based on your keys
and let's link the hash map will retain

2418
03:09:01,920 --> 03:09:05,240
the order in instruction
or the same as the case with search

2419
03:09:07,120 --> 03:09:12,560
same as the case with deserts.

2420
03:09:12,560 --> 03:09:23,440
You guys want to have a break.

2421
03:09:23,440 --> 03:09:26,160
Maps in our key values

2422
03:09:37,320 --> 03:09:37,800
you know

2423
03:09:37,800 --> 03:09:42,760
for all removed that contains
contains value.

2424
03:09:42,800 --> 03:09:47,680
Okay clear long contains key value.

2425
03:09:47,760 --> 03:09:50,160
And so clearly we would delete
all the data.

2426
03:09:50,160 --> 03:10:12,000
We have not discussed this one.

2427
03:10:12,000 --> 03:10:20,480
Let me give you some tasks as well.

2428
03:10:20,480 --> 03:10:24,560
We questions should be bigger before

2429
03:10:25,280 --> 03:10:30,800
a because three map source alphabetically.

2430
03:10:30,800 --> 03:10:36,760
Just give me one moment.

2431
03:10:36,760 --> 03:10:42,360
So it is one task.

2432
03:10:42,360 --> 03:10:44,920
Okay, let's let's keep it to one tasks.

2433
03:10:45,440 --> 03:10:51,720
What a task. So

2434
03:10:54,400 --> 03:10:55,840
in here

2435
03:11:00,040 --> 03:11:01,760
this starting

2436
03:11:01,760 --> 03:11:07,800
is actually not based
on the first two letters on the.

2437
03:11:07,800 --> 03:11:10,320
Okay, so the sorting is complex.

2438
03:11:10,320 --> 03:11:13,440
It is using you guys remember that

2439
03:11:13,440 --> 03:11:23,680
ASCII table.

2440
03:11:23,680 --> 03:11:28,360
So for all the characters,
it is looking for the ASCII values

2441
03:11:29,160 --> 03:11:31,600
behind that and.

2442
03:11:31,600 --> 03:11:34,920
Then it combines
all the values for all the letters

2443
03:11:34,920 --> 03:11:41,800
and then it calculates the order.

2444
03:11:41,800 --> 03:11:44,960
Yeah, right.

2445
03:11:46,320 --> 03:11:49,200
So that's why we don't see this before.

2446
03:11:49,200 --> 03:11:53,000
And it also takes the upper case

2447
03:11:53,040 --> 03:11:57,320
and lower case bear with lower case
E is with uppercase.

2448
03:11:57,320 --> 03:12:01,800
So let's say, for example,
if I put the beer with capital

2449
03:12:01,800 --> 03:12:08,680
B, so now beer will be at first.

2450
03:12:09,000 --> 03:12:14,800
So on that ASCII table, you guys will see
that the uppercase alphabets,

2451
03:12:14,800 --> 03:12:18,120
they are first and the lowercase ones
they are after

2452
03:12:18,120 --> 03:12:22,440
30 minutes initially.

2453
03:12:22,440 --> 03:12:26,560
So the starting is done based on that.

2454
03:12:27,360 --> 03:12:33,280
That ASCII table.

2455
03:12:33,280 --> 03:12:37,200
So if you guys see this, the value of

2456
03:12:37,200 --> 03:12:40,200
this is 41, right?

2457
03:12:40,200 --> 03:12:44,000
But if you check the value of lowercase
here, it's a 61.

2458
03:12:44,080 --> 03:12:48,000
So 41 uppercase letters,
they will come first

2459
03:12:48,560 --> 03:12:53,600
when sorting and the lowercase
will come after tomorrow night.

2460
03:12:53,720 --> 03:12:57,400
It's clear why we see AGs with capital E

2461
03:12:57,400 --> 03:13:02,640
first and B as of today.

2462
03:13:02,640 --> 03:13:13,560
Okay.

2463
03:13:13,560 --> 03:13:31,000
Do you guys want to break?

2464
03:13:31,000 --> 03:13:33,760
Let's be fair or

2465
03:13:39,040 --> 03:13:48,200
143 minus is slipping

2466
03:13:49,400 --> 03:13:51,360
or are already left B class

2467
03:13:51,360 --> 03:13:54,520
maybe enjoying the sun?

2468
03:13:54,520 --> 03:13:57,480
No is

2469
03:13:57,480 --> 03:13:58,560
all in case.

2470
03:13:58,560 --> 03:14:01,120
Remind me about the reporting

2471
03:30:57,360 --> 03:31:12,920
you read the back?

2472
03:31:12,920 --> 03:31:14,000
Yeah.

2473
03:31:14,000 --> 03:31:30,320
I want to task volatility
this time is busy

2474
03:31:51,880 --> 03:32:07,960
a little question

2475
03:32:07,960 --> 03:32:10,440
can you download that video
and convert it to and before

2476
03:32:23,240 --> 03:32:25,440
you create a map of buildings,

2477
03:32:25,800 --> 03:32:28,080
store the floor number and

2478
03:32:29,120 --> 03:32:31,120
its associated company name.

2479
03:32:31,120 --> 03:32:49,200
For example,

2480
03:32:49,200 --> 03:32:54,000
Google Syntactic insert seven entries
with duplicate keys and values.

2481
03:32:54,280 --> 03:32:57,320
Check how many entries you have

2482
03:32:57,320 --> 03:33:00,200
to remove and bring to your map.

2483
03:33:00,400 --> 03:33:14,720
So which type of map
you guys have used for this?

2484
03:33:14,720 --> 03:33:18,360
So let me be the example from

2485
03:33:21,080 --> 03:33:24,840
the map hash map.

2486
03:33:24,840 --> 03:33:27,560
So is the order retained.

2487
03:33:28,440 --> 03:33:32,040
So either
you should use the dream map or the

2488
03:33:33,720 --> 03:33:35,720
linked hash map, right?

2489
03:33:35,720 --> 03:33:38,720
If you want to retain the order

2490
03:33:45,160 --> 03:33:47,640
and as a key,

2491
03:33:47,640 --> 03:33:49,720
we should use integers

2492
03:33:50,840 --> 03:33:54,120
and as a values, we should use the string.

2493
03:33:55,240 --> 03:33:58,760
Then simply we have to insert some values

2494
03:33:59,760 --> 03:34:02,040
and then after inserting

2495
03:34:02,040 --> 03:34:04,760
update company on the fourth floor.

2496
03:34:05,520 --> 03:34:09,200
So instead of Facebook, now

2497
03:34:09,200 --> 03:34:13,560
we have matter and remove the company
on the floor.

2498
03:34:13,560 --> 03:34:14,440
Number seven.

2499
03:34:14,440 --> 03:34:20,640
So let's say for example,
how can I remove the value?

2500
03:34:20,640 --> 03:34:25,320
I can say remove
and then I can specify the key,

2501
03:34:26,920 --> 03:34:31,480
which is duplicate.

2502
03:34:31,480 --> 03:34:34,040
Okay, let me put it to it

2503
03:34:36,680 --> 03:34:39,120
and check the size as well.

2504
03:34:40,360 --> 03:34:43,080
Okay, let's bring this size as well. So

2505
03:34:44,280 --> 03:34:46,720
building or size

2506
03:34:48,120 --> 03:35:02,440
and then the map,

2507
03:35:02,440 --> 03:35:08,520
we have total six keys and six values
because we removed one.

2508
03:35:08,520 --> 03:35:12,800
And for the duplicate, let's say,

2509
03:35:13,960 --> 03:35:20,920
okay, if we try to insert Amazon,

2510
03:35:21,360 --> 03:35:41,640
so will we see the Facebook
or the Amazon guys?

2511
03:35:41,640 --> 03:35:48,120
So because we are replacing
the same company, let me put it on five

2512
03:35:48,600 --> 03:35:55,240
now you guys will see it.

2513
03:35:55,240 --> 03:35:55,600
Okay,

2514
03:35:56,520 --> 03:36:04,200
so we see Amazon for for an hour 45.

2515
03:36:04,200 --> 03:36:19,360
Are there any questions?

2516
03:36:19,360 --> 03:36:35,280
Okay.

2517
03:36:35,280 --> 03:36:37,680
So for the next example, let me

2518
03:36:55,680 --> 03:36:57,920
let me use this map.

2519
03:36:57,920 --> 03:37:00,840
So let's say, guys, now

2520
03:37:00,840 --> 03:37:03,480
you want to remove

2521
03:37:03,880 --> 03:37:06,480
some values

2522
03:37:06,920 --> 03:37:09,120
based on key

2523
03:37:09,120 --> 03:37:11,680
or value.

2524
03:37:11,680 --> 03:37:13,760
Now, if we try to do that,

2525
03:37:15,200 --> 03:37:17,000
we might

2526
03:37:18,720 --> 03:37:21,920
end up
changing the size of the map, right?

2527
03:37:22,200 --> 03:37:25,480
So when we are doing an operation

2528
03:37:25,480 --> 03:37:28,840
that can change this size,
what should we do, guys?

2529
03:37:30,040 --> 03:37:33,960
Should we use the normal for loops
or should we use something else

2530
03:37:35,480 --> 03:37:36,360
using

2531
03:37:41,440 --> 03:37:44,960
We should use the I create those, right?

2532
03:37:46,560 --> 03:37:50,960
So How we can get the operator in maps.

2533
03:37:52,120 --> 03:37:57,280
So there are two types
of three types of traders in maps.

2534
03:37:57,280 --> 03:38:00,840
One that can give us keys of the map,

2535
03:38:01,920 --> 03:38:05,960
one that new that can give us the values

2536
03:38:06,240 --> 03:38:10,440
and there is this third time
which can give us both keys and values.

2537
03:38:10,560 --> 03:38:13,000
So let's start from the

2538
03:38:13,080 --> 03:38:16,040
simple one they can do
that tells us the keys.

2539
03:38:16,040 --> 03:38:22,080
So example.

2540
03:38:22,080 --> 03:38:27,120
So we have this map and if we see

2541
03:38:28,280 --> 03:38:30,920
key said

2542
03:38:31,560 --> 03:38:34,040
so before the articles,
let me tell you about the

2543
03:38:34,680 --> 03:38:38,640
how you can get the keys separately
and the value

2544
03:38:38,680 --> 03:38:43,120
separately from a map.

2545
03:38:43,120 --> 03:38:43,600
Okay.

2546
03:38:43,600 --> 03:38:46,720
So if I say key sect,

2547
03:38:48,160 --> 03:38:52,120
the then I show you that intelligent
can also introduce local variables

2548
03:38:52,120 --> 03:39:01,440
for you automatically like this.

2549
03:39:01,440 --> 03:39:08,800
Then you guys give me.

2550
03:39:08,800 --> 03:39:15,080
So if a map third is returning something
and you are not sure about exactly

2551
03:39:16,440 --> 03:39:19,480
which
type of variable you should use the store

2552
03:39:19,480 --> 03:39:21,840
that you can press all enter

2553
03:39:22,600 --> 03:39:24,640
and then click on

2554
03:39:25,200 --> 03:39:28,400
introduce local variable
or what you can do.

2555
03:39:28,400 --> 03:39:31,680
You can also say
I create all our set and string

2556
03:39:33,120 --> 03:39:35,480
so it will write a loop for you as well.

2557
03:39:36,400 --> 03:39:42,200
So writing a loop from a key set or first

2558
03:39:42,560 --> 03:39:46,080
storing it inside a variable.

2559
03:39:46,520 --> 03:39:48,080
Okay.

2560
03:39:48,080 --> 03:39:51,000
Me change it

2561
03:39:51,280 --> 03:39:52,680
to keys.

2562
03:39:52,960 --> 03:39:54,000
So this key.

2563
03:39:54,000 --> 03:39:56,880
So it returns us a set

2564
03:39:57,880 --> 03:40:00,640
of all the keys

2565
03:40:01,440 --> 03:40:04,280
that are present inside of this map.

2566
03:40:05,520 --> 03:40:07,920
Why we get this guys

2567
03:40:07,920 --> 03:40:11,480
is it safe to have this x.

2568
03:40:11,480 --> 03:40:15,720
So now all the keys
will be converted to a set

2569
03:40:16,400 --> 03:40:19,000
and this he said to method

2570
03:40:19,520 --> 03:40:22,440
will return us all the keys

2571
03:40:22,520 --> 03:40:27,600
separately from a map.

2572
03:40:27,600 --> 03:40:34,560
So for example,
now I have the keys I can put in data.

2573
03:40:34,800 --> 03:40:35,000
Right?

2574
03:40:36,360 --> 03:40:43,960
So keys.

2575
03:40:43,960 --> 03:40:49,080
So I get
only and only the keys from this map

2576
03:40:49,400 --> 03:40:52,560
using this key segmented.

2577
03:40:53,840 --> 03:40:56,840
And there another method
to get the values.

2578
03:40:56,840 --> 03:40:59,440
Can you guys search
through your intelligent

2579
03:40:59,840 --> 03:41:02,760
and tell me the name of dark matter

2580
03:41:02,760 --> 03:41:04,960
if I only want be

2581
03:41:04,960 --> 03:41:13,920
from this sect?

2582
03:41:13,920 --> 03:41:14,920
Surprise me.

2583
03:41:14,920 --> 03:41:18,120
Dark values.

2584
03:41:18,520 --> 03:41:23,120
Yeah, well, you said.

2585
03:41:23,800 --> 03:41:26,440
But what if there are duplicate values?

2586
03:41:27,000 --> 03:41:30,120
So is it safe to have this set
for the values

2587
03:41:31,800 --> 03:41:33,920
or just only safe for the keys?

2588
03:41:35,160 --> 03:41:37,880
So in maps we are sure that

2589
03:41:37,880 --> 03:41:40,920
there will no duplicate keys,

2590
03:41:41,240 --> 03:41:43,320
but we cannot say that with the

2591
03:41:44,520 --> 03:41:45,240
values. Right.

2592
03:41:45,240 --> 03:41:45,840
I can.

2593
03:41:45,840 --> 03:41:47,560
I can have a duplicate value.

2594
03:41:47,560 --> 03:41:50,000
No issues with that.

2595
03:41:50,000 --> 03:41:54,600
So if we get a set in here,
what will happen guys?

2596
03:41:55,920 --> 03:41:59,640
All those duplicates,
they will be removed.

2597
03:41:59,880 --> 03:42:02,400
So instead of that we get a collection

2598
03:42:03,480 --> 03:42:05,960
and the
and the values they are off type double.

2599
03:42:05,960 --> 03:42:12,320
So we get a double and then values.

2600
03:42:12,320 --> 03:42:21,400
Remember that collection framework.

2601
03:42:21,400 --> 03:42:25,640
So if you want the values

2602
03:42:26,760 --> 03:42:29,200
you only if you are only interested

2603
03:42:29,640 --> 03:42:32,280
in them, in the values

2604
03:42:32,280 --> 03:42:34,360
from a map

2605
03:42:34,560 --> 03:42:36,960
you can get that.

2606
03:42:36,960 --> 03:42:39,600
And if you are interested

2607
03:42:39,600 --> 03:42:42,440
only in keys, you can also get that.

2608
03:42:43,040 --> 03:42:47,720
How can I get a
how can I get the keys from the map?

2609
03:42:48,360 --> 03:42:51,040
I can write

2610
03:42:51,040 --> 03:42:53,280
this key set in here

2611
03:42:55,160 --> 03:43:00,600
and if I want the values,
I can also write.

2612
03:43:01,440 --> 03:43:06,080
I can also call this values method and
it will only only written with the values.

2613
03:43:06,080 --> 03:43:08,360
But this key set it returns.

2614
03:43:08,360 --> 03:43:10,200
Give me a set.

2615
03:43:10,280 --> 03:43:11,560
But this values.

2616
03:43:11,560 --> 03:43:14,880
It returns as a collection. Why?

2617
03:43:15,280 --> 03:43:18,880
Because keys can never be duplicate

2618
03:43:19,200 --> 03:43:22,480
so it's safe to have them in a set.

2619
03:43:23,280 --> 03:43:27,120
But the values can be duplicated
so we get a collection

2620
03:43:27,120 --> 03:43:30,000
back from the values method.

2621
03:43:30,520 --> 03:44:10,560
Is it clear right.

2622
03:44:10,560 --> 03:44:12,200
Line 80.

2623
03:44:12,200 --> 03:44:14,760
Here we are getting

2624
03:44:21,920 --> 03:44:25,600
here we
are getting the values from this set

2625
03:44:26,400 --> 03:44:32,920
and here we are getting the keys.

2626
03:44:32,920 --> 03:44:36,240
So if you all, if you are only

2627
03:44:36,240 --> 03:44:42,360
and only interested in keys,
you can call this method

2628
03:44:42,960 --> 03:44:48,000
and that method will return
all the keys in the form of a sect

2629
03:44:48,280 --> 03:44:52,440
and then you can put into them out here.

2630
03:44:52,440 --> 03:44:56,040
If you are only only interested in values

2631
03:44:56,040 --> 03:44:59,160
of a map,

2632
03:44:59,160 --> 03:45:03,240
you can call the values
method to get the values.

2633
03:45:04,600 --> 03:45:06,320
But this values method

2634
03:45:06,320 --> 03:45:08,920
returns
the values in the form of a collection.

2635
03:45:09,480 --> 03:45:10,360
What does this collection?

2636
03:45:10,360 --> 03:45:13,360
You guys
remember the interface in collection

2637
03:45:14,400 --> 03:45:16,600
and then you can get

2638
03:45:17,720 --> 03:45:20,160
only and only the values.

2639
03:45:20,160 --> 03:45:25,320
So it's kind of separating out the keys
and values from a map and returning.

2640
03:45:25,520 --> 03:45:30,880
Returning you the data in separate
data structures in the form of collections

2641
03:45:35,120 --> 03:45:38,200
you asset returns a set view of
is contained in this map.

2642
03:45:38,200 --> 03:45:41,560
Yes, if you are right,
is there any shortcut you did

2643
03:45:41,600 --> 03:45:44,680
to get collection by help of intelligence?

2644
03:45:44,880 --> 03:45:46,560
No, no, there is no shortcut.

2645
03:45:46,560 --> 03:45:48,840
The shortcut was just to introduce
the variable.

2646
03:45:49,600 --> 03:45:55,760
So let's say if I delayed this, I want
if I only want the values, I will say

2647
03:45:55,800 --> 03:46:01,120
collection and these types of the values
if double double

2648
03:46:02,280 --> 03:46:04,960
values is equal to the name

2649
03:46:04,960 --> 03:46:07,160
of the map and dark values.

2650
03:46:08,120 --> 03:46:13,400
So so key is always come first
inside the bracket. Yes.

2651
03:46:13,720 --> 03:46:14,920
Yes. Actually you are right.

2652
03:46:14,920 --> 03:46:19,200
We can directly do s our growth grocery is
not value is that I You are correct.

2653
03:46:19,200 --> 03:46:25,000
We can also do that.

2654
03:46:25,000 --> 03:46:25,840
Is it paradise?

2655
03:46:25,840 --> 03:46:30,760
What I am doing on line 16 and on line 18

2656
03:46:38,440 --> 03:46:42,160
we can
use this to store username and password.

2657
03:46:42,160 --> 03:46:43,640
Yes, we can also do that.

2658
03:46:43,640 --> 03:46:44,560
What is the difference

2659
03:46:44,560 --> 03:46:48,560
between keys are ten and three
said we will discuss entry set as well.

2660
03:46:48,960 --> 03:46:51,920
Just give me one moment.

2661
03:46:51,920 --> 03:46:53,320
It's good time for now.

2662
03:46:53,320 --> 03:46:56,160
I hope I will be able to remember tomorrow

2663
03:46:58,960 --> 03:47:02,160
and if so, no duplicates is allowed in
both.

2664
03:47:02,240 --> 03:47:04,200
No values can be duplicate.

2665
03:47:04,200 --> 03:47:08,440
You see, I am inserting 4.3 twice
so the alias can do.

2666
03:47:08,520 --> 03:47:08,840
We can.

2667
03:47:08,840 --> 03:47:11,240
We can have duplicate values but not keys.

2668
03:47:12,720 --> 03:47:17,760
So if I print out this map here

2669
03:47:26,880 --> 03:47:27,960
in case of username

2670
03:47:27,960 --> 03:47:35,440
and password, if you want to store
the username and password,

2671
03:47:35,480 --> 03:47:38,280
you don't want to have duplicate passwords

2672
03:47:39,440 --> 03:47:40,600
like for example.

2673
03:47:40,600 --> 03:47:43,640
Nor not, two persons can also have same

2674
03:47:43,640 --> 03:48:21,680
passwords.

2675
03:48:21,680 --> 03:48:22,520
We find that

2676
03:48:38,600 --> 03:48:39,600
this password is

2677
03:48:39,600 --> 03:48:43,120
already used by star 119 to try another.

2678
03:48:43,560 --> 03:48:52,080
You you want to have a nice
you own the password as well,

2679
03:48:52,080 --> 03:48:54,200
but we need to thank it.

2680
03:48:54,480 --> 03:48:59,000
So once you know the password
you want to tell that he was user,

2681
03:48:59,000 --> 03:49:03,720
please use a different password.

2682
03:49:03,720 --> 03:49:06,960
We and in the two users
can have duplicate password.

2683
03:49:07,520 --> 03:49:11,640
Is there any harm that.

2684
03:49:11,640 --> 03:49:14,760
But yes, if you want
that you have to think of another way

2685
03:49:15,520 --> 03:49:20,880
it's not possible do using maps because
maps they can have duplicate values.

2686
03:49:20,880 --> 03:49:23,560
You can have a check on usernames
but not on maps

2687
03:49:28,600 --> 03:49:30,480
to print keys.

2688
03:49:30,480 --> 03:49:34,240
Why do we use a set
and a collection of our values?

2689
03:49:34,560 --> 03:49:38,520
So this is how it is by default
and designed by Java guys?

2690
03:49:38,800 --> 03:49:41,160
Because keys,
they always have unique values.

2691
03:49:41,160 --> 03:49:43,400
They use the asset for that

2692
03:49:43,960 --> 03:49:47,560
and values can duplicated
so that that's why they use collection.

2693
03:49:48,480 --> 03:49:51,320
I have tried to find key asset
by using collection.

2694
03:49:51,320 --> 03:49:54,880
It works with this way as well.

2695
03:49:54,880 --> 03:50:00,320
Building.

2696
03:50:00,320 --> 03:50:04,720
Oh yes, because the set all set is
also a collection.

2697
03:50:05,240 --> 03:50:06,400
Now is good. You see

2698
03:50:07,440 --> 03:50:07,920
they are

2699
03:50:07,920 --> 03:50:11,400
all coming from the collections
framework, right?

2700
03:50:11,880 --> 03:50:14,880
So you guys remember that.

2701
03:50:14,880 --> 03:50:19,520
So for example, if you want to do this

2702
03:50:20,880 --> 03:50:22,520
right, you can also do that.

2703
03:50:22,520 --> 03:50:26,360
You, you can use the collection for both
because collection is better integrate

2704
03:50:26,640 --> 03:50:29,440
collection is the parent parent interface

2705
03:50:30,000 --> 03:50:34,560
and the asset class is implementing
in the early stages, implementing it.

2706
03:50:34,560 --> 03:50:35,280
All the classes

2707
03:50:35,280 --> 03:50:39,440
they are implementing so child class
objects can be stored in the parent class.

2708
03:50:39,480 --> 03:50:42,120
Easy attention.

2709
03:50:42,160 --> 03:50:43,680
Would you just go to hash map?

2710
03:50:43,680 --> 03:50:45,480
I really don't understand.

2711
03:50:45,480 --> 03:50:48,800
I We're doing
we ending the class a little different.

2712
03:50:48,840 --> 03:50:52,080
Know why we should end the class?

2713
03:50:52,080 --> 03:50:56,280
At least let me rephrase what companies
use for storing user name passwords.

2714
03:50:56,360 --> 03:50:59,000
They use something called the database.

2715
03:51:00,000 --> 03:51:02,280
I will teach you that database

2716
03:51:02,800 --> 03:51:08,960
in the next month or so.

2717
03:51:08,960 --> 03:51:13,360
Maps can not have duplicate for kids,
but it allows duplicate for values.

2718
03:51:13,360 --> 03:51:14,360
Yes, you'll get that.

2719
03:51:14,360 --> 03:51:17,760
That's why you
you can use the collection for both

2720
03:51:23,480 --> 03:51:23,760
is are

2721
03:51:23,760 --> 03:51:28,040
clear now guys so this
variable is going to be of my collection

2722
03:51:28,120 --> 03:51:34,680
can I can I use the table here?

2723
03:51:34,680 --> 03:51:37,520
So if you guys remember

2724
03:51:48,840 --> 03:51:50,080
why I am able

2725
03:51:50,080 --> 03:51:55,080
to use any of the collection or START
or any of this because this collection

2726
03:51:55,080 --> 03:51:59,520
is the parent of all is parent of
is the parent of list.

2727
03:51:59,640 --> 03:52:02,640
So I can use collection
to store both type of objects

2728
03:52:03,960 --> 03:52:08,640
and I even more parent of all
so you can use the table

2729
03:52:08,640 --> 03:52:11,880
as reported depends on you
but do you guys remember

2730
03:52:11,880 --> 03:52:15,480
the disadvantage of doing this?

2731
03:52:15,480 --> 03:52:18,360
I will only be able to call the methods

2732
03:52:18,360 --> 03:52:20,520
which are present inside the table

2733
03:52:21,480 --> 03:52:23,680
if I stored that inside the table.

2734
03:52:23,680 --> 03:52:24,480
Right.

2735
03:52:25,320 --> 03:52:29,840
If I store that variable inside
a collection, I will only be able to call

2736
03:52:29,840 --> 03:52:33,560
the methods from collection
that are same in

2737
03:52:33,560 --> 03:52:39,200
both of those classes.

2738
03:52:39,200 --> 03:52:49,120
If there is a specific method,
I will not be able to do that.

2739
03:52:49,120 --> 03:52:50,040
All right.

2740
03:52:50,040 --> 03:52:58,880
So is it clear now?

2741
03:52:58,880 --> 03:53:02,640
So this is how we get the is
this is how we get the value of it.

2742
03:53:02,640 --> 03:53:14,120
It depends you in which variable
you want to store.

2743
03:53:14,120 --> 03:53:16,440
So let me copy this for the next demo

2744
03:53:33,520 --> 03:53:34,720
and let me

2745
03:53:34,720 --> 03:53:40,080
remove this.

2746
03:53:40,080 --> 03:53:44,160
So once I have a guys, once I have a set,

2747
03:53:44,680 --> 03:53:52,600
can I get it later from a set?

2748
03:53:52,600 --> 03:53:55,760
If I have a set, can I get iterator

2749
03:53:55,760 --> 03:54:02,400
from that set?

2750
03:54:02,400 --> 03:54:05,720
So what I can do, I can see out.

2751
03:54:06,600 --> 03:54:10,440
I tried to write
because we all know that we can have

2752
03:54:11,120 --> 03:54:13,880
and I can see

2753
03:54:19,840 --> 03:54:22,080
that now I have an operator.

2754
03:54:22,080 --> 03:54:24,440
So what I did

2755
03:54:24,440 --> 03:54:27,240
from the map, I first

2756
03:54:27,240 --> 03:54:30,960
got the keys in the form of a set

2757
03:54:31,800 --> 03:54:34,920
and on that set now I am on top of that.

2758
03:54:34,920 --> 03:54:37,200
I am getting the art from that.

2759
03:54:37,200 --> 03:54:41,200
So it clear, guys,
what I am doing on this line from the map.

2760
03:54:41,240 --> 03:54:44,000
First I get the ease

2761
03:54:44,000 --> 03:54:47,760
and from those keys
I get the operator right.

2762
03:54:48,320 --> 03:54:51,120
So now I can loop through the keys, right?

2763
03:54:51,120 --> 03:54:54,560
I can see keys not has the next

2764
03:54:56,480 --> 03:54:59,720
and then I can print out using the

2765
03:55:01,440 --> 03:55:03,680
is the dot

2766
03:55:03,680 --> 03:55:12,560
next method right.

2767
03:55:12,560 --> 03:55:16,000
So I get all the using here all use.

2768
03:55:16,360 --> 03:55:19,480
Is it clear what I am doing in here?

2769
03:55:19,480 --> 03:55:22,920
From the map I separate all the keys

2770
03:55:24,120 --> 03:55:27,280
in a set and once I have set

2771
03:55:28,040 --> 03:55:30,360
I get the operator from that set.

2772
03:55:31,080 --> 03:55:34,120
Can you repeat please in line 17.

2773
03:55:34,120 --> 03:55:36,640
So from the map

2774
03:55:36,640 --> 03:55:38,920
I get the keys are tracking problems.

2775
03:55:39,200 --> 03:55:41,600
So from map

2776
03:55:42,480 --> 03:55:45,000
I get a set

2777
03:55:46,320 --> 03:55:50,040
and from assert I got the right later

2778
03:55:52,520 --> 03:55:56,120
I get on this line line 17

2779
03:55:57,680 --> 03:56:00,000
again because you guys remember

2780
03:56:01,800 --> 03:56:03,320
the I table

2781
03:56:03,320 --> 03:56:06,600
interface is implemented
by collections framework

2782
03:56:07,720 --> 03:56:11,280
but we don't have
that flexibility in the maps.

2783
03:56:11,280 --> 03:56:14,280
So that's why we convert the maps to

2784
03:56:15,600 --> 03:56:17,120
the collections.

2785
03:56:18,360 --> 03:56:19,160
It can be a

2786
03:56:19,160 --> 03:56:22,440
side is can be at a established
or anything like that.

2787
03:56:22,440 --> 03:56:26,160
And then we get the iterator from that.

2788
03:56:27,120 --> 03:56:31,120
And let's say guys,

2789
03:56:31,120 --> 03:56:33,320
I want to remove all the,

2790
03:56:34,320 --> 03:56:38,040
all the elements
which contain this letter.

2791
03:56:38,040 --> 03:56:41,120
E So I want to those keys.

2792
03:56:41,640 --> 03:56:46,160
Can you guys help me
write down the logic for that?

2793
03:56:46,160 --> 03:56:48,840
So I have a, I have e

2794
03:56:51,520 --> 03:56:52,800
using

2795
03:56:53,320 --> 03:56:55,720
keys and next

2796
03:56:56,600 --> 03:56:58,520
what should I write then

2797
03:56:58,520 --> 03:57:01,440
if I want to remove the keys

2798
03:57:01,480 --> 03:57:05,400
that contain the letter E

2799
03:57:11,640 --> 03:57:19,160
if E contains letter E,

2800
03:57:19,920 --> 03:57:24,600
which method I can call from the iterator
to remove the entries.

2801
03:57:24,600 --> 03:57:28,440
I see.

2802
03:57:28,440 --> 03:57:31,520
Let me rename it to iterator
so that it is clear.

2803
03:57:33,280 --> 03:57:36,280
So I treated
and has next to it or not next

2804
03:57:36,840 --> 03:57:40,360
and I say I prefer dot remove

2805
03:57:46,920 --> 03:57:50,720
and now if I print my map

2806
03:57:51,960 --> 03:57:53,320
in here

2807
03:58:03,480 --> 03:58:06,520
I only get milk and tomato.

2808
03:58:06,840 --> 03:58:07,560
Right.

2809
03:58:07,560 --> 03:58:12,040
The egg, the rice, they have been removed.

2810
03:58:13,200 --> 03:58:16,120
So this is how we remove the entries

2811
03:58:17,040 --> 03:58:20,880
from a map using iterator.

2812
03:58:21,480 --> 03:58:24,960
I can do it separate separately for keys.

2813
03:58:25,880 --> 03:58:28,240
I can do it separately for values

2814
03:58:28,760 --> 03:58:32,320
and I can do combined
with keys and values.

2815
03:58:32,320 --> 03:58:36,960
So right now we are learning
how to only delete certain keys.

2816
03:58:38,040 --> 03:58:41,520
Then we will discuss how to delete values.

2817
03:58:41,520 --> 03:58:45,480
Only then we will discuss
how to delete both both of them

2818
03:58:46,040 --> 03:58:50,040
if we are going
how wide these keys have been deleted.

2819
03:58:50,760 --> 03:58:56,280
Why are these two
things have been deleted from this map?

2820
03:58:56,280 --> 03:59:01,000
So first I get to the keys,
then I get the iterator

2821
03:59:01,560 --> 03:59:04,320
from those keys
and then the this this logic.

2822
03:59:04,320 --> 03:59:05,520
You guys already know

2823
03:59:06,720 --> 03:59:08,920
the only thing that can confuse you.

2824
03:59:08,920 --> 03:59:10,920
It might be distinct.

2825
03:59:10,920 --> 03:59:15,360
So from MAP we get the keys,

2826
03:59:15,360 --> 03:59:18,240
these keys, egg, rice, tomato

2827
03:59:18,720 --> 03:59:21,400
and then we get iterator on top of that.

2828
03:59:22,760 --> 03:59:37,720
Can I move to the next example?

2829
03:59:37,720 --> 03:59:44,000
I think you guys are more tired
or better than me.

2830
03:59:44,000 --> 03:59:46,880
Okay. Yes.

2831
03:59:48,000 --> 03:59:52,320
So let me.

2832
03:59:52,480 --> 03:59:52,920
Yeah.

2833
03:59:52,920 --> 04:00:08,360
And the third part.

2834
04:00:08,360 --> 04:00:12,000
So previously I was injecting

2835
04:00:14,240 --> 04:00:15,960
a key set.

2836
04:00:15,960 --> 04:00:19,200
If I want to get the values

2837
04:00:20,280 --> 04:00:22,800
which method I should use
instead of this case,

2838
04:00:22,920 --> 04:00:27,120
the guys,

2839
04:00:27,120 --> 04:00:30,560
the values method

2840
04:00:31,040 --> 04:00:34,320
and what is the data type of values
method.

2841
04:00:35,480 --> 04:00:36,480
It's a double.

2842
04:00:36,480 --> 04:00:43,040
So I should change this
to double estimate. Yes.

2843
04:00:43,040 --> 04:00:47,040
And then it will be double here as well.

2844
04:00:47,280 --> 04:00:49,640
So let's write this logic again.

2845
04:00:51,120 --> 04:00:58,480
So I am this time.

2846
04:00:58,480 --> 04:01:00,000
What's the use of real life?

2847
04:01:00,000 --> 04:01:02,640
In the real life,
we will learn that in the next class.

2848
04:01:03,880 --> 04:01:07,200
And when you will be
building the framework, you guys will see

2849
04:01:07,480 --> 04:01:10,800
all the use cases
for all the Java that you have. Like

2850
04:01:12,840 --> 04:01:15,240
do you guys use

2851
04:01:15,240 --> 04:01:18,720
loops or methods or variables in selenium

2852
04:01:20,320 --> 04:01:22,200
and you guys use the variables,

2853
04:01:22,200 --> 04:01:24,280
insulin to interact with web pages.

2854
04:01:25,560 --> 04:01:27,840
You guys didn't use variables.

2855
04:01:27,840 --> 04:01:32,760
How you have been storing your data.

2856
04:01:32,760 --> 04:01:35,480
You guys didn't create any variable
to store any

2857
04:01:36,960 --> 04:01:39,200
anything in there.

2858
04:01:39,520 --> 04:01:41,800
What is what is the web driver?

2859
04:01:41,800 --> 04:01:43,680
VM driver is a variable.

2860
04:01:43,680 --> 04:01:45,680
How are you guys using the methods?

2861
04:01:45,720 --> 04:01:47,480
Get title.

2862
04:01:47,640 --> 04:01:57,240
They are all real life use cases.

2863
04:01:57,240 --> 04:02:11,440
I virtually knew.

2864
04:02:11,440 --> 04:02:12,960
No, it's cool.

2865
04:02:12,960 --> 04:02:17,280
I like it because of okay,
so I am getting the values

2866
04:02:18,320 --> 04:02:23,160
and from values I am getting the iterator
and now I can write any logic.

2867
04:02:23,160 --> 04:02:25,560
For example, let's say

2868
04:02:27,760 --> 04:02:31,280
if so, first by right double

2869
04:02:35,080 --> 04:02:38,520
value.

2870
04:02:38,520 --> 04:02:41,560
I say I create third or next,

2871
04:02:41,560 --> 04:02:43,680
and then I say if

2872
04:02:47,440 --> 04:02:51,000
value is C equal.

2873
04:02:51,800 --> 04:02:56,880
If the value is equal to 4.3,

2874
04:02:56,880 --> 04:03:13,440
then I say I pay third or three more.

2875
04:03:13,440 --> 04:03:18,240
So now if you guys notice all the values

2876
04:03:18,280 --> 04:03:21,440
which were 4.3, they have been removed.

2877
04:03:22,120 --> 04:03:23,920
They have been removed.

2878
04:03:24,120 --> 04:03:28,160
So if you are only interested in values,

2879
04:03:28,160 --> 04:03:31,760
you want to manipulate the values
from a map using an arbitrator.

2880
04:03:32,040 --> 04:03:37,600
You can use this approach
if you are only interested in keys

2881
04:03:38,160 --> 04:03:42,120
and you want to use the iterator for keys,
you can use the previous approach

2882
04:03:42,840 --> 04:03:46,800
and if you are interested in both of them,
then we have another thing

2883
04:03:47,160 --> 04:03:51,000
that is called entry set,
so we can use that as well.

2884
04:03:52,080 --> 04:03:53,160
Is it clear, guys,

2885
04:03:53,160 --> 04:04:04,440
this example.

2886
04:04:04,440 --> 04:04:07,880
So let's use the third type

2887
04:04:08,880 --> 04:04:12,800
to get to both keys and values

2888
04:04:14,000 --> 04:04:35,640
using a single iterator.

2889
04:04:35,640 --> 04:04:40,640
Before I show you that,
let me tell you a concept

2890
04:04:41,640 --> 04:04:43,960
that is called

2891
04:04:48,680 --> 04:04:50,760
the empty set

2892
04:04:51,120 --> 04:04:56,480
internally, when we create a set

2893
04:05:13,720 --> 04:05:14,000
here,

2894
04:05:14,480 --> 04:05:26,600
let me do this.

2895
04:05:26,600 --> 04:05:30,240
So what Java is doing internally
in Java, Dave

2896
04:05:31,000 --> 04:05:34,000
both of these values is

2897
04:05:49,200 --> 04:05:51,480
and I'll create

2898
04:05:51,480 --> 04:05:58,120
a box around them.

2899
04:05:58,120 --> 04:06:04,080
So inside this bigger box, this
if this is a map,

2900
04:06:04,080 --> 04:06:14,360
this inner box is called a single entry,

2901
04:06:14,360 --> 04:06:17,160
then it will do the same
for the second entry.

2902
04:06:17,640 --> 04:06:20,760
It will create an entry in here, in here
and here.

2903
04:06:22,720 --> 04:06:25,640
And inside of that entry,

2904
04:06:25,640 --> 04:06:30,120
all the data from here
will be stored in the form of entries,

2905
04:06:31,560 --> 04:06:33,240
in the form of entries.

2906
04:06:33,240 --> 04:06:35,840
So what happens

2907
04:06:35,840 --> 04:06:40,680
is that if we want to get both the keys

2908
04:06:40,680 --> 04:06:44,920
and the values, so what

2909
04:06:44,920 --> 04:06:48,760
will be your major in which position
you want your plan to work?

2910
04:06:48,760 --> 04:06:52,800
I will be an automation and I Indian

2911
04:06:52,800 --> 04:06:56,120
you artificial intelligence,

2912
04:06:56,120 --> 04:06:58,640
building algorithms and robots

2913
04:06:58,640 --> 04:07:02,800
that can work like humans.

2914
04:07:02,800 --> 04:07:03,840
After my master.

2915
04:07:03,840 --> 04:07:06,240
This is where I am planning to do my Ph.D.

2916
04:07:07,160 --> 04:07:22,800
next year.

2917
04:07:22,800 --> 04:07:28,520
You will control all Pakistan.

2918
04:07:28,520 --> 04:07:30,480
You want to teach? Yes.

2919
04:07:30,480 --> 04:07:34,800
Until I am done with my Ph.D.,
I will be teaching next five years

2920
04:07:34,800 --> 04:07:43,800
at least I will be teaching.

2921
04:07:43,800 --> 04:07:47,720
So, guys,
if I want to get to both the keys

2922
04:07:47,720 --> 04:07:51,800
and the values combined,
why do you need to be?

2923
04:07:51,800 --> 04:08:01,080
Because to to have my research,
you know, multiple publications.

2924
04:08:01,320 --> 04:08:03,320
Papers? Yep. Passion.

2925
04:08:03,320 --> 04:08:07,920
Totally passion.

2926
04:08:07,920 --> 04:08:12,480
So if I want to have both keys
and values in a single set,

2927
04:08:13,560 --> 04:08:16,720
I need to get a special type of printer

2928
04:08:17,720 --> 04:08:20,600
that is called Entry SEQ.

2929
04:08:21,640 --> 04:08:24,840
And basically,
if there is going to be a judgment day,

2930
04:08:24,840 --> 04:08:31,320
we want to know who to thank. So

2931
04:08:33,000 --> 04:08:35,400
they have already started doing that logo.

2932
04:08:35,760 --> 04:08:38,360
They have already started
doing their role both

2933
04:08:55,680 --> 04:08:58,480
You could see that
it was a cleaning robot.

2934
04:08:58,800 --> 04:09:02,360
The lady was sleeping and it took all

2935
04:09:04,640 --> 04:09:06,320
the scientist.

2936
04:09:06,320 --> 04:09:06,880
Yeah,

2937
04:09:07,920 --> 04:09:11,400
it's vacuum robot is sleeping.

2938
04:09:11,400 --> 04:09:15,280
WOMAN Here it's

2939
04:09:16,360 --> 04:09:19,240
and so it begins

2940
04:09:20,880 --> 04:09:22,960
with the yeah,

2941
04:09:23,000 --> 04:09:27,000
you guys need to be very careful.

2942
04:09:27,000 --> 04:09:29,640
Oh, my God, She is not going

2943
04:09:30,720 --> 04:09:38,640
anywhere else in the future.

2944
04:09:38,640 --> 04:09:42,200
So if I want the keys and the values

2945
04:09:44,120 --> 04:09:46,240
are using a single iterator,

2946
04:09:47,880 --> 04:09:53,440
so what I can do,

2947
04:09:53,440 --> 04:10:01,040
I can get a new type of vibrator,
which will give me both keys and values.

2948
04:10:01,280 --> 04:10:03,320
We just want to have cuddly here.

2949
04:10:03,320 --> 04:10:08,720
But I wanted to present.

2950
04:10:08,720 --> 04:10:12,120
So what we can do we can see

2951
04:10:12,560 --> 04:10:15,560
girl three dot entry set

2952
04:10:17,400 --> 04:10:19,320
here and

2953
04:10:19,320 --> 04:10:37,800
this entry set will return us.

2954
04:10:37,800 --> 04:10:40,400
It will return us both keys and values.

2955
04:10:40,400 --> 04:10:46,160
Have you tried
to put the microchip in vaccine?

2956
04:10:46,160 --> 04:10:48,280
So it's all over the world, right?

2957
04:10:48,400 --> 04:10:53,280
I you So in Pakistan, people in here,
they are not taking the vaccine.

2958
04:10:53,440 --> 04:10:57,560
They say that USA is paying $10,000

2959
04:10:58,680 --> 04:11:03,400
to have that vaccine inside you
and you will be dead in two years.

2960
04:11:03,400 --> 04:11:06,600
And all that.

2961
04:11:06,600 --> 04:11:07,920
Oh, my God.

2962
04:11:07,920 --> 04:11:10,480
They are all blaming that

2963
04:11:12,000 --> 04:11:14,800
the who was the creator of Microsoft's

2964
04:11:18,960 --> 04:11:20,800
make it about to be Steve

2965
04:11:20,800 --> 04:11:23,600
Jobs, not Steve Jobs created Bill Gates.

2966
04:11:24,560 --> 04:11:26,280
They are a whole thing that.

2967
04:11:26,280 --> 04:11:31,160
Gates, because of Bill Gates,
make it about to be in your side and time.

2968
04:11:31,160 --> 04:11:38,760
And we do a lot to protect you. So

2969
04:11:40,200 --> 04:11:42,840
this entry said, guys,

2970
04:11:42,840 --> 04:11:45,600
it will return me, assert

2971
04:11:50,640 --> 04:11:56,520
all entry.

2972
04:11:56,520 --> 04:11:58,960
And what does each entry contains?

2973
04:11:58,960 --> 04:12:03,600
It contains eggs which are all five screen

2974
04:12:04,840 --> 04:12:08,160
and the values are off type double

2975
04:12:12,080 --> 04:12:15,400
and let's call it antisec.

2976
04:12:15,400 --> 04:12:20,960
So if you are only interested in these,
we use the key.

2977
04:12:20,960 --> 04:12:26,520
So if you are only interested in values,
we use values.

2978
04:12:27,280 --> 04:12:32,000
If you are interested in both keys
and values combined together,

2979
04:12:32,520 --> 04:12:36,120
then we use the entries

2980
04:12:36,720 --> 04:12:38,160
from all to make perfect

2981
04:12:38,160 --> 04:12:41,320
those are more list

2982
04:12:41,320 --> 04:12:44,680
are too hard near the Microsoft store.

2983
04:12:44,680 --> 04:12:47,320
So now this will give me.

2984
04:12:47,720 --> 04:12:50,760
So for example, if I

2985
04:12:50,760 --> 04:12:53,160
if I use the for each loop

2986
04:12:54,880 --> 04:12:57,160
so map

2987
04:12:57,240 --> 04:12:59,400
so inside this sect we have this

2988
04:13:01,680 --> 04:13:04,920
map doc and pre

2989
04:13:05,400 --> 04:13:08,520
and each entry.

2990
04:13:08,800 --> 04:13:10,600
Yes. Let me explain it again.

2991
04:13:10,600 --> 04:13:12,840
Each entry consists of string

2992
04:13:14,400 --> 04:13:17,400
and let's call it

2993
04:13:17,760 --> 04:13:23,400
an entry.

2994
04:13:23,400 --> 04:13:25,800
And now I can get to both.

2995
04:13:25,800 --> 04:13:29,760
B So in this entry
there are two methods and three dot

2996
04:13:30,600 --> 04:13:31,840
get key

2997
04:13:36,520 --> 04:13:40,440
and and three dot get value.

2998
04:13:41,760 --> 04:13:45,360
So demo it.

2999
04:13:45,360 --> 04:13:50,440
We need a lot of practice.

3000
04:13:50,440 --> 04:13:56,200
So the maps internally, what they do there

3001
04:13:56,200 --> 04:13:58,600
don't store the key value appears

3002
04:14:00,800 --> 04:14:03,600
just like their work they do.

3003
04:14:03,600 --> 04:14:06,760
Each key value pair is wrapped inside

3004
04:14:06,760 --> 04:14:09,320
another object

3005
04:14:10,440 --> 04:14:12,920
which is called an entry,

3006
04:14:14,160 --> 04:14:20,720
which is called an entry.

3007
04:14:20,720 --> 04:14:22,440
So this is a map.

3008
04:14:22,960 --> 04:14:25,480
And inside the maps we have the entries

3009
04:14:26,800 --> 04:14:29,000
and inside those entries

3010
04:14:29,160 --> 04:14:34,800
we have the actual values.

3011
04:14:34,800 --> 04:14:35,960
We have the actual values.

3012
04:14:35,960 --> 04:14:37,960
So it will be a

3013
04:14:40,200 --> 04:14:43,360
and 4.5.

3014
04:14:44,400 --> 04:14:46,600
So if I want that entry,

3015
04:14:47,760 --> 04:14:50,200
if I want a set of all the entries,

3016
04:14:50,800 --> 04:14:53,960
I use the entry SEQ method

3017
04:14:55,200 --> 04:14:58,880
so we can use if but if should to both.

3018
04:14:59,040 --> 04:15:03,320
Yes If we need both keys and values,
we can get actually

3019
04:15:03,320 --> 04:15:05,880
the complete entry from map.

3020
04:15:07,560 --> 04:15:11,000
So so many entries around

3021
04:15:13,120 --> 04:15:14,120
the key

3022
04:15:14,120 --> 04:15:17,840
to get to the
OR to get only the keys values

3023
04:15:17,840 --> 04:15:20,880
to get the values and set to get both

3024
04:15:20,920 --> 04:15:23,520
keys and values.

3025
04:15:24,160 --> 04:15:33,120
SIMON Is it clear?

3026
04:15:33,120 --> 04:15:35,600
So now we are actually getting
all of these

3027
04:15:35,600 --> 04:15:43,960
with the help of this,
what is weird, right?

3028
04:15:45,280 --> 04:15:49,080
So here this map door entry

3029
04:15:50,120 --> 04:15:55,320
is actually a
and interface inside this map.

3030
04:15:55,640 --> 04:16:00,280
So we are specifying the data type
before this diamond operator.

3031
04:16:00,640 --> 04:16:03,720
We always specify the data, right?

3032
04:16:03,880 --> 04:16:06,440
So this map, not entry is it's actually

3033
04:16:07,200 --> 04:16:09,960
a Delta, a Delta type.

3034
04:16:10,840 --> 04:16:15,760
In our case, if the both of them,
they are interfaces actually let show you.

3035
04:16:16,920 --> 04:16:17,640
So if we have

3036
04:16:17,640 --> 04:16:20,640
our our this entry
and if we go inside this here

3037
04:16:20,640 --> 04:16:25,240
you will see this is an interface inside

3038
04:16:28,680 --> 04:16:30,680
this map interface

3039
04:16:30,680 --> 04:16:35,160
so interface inside and other interface.

3040
04:16:35,160 --> 04:16:40,000
Okay deep diving.

3041
04:16:40,000 --> 04:16:44,640
So that's why we use the map dot entry.

3042
04:16:44,640 --> 04:16:49,320
We need to hold the board to the keys
and the values to get well.

3043
04:16:49,400 --> 04:16:50,880
So we Java guys

3044
04:16:50,880 --> 04:16:54,960
created a data structure that can hold
a lot more to the keys and values.

3045
04:16:54,960 --> 04:16:58,880
Not only it's not an external, it's like
just like having a variable fight.

3046
04:16:58,920 --> 04:17:02,640
You remember, like I told you,
classes can have other classes,

3047
04:17:03,000 --> 04:17:06,320
classes can have interfaces, interface
skin class

3048
04:17:06,360 --> 04:17:09,560
is going to have meters,
variables, constructors.

3049
04:17:09,960 --> 04:17:12,360
So this is the interface.

3050
04:17:12,360 --> 04:17:15,000
This is interface inside
another interface.

3051
04:17:15,000 --> 04:17:18,000
We have not learned that
how to create an interface

3052
04:17:18,000 --> 04:17:20,760
inside, another interface,
but this is how we do it.

3053
04:17:22,080 --> 04:17:23,680
So this interface is present

3054
04:17:23,680 --> 04:17:28,680
inside another inside back map.

3055
04:17:28,680 --> 04:17:33,280
So that's why we are writing
map dot entry.

3056
04:17:33,320 --> 04:17:37,280
This is how we access
if something is present inside

3057
04:17:37,280 --> 04:17:40,560
and it is like those static
variables, right?

3058
04:17:41,240 --> 04:17:43,960
We write the name of the class

3059
04:17:43,960 --> 04:17:46,320
and then dock and then we write

3060
04:17:46,320 --> 04:17:54,360
the name of the variable.

3061
04:17:54,360 --> 04:17:57,480
So if we have a variable in an interface,
we would either be

3062
04:17:57,480 --> 04:18:00,480
name of the interface dot
and then the name of the variable.

3063
04:18:00,480 --> 04:18:01,800
So they are trade

3064
04:18:02,280 --> 04:18:04,280
demos, exposure.

3065
04:18:04,280 --> 04:18:14,760
Yes, let's now

3066
04:18:19,320 --> 04:18:21,360
do hash map and preset work.

3067
04:18:22,880 --> 04:18:23,760
Yes. Yes.

3068
04:18:23,760 --> 04:18:26,400
It is prevalent for all of them.

3069
04:18:26,400 --> 04:18:28,720
An interface inside another interface.

3070
04:18:29,880 --> 04:18:30,360
Yeah.

3071
04:18:30,480 --> 04:18:33,400
So we get the keys
and the values, even values

3072
04:18:33,400 --> 04:18:36,720
combined together
in a single data structure, which is

3073
04:18:37,680 --> 04:18:39,360
entry map

3074
04:18:39,360 --> 04:18:50,880
mapped or entry.

3075
04:18:50,880 --> 04:18:54,120
And again it is returning me asset.

3076
04:18:55,160 --> 04:19:07,080
So can I get an written over the set set?

3077
04:19:07,080 --> 04:19:09,800
Yes. So let's do that in next demo

3078
04:19:14,280 --> 04:19:33,080
and go.

3079
04:19:33,080 --> 04:19:38,000
So I what I can do I can send I data

3080
04:19:39,360 --> 04:19:39,800
right.

3081
04:19:39,800 --> 04:19:41,040
Like this

3082
04:19:43,800 --> 04:19:48,080
and now I have to replace
with the iterator

3083
04:19:48,160 --> 04:19:53,200
because now I am getting an iterator.

3084
04:19:53,200 --> 04:19:57,720
So from the map I get to be present

3085
04:19:59,120 --> 04:20:01,920
and from the entry set

3086
04:20:01,920 --> 04:20:06,280
I get the iterator.

3087
04:20:06,280 --> 04:20:09,400
And again now I have the operator again.

3088
04:20:09,400 --> 04:20:10,120
Same method.

3089
04:20:10,120 --> 04:20:15,400
While there can be no changes to my data,
while

3090
04:20:17,000 --> 04:20:22,320
I create not has next,

3091
04:20:22,320 --> 04:20:23,840
I can

3092
04:20:25,920 --> 04:20:26,760
s demo.

3093
04:20:26,760 --> 04:20:30,760
It is a little complicated
because now we are getting both keys

3094
04:20:30,760 --> 04:20:36,160
and values all together. So.

3095
04:20:36,840 --> 04:20:38,640
Okay. So now

3096
04:20:39,720 --> 04:20:41,440
what if I

3097
04:20:41,440 --> 04:20:45,400
say I printed out next life
I tweeted out next

3098
04:20:46,320 --> 04:20:49,120
what kind of values I will be getting,

3099
04:20:49,120 --> 04:20:52,120
what kind of objects I will be getting

3100
04:20:53,400 --> 04:20:54,800
from this?

3101
04:20:54,920 --> 04:20:57,120
And you scroll up for a second.

3102
04:20:57,560 --> 04:21:04,880
Yes, I will be getting map dot entry.

3103
04:21:04,880 --> 04:21:10,720
And inside of that entry, I have a string.

3104
04:21:10,720 --> 04:21:12,320
And Douglas.

3105
04:21:12,320 --> 04:21:13,080
Right.

3106
04:21:14,520 --> 04:21:21,720
I have strings and numbers.

3107
04:21:21,720 --> 04:21:25,280
And once I have an entry,
I can now write the

3108
04:21:25,280 --> 04:21:28,160
if conditions if

3109
04:21:29,680 --> 04:21:31,920
so let me if you need anything if

3110
04:21:33,480 --> 04:21:36,960
if the key inside the entry

3111
04:21:40,960 --> 04:21:43,600
if I get the key and if that key

3112
04:21:45,240 --> 04:21:48,080
because the keys they are staying
if that is

3113
04:21:48,080 --> 04:21:53,200
let's say may be equal to make

3114
04:21:57,960 --> 04:22:04,160
and and if entry

3115
04:22:05,040 --> 04:22:08,480
not get to value,

3116
04:22:08,480 --> 04:22:12,400
if it is equal to equal to 4.3.

3117
04:22:12,480 --> 04:22:15,480
So from this entry I can get

3118
04:22:15,480 --> 04:22:18,560
both keys and values using these methods.

3119
04:22:18,640 --> 04:22:20,640
Get can get value.

3120
04:22:20,640 --> 04:22:27,360
If this is the case,
I want to remove I want to say entry door.

3121
04:22:29,040 --> 04:22:30,600
So entry non.

3122
04:22:30,600 --> 04:22:33,480
I tried to start.

3123
04:22:33,480 --> 04:22:35,880
I want to remove that from my map.

3124
04:22:36,560 --> 04:22:41,920
So now maybe you are doing something there
for which you want to check

3125
04:22:41,920 --> 04:22:46,960
both the keys and the values
and then you want to take this decision.

3126
04:22:46,960 --> 04:22:50,040
If you want to remove that value or not.

3127
04:22:50,640 --> 04:22:54,600
In that case, we need to have maps

3128
04:22:54,960 --> 04:22:57,360
at this this entry SEQ

3129
04:22:57,840 --> 04:23:00,360
because it returns us both keys

3130
04:23:00,360 --> 04:23:03,720
and values together in a single data type,

3131
04:23:04,360 --> 04:23:06,840
which is map dot entry

3132
04:23:07,720 --> 04:23:09,880
if it's possible to do the same

3133
04:23:09,880 --> 04:23:12,040
remote in demo. Yes.

3134
04:23:13,040 --> 04:23:16,320
So you are creating an interface
and through another interface E.

3135
04:23:16,320 --> 04:23:17,160
S and a B.

3136
04:23:17,160 --> 04:23:22,640
Yes, you are right.

3137
04:23:22,640 --> 04:23:23,960
Okay.

3138
04:23:23,960 --> 04:23:26,840
And now if we print out

3139
04:23:27,600 --> 04:23:31,240
what is mean, you might expand it already.

3140
04:23:31,240 --> 04:23:33,640
I can get.
Can you expand learn more times.

3141
04:23:34,480 --> 04:23:36,600
So this map dot entry,

3142
04:23:37,040 --> 04:23:40,520
it's an interface.

3143
04:23:40,520 --> 04:23:42,760
The map interface.

3144
04:23:42,960 --> 04:23:45,440
And this data structure.

3145
04:23:45,440 --> 04:23:46,400
This interface.

3146
04:23:46,400 --> 04:23:48,760
What is the beauty of this interface?

3147
04:23:48,760 --> 04:23:52,920
This data structure is there
it can hold both ease

3148
04:23:52,920 --> 04:23:56,200
and values
together inside a single object.

3149
04:23:57,680 --> 04:24:00,840
So we
are interested in both keys and values.

3150
04:24:01,480 --> 04:24:05,480
Then we use this method of entry
and we get this map entry

3151
04:24:06,120 --> 04:24:09,120
by calling this entry set

3152
04:24:09,120 --> 04:24:11,400
on a map.

3153
04:24:11,400 --> 04:24:14,840
So you see now that million 4.3 is gone.

3154
04:24:15,720 --> 04:24:19,160
So now I am removing the elements,

3155
04:24:19,840 --> 04:24:21,960
maybe by checking both the keys

3156
04:24:22,320 --> 04:24:27,840
and values a

3157
04:24:36,000 --> 04:24:37,000
Are there

3158
04:24:37,000 --> 04:24:44,200
any questions, guys?

3159
04:24:44,200 --> 04:24:48,960
Too much to remember.

3160
04:24:48,960 --> 04:24:50,840
So these are printers.

3161
04:24:50,840 --> 04:24:56,000
You guys already know how to work
with apparatus maps.

3162
04:24:56,000 --> 04:24:56,840
They are simple.

3163
04:24:56,840 --> 04:24:59,280
We use port and and get right.

3164
04:24:59,280 --> 04:25:00,600
Same as interfaces.

3165
04:25:00,600 --> 04:25:05,760
The only thing that you guys
now need to focus is these entry sets

3166
04:25:05,840 --> 04:25:18,760
that we are getting from here here.

3167
04:25:18,760 --> 04:25:21,400
Let me

3168
04:25:21,400 --> 04:25:43,920
shift.

3169
04:25:43,920 --> 04:25:59,840
Thanks for breaking the brain therapy.

3170
04:25:59,840 --> 04:26:00,960
Okay.

3171
04:26:00,960 --> 04:26:03,680
So once you go to

3172
04:26:03,840 --> 04:26:13,960
all of these tasks, yes,
we will continue the reviews from where

3173
04:26:15,000 --> 04:26:55,840
we left.

3174
04:26:55,840 --> 04:27:18,760
Is it easy tasks?

3175
04:27:18,760 --> 04:27:21,480
So let me solve this task.

3176
04:27:23,040 --> 04:27:25,520
This first one in here.

3177
04:27:25,520 --> 04:27:26,560
Let me be in.

3178
04:27:26,560 --> 04:27:28,920
Do you guys want me solve this task?

3179
04:27:29,800 --> 04:27:37,640
Then I saved them online.

3180
04:27:37,640 --> 04:27:44,200
You delivered?

3181
04:27:44,280 --> 04:27:46,440
Are you getting any errors

3182
04:28:09,360 --> 04:28:09,920
lately?

3183
04:28:09,920 --> 04:28:13,440
You are so dangerous on the homeworks.

3184
04:28:13,440 --> 04:28:15,080
Don't give us ten tasks.

3185
04:28:15,080 --> 04:28:23,480
You guys have complete week
for these tasks.

3186
04:28:23,480 --> 04:28:27,320
Can you do one example for Alexey
about encapsulation?

3187
04:28:27,320 --> 04:28:30,800
Yep. Okay,
let's do the example for Aleksey.

3188
04:28:32,120 --> 04:28:34,120
We also have life.

3189
04:28:34,120 --> 04:28:38,240
We have a lot of things to do in
life as well.

3190
04:28:38,240 --> 04:28:39,720
It's okay.

3191
04:28:39,720 --> 04:28:43,760
Alexey Ideas still with us.

3192
04:28:43,760 --> 04:28:57,000
Like 400 girls.

3193
04:28:57,000 --> 04:28:57,280
Well,

3194
04:28:58,320 --> 04:29:02,640
what is life after joining this syntax?

3195
04:29:02,640 --> 04:29:03,840
Alexey, you with us?

3196
04:29:03,840 --> 04:29:05,760
I think Alexey has

3197
04:29:14,520 --> 04:29:16,600
okay maybe maybe next time.

3198
04:29:16,600 --> 04:29:18,960
If anyone know, if you have questions,
I will say it.

3199
04:29:18,960 --> 04:29:23,640
Let's do it at the end.

3200
04:29:23,640 --> 04:29:27,320
Talking to the ladies.

3201
04:29:27,320 --> 04:29:27,480
Okay.

3202
04:29:29,280 --> 04:29:32,800
So let's let's all big tasks

3203
04:29:36,800 --> 04:29:37,800
so that you guys

3204
04:29:37,800 --> 04:29:52,760
can remember something.

3205
04:29:52,760 --> 04:29:57,120
Why I see on my console,
which I have removed.

3206
04:29:57,120 --> 04:29:58,800
If you are

3207
04:29:59,760 --> 04:30:01,440
putting it in this out,

3208
04:30:01,440 --> 04:30:03,480
then you will see that entry

3209
04:30:09,040 --> 04:30:11,880
and they don't get value, don't equal so

3210
04:30:12,800 --> 04:30:16,560
and and they don't get valued or equals

3211
04:30:19,320 --> 04:30:20,160
the part.

3212
04:30:20,160 --> 04:30:24,680
So why are you are using equals
method for the double letter type.

3213
04:30:24,720 --> 04:30:25,800
You'll get them

3214
04:30:27,000 --> 04:30:30,880
why you are using it

3215
04:30:46,200 --> 04:30:48,840
if you guys want to leave.

3216
04:30:48,840 --> 04:30:51,600
So when the students they start new.

3217
04:30:51,640 --> 04:30:54,280
So I don't know.

3218
04:30:54,280 --> 04:30:56,280
Yes, I had classes.

3219
04:30:56,640 --> 04:31:01,320
So that class was supposed
to be taught on a week week day

3220
04:31:01,800 --> 04:31:05,120
and I thought that class on the weekend so

3221
04:31:05,120 --> 04:31:09,720
I got a lot of feedback from the student
why the instructor left us leave.

3222
04:31:10,280 --> 04:31:12,400
He could have taught us more.

3223
04:31:12,680 --> 04:31:15,440
And when I asked the same question,
when they were

3224
04:31:15,440 --> 04:31:18,440
in like the third or fourth
month, fourth month.

3225
04:31:18,440 --> 04:31:20,520
I teach skill also.

3226
04:31:20,520 --> 04:31:23,840
So then they asked,
Hey guys, do you want to leave an hour

3227
04:31:23,840 --> 04:31:26,520
before every of the Yes, please leave.

3228
04:31:27,240 --> 04:31:30,200
We will to go quickly, please

3229
04:31:30,320 --> 04:31:36,320
In this class. You

3230
04:31:37,360 --> 04:31:37,640
okay?

3231
04:31:37,640 --> 04:31:39,240
Let's let's do this task quickly.

3232
04:31:39,240 --> 04:31:48,360
And this is the last.

3233
04:31:48,360 --> 04:31:49,680
How do you guys like to leave?

3234
04:31:49,680 --> 04:31:54,560
No, no task.

3235
04:31:54,560 --> 04:31:56,920
But you guys want to end this session
here?

3236
04:31:56,920 --> 04:32:00,480
Maybe we can solve in in the

3237
04:32:00,600 --> 04:32:02,320
finish this one.

3238
04:32:02,320 --> 04:32:02,640
Okay.

3239
04:32:02,640 --> 04:32:08,400
You guys still have some patients
left in a 40 day?

3240
04:32:08,400 --> 04:32:10,640
Okay. Create a map of countries.

3241
04:32:11,760 --> 04:32:14,720
It's capital that will be stored.

3242
04:32:15,120 --> 04:32:18,720
Countries in alphabetical order.

3243
04:32:18,720 --> 04:32:22,600
But in all the key then values
from a country map using for each.

3244
04:32:22,600 --> 04:32:27,080
And I tried to bring all the values
from a country map using for each.

3245
04:32:27,080 --> 04:32:29,000
And I tried to

3246
04:32:30,600 --> 04:32:32,480
listen to the hardest one.

3247
04:32:32,480 --> 04:32:38,400
Why are we doing
one of the easy tasks on the class?

3248
04:32:38,400 --> 04:32:41,000
Oh, good luck, guys. Let's do it next time

3249
04:32:42,200 --> 04:32:44,640
you guys are free, you

3250
04:32:44,640 --> 04:32:50,120
please have some freedom, has some life.

3251
04:32:50,120 --> 04:32:52,040
You said this class will be easy.

3252
04:32:52,040 --> 04:32:55,360
How easy was this?

3253
04:32:55,440 --> 04:32:57,320
This class was hard.

3254
04:32:57,320 --> 04:32:59,760
Or I told This class is easy,

3255
04:33:00,480 --> 04:33:03,240
but only I'm not talking
about the vibrators

3256
04:33:05,480 --> 04:33:14,480
or for away from easy.

3257
04:33:14,480 --> 04:33:20,080
Yes, I think the amount of information
is too much or the concepts are not easy.

3258
04:33:20,080 --> 04:33:23,600
Is there anything that confused you
or which is not clear if I

3259
04:33:23,640 --> 04:33:28,040
You guys have to remember a lot of things.

3260
04:33:28,040 --> 04:33:32,440
It starts easy and lots of entries
then did not enter

3261
04:33:32,480 --> 04:33:35,520
be my.

3262
04:33:35,520 --> 04:33:39,120
I need some valerian root
after this class.

3263
04:33:39,720 --> 04:33:42,000
What are they used for

3264
04:33:42,920 --> 04:33:44,480
to calm down.

3265
04:33:45,480 --> 04:33:49,200
Is it like some something like weird

3266
04:33:50,680 --> 04:33:56,280
heart and nerve?

3267
04:33:56,280 --> 04:33:58,320
We can also call me or down right?

3268
04:33:58,560 --> 04:34:01,240
You will be free flying in the sky.

3269
04:34:01,240 --> 04:34:02,920
No tensions and nothing

3270
04:34:03,920 --> 04:34:08,400
that I tried to have.

3271
04:34:08,400 --> 04:34:10,280
Why we installed the apartment?

3272
04:34:10,280 --> 04:34:12,360
Because I thought the class is easy

3273
04:34:12,400 --> 04:34:16,280
and you guys will be able to understand
it around 2 p.m.

3274
04:34:16,280 --> 04:34:20,560
and then we will be having one hour
to try the Excel files and all that.

3275
04:34:21,080 --> 04:34:24,320
That's why I made

3276
04:34:24,320 --> 04:34:31,800
you install deck.

3277
04:34:31,800 --> 04:34:39,720
We might understand if we all smoke weed.

3278
04:34:39,720 --> 04:34:41,880
Yes, it's also legal in Pakistan.

3279
04:34:42,560 --> 04:34:45,000
So actually you, Prime Minister, it says

3280
04:34:45,000 --> 04:34:47,040
Please, please, God, please,

3281
04:34:48,120 --> 04:34:50,200
please have some beers in your funds.

3282
04:34:50,640 --> 04:34:57,200
It's very good.

3283
04:34:57,200 --> 04:34:58,680
He says, Let's all of them.

3284
04:34:58,680 --> 04:35:02,680
Let's have it.

3285
04:35:02,680 --> 04:35:07,040
Yes. In Pakistan, it's legal.

3286
04:35:07,040 --> 04:35:09,200
You can have as much as you want.

3287
04:35:09,200 --> 04:35:13,040
No, I'm not getting it literally.

3288
04:35:13,040 --> 04:35:17,640
Prime Minister said that we can make
a lot of money if we have some.

3289
04:35:17,840 --> 04:35:21,000
If we have ears on our farm,
we can sell it to other countries.

3290
04:35:21,560 --> 04:35:23,040
So, everyone, let's find those.

3291
04:35:25,440 --> 04:35:30,480
Literally.

3292
04:35:30,480 --> 04:35:39,920
Okay, That's the end.

3293
04:35:39,920 --> 04:35:40,840
Do it.

3294
04:35:40,880 --> 04:35:42,560
No, no, no.

3295
04:35:42,560 --> 04:35:44,720
You have to be very

3296
04:35:46,640 --> 04:35:48,720
in every guy You said so

3297
04:35:49,680 --> 04:35:58,760
smart, Minister.

3298
04:35:58,760 --> 04:36:00,360
I think he was understood it.

3299
04:36:00,360 --> 04:36:03,560
No, no,
I don't need that if you have somewhere.

3300
04:36:04,080 --> 04:36:06,960
So there was a friend of mine

3301
04:36:06,960 --> 04:36:09,320
and he didn't tell me there was a dish

3302
04:36:10,680 --> 04:36:13,640
some of you might know about that
They are.

3303
04:36:13,960 --> 04:36:15,000
They are called.

3304
04:36:15,000 --> 04:36:15,960
I don't know.

3305
04:36:15,960 --> 04:36:21,200
What are they called.

3306
04:36:21,200 --> 04:36:30,200
So he put weird
inside this dish, brownness.

3307
04:36:31,360 --> 04:36:32,640
And he didn't tell me.

3308
04:36:32,640 --> 04:36:35,040
And he said, Do you want to have some?

3309
04:36:35,040 --> 04:36:37,320
They are very delicious. I couldn't do it.

3310
04:36:38,440 --> 04:36:43,200
So I eat a lot of reinventing
and everything was so

3311
04:36:43,600 --> 04:36:50,280
I was trying to get to my phone
and it looks like the phone is going away.

3312
04:36:50,280 --> 04:36:54,560
And every I was unable to touch
anything at all that I don't know.

3313
04:36:54,560 --> 04:36:57,800
It is recording. Yes, we are recording.
