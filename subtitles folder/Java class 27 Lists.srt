1
00:00:07,520 --> 00:00:09,320
How are you guys?

2
00:00:09,440 --> 00:00:12,120
Morning. Morning. Hello, Oscar.

3
00:00:12,120 --> 00:00:13,200
Nice to be here.

4
00:00:13,200 --> 00:00:15,640
Thank you.

5
00:00:16,920 --> 00:00:18,920
How do I feel?

6
00:00:19,400 --> 00:00:22,160
This crowd is a little bit still hurting,

7
00:00:23,280 --> 00:00:27,200
but my mind has recovered that
that's the most important thing.

8
00:00:27,720 --> 00:00:31,560
So today
I will only confuse you 25% of the time.

9
00:00:31,560 --> 00:00:34,200
75% of the time. Plus you go small.

10
00:00:34,920 --> 00:00:47,120
Is that okay?

11
00:00:47,120 --> 00:00:55,920
Warning everyone.

12
00:00:56,760 --> 00:01:00,240
So I watched the recording
in the last class,

13
00:01:00,760 --> 00:01:03,360
so I don't remember anything
from the last class.

14
00:01:04,440 --> 00:01:06,640
But I what I read the comments from you.

15
00:01:07,440 --> 00:01:09,720
So a lot of you were confused.

16
00:01:09,720 --> 00:01:13,400
So I don't
I don't even remember how I treated you

17
00:01:13,400 --> 00:01:16,760
in the last class.

18
00:01:17,320 --> 00:01:20,600
25% of my brain
was working in the last class.

19
00:01:20,720 --> 00:01:23,720
So in today's class,
we will fix that as well.

20
00:01:23,920 --> 00:01:25,920
Good morning, Amar.

21
00:01:25,920 --> 00:01:27,400
And hopefully it will be fine.

22
00:01:27,400 --> 00:01:28,640
And by and by.

23
00:01:28,640 --> 00:01:30,880
So in the last class, I.

24
00:01:30,880 --> 00:01:33,040
I told you to forget

25
00:01:34,560 --> 00:01:35,600
some things, right?

26
00:01:35,600 --> 00:01:36,480
Some concepts.

27
00:01:36,480 --> 00:01:39,800
So I hope by this time,
if one week you guys

28
00:01:39,800 --> 00:01:43,480
have almost forgot everything.

29
00:01:43,480 --> 00:01:43,840
Right?

30
00:01:43,840 --> 00:01:47,800
So starting from scratch this time
you guys will not remember anything

31
00:01:48,480 --> 00:01:53,040
about the ad at least right?

32
00:01:53,040 --> 00:01:57,040
A Maybe this is a good point
to start again in big words.

33
00:01:58,200 --> 00:02:00,960
So today's class number 27

34
00:02:03,920 --> 00:02:04,560
ArrayList.

35
00:02:04,560 --> 00:02:05,640
You mean

36
00:02:14,160 --> 00:02:14,800
the Virgin?

37
00:02:14,800 --> 00:02:16,520
Indeed. One month is too long.

38
00:02:16,520 --> 00:02:20,680
Even if you try to read your code
that you have wrote like seven days

39
00:02:20,680 --> 00:02:31,200
before, you will be in the same condition.

40
00:02:31,200 --> 00:02:36,000
I was out of control last time.

41
00:02:36,000 --> 00:02:50,360
You guys have forgot everything very easy.

42
00:02:50,360 --> 00:02:55,080
By the way,
do you guys know how many classes,

43
00:02:55,080 --> 00:02:59,160
how many more classes we have for Java?

44
00:02:59,160 --> 00:03:02,520
You know, for

45
00:03:03,520 --> 00:03:09,360
one month, two more classes,
and you guys are done with Java.

46
00:03:09,360 --> 00:03:21,560
Hello, And thanks, God.

47
00:03:21,680 --> 00:03:22,520
Thank God.

48
00:03:22,520 --> 00:03:26,360
Wait, really, It.

49
00:03:26,360 --> 00:03:27,720
I and I are.

50
00:03:27,720 --> 00:03:29,160
I am much better now.

51
00:03:29,160 --> 00:03:31,640
How long Next week
you guys will be done with Java

52
00:03:33,000 --> 00:03:35,760
and then the fun part will start.

53
00:03:35,760 --> 00:03:40,080
Now you guys will be putting your selenium
knowledge,

54
00:03:40,080 --> 00:03:42,640
your Java knowledge,
and your testing knowledge

55
00:03:43,240 --> 00:03:47,360
to kind of build a complete program
that can

56
00:03:48,120 --> 00:03:52,880
test multiple tests on the website
that can check multiple things,

57
00:03:53,520 --> 00:03:58,440
multiple features are multiple buttons,
drop dropdowns, and all of them,

58
00:03:58,440 --> 00:04:03,560
if they are working fine or not,
that's hard to believe.

59
00:04:04,440 --> 00:04:07,880
Two more and my head is still empty.

60
00:04:09,640 --> 00:04:11,000
Nikolai, You are lucky

61
00:04:11,000 --> 00:04:16,440
if you are headed empty.

62
00:04:16,440 --> 00:04:21,440
Having all that knowledge in your brain,
it can make you sick really, really fast.

63
00:04:21,440 --> 00:04:23,320
As a you, you are good.

64
00:04:23,320 --> 00:04:26,080
You don't remember anything
about that yet.

65
00:04:26,480 --> 00:04:31,640
Open to anything new?

66
00:04:31,640 --> 00:04:33,800
Do they look like England?

67
00:04:33,800 --> 00:04:35,440
Gentlemen

68
00:04:36,720 --> 00:04:37,920
in as girl I.

69
00:04:37,920 --> 00:04:40,720
I'm feeling much better.
Come on. Whatever.

70
00:04:41,400 --> 00:04:43,800
You guys are not ready for this all.

71
00:04:43,800 --> 00:04:46,800
By the way.

72
00:04:46,800 --> 00:04:49,240
So I wanted to show this

73
00:04:50,800 --> 00:04:52,000
for a very long time.

74
00:04:52,000 --> 00:04:52,920
So you guys don't.

75
00:04:52,920 --> 00:04:53,960
They don't remember.

76
00:04:53,960 --> 00:04:58,480
Remind me about how to shift your project
from Eclipse to intelligence.

77
00:04:58,480 --> 00:05:01,680
So today we're looking
at the star of the class from that.

78
00:05:02,400 --> 00:05:05,920
So first, let me tell you how you guys
can use their weather.

79
00:05:05,920 --> 00:05:10,440
Cold are not that cold around
10 to 15 degrees.

80
00:05:10,440 --> 00:05:11,520
I don't know.

81
00:05:11,520 --> 00:05:15,120
Let me actually check.

82
00:05:15,120 --> 00:05:22,720
It's not that cold.

83
00:05:22,720 --> 00:05:24,640
It's extremely

84
00:05:27,760 --> 00:05:30,200
it's kind of kind of enjoyable.

85
00:05:30,480 --> 00:05:33,240
But because because I am it's

86
00:05:33,240 --> 00:05:38,240
cold.

87
00:05:38,240 --> 00:05:41,040
I'm not feeling well.
That's why I am having this check.

88
00:05:41,080 --> 00:05:41,920
That's not cold.

89
00:05:41,920 --> 00:05:46,560
Like Washington. Yup.

90
00:05:46,560 --> 00:05:49,720
So in Eclipse, if you guys remember,

91
00:05:50,320 --> 00:05:54,480
you guys used to create a work space

92
00:05:55,080 --> 00:05:58,200
and in, in the workspace,

93
00:05:58,200 --> 00:06:02,320
you guys used to create multiple projects
in Eclipse, right.

94
00:06:02,880 --> 00:06:05,480
And then you guys don't have to open
multiple windows

95
00:06:05,480 --> 00:06:09,480
to switch back
and forth between your your project.

96
00:06:10,640 --> 00:06:14,240
So be structure in intelligent
it's little bit

97
00:06:14,560 --> 00:06:16,840
little bit different and

98
00:06:18,840 --> 00:06:21,440
it can be different from 80 to 80.

99
00:06:23,120 --> 00:06:27,000
So in an eclipse you guys used to have

100
00:06:29,200 --> 00:06:32,280
work space,

101
00:06:32,400 --> 00:06:36,080
but now but bad weather is coming.

102
00:06:36,080 --> 00:06:40,120
Have you guys seen what happened in
okay Spirit a few hours ago?

103
00:06:40,120 --> 00:06:46,120
Be safe all what happened there?

104
00:06:46,120 --> 00:06:48,600
So the web, the workspace

105
00:06:49,360 --> 00:06:52,240
in Eclipse, it is tornado.

106
00:06:52,640 --> 00:06:55,400
It is equivalent to

107
00:06:55,400 --> 00:06:57,360
a project

108
00:06:59,760 --> 00:07:01,160
entirely

109
00:07:05,400 --> 00:07:05,960
today

110
00:07:06,960 --> 00:07:07,440
and today.

111
00:07:07,440 --> 00:07:11,880
I will also show you
because Nas girl had this issue,

112
00:07:11,880 --> 00:07:15,000
she lost all of her files and project.

113
00:07:15,000 --> 00:07:19,400
So I will show you
if you guys lose anything

114
00:07:19,400 --> 00:07:23,360
to how to get back
your your files and projects,

115
00:07:23,520 --> 00:07:26,440
even if you don't have that

116
00:07:26,440 --> 00:07:30,440
your repository if you have not posted
your code to that repository,

117
00:07:30,840 --> 00:07:35,720
how you can still recover
your files and projects. So

118
00:07:39,880 --> 00:07:40,200
if you

119
00:07:40,200 --> 00:07:43,600
accidentally delete this, this dot
IBM ML file,

120
00:07:44,200 --> 00:07:50,160
this is the file that keeps
track of your projects.

121
00:07:50,160 --> 00:07:50,800
Okay.

122
00:07:50,880 --> 00:07:53,480
This file is very important

123
00:07:53,480 --> 00:07:56,280
for the
for the intelligent to work properly.

124
00:07:56,280 --> 00:07:57,800
So this file is very important.

125
00:07:57,800 --> 00:08:00,720
Don't make sure that you guys
don't delete this file

126
00:08:01,440 --> 00:08:05,800
first thing you do this second thing.

127
00:08:05,800 --> 00:08:08,720
If you guys check out this project,

128
00:08:09,760 --> 00:08:11,760
that's what I did.

129
00:08:12,120 --> 00:08:15,840
So second thing, this SDK batch 11,

130
00:08:16,040 --> 00:08:22,320
it is stored inside this repository.

131
00:08:22,320 --> 00:08:28,720
So inside this repository, Intel
will always look for this dot idle folder.

132
00:08:28,720 --> 00:08:32,880
Okay, In here
it stores all of its important files

133
00:08:32,880 --> 00:08:36,400
and product structures
and all other information related to

134
00:08:37,040 --> 00:08:39,640
without spares,
how many modules and everything.

135
00:08:39,640 --> 00:08:44,280
So these two things, this dot idea
and this image file, they are,

136
00:08:44,280 --> 00:08:49,760
they are super, super important
for the intelligent to work properly.

137
00:08:49,760 --> 00:08:51,120
I don't have that file.

138
00:08:51,120 --> 00:08:53,880
Maybe it is hidden on moment
you are using windows are Mac.

139
00:08:55,320 --> 00:08:58,000
It can
be in it can be anywhere inside this

140
00:08:58,560 --> 00:09:02,240
this special
so it might be hidden on your on your Mac

141
00:09:02,680 --> 00:09:07,280
and that's that's actually better
if that is here do not know the name.

142
00:09:07,280 --> 00:09:14,320
Yes the name of that file will be
same as the name of your project.

143
00:09:14,320 --> 00:09:19,280
So if you guys focus this
and this project name,

144
00:09:19,400 --> 00:09:28,960
they are saying, okay,

145
00:09:28,960 --> 00:09:34,720
so these are two very important things
for Idea Project for Intel Project.

146
00:09:35,120 --> 00:09:37,920
And after that in delegate, you guys,

147
00:09:38,160 --> 00:09:41,080
you guys can delete anything in here
inside South Florida.

148
00:09:41,880 --> 00:09:44,560
No need to worry about that.

149
00:09:44,880 --> 00:09:47,800
You just need to double click
on that file to open it.

150
00:09:47,800 --> 00:09:50,040
You guys don't need to open it in.

151
00:09:50,040 --> 00:09:53,880
Open it because even if you accidentally
change something, let's not open it.

152
00:09:54,840 --> 00:09:57,080
You can have issues in your projects.

153
00:09:57,080 --> 00:10:02,200
Okay, Next, let's not do that.

154
00:10:02,200 --> 00:10:06,760
And so Delegate will always look
for a project structure like this.

155
00:10:06,800 --> 00:10:11,440
There should be a folder
the same name folder

156
00:10:11,440 --> 00:10:13,480
as your

157
00:10:14,560 --> 00:10:16,360
your project.

158
00:10:16,520 --> 00:10:17,080
Good morning.

159
00:10:17,080 --> 00:10:21,000
Now and then inside that folder
there should be a

160
00:10:21,000 --> 00:10:25,840
another folder
s r c and inside that your base package.

161
00:10:25,840 --> 00:10:28,560
And then you can have oops
and then you can have your project.

162
00:10:28,560 --> 00:10:30,600
So if I right click in here

163
00:10:32,720 --> 00:10:36,880
and if I click on Open in Explorer
so Mac users,

164
00:10:36,880 --> 00:10:41,280
you guys will see Opening Finder
or something like that.

165
00:10:41,520 --> 00:10:42,200
Okay.

166
00:10:42,200 --> 00:10:52,840
So if I click on that,
do you guys see this option?

167
00:10:52,840 --> 00:11:01,960
So if I click on that,
so it will take me to the folder

168
00:11:02,000 --> 00:11:05,880
where all of my other projects are saved.

169
00:11:05,880 --> 00:11:11,720
Okay, so this is where Intel has stored
my aspect, but 11 project

170
00:11:17,200 --> 00:11:20,880
Finder in Mac here.

171
00:11:20,880 --> 00:11:22,920
So if I open that folder,

172
00:11:24,520 --> 00:11:26,680
here is my email file.

173
00:11:26,680 --> 00:11:29,440
It is my daughter,
the folder source and SRT.

174
00:11:29,440 --> 00:11:34,880
So Intel will always look for this s
of C folder if you place your dollar files

175
00:11:35,520 --> 00:11:37,560
other than this AC folder again,

176
00:11:37,680 --> 00:11:40,880
your intelligence
will not be recognizing those files.

177
00:11:41,280 --> 00:11:44,800
So SBC folder then there will be this com

178
00:11:46,160 --> 00:11:47,960
dot syntax.

179
00:11:47,960 --> 00:11:50,960
And then here are all the classes,

180
00:11:52,320 --> 00:11:55,200
all the packages, sub packages

181
00:11:55,200 --> 00:12:01,400
that I have created.

182
00:12:01,400 --> 00:12:04,040
So if you place

183
00:12:04,040 --> 00:12:06,200
nice, if you place anything

184
00:12:07,160 --> 00:12:10,040
inside this folder,

185
00:12:10,080 --> 00:12:14,240
inside any and by anything
I mean any java file,

186
00:12:15,400 --> 00:12:19,560
you will quickly recognize that
and you can execute that file.

187
00:12:19,800 --> 00:12:23,960
So now the simplest trick
to move your project from

188
00:12:25,680 --> 00:12:27,000
Eclipse to intelligent,

189
00:12:27,000 --> 00:12:29,920
what we can do, we can simply do this. So

190
00:12:31,320 --> 00:12:32,200
if I open my

191
00:12:32,200 --> 00:12:39,480
eclipse, so

192
00:12:39,720 --> 00:12:50,080
I click on launch the

193
00:12:57,360 --> 00:12:59,840
SO and this is my eclipse, right?

194
00:13:00,440 --> 00:13:03,280
This is the SBC folder
the same as possible.

195
00:13:03,600 --> 00:13:07,080
So if you guys focus,
you guys will see that all the projects,

196
00:13:07,360 --> 00:13:11,160
all the IDs, they all have this SBC

197
00:13:11,160 --> 00:13:13,880
and then these these classes in here,

198
00:13:14,400 --> 00:13:18,360
this class is in here.

199
00:13:18,360 --> 00:13:20,480
So for example, let's say

200
00:13:21,720 --> 00:13:24,360
I want to move

201
00:13:28,400 --> 00:13:30,920
east then that's also good.

202
00:13:30,920 --> 00:13:33,840
That's also good.

203
00:13:33,840 --> 00:13:36,120
So if you guys, let's say.

204
00:13:36,120 --> 00:13:38,680
But will GitHub also be both

205
00:13:38,680 --> 00:13:41,800
these files when we push the code?

206
00:13:42,160 --> 00:13:45,640
So if inside that main folder,

207
00:13:46,720 --> 00:13:49,520
if you have initialize that folder as good

208
00:13:49,560 --> 00:13:52,680
repository, then yes,
it will push those files.

209
00:13:52,680 --> 00:13:53,800
So it will

210
00:13:54,480 --> 00:13:58,320
create these files
as we have created some new files.

211
00:13:58,520 --> 00:14:02,760
So I want you to
open your, your old project

212
00:14:03,760 --> 00:14:05,160
in your eclipse.

213
00:14:05,160 --> 00:14:06,200
So before.

214
00:14:06,200 --> 00:14:06,480
Right.

215
00:14:06,480 --> 00:14:09,280
For, for the first ten classes,
you guys do use the eclipse.

216
00:14:09,480 --> 00:14:11,960
So I want you to open your,

217
00:14:12,240 --> 00:14:14,520
your workspace. Use

218
00:14:15,280 --> 00:14:16,560
inside the eclipse

219
00:14:16,560 --> 00:14:20,080
and then open your, your,
your projects like this.

220
00:14:20,080 --> 00:14:23,720
And let me know once you guys see
all of you, all of your packages

221
00:14:27,360 --> 00:14:28,880
are imported by module.

222
00:14:28,880 --> 00:14:30,640
I will also show that.

223
00:14:30,640 --> 00:14:57,520
So I will also show that node.

224
00:14:57,520 --> 00:14:59,280
I have two packages.

225
00:14:59,280 --> 00:15:02,120
They are Java basics and Java. Okay.

226
00:15:02,240 --> 00:15:03,600
That that's also good.

227
00:15:03,600 --> 00:15:05,000
That's also

228
00:15:06,600 --> 00:15:09,800
what window for the intelligent
should be open.

229
00:15:09,800 --> 00:15:13,680
So you should open

230
00:15:14,120 --> 00:15:16,440
this this this bot

231
00:15:16,440 --> 00:15:19,200
your project the part in which there is

232
00:15:19,200 --> 00:15:22,200
this FRC.

233
00:15:22,200 --> 00:15:24,320
Yes this one Sebastian so

234
00:15:25,320 --> 00:15:29,400
this SRT folder and inside this SLC folder
you need to go inside

235
00:15:29,400 --> 00:15:39,520
com and then syntax
and then your packages.

236
00:15:39,520 --> 00:15:42,560
So do you guys also see all of these

237
00:15:44,360 --> 00:15:47,160
classes, all of these folders in here

238
00:15:51,440 --> 00:15:53,480
from your intel, you

239
00:16:00,040 --> 00:16:03,520
okay.

240
00:16:03,520 --> 00:16:07,560
So now I want you to right
click on any of the package

241
00:16:07,920 --> 00:16:11,840
inside your eclipse, right
click on any of your package

242
00:16:15,080 --> 00:16:17,280
And then in here

243
00:16:17,280 --> 00:16:22,440
also you have to click on showing
and then system

244
00:16:22,480 --> 00:16:40,400
Explorer.

245
00:16:40,400 --> 00:16:49,320
Do you guys see this option?

246
00:16:49,320 --> 00:16:52,400
Okay, so can you show one more time?

247
00:16:52,480 --> 00:16:57,880
So right click on any of your package
inside Eclipse

248
00:16:58,240 --> 00:17:03,000
the the packages that you want to move,
the classes that you want to move.

249
00:17:03,600 --> 00:17:07,680
Right click on any of that
and then click on showing

250
00:17:07,680 --> 00:17:15,960
and then System Explorer,
I show audio cooking again, all the audio,

251
00:17:16,200 --> 00:17:31,080
all of your focuses in class
today, I'm just getting

252
00:17:32,600 --> 00:17:34,760
I was not cooking

253
00:17:36,040 --> 00:17:38,200
and diapering the baby
and diapering the babies.

254
00:17:39,480 --> 00:17:40,200
I was taking

255
00:17:40,200 --> 00:17:44,240
my other class.

256
00:17:44,240 --> 00:17:45,120
I don't think so.

257
00:17:45,120 --> 00:17:48,840
You will be needing an MBA now.

258
00:17:48,840 --> 00:17:51,000
I, I don't know already the situation in

259
00:17:51,560 --> 00:17:56,160
in the United States, like for example,
how much you can earn using an MBA degree.

260
00:17:56,760 --> 00:17:58,040
But I don't think so.

261
00:17:58,040 --> 00:18:02,760
You guys will be needing
needing any other degrees.

262
00:18:02,760 --> 00:18:08,160
Yes. Alex, we need to open two folders,
one for intelligent

263
00:18:08,200 --> 00:18:12,400
and one for Eclipse.

264
00:18:12,400 --> 00:18:14,280
You all right?

265
00:18:14,280 --> 00:18:21,920
There's.

266
00:18:21,920 --> 00:18:26,200
So if I click on System Explorer,

267
00:18:26,200 --> 00:18:28,920
I see all of my files in here.

268
00:18:29,280 --> 00:19:05,960
Okay, All of my files in here.

269
00:19:05,960 --> 00:19:06,720
Ready?

270
00:19:08,200 --> 00:19:09,520
Now, the files

271
00:19:09,520 --> 00:19:12,120
that you want to move, you guys can

272
00:19:13,440 --> 00:19:16,840
copy.

273
00:19:16,840 --> 00:19:19,680
So let's say I only want to move.

274
00:19:19,680 --> 00:19:22,640
Let's set last well and part B,

275
00:19:22,640 --> 00:19:25,920
Okay, so let me open this in here.

276
00:19:26,120 --> 00:19:37,080
And this in here.

277
00:19:37,080 --> 00:19:39,640
So now what
you guys have to do. It's easy.

278
00:19:39,640 --> 00:19:47,760
You just copy your classes from here.

279
00:19:47,760 --> 00:19:49,680
So review classes already there.

280
00:19:49,680 --> 00:19:51,520
Make sure you don't have duplicate classes

281
00:19:52,480 --> 00:19:54,880
last well, 11 is also there.

282
00:19:54,880 --> 00:19:56,480
1415.

283
00:19:56,480 --> 00:20:02,800
Okay, let me check that
I need to the project,

284
00:20:02,800 --> 00:20:05,520
but you guys will be seeing
a different view.

285
00:20:07,240 --> 00:20:09,880
So as the s of C

286
00:20:15,600 --> 00:20:17,760
class two

287
00:20:17,760 --> 00:20:20,640
and then class three, it's also

288
00:20:21,120 --> 00:20:23,480
all the classes
that I am already populating here.

289
00:20:24,800 --> 00:20:34,520
I'll let me,

290
00:20:34,520 --> 00:20:37,800
let me just pick back nine

291
00:20:39,000 --> 00:20:51,720
files in here.

292
00:20:51,720 --> 00:21:16,520
Will let me read them
then just to just to show you, uh,

293
00:21:16,640 --> 00:21:19,640
let me change this to class four.

294
00:21:20,680 --> 00:21:22,560
You guys don't have to build this with.

295
00:21:22,560 --> 00:21:24,480
I don't have to do this.

296
00:21:24,480 --> 00:21:26,320
Yes, Just copy and paste.

297
00:21:26,320 --> 00:21:35,760
Just copy and paste.

298
00:21:35,760 --> 00:21:40,680
So because I already have these classes
in here, so I am moving only class number

299
00:21:40,680 --> 00:21:59,840
four from here to here.

300
00:21:59,840 --> 00:22:02,440
I was wondering how would you do this?

301
00:22:02,440 --> 00:22:04,240
I copied.

302
00:22:04,240 --> 00:22:06,520
Why didn't you show that simple copy paste

303
00:22:06,520 --> 00:22:09,840
before?

304
00:22:09,840 --> 00:22:13,200
Because I wanted to
have you some group on Intelligent first

305
00:22:14,560 --> 00:22:17,160
because in the previous batches,

306
00:22:17,160 --> 00:22:20,320
if the so if you guys notice in here

307
00:22:22,880 --> 00:22:24,200
and this form dot

308
00:22:24,200 --> 00:22:26,920
syntax these base packages for eclipse

309
00:22:27,720 --> 00:22:31,120
and for intelligent
they are same if they are not same

310
00:22:31,400 --> 00:22:35,160
you guys have to reflect
that all of your classes so previous.

311
00:22:35,160 --> 00:22:37,440
But some of the students
they didn't follow me

312
00:22:37,440 --> 00:22:40,760
and then they had different base packages
and it

313
00:22:41,680 --> 00:22:44,800
we created a lot of mess
so that's why I didn't want to do that.

314
00:22:45,200 --> 00:22:49,880
And then did they kind of
some of them were not happy.

315
00:22:49,880 --> 00:22:53,240
Why? We are using two IDs
because now they had to solve

316
00:22:53,920 --> 00:22:56,320
all the issues and all that.

317
00:22:56,320 --> 00:22:57,880
So that's why

318
00:22:58,800 --> 00:23:02,280
when we first installed Intelligent,
there was an optional yes,

319
00:23:02,280 --> 00:23:06,400
I will show that as the assignment
that import import option.

320
00:23:06,400 --> 00:23:08,880
I will show you that as well.

321
00:23:08,880 --> 00:23:13,360
Just give me some time.

322
00:23:13,360 --> 00:23:17,720
Can I make a folder and then paste that
file with that folder to make sure back?

323
00:23:17,800 --> 00:23:22,000
So you guys in all of your Java classes,
if you let's say

324
00:23:22,000 --> 00:23:25,440
let me open
that Java file from a different editor.

325
00:23:26,280 --> 00:23:29,240
So you guys see
there is this package statement.

326
00:23:30,160 --> 00:23:34,440
Now, this package is actually nothing
but a folder inside another folder.

327
00:23:34,440 --> 00:23:35,720
Okay, So there there is

328
00:23:35,720 --> 00:23:39,600
this class is placed inside a folder
that is called form, then syntax,

329
00:23:39,600 --> 00:23:42,840
and then this is where
this file is located.

330
00:23:43,400 --> 00:23:47,720
If the pack, if the package name they are,
same means

331
00:23:48,000 --> 00:23:51,040
the folder names in with
these classes are placed

332
00:23:51,680 --> 00:23:55,520
on your file systems,
actually on your computers,

333
00:23:55,880 --> 00:23:59,440
then you will not be having an issue
so you guys can copy and paste

334
00:23:59,440 --> 00:24:03,360
as many files, create new files,
new folders create new file.

335
00:24:03,360 --> 00:24:06,480
Did not put out anything
as long as the packages

336
00:24:06,480 --> 00:24:09,800
they are same
and you can copy paste anything in here.

337
00:24:09,800 --> 00:24:13,200
Now you guys have to do only one thing.

338
00:24:13,200 --> 00:24:15,480
Now. If you go back to your

339
00:24:17,640 --> 00:24:19,720
intelligent project

340
00:24:19,720 --> 00:24:23,560
and if you click reload or from disk,

341
00:24:24,000 --> 00:24:26,520
do you guys see this option

342
00:24:30,720 --> 00:24:31,400
reload

343
00:24:31,400 --> 00:24:38,920
from disk.

344
00:24:38,920 --> 00:24:42,520
So if you guys
now click on that reload from disk,

345
00:24:42,720 --> 00:24:47,440
you guys should see all of your classes
from Eclipse inside your intelligent.

346
00:24:47,440 --> 00:24:50,160
Do guys see those classes inside?

347
00:24:50,160 --> 00:25:02,960
Be intelligent. Now.

348
00:25:02,960 --> 00:25:08,360
So this is one of the ways
if the simplest way is to move your files

349
00:25:08,800 --> 00:25:13,200
now the second approach
I wanted to show you some

350
00:25:15,160 --> 00:25:17,000
terminologies.

351
00:25:17,000 --> 00:25:19,240
Do I paste it inside syntax folder?

352
00:25:19,240 --> 00:25:20,320
Yes, I

353
00:25:21,360 --> 00:25:26,240
just copy all of your folders
and paste it inside the other folder.

354
00:25:26,240 --> 00:25:26,920
That's it.

355
00:25:26,920 --> 00:25:30,480
Copy and paste.

356
00:25:30,480 --> 00:25:34,280
Okay, so in Eclipse, repeat that again.

357
00:25:34,440 --> 00:25:36,960
Copy and paste.

358
00:25:36,960 --> 00:25:45,640
Sebastian, what do you want with that?

359
00:25:45,640 --> 00:25:49,080
Reload. Okay, so right click and then

360
00:25:50,360 --> 00:25:52,920
reload from disk.

361
00:25:52,920 --> 00:25:55,560
So if you make any changes
outside of intelligent,

362
00:25:56,040 --> 00:26:00,960
intelligent by default,
I will recognize those changes

363
00:26:01,120 --> 00:26:05,400
the next time you open intelligent,
but you want to see the changes right now

364
00:26:05,400 --> 00:26:08,040
you can reload from the disk and it will.

365
00:26:08,400 --> 00:26:11,760
What happens if we
if the packages are different?

366
00:26:12,040 --> 00:26:13,360
So if packages are different,

367
00:26:13,360 --> 00:26:17,760
then intelligent will give you an ETA
and it will also show you the solution.

368
00:26:17,760 --> 00:26:21,360
So you just have to click on a
you just have to press all and enter

369
00:26:21,760 --> 00:26:24,160
and then it will fix the package
name automatically.

370
00:26:25,120 --> 00:26:27,360
You guys don't have to rename
or add to anything.

371
00:26:28,920 --> 00:26:31,800
It says the file is reloaded
in the wrong encoding.

372
00:26:31,800 --> 00:26:35,840
So if you guys are facing
this issue, there are chances that

373
00:26:37,640 --> 00:26:40,600
you have some comments in your files.

374
00:26:40,600 --> 00:26:45,360
So Hossein is facing this issue right now.

375
00:26:45,360 --> 00:26:48,880
And so if you are having this issue,
there are chances

376
00:26:48,880 --> 00:26:52,840
that you have some kind of comments
and inside the comments

377
00:26:52,840 --> 00:26:57,720
you are trying to use some characters
which are not present in UTF eight.

378
00:26:58,080 --> 00:27:01,080
So UTF eight is a kind of format

379
00:27:01,080 --> 00:27:05,280
in which you store
your that are actually on your desk.

380
00:27:05,880 --> 00:27:10,240
Now, there is another format called
the UTF 16, which has all the characters,

381
00:27:10,240 --> 00:27:12,600
Chinese characters,
those arrow symbols and all that.

382
00:27:12,840 --> 00:27:18,720
So then you copy and paste something
that suppose that sports UTF 16

383
00:27:19,080 --> 00:27:23,280
to something
that only sports UTF eight now,

384
00:27:23,280 --> 00:27:26,840
because these characters,
they are not present in the UTF system.

385
00:27:26,840 --> 00:27:30,000
So in Delhi they are the clips
of any other editor will give you an edit.

386
00:27:30,000 --> 00:27:32,160
So what you guys can do,
you can click on this

387
00:27:32,160 --> 00:27:36,120
reload in another encoding
or you can remove that comment.

388
00:27:36,480 --> 00:27:40,160
And Elif, you asked me what happens

389
00:27:40,160 --> 00:27:43,920
if the package is not Sam,
This is what will happen.

390
00:27:43,920 --> 00:27:46,880
You will be getting an error
in here. Then you have to

391
00:27:47,920 --> 00:27:50,840
place your cursor over the error
and intelligible will show you

392
00:27:50,840 --> 00:27:57,760
the quick fix automatically.

393
00:27:57,760 --> 00:27:58,880
So different languages.

394
00:27:58,880 --> 00:28:00,680
UTF 16 Sports.

395
00:28:00,680 --> 00:28:04,120
All Russian, Chinese, Arabic and all that.

396
00:28:04,400 --> 00:28:09,720
But you DFAT
does not support all the languages.

397
00:28:09,720 --> 00:28:12,600
So guys, this is one of the ways
to move your project.

398
00:28:13,920 --> 00:28:16,320
I had company
instead of syntax in the part

399
00:28:16,320 --> 00:28:18,840
that needed correction and it got dart.

400
00:28:18,840 --> 00:28:21,600
Yes, and I'll be okay.

401
00:28:22,400 --> 00:28:24,800
So if you guys don't want to do that,

402
00:28:24,800 --> 00:28:28,880
there is another way
that is available, intelligent,

403
00:28:28,920 --> 00:28:33,320
that is called
the import feature of intelligent.

404
00:28:34,240 --> 00:28:38,040
So let's say if you had if someone
has created a project in Eclipse

405
00:28:38,520 --> 00:28:41,160
and now you want to open that same project

406
00:28:41,160 --> 00:28:44,680
inside Intelligent,
how we can do that, right?

407
00:28:44,680 --> 00:28:45,960
So what we can do.

408
00:28:45,960 --> 00:28:51,960
So first we have to understand
the structure a little bit.

409
00:28:51,960 --> 00:28:56,680
So that means do you mean you are also
having the different packages in here

410
00:29:19,920 --> 00:29:20,400
or. Yes,

411
00:29:20,400 --> 00:29:26,480
if you have configured the GitHub
inside your intelligent,

412
00:29:26,480 --> 00:29:30,880
then it can also mean
that you have not included these files.

413
00:29:31,360 --> 00:29:34,440
You have not added these files
to the repository.

414
00:29:35,160 --> 00:29:37,120
So try to do that as well.

415
00:29:37,120 --> 00:29:40,200
So the first thing that I want you to do
is to

416
00:29:41,640 --> 00:29:45,480
click any of these files
and then right click inside the editor

417
00:29:45,480 --> 00:29:48,040
and try to run it

418
00:29:50,240 --> 00:29:51,600
if there is no build.

419
00:29:51,600 --> 00:29:55,960
So this second approach,
it will fix the packages automatically.

420
00:29:57,000 --> 00:30:00,600
So those files
which are having issues for now,

421
00:30:00,840 --> 00:30:03,920
you can just delete those packages.

422
00:30:03,920 --> 00:30:06,000
So and let, let me tell you.

423
00:30:06,000 --> 00:30:09,880
So it's a deluxe space inside
the eclipse is equivalent

424
00:30:09,880 --> 00:30:13,520
to projects inside intelligent, inside

425
00:30:13,800 --> 00:30:17,280
Eclipse, inside a workspace.

426
00:30:17,280 --> 00:30:21,160
You guys have projects, right?

427
00:30:21,160 --> 00:30:24,480
But in intelligent,
those projects they are called modules

428
00:30:26,000 --> 00:30:26,320
and the

429
00:30:26,320 --> 00:30:30,120
rest of the things they are,
they are kind of same.

430
00:30:30,120 --> 00:30:30,680
Okay.

431
00:30:32,080 --> 00:30:33,560
Do you recommend

432
00:30:33,560 --> 00:30:40,280
to update this version of Java?

433
00:30:40,280 --> 00:30:42,600
I will suggest to

434
00:30:42,760 --> 00:30:45,000
stick with Java eight because

435
00:30:45,000 --> 00:30:47,720
from next week, once
you guys are done with Java,

436
00:30:48,360 --> 00:30:53,120
you will be starting different frameworks
and those frameworks and libraries.

437
00:30:53,120 --> 00:30:58,280
They might not be compatible
with the latest version of of Java

438
00:30:58,280 --> 00:31:02,720
and you guys might be having weird issues
and you will be spending a lot of time.

439
00:31:02,720 --> 00:31:07,840
So it's always better to have this
Java 1.8.

440
00:31:07,840 --> 00:31:11,800
It's better to best year
to use everywhere in the industry.

441
00:31:11,800 --> 00:31:13,920
All the tools, they are compatible.

442
00:31:13,920 --> 00:31:17,320
You guys will not be facing weird issues.

443
00:31:17,320 --> 00:31:23,280
So now in in Eclipse,
we create new projects

444
00:31:23,400 --> 00:31:27,240
inside the workspace in intelligent,
we create new modules.

445
00:31:27,240 --> 00:31:30,000
So let's say, for example,
I want to create a module

446
00:31:30,560 --> 00:31:33,200
so I have two options.

447
00:31:33,200 --> 00:31:36,280
So if I click on file new

448
00:31:37,120 --> 00:31:41,400
and then module,
I will be creating a module from scratch.

449
00:31:42,000 --> 00:31:46,160
So you can create a module, which is it,
which is a project in Eclipse,

450
00:31:47,600 --> 00:31:49,720
or you can import

451
00:31:49,720 --> 00:31:52,320
that module from existing sources.

452
00:31:54,200 --> 00:31:57,600
Okay, so let's say

453
00:31:58,320 --> 00:32:01,120
you want to import your

454
00:32:02,280 --> 00:32:06,600
Eclipse project as a module intelligent.

455
00:32:07,080 --> 00:32:10,600
So then what you guys have to do,

456
00:32:10,600 --> 00:32:14,760
like let's say for example, right now
I am inside this eclipse workspace.

457
00:32:14,760 --> 00:32:25,200
I see this option.

458
00:32:25,200 --> 00:32:29,160
So now I want you to move to your eclipse

459
00:32:29,160 --> 00:32:32,240
workspace.

460
00:32:32,240 --> 00:32:32,880
Okay,

461
00:32:34,240 --> 00:32:36,080
So let me let me repeat it again.

462
00:32:36,080 --> 00:32:36,560
Okay.

463
00:32:36,560 --> 00:32:39,720
So for the next 15 to 20 minutes,

464
00:32:39,720 --> 00:32:43,320
we will be dealing with a lot of steps,
tiny details.

465
00:32:43,320 --> 00:32:47,200
So everyone, please focus so that
we don't have to repeat it multiple times.

466
00:32:47,400 --> 00:32:48,040
Okay.

467
00:32:49,080 --> 00:32:51,240
So file

468
00:32:53,160 --> 00:32:53,520
then.

469
00:32:53,520 --> 00:32:58,560
New. So,

470
00:32:59,840 --> 00:33:03,240
Sebastian, you see this option
move package convert, blah blah.

471
00:33:03,240 --> 00:33:10,440
Click on that and it will fix that.

472
00:33:10,440 --> 00:33:14,560
So if you don't have new option for Mac,

473
00:33:14,760 --> 00:33:31,120
it is not possible.

474
00:33:31,120 --> 00:33:33,920
Maybe the placement placement
can be different,

475
00:33:34,800 --> 00:33:37,040
but in the option it should.

476
00:33:37,520 --> 00:33:40,360
Even though your window is small.

477
00:33:40,360 --> 00:33:42,600
My my window is small.

478
00:33:42,600 --> 00:33:47,240
Asia.

479
00:33:47,240 --> 00:33:50,840
It's always on the top Sharif's
window. How.

480
00:33:50,880 --> 00:33:52,680
How do you know his window is small?

481
00:33:54,040 --> 00:33:54,680
Delicious.

482
00:33:54,680 --> 00:34:03,160
Something.

483
00:34:03,160 --> 00:34:05,640
Here we go.

484
00:34:05,640 --> 00:34:12,040
I think sometimes it's confusing for Mac.

485
00:34:12,040 --> 00:34:14,280
So you see this option

486
00:34:17,600 --> 00:34:20,520
that says so on the top left corner,

487
00:34:20,520 --> 00:34:24,240
it says,
You see that apple icon in Delhi, India.

488
00:34:24,280 --> 00:34:25,720
And then this file option.

489
00:34:25,720 --> 00:34:30,240
So I want you to click on that file
option.

490
00:34:30,240 --> 00:34:33,560
So do you me delete
those files that you have imported.

491
00:34:33,840 --> 00:34:34,160
Okay.

492
00:34:34,160 --> 00:34:39,960
And follow follow these steps.

493
00:34:39,960 --> 00:34:42,120
Delete
those packages that you have imported

494
00:34:42,120 --> 00:34:44,400
from the clips and follow these steps.

495
00:34:44,400 --> 00:34:55,200
Fine.

496
00:34:55,200 --> 00:34:58,040
So Simon and

497
00:34:58,040 --> 00:35:01,200
Damian was saying that

498
00:35:01,240 --> 00:35:04,320
why we don't use that import

499
00:35:06,000 --> 00:35:07,720
import feature in here?

500
00:35:07,720 --> 00:35:13,160
So the reason is that if you want to copy
some packages

501
00:35:13,880 --> 00:35:19,320
from one project to other part project,
then you cannot use that import feature

502
00:35:19,440 --> 00:35:22,560
because it will create a new either
a new project or new module.

503
00:35:22,920 --> 00:35:27,600
So let's say you already have a project
in Intelligent,

504
00:35:28,080 --> 00:35:30,760
maybe on the same case

505
00:35:30,760 --> 00:35:34,080
that we have 50 of our classes
or ten classes.

506
00:35:34,080 --> 00:35:38,120
They are presently in Eclipse
and the rest of the class

507
00:35:39,440 --> 00:35:42,080
is presently inside the intelligent right?

508
00:35:42,080 --> 00:35:45,600
So you don't want to create a new project,
you don't want to create a new module.

509
00:35:46,160 --> 00:35:50,760
You only want to have your code
in a single place inside a single project.

510
00:35:51,640 --> 00:35:53,760
So that's we're told that that

511
00:35:53,760 --> 00:35:56,600
copy paste will be helpful.

512
00:35:57,000 --> 00:35:58,200
Is it clear

513
00:35:58,200 --> 00:36:02,280
or is it also possible
and I am missing something

514
00:36:03,880 --> 00:36:06,040
the Mid Simon

515
00:36:10,280 --> 00:36:11,200
So if you don't want

516
00:36:11,200 --> 00:36:13,800
to create a new module or new project

517
00:36:14,400 --> 00:36:19,640
and you want to integrate the code
from your eclipse,

518
00:36:19,640 --> 00:36:23,440
some of the files inside that new inside

519
00:36:23,440 --> 00:36:27,920
that existing project in an intelligent,
then that copy paste

520
00:36:27,920 --> 00:36:32,760
is the simplest option that we can have.

521
00:36:32,760 --> 00:36:37,800
There is one more way that you can push
your code from eclipse to a get repo

522
00:36:38,400 --> 00:36:39,040
and then

523
00:36:40,440 --> 00:36:41,240
you can push

524
00:36:41,240 --> 00:36:45,080
your from your intelligent
to that repo as well.

525
00:36:45,080 --> 00:36:48,960
March those calls and then clone
those calls to a new project.

526
00:36:48,960 --> 00:36:52,560
But you guys don't know yet
about merging and all that. So

527
00:36:53,600 --> 00:36:58,200
after this Java classes I guess you guys
will be having four more good classes.

528
00:36:58,200 --> 00:37:00,760
Then we will teach you
how to merge the code

529
00:37:00,760 --> 00:37:03,600
from multiple computers
inside the same project.

530
00:37:05,040 --> 00:37:07,920
So right now let's, let's try to use

531
00:37:07,920 --> 00:37:10,560
the simplest things that are possible.

532
00:37:10,920 --> 00:37:12,640
Claire Simon.

533
00:37:12,640 --> 00:37:15,480
Damian
That why we are using that copy paste

534
00:37:20,520 --> 00:37:24,200
So we don't want to create a new project,
we don't want to create a new module,

535
00:37:24,520 --> 00:37:27,520
so we simply want to kind of merge

536
00:37:27,520 --> 00:37:31,920
the large
sum packages from two different places

537
00:37:31,920 --> 00:37:36,840
inside a single project.

538
00:37:36,840 --> 00:37:39,200
So that's is a file Neo

539
00:37:40,080 --> 00:37:42,200
and then module

540
00:37:42,200 --> 00:37:51,640
from our existing sources.

541
00:37:51,640 --> 00:37:53,480
Everyone see everyone.

542
00:37:53,480 --> 00:38:00,480
You guys see this option.

543
00:38:00,480 --> 00:38:08,000
Okay, so let me click on that
and now I want you guys,

544
00:38:08,000 --> 00:38:11,280
I already imported
the classes that I would like to use.

545
00:38:11,520 --> 00:38:12,120
Okay?

546
00:38:12,120 --> 00:38:17,280
So even if you created a single class
in intelligent on the very first day,

547
00:38:17,520 --> 00:38:21,360
you mean that's also
good and that's also good

548
00:38:22,920 --> 00:38:23,680
the same.

549
00:38:23,680 --> 00:38:26,160
But sometimes
you guys have to do this as well.

550
00:38:26,280 --> 00:38:28,800
So I wanted to show you that as well.

551
00:38:29,040 --> 00:38:35,440
And it's a very common practice number
because on companies, on a single project,

552
00:38:35,440 --> 00:38:39,080
maybe 50 or 100 developers
will be working at the same time.

553
00:38:39,920 --> 00:38:43,080
So you don't want to create 50
or 100 projects

554
00:38:43,080 --> 00:38:47,040
for each of the changes
that other developers are making.

555
00:38:47,040 --> 00:38:52,360
You always want to merge the code from all
the computers inside a single project.

556
00:38:52,440 --> 00:38:54,880
You guys will learn how to do that
using it.

557
00:38:54,880 --> 00:38:58,160
But this is kind of
so in here in Pakistan, we say

558
00:38:58,720 --> 00:39:01,560
this is kind of the basic way of doing it.

559
00:39:02,040 --> 00:39:03,080
Dugard

560
00:39:03,640 --> 00:39:13,120
It's the easiest way.

561
00:39:13,120 --> 00:39:16,800
So now I want you
to select the project from

562
00:39:18,360 --> 00:39:19,680
the from Eclipse.

563
00:39:19,680 --> 00:39:22,880
So here are all of my projects
from Eclipse.

564
00:39:23,480 --> 00:39:26,200
Okay, all of my project.

565
00:39:26,720 --> 00:39:31,640
So I can import any of the project
from Eclipse in here.

566
00:39:31,640 --> 00:39:34,560
So if I click okay

567
00:39:35,280 --> 00:39:40,520
and then it will ask me that, hey there.

568
00:39:40,520 --> 00:39:43,320
So that's Jacob's phone number

569
00:39:44,480 --> 00:39:45,920
two words.

570
00:39:46,800 --> 00:39:49,560
So I did this project
for one of these students.

571
00:39:49,560 --> 00:39:51,720
That's why you guys see
all those different names.

572
00:39:51,720 --> 00:39:55,400
So now you guys see
that Intel is asking me that.

573
00:39:55,560 --> 00:39:56,760
So that is it.

574
00:39:56,760 --> 00:40:01,320
Is it a project from Eclipse
or is it a gradle or maven?

575
00:40:01,320 --> 00:40:04,000
Now, these two things, they are

576
00:40:06,000 --> 00:40:08,040
you can say they are tools

577
00:40:08,040 --> 00:40:11,920
that help us manage
our projects automatically.

578
00:40:13,200 --> 00:40:16,280
So you guys remember
you imported some jobs

579
00:40:17,200 --> 00:40:19,400
for your selenium to work properly, right?

580
00:40:19,840 --> 00:40:23,480
Downloading those jobs,
importing them manually.

581
00:40:24,000 --> 00:40:29,040
So if you use these build systems,
you guys don't have to do any of that.

582
00:40:29,120 --> 00:40:31,160
You just write the name of the job.

583
00:40:31,160 --> 00:40:34,280
Every word your project goes,
your jobs will go along.

584
00:40:34,280 --> 00:40:38,040
That project right now,
if you copy your project to a new project,

585
00:40:38,040 --> 00:40:40,160
you have to re-import the jobs again.

586
00:40:41,120 --> 00:40:43,040
And in real life, those jobs, they can

587
00:40:43,040 --> 00:40:45,600
they can be 100 or 200 or 300.

588
00:40:47,600 --> 00:40:50,000
But on Apple, I don't see any sell

589
00:40:50,080 --> 00:40:54,360
your apple and by windows,
if you don't see that option.

590
00:40:54,360 --> 00:40:55,800
Okay.

591
00:40:58,440 --> 00:41:01,160
So now as will you we will be teaching you

592
00:41:01,160 --> 00:41:06,000
a separate session on on Maven
and most popular on measurement

593
00:41:06,000 --> 00:41:07,160
not great

594
00:41:11,440 --> 00:41:13,360
So Illini post posting this partnership.

595
00:41:13,360 --> 00:41:18,960
I will show you how to find that option.

596
00:41:18,960 --> 00:41:23,000
So you guys don't need to worry
about this dreadlocked maven.

597
00:41:23,000 --> 00:41:25,480
You guys will be having separate
sessions on this.

598
00:41:25,480 --> 00:41:30,760
Maven Okay,

599
00:41:30,760 --> 00:41:36,800
so, so you guys see
all of you see this option

600
00:41:37,000 --> 00:41:44,080
that says Eclipse.

601
00:41:44,080 --> 00:41:56,160
Okay, now let's click on next.

602
00:41:56,160 --> 00:41:59,480
So now if you want to work on

603
00:41:59,480 --> 00:42:03,320
the same project from Intelligent Eclipse
as well, you can click on this option

604
00:42:03,320 --> 00:42:07,320
that says Link created
Intelligent ID module to Eclipse.

605
00:42:07,480 --> 00:42:11,600
Okay, But we will not be doing that
because you guys will mess up again.

606
00:42:11,600 --> 00:42:15,400
Everything
or you can keep on everything as default.

607
00:42:15,400 --> 00:42:17,960
Create modules, file the near blast file

608
00:42:20,160 --> 00:42:20,880
and then

609
00:42:20,880 --> 00:42:24,920
simply click on next.

610
00:42:24,920 --> 00:42:29,360
Then you should see ASP.NET Batch then
and that big mark in here.

611
00:42:29,560 --> 00:42:39,000
You guys see this option.

612
00:42:39,000 --> 00:42:44,160
That means you guys have not selected.

613
00:42:44,160 --> 00:42:48,480
So if I cancel this, if I,

614
00:42:48,800 --> 00:42:51,120
if I do file new

615
00:42:53,560 --> 00:42:56,720
Oh you guys,
you guys would be seeing that batch 11,

616
00:42:56,720 --> 00:43:04,560
not ten.

617
00:43:04,560 --> 00:43:05,160
Definitely.

618
00:43:05,160 --> 00:43:08,520
Guys,
how can you have that as that 410 project.

619
00:43:08,520 --> 00:43:09,520
Right.

620
00:43:09,520 --> 00:43:14,160
Because I have multiple projects
in my glyph that I see as that base ten.

621
00:43:14,520 --> 00:43:17,600
Definitely You will be seeing
the name of your projects, right?

622
00:43:18,240 --> 00:43:23,000
So you, you I remember saying go copy
and paste everything from other students.

623
00:43:23,000 --> 00:43:28,080
At least try to change the parts right?

624
00:43:28,080 --> 00:43:33,720
You will see anything that you have
created on your computers right.

625
00:43:33,720 --> 00:43:35,320
He was upset.

626
00:43:35,320 --> 00:43:38,920
So let me repeat it again.

627
00:43:38,920 --> 00:43:40,880
So five new

628
00:43:42,240 --> 00:43:44,520
module from existing sources.

629
00:43:44,920 --> 00:43:50,960
So when we train a computer, we have this
problem with computers as well.

630
00:43:51,120 --> 00:43:54,920
So right now in my research,
I am facing a lot of issues.

631
00:43:55,280 --> 00:44:00,440
If I am teaching a computer
that Simon looks like this or causing

632
00:44:00,440 --> 00:44:06,640
looks like this, and if I give a slightly
different picture to my program,

633
00:44:06,640 --> 00:44:12,000
so an ABC program that tries
to recognize the person, the celebrities

634
00:44:12,720 --> 00:44:15,960
and that computer thing,
that computer cannot recognize

635
00:44:15,960 --> 00:44:19,520
that it exactly looks
for the exact same thing.

636
00:44:19,520 --> 00:44:21,920
We call it
overfitting in in machine learning.

637
00:44:21,920 --> 00:44:27,680
And so it's kind of memorizes
all the things like, for example,

638
00:44:27,680 --> 00:44:32,280
if I give a picture of Alexa with glasses
and then the next time I feed a picture

639
00:44:32,280 --> 00:44:35,760
without the glasses, computer will say,
This is not Alex.

640
00:44:36,080 --> 00:44:36,360
Right.

641
00:44:36,360 --> 00:44:41,160
So memorizing each
and everything is not a generalizing. So

642
00:44:42,600 --> 00:44:44,840
you will be seeing different projects

643
00:44:45,480 --> 00:44:49,120
depending upon
what name you have given to your project.

644
00:44:49,280 --> 00:44:53,040
And if you are inside
this eclipse workspace or not.

645
00:44:53,680 --> 00:44:56,360
So first thing you guys have to make sure
that you are inside

646
00:44:56,360 --> 00:44:57,960
of the Eclipse workspace

647
00:44:57,960 --> 00:45:01,920
and then you can select any of
the projects that you guys want to import.

648
00:45:02,120 --> 00:45:05,280
So everyone, please
make sure that you are first inside

649
00:45:05,280 --> 00:45:08,960
this eclipse workspace.

650
00:45:08,960 --> 00:45:12,200
Are you all inside this workspace,
inside this eclipse

651
00:45:12,200 --> 00:45:13,400
workspace

652
00:45:15,920 --> 00:45:18,960
just otherwise,

653
00:45:18,960 --> 00:45:22,200
you guys will not be seeing anything

654
00:45:24,400 --> 00:45:25,680
if you guys don't know

655
00:45:25,680 --> 00:45:28,920
how to navigate navigate
to your eclipse workspace.

656
00:45:28,920 --> 00:45:29,920
You guys can tell me.

657
00:45:29,920 --> 00:45:33,280
I can show you how to do that.

658
00:45:33,280 --> 00:45:37,320
Maybe it is located on a different folder
inside a different drive

659
00:45:37,320 --> 00:45:40,960
or something like that.

660
00:45:40,960 --> 00:45:46,360
Okay,

661
00:45:46,360 --> 00:45:51,080
so if you want to be 100% sure, let's say
you want to import this project, right

662
00:45:51,080 --> 00:45:53,520
click on any of the project
that you want to import

663
00:45:54,200 --> 00:46:05,320
inside your eclipse. Yes.

664
00:46:05,320 --> 00:46:07,960
Because you guys were not in the eclipse
workspace.

665
00:46:07,960 --> 00:46:10,560
Right. And how you can see the projects

666
00:46:12,640 --> 00:46:28,240
and so if you guys still don't
maybe you don't remember

667
00:46:28,240 --> 00:46:31,240
or for any other reason,
you guys don't know where that folder is.

668
00:46:31,280 --> 00:46:34,800
You guys can just right
click click show in

669
00:46:35,440 --> 00:46:37,960
System Explorer

670
00:46:39,320 --> 00:46:41,880
and then it will take you to the Eclipse
workspace, right?

671
00:46:42,080 --> 00:46:44,760
You can simply copy this part from here.

672
00:46:45,800 --> 00:46:48,720
So my Eclipse workspace is stored

673
00:46:48,720 --> 00:46:52,400
under C users as complete
and then eclipse workspace

674
00:46:53,720 --> 00:46:55,760
so you can have a different path

675
00:46:56,520 --> 00:47:00,160
to copy that path.

676
00:47:00,160 --> 00:47:01,840
And now

677
00:47:03,200 --> 00:47:05,880
you can paste that part in here.

678
00:47:05,920 --> 00:47:07,680
Inside, in here.

679
00:47:09,480 --> 00:47:10,040
Okay.

680
00:47:10,040 --> 00:47:10,640
Like this.

681
00:47:10,640 --> 00:47:14,920
And then you should see your project.

682
00:47:14,920 --> 00:47:15,320
Yeah.

683
00:47:15,720 --> 00:47:18,720
Do you guys see your eclipse projects now

684
00:47:19,800 --> 00:47:35,000
or still lost?

685
00:47:35,000 --> 00:47:38,680
Okay, so if I click on that badge, then

686
00:47:39,840 --> 00:47:42,720
I and if I click on okay

687
00:47:44,320 --> 00:47:45,360
then same steps.

688
00:47:45,360 --> 00:47:55,480
It will ask me
from where you want to import the project.

689
00:47:55,480 --> 00:47:58,440
Then next don't do anything

690
00:47:58,640 --> 00:48:01,080
and click next and next

691
00:48:02,320 --> 00:48:08,360
and then finish.

692
00:48:08,360 --> 00:48:09,720
And then

693
00:48:11,080 --> 00:48:14,080
if you guys see this option

694
00:48:14,080 --> 00:48:16,160
module files found

695
00:48:16,160 --> 00:48:20,160
so intelligent, seeing their task
that you already have a

696
00:48:20,800 --> 00:48:23,520
another module file inside in there

697
00:48:23,680 --> 00:48:27,200
because I already imported
that project multiple times.

698
00:48:27,960 --> 00:48:32,080
So you guys can click on this option,
it's fine.

699
00:48:32,640 --> 00:48:37,320
And now you guys should see your project
from Eclipse

700
00:48:37,320 --> 00:48:41,640
inside the same window in here
and all of your files

701
00:48:41,640 --> 00:48:42,600
in here

702
00:48:50,760 --> 00:48:51,960
like this.

703
00:48:52,440 --> 00:48:54,600
So if I, if I click on play

704
00:48:56,280 --> 00:49:02,200
around, I see my house,

705
00:49:03,240 --> 00:49:06,440
if I see my out. So

706
00:49:06,440 --> 00:49:09,160
this time, what for the difference between

707
00:49:10,640 --> 00:49:12,920
the earlier steps that I show

708
00:49:13,480 --> 00:49:16,240
now, I have a separate module.

709
00:49:17,640 --> 00:49:19,360
Previously I was importing

710
00:49:19,360 --> 00:49:23,200
everything inside this same module, Aztec
Batch 11.

711
00:49:23,400 --> 00:49:26,400
Now I have a separate module
and in here I see

712
00:49:26,400 --> 00:49:29,080
all of my project from Eclipse.

713
00:49:29,400 --> 00:49:33,120
And now you guys don't have to worry
about any of the package statements.

714
00:49:33,120 --> 00:49:36,480
Intel will fix everything for you
before importing,

715
00:49:36,720 --> 00:49:41,240
and you guys can just run your projects
by just clicking on this run.

716
00:49:41,280 --> 00:49:54,960
I Okay, so

717
00:49:56,640 --> 00:49:57,480
you can click on.

718
00:49:57,480 --> 00:50:00,120
Okay, Mom, I'm honored
you can click on that.

719
00:50:00,120 --> 00:50:00,760
Okay?

720
00:50:00,760 --> 00:50:04,200
Because in Eclipse
you guys are using a different JDK

721
00:50:04,640 --> 00:50:07,760
and that JDK is not present
inside the intelligent.

722
00:50:08,640 --> 00:50:10,440
That's why you are facing that issue.

723
00:50:10,440 --> 00:50:13,160
So click on okay and on inside.

724
00:50:13,160 --> 00:50:17,600
When you click on any of the Java files,
you guys will see an option

725
00:50:17,600 --> 00:50:21,600
that says Configure JDK a blue line

726
00:50:21,920 --> 00:50:30,800
and you can fit that from here.

727
00:50:30,800 --> 00:50:32,520
Monaco click on, Okay.

728
00:50:32,520 --> 00:50:38,520
And then whenever you try to run a file,
you will see a blue line in here

729
00:50:38,520 --> 00:50:43,800
that says Configure JDK, click on that
and you will be able to use the same JDK

730
00:50:43,800 --> 00:50:49,920
that is already.

731
00:50:49,920 --> 00:50:51,400
So now you guys know.

732
00:50:51,400 --> 00:50:55,280
So what I was
previously what I was showing you that

733
00:50:56,000 --> 00:50:59,360
if, if I, if I do this and this

734
00:51:00,680 --> 00:51:03,120
so previously I was telling you that

735
00:51:04,920 --> 00:51:08,760
these projects they are referred to as

736
00:51:09,880 --> 00:51:12,600
modules in intelligence.

737
00:51:12,600 --> 00:51:14,240
Okay?

738
00:51:14,240 --> 00:51:17,760
So as they're about 11,
I have it somewhere in here.

739
00:51:18,640 --> 00:51:23,080
And then this project is called Project
in and Intelligent.

740
00:51:23,080 --> 00:51:25,400
This is called
you see this eclipse workspace?

741
00:51:25,400 --> 00:51:30,040
It is called Workspace in here.

742
00:51:30,040 --> 00:51:40,280
Show me this screenshot.

743
00:51:40,280 --> 00:51:44,160
So now you guys can create
multiple modules

744
00:51:44,160 --> 00:51:47,480
inside the same project

745
00:51:47,480 --> 00:51:50,760
in an intelligent.

746
00:51:50,760 --> 00:51:51,520
Okay.

747
00:51:53,640 --> 00:51:55,840
Did I promise to show you anything else?

748
00:51:55,840 --> 00:51:59,160
Guys? Yes.

749
00:51:59,400 --> 00:52:02,280
If you guys lose any of your files. Right.

750
00:52:02,880 --> 00:52:05,000
If you guys lose any of your files.

751
00:52:06,320 --> 00:52:10,880
So let's say guys.

752
00:52:10,880 --> 00:52:14,320
So there is one more thing
that I want to show you.

753
00:52:14,840 --> 00:52:17,640
If you guys observe these buttons in here,

754
00:52:19,040 --> 00:52:21,760
there is this button
that squeezes everything.

755
00:52:22,760 --> 00:52:23,640
So the

756
00:52:23,640 --> 00:52:26,680
expands everything, and then this button
that squeezes everything.

757
00:52:26,680 --> 00:52:29,600
So let's say, for example, right now
my project loop.

758
00:52:29,600 --> 00:52:30,320
Terrible, right?

759
00:52:30,320 --> 00:52:31,280
Maybe you have opened

760
00:52:31,280 --> 00:52:34,200
multiple windows are now
you have to scroll down multiple time.

761
00:52:34,600 --> 00:52:38,840
So what I can do
I can click on this collapse all button

762
00:52:38,840 --> 00:52:40,560
and it will nicely collapse

763
00:52:40,560 --> 00:52:43,960
all the modules, all the projects
inside this project Explorer.

764
00:52:43,960 --> 00:52:48,000
And now I can I can navigate easily
wherever, wherever I want to go.

765
00:52:48,800 --> 00:52:54,800
So you can click on this collapse
all button.

766
00:52:54,800 --> 00:53:01,720
Are you guys able to squeeze
your project structure in here?

767
00:53:01,720 --> 00:53:04,800
Yes, it usually happens when the there is

768
00:53:04,800 --> 00:53:08,400
a different JDK
on Eclipse and different Gun project.

769
00:53:08,760 --> 00:53:12,080
Now there is this second option
that says select open file.

770
00:53:12,080 --> 00:53:14,320
So right now I have opened this file

771
00:53:14,640 --> 00:53:17,920
and I don't know where this file is coming
from.

772
00:53:17,920 --> 00:53:18,320
Right.

773
00:53:18,320 --> 00:53:20,120
This task one test per

774
00:53:20,120 --> 00:53:21,240
I don't know where this file

775
00:53:21,240 --> 00:53:25,240
is coming from,
so I can click on this round button and it

776
00:53:25,240 --> 00:53:29,160
will show me the complete structure,
the package name, the module name.

777
00:53:29,160 --> 00:53:33,320
So when you guys will be working with
multiple modules, maybe hundreds of them

778
00:53:33,840 --> 00:53:37,960
inside modules, hundreds of packages,
inside packages, hundreds of files,

779
00:53:37,960 --> 00:53:41,640
and you want to look at a file
or the file that you have opened.

780
00:53:41,640 --> 00:53:42,960
You can click on this. This

781
00:53:43,960 --> 00:53:46,840
square kind of button

782
00:53:46,840 --> 00:53:49,440
will kind of button and then will show you

783
00:53:49,440 --> 00:53:51,960
the exact location of that file
inside your project.

784
00:53:51,960 --> 00:53:56,680
Explorer.

785
00:53:56,680 --> 00:53:59,680
So now the next useful thing
that I want to show you.

786
00:53:59,960 --> 00:54:03,200
So let's say

787
00:54:03,760 --> 00:54:07,080
I have created this North Dart, right?

788
00:54:08,160 --> 00:54:11,640
And what happens is that I accidentally
maybe delete

789
00:54:12,960 --> 00:54:15,640
this file right now

790
00:54:15,640 --> 00:54:18,440
I have not pushed this file to the

791
00:54:19,760 --> 00:54:21,920
GitHub. Right.

792
00:54:21,920 --> 00:54:24,040
So how do I recover that file.

793
00:54:25,080 --> 00:54:28,320
So if you guys are in this situation,

794
00:54:28,320 --> 00:54:30,800
you can right click on your project

795
00:54:32,320 --> 00:54:37,080
and then you guys can click on this option
that says local history.

796
00:54:38,080 --> 00:54:48,560
Do you guys see this option,
local history?

797
00:54:48,560 --> 00:54:53,200
So if I click on that now,
what the intelligence doing,

798
00:54:53,600 --> 00:54:56,280
it is recording all of your steps.

799
00:54:56,280 --> 00:54:59,520
Even if you put a space inside a file

800
00:54:59,960 --> 00:55:02,240
intelligence records that step.

801
00:55:02,840 --> 00:55:07,200
And if you if you even want
to revert that space in inside

802
00:55:07,200 --> 00:55:12,280
any of the file inside
anywhere on your project, you can do that.

803
00:55:13,560 --> 00:55:15,400
Yes, it's kind of FBI.

804
00:55:15,400 --> 00:55:17,320
So intelligence is recording.

805
00:55:17,320 --> 00:55:19,560
You see all of my steps.

806
00:55:19,560 --> 00:55:22,480
Intelligence has been recording
all of my steps.

807
00:55:22,840 --> 00:55:24,360
I created a project.

808
00:55:24,360 --> 00:55:27,840
I created a file, like I made
some external can use.

809
00:55:27,840 --> 00:55:31,520
I created an authority module, weeks,
a certain demo.

810
00:55:32,000 --> 00:55:34,800
So everything that I have been doing on

811
00:55:34,800 --> 00:55:38,000
the Intelligent
Intelligence was recording everything.

812
00:55:38,280 --> 00:55:43,960
And if I want to go back to that
previous step, I can just do right click.

813
00:55:43,960 --> 00:55:47,840
So right now I have to look at my notes
file from plus 27.

814
00:55:48,440 --> 00:55:51,120
I can right click and I can say reload.

815
00:55:51,600 --> 00:55:55,200
And now if I go back, I see my notes

816
00:55:55,200 --> 00:55:58,440
dot in here.

817
00:55:58,440 --> 00:56:04,560
And do you guys see this option?

818
00:56:04,560 --> 00:56:04,920
No, no.

819
00:56:04,920 --> 00:56:08,920
It looks for any kind of file,
any kind of file,

820
00:56:08,920 --> 00:56:12,320
anything, any package folder, anything.

821
00:56:12,480 --> 00:56:15,640
You can reverse the changes
that you have made

822
00:56:15,640 --> 00:56:19,240
and inside anything in your intelligent

823
00:56:22,920 --> 00:56:23,960
and other way.

824
00:56:23,960 --> 00:56:27,440
Another reason to love intelligent.

825
00:56:27,440 --> 00:56:28,040
All right.

826
00:56:28,280 --> 00:56:32,000
So the next thing let's say maybe

827
00:56:33,520 --> 00:56:36,280
let's say I.

828
00:56:36,560 --> 00:56:39,240
I arrived something in here like this.

829
00:56:39,240 --> 00:56:41,280
Like this, right?

830
00:56:41,280 --> 00:56:42,560
And then

831
00:56:46,080 --> 00:56:53,880
if I click on this and this north door.

832
00:56:54,440 --> 00:56:55,800
So now

833
00:56:56,160 --> 00:56:59,240
Intelligent has recorded
those steps as well.

834
00:56:59,240 --> 00:57:04,120
So I created a file

835
00:57:05,000 --> 00:57:07,760
naught naught naught naught BSD, right.

836
00:57:08,520 --> 00:57:10,160
Then I deleted that file.

837
00:57:10,160 --> 00:57:11,960
That is also recorded.

838
00:57:11,960 --> 00:57:17,040
Then I reverted that file on this time,
on this date that is also recorded.

839
00:57:17,120 --> 00:57:20,160
So if you want to revert, delete it again.

840
00:57:20,200 --> 00:57:23,880
That is also that I made
some changes in here.

841
00:57:24,160 --> 00:57:26,280
In here I made some changes.

842
00:57:26,280 --> 00:57:29,080
I wrote two lines that is also recorded.

843
00:57:29,080 --> 00:57:32,160
So if if you click on

844
00:57:32,160 --> 00:57:35,920
if you right click on that file
and if we click on show differences

845
00:57:36,960 --> 00:57:39,240
so intelligent or tells me that there

846
00:57:39,320 --> 00:57:42,360
previously
there were only two lines in here

847
00:57:43,000 --> 00:57:46,120
and then you opened that file
and you wrote these

848
00:57:46,120 --> 00:57:51,200
three lines, okay,
you wrote those three lines.

849
00:57:51,480 --> 00:57:53,200
Do you want me to reverse those?

850
00:57:53,200 --> 00:57:55,040
What do you want me to change those?

851
00:57:55,040 --> 00:57:56,800
What do you want me to do at the end?

852
00:57:56,800 --> 00:58:00,960
It is with all the files
or everything that is present

853
00:58:00,960 --> 00:58:05,280
inside the intelligent.

854
00:58:05,280 --> 00:58:09,240
So if I want to accept those changes,

855
00:58:10,120 --> 00:58:12,400
I can click on this arrow.

856
00:58:12,400 --> 00:58:15,240
And those changes will be

857
00:58:15,240 --> 00:58:16,200
accepted for me.

858
00:58:16,200 --> 00:58:22,160
So let's say, for example,
let me want to go back

859
00:58:22,160 --> 00:58:24,200
and let's say I delete,

860
00:58:25,800 --> 00:58:27,800
I deleted this and I see

861
00:58:30,560 --> 00:58:33,600
intelligent is full rights.

862
00:58:34,040 --> 00:58:37,520
Now if I right click

863
00:58:39,200 --> 00:58:44,280
and if I click on show Local History.

864
00:58:44,280 --> 00:58:49,440
So it shows me the changes again,
I right click on that file,

865
00:58:50,040 --> 00:58:55,000
I show difference
and then now you saying that last there

866
00:58:56,680 --> 00:58:59,000
there were three lines written in here.

867
00:58:59,640 --> 00:59:01,320
You deleted those lines

868
00:59:01,320 --> 00:59:04,920
and then you wrote a another line
saying intelligence school.

869
00:59:05,200 --> 00:59:07,440
Do you want to reverse that option?

870
00:59:07,440 --> 00:59:12,000
So if you want to reverse that option,
you can click on these arrows

871
00:59:12,480 --> 00:59:16,360
and those files they will be now.

872
00:59:17,080 --> 00:59:20,360
So now if I go back to Tool Node

873
00:59:20,400 --> 00:59:25,120
or you see these
these changes, they are back again, okay?

874
00:59:25,840 --> 00:59:28,280
These changes, they are back again.

875
00:59:28,920 --> 01:00:02,880
Are you guys able to revert your changes?

876
01:00:02,880 --> 01:00:06,600
Okay, so now you guys have to make me
one promise.

877
01:00:07,520 --> 01:00:08,880
Okay.

878
01:00:08,880 --> 01:00:13,120
So all of there are so many things
that are possible, but

879
01:00:13,800 --> 01:00:15,800
modern will will show you

880
01:00:17,040 --> 01:00:20,040
similar features
using GitHub using the command line.

881
01:00:20,960 --> 01:00:25,720
Do tell was done that you guys know
how to do that using the UI in mentality.

882
01:00:25,720 --> 01:00:26,440
Okay.

883
01:00:26,760 --> 01:00:30,120
So he will tell you
all those things using the

884
01:00:31,200 --> 01:00:32,520
using GitHub

885
01:00:32,520 --> 01:00:37,760
and I want you to listen to him
and focus on that because these changes

886
01:00:37,760 --> 01:00:41,600
are intelligent, can not record
all the changes forever, but

887
01:00:43,320 --> 01:00:45,800
GitHub can record
all of your changes forever.

888
01:00:46,200 --> 01:00:48,360
So those steps, they are important.

889
01:00:48,720 --> 01:00:52,320
Don't don't try to show show your self
that we know

890
01:00:52,320 --> 01:00:54,200
something better or something like that.

891
01:00:54,200 --> 01:00:58,080
Those are super simple, important
and I want you to learn those, right?

892
01:00:59,200 --> 01:01:03,240
And then I will show you how
to do all of that inside the intelligent.

893
01:01:03,240 --> 01:01:03,480
Okay.

894
01:01:03,480 --> 01:01:08,280
But that is all so important.

895
01:01:08,280 --> 01:01:11,040
Okay, so now you guys know how to fix.

896
01:01:11,040 --> 01:01:14,520
If you delete anything
in the intelligence,

897
01:01:14,560 --> 01:01:27,800
you know how to import projects of.

898
01:01:27,800 --> 01:01:30,360
Okay, the remaining things
I will show you later.

899
01:01:31,720 --> 01:01:34,120
I will you guys will forget if

900
01:01:36,120 --> 01:01:40,560
next two weeks.

901
01:01:40,560 --> 01:01:41,640
All right.

902
01:01:41,640 --> 01:01:45,240
So at least now you guys know
that you guys don't need to worry

903
01:01:45,240 --> 01:01:47,160
if you delete anything accidentally.

904
01:01:47,160 --> 01:01:49,960
How to import files
to get out from intelligent.

905
01:01:51,240 --> 01:01:51,680
Alex.

906
01:01:51,680 --> 01:01:54,520
It's super, super easy and intelligent,

907
01:01:55,040 --> 01:01:59,880
but I don't want to show that
because Mohsen will be showing you

908
01:01:59,880 --> 01:02:07,800
that using the command line
and then you guys will not focus.

909
01:02:07,800 --> 01:02:11,640
This reminds me, when we were kids,
my mom took my sister somewhere

910
01:02:11,640 --> 01:02:15,000
and told her not to tell Aisha
You had ice cream.

911
01:02:15,000 --> 01:02:20,840
She comes home and says,
I did not have ice cream.

912
01:02:20,840 --> 01:02:24,440
Yeah, you guys don't know how to do that

913
01:02:24,440 --> 01:02:29,000
using New Delhi yet, right?

914
01:02:29,000 --> 01:02:39,480
Okay, so let's start the two day of class.

915
01:02:39,480 --> 01:02:43,440
So we started learning about

916
01:02:43,440 --> 01:02:50,560
about the ArrayList, right.

917
01:02:50,560 --> 01:02:54,200
Okay, So what do you guys remember
about the ArrayList?

918
01:02:54,560 --> 01:02:59,160
Why? Well, what are ArrayList?

919
01:02:59,160 --> 01:02:59,360
Okay,

920
01:03:01,600 --> 01:03:03,840
They are flexible.

921
01:03:03,840 --> 01:03:04,280
Okay?

922
01:03:04,680 --> 01:03:12,840
Yes. So

923
01:03:15,120 --> 01:03:19,080
ArrayList is a class

924
01:03:19,360 --> 01:03:22,640
in collections framework

925
01:03:26,200 --> 01:03:29,680
that helps us

926
01:03:29,800 --> 01:03:31,240
store

927
01:03:34,280 --> 01:03:40,120
delete,

928
01:03:40,120 --> 01:03:42,000
retrieve

929
01:03:46,960 --> 01:03:49,720
and manage

930
01:03:50,960 --> 01:03:52,960
back to

931
01:03:54,600 --> 01:03:55,200
easily.

932
01:03:55,200 --> 01:03:55,960
Right.

933
01:03:56,160 --> 01:03:58,840
As compared to

934
01:04:01,400 --> 01:04:04,760
arrays.

935
01:04:04,760 --> 01:04:07,280
It has many, many

936
01:04:08,520 --> 01:04:11,320
better I mean, new methods

937
01:04:13,480 --> 01:04:18,240
to manipulate the data.

938
01:04:18,240 --> 01:04:19,000
Right.

939
01:04:19,000 --> 01:04:22,120
And if I ask you guys behind the scenes

940
01:04:23,360 --> 01:04:33,240
which data structure
this ArrayList is using.

941
01:04:33,240 --> 01:04:36,800
So we discussed the two types of of lists,

942
01:04:36,800 --> 01:04:41,640
right.

943
01:04:41,640 --> 01:04:45,600
What do you guys remember the names,

944
01:04:46,520 --> 01:04:51,200
two types of lists.

945
01:04:51,200 --> 01:04:52,800
ArrayList

946
01:04:54,320 --> 01:05:05,160
and Linked List.

947
01:05:05,160 --> 01:05:09,520
So if I ask you specifically
about the list,

948
01:05:10,160 --> 01:05:13,840
can you guys tell me how internally,
how data

949
01:05:13,840 --> 01:05:18,840
is stored inside an ArrayList?

950
01:05:18,840 --> 01:05:22,040
Yes, it's dynamic,
but what is the underlying data

951
01:05:22,040 --> 01:05:23,520
structure

952
01:05:26,080 --> 01:05:32,280
in case of ArrayList?

953
01:05:32,280 --> 01:05:33,720
Okay, here we go.

954
01:05:33,720 --> 01:05:37,440
Right.

955
01:05:37,440 --> 01:05:41,280
ArrayList uses

956
01:05:42,600 --> 01:05:44,160
arrays

957
01:05:46,440 --> 01:05:48,880
internally to

958
01:05:48,880 --> 01:05:50,880
store and

959
01:05:52,560 --> 01:05:53,400
manipulate

960
01:05:53,400 --> 01:05:59,200
the data.

961
01:05:59,200 --> 01:05:59,920
Okay.

962
01:06:02,160 --> 01:06:04,880
So if a data structure is internally

963
01:06:04,880 --> 01:06:08,840
using an ArrayList, it's really an area.

964
01:06:09,520 --> 01:06:13,800
So when I showed you,
can you guys guess if something is

965
01:06:14,000 --> 01:06:17,400
internally under the particularly
if something you using at is,

966
01:06:18,080 --> 01:06:21,040
then I should use that data structure.

967
01:06:21,040 --> 01:06:23,720
What is the property of arrays?
What are the what?

968
01:06:23,960 --> 01:06:24,840
What is the case?

969
01:06:24,840 --> 01:06:38,000
We are at is they are best and worst.

970
01:06:38,000 --> 01:06:41,680
So when to use

971
01:06:43,920 --> 01:06:45,240
ArrayList,

972
01:06:46,200 --> 01:06:48,600
when you have to,

973
01:06:49,760 --> 01:06:52,200
when you have when you have to

974
01:06:54,600 --> 01:06:56,640
retrieve

975
01:06:56,640 --> 01:06:59,040
the better.

976
01:06:59,040 --> 01:07:00,680
Mostly right?

977
01:07:00,680 --> 01:07:03,720
You are doing you are writing a program

978
01:07:03,720 --> 01:07:08,120
and you know that maybe 90% of the times

979
01:07:09,560 --> 01:07:15,080
you in a once you initially have stored
the dirt on 90 or 95% of the time,

980
01:07:15,080 --> 01:07:18,840
you will only be accessing that data,
right?

981
01:07:19,160 --> 01:07:23,040
Specify the index,
get the data from that index.

982
01:07:23,040 --> 01:07:23,840
Right.

983
01:07:24,240 --> 01:07:27,040
So if this is the case then that

984
01:07:27,040 --> 01:07:31,600
your read operations are more frequent
then right.

985
01:07:31,600 --> 01:07:34,880
Operations then you guys should

986
01:07:34,880 --> 01:07:37,200
use add alias,

987
01:07:37,920 --> 01:07:46,240
right. So

988
01:07:47,640 --> 01:07:48,760
if I,

989
01:07:48,760 --> 01:07:52,680
I know that I will be inserting some data

990
01:07:52,680 --> 01:07:56,640
in between or empty
at the start of the list.

991
01:07:57,600 --> 01:08:00,360
Is it a good choice to use analysts

992
01:08:06,640 --> 01:08:09,840
and non ben the link

993
01:08:09,880 --> 01:08:49,600
list is better right?

994
01:08:49,600 --> 01:08:50,920
I'm on

995
01:08:55,000 --> 01:09:00,440
but if I have to write the data in in
and maybe in the middle of the

996
01:09:00,440 --> 01:09:04,360
if the middle of the list
or maybe at the start of the list.

997
01:09:04,680 --> 01:09:07,560
So what your computer has to go through

998
01:09:07,560 --> 01:09:10,040
if you are using

999
01:09:10,920 --> 01:09:14,880
and ArrayList.

1000
01:09:14,880 --> 01:09:17,240
So let's say there are some

1001
01:09:18,000 --> 01:09:20,880
that are already present in here.

1002
01:09:21,160 --> 01:09:21,800
All right, let's see.

1003
01:09:21,800 --> 01:09:25,080
Maybe this is then this is fi.

1004
01:09:25,640 --> 01:09:26,520
This is true.

1005
01:09:26,520 --> 01:09:27,440
This is three.

1006
01:09:27,440 --> 01:09:29,880
And these two slots, they are important.

1007
01:09:30,720 --> 01:09:32,440
They are empty. Sorry.

1008
01:09:32,440 --> 01:09:35,840
And now want to insert a new number two L

1009
01:09:36,000 --> 01:09:38,080
but on the first location.

1010
01:09:39,000 --> 01:09:43,080
Now what your computer has to do
if you are using an array list,

1011
01:09:44,360 --> 01:09:46,680
what your computer has to do,

1012
01:09:46,680 --> 01:09:50,840
it has to ship all the data.

1013
01:09:51,440 --> 01:09:53,680
Two words right?

1014
01:09:53,680 --> 01:09:56,760
Like this.

1015
01:09:56,760 --> 01:10:01,760
So create a new array, shift
all the data two words,

1016
01:10:03,000 --> 01:10:03,960
right.

1017
01:10:03,960 --> 01:10:06,440
And then place the next element.

1018
01:10:06,440 --> 01:10:11,080
Now imagine guys,
if there are maybe 10 million entries

1019
01:10:11,600 --> 01:10:14,120
and you want to insert something in front.

1020
01:10:14,200 --> 01:10:21,720
How many how many elements do you have to.

1021
01:10:21,720 --> 01:10:23,920
All of them, right?

1022
01:10:23,920 --> 01:10:25,200
Imagine million.

1023
01:10:25,200 --> 01:10:29,280
Imagine moving 10 million memory cells

1024
01:10:29,640 --> 01:10:32,160
just because you have to insert
something in front.

1025
01:10:32,680 --> 01:10:35,520
Or imagine
there are 5 million entries in here

1026
01:10:35,560 --> 01:10:39,240
because in real life,
think about the users of Amazon,

1027
01:10:39,240 --> 01:10:42,320
Google and all those big companies
banking applications.

1028
01:10:42,320 --> 01:10:44,400
They have millions of customers, right?

1029
01:10:44,880 --> 01:10:47,840
And you figure if you guys
are working on those applications

1030
01:10:48,080 --> 01:10:51,160
and you are creating an array list
and now you have to insert.

1031
01:10:51,160 --> 01:10:54,520
So 5 million entries are here,
then there is this empty slot

1032
01:10:54,960 --> 01:10:57,200
and 5 million entries are present in here

1033
01:10:58,840 --> 01:11:01,360
and you want to insert something
in between, right?

1034
01:11:01,400 --> 01:11:03,440
You want to insert something in between.

1035
01:11:03,440 --> 01:11:08,360
Then you have to shift all that data.

1036
01:11:08,360 --> 01:11:12,440
If there is a space inside the list,
if there is a space inside the list,

1037
01:11:12,960 --> 01:11:15,600
you have to move 5 million entries.

1038
01:11:16,240 --> 01:11:19,280
If there is no space available inside
this list.

1039
01:11:19,280 --> 01:11:22,360
It is not it is not possible
that you opened a new cell

1040
01:11:22,360 --> 01:11:25,160
in here
in the case of areas and edit lists.

1041
01:11:25,960 --> 01:11:29,360
In that case, if there is no space,
you have to move all those

1042
01:11:29,360 --> 01:11:30,840
10 million entries.

1043
01:11:30,840 --> 01:11:33,560
It's super, super devastating.

1044
01:11:33,560 --> 01:11:35,840
Super, super slow.

1045
01:11:36,320 --> 01:11:39,440
So think about the Android and the Apple

1046
01:11:40,160 --> 01:11:44,520
gigabytes of Android,
two gigabytes of Apple still effort.

1047
01:11:44,520 --> 01:11:45,520
Apple is fast.

1048
01:11:45,520 --> 01:11:48,760
Why Apple is
because they know what to use.

1049
01:11:49,560 --> 01:11:52,080
They are not randomly using
the data structures

1050
01:11:52,080 --> 01:11:56,480
to write their programs.

1051
01:11:56,480 --> 01:11:58,960
So in that yes, Optimizer

1052
01:11:59,520 --> 01:12:05,080
software optimizer optimization,
it can improve your performance

1053
01:12:05,080 --> 01:12:08,880
so much that you guys can't even imagine
saving the power.

1054
01:12:08,880 --> 01:12:09,240
Right.

1055
01:12:09,240 --> 01:12:13,280
Your your CPU has to do a lot of work
to move these entries.

1056
01:12:13,560 --> 01:12:16,680
You require at least.

1057
01:12:16,680 --> 01:12:19,000
So for example,
if you are using the earliest,

1058
01:12:19,560 --> 01:12:20,960
the first thing, you must have

1059
01:12:20,960 --> 01:12:24,600
at least that much space
that can hold 2 million entries

1060
01:12:24,840 --> 01:12:29,040
because you will be creating a new array,
pushing all the data inside there.

1061
01:12:29,160 --> 01:12:32,680
So you do you require space,
you require computing power.

1062
01:12:32,680 --> 01:12:35,480
You are wasting a lot of resources.

1063
01:12:35,480 --> 01:12:40,280
So that's why it's important to know the
the qualities,

1064
01:12:40,280 --> 01:12:44,240
the advantages and disadvantages
of a specific data structure.

1065
01:12:44,240 --> 01:12:45,480
And when to use.

1066
01:12:45,480 --> 01:12:47,880
That's why we are learning this collection
framework.

1067
01:12:47,880 --> 01:12:52,400
There are so many classes,
but knowing which to use,

1068
01:12:52,400 --> 01:12:57,800
then it's very important. So

1069
01:12:59,920 --> 01:13:03,320
now you guys know that

1070
01:13:04,360 --> 01:13:06,800
when we have the right,
the data in between,

1071
01:13:08,160 --> 01:13:10,440
most of the times

1072
01:13:11,680 --> 01:13:13,840
we would be use

1073
01:13:15,840 --> 01:13:17,160
linked list.

1074
01:13:17,160 --> 01:13:19,880
Do computers have random

1075
01:13:19,880 --> 01:13:25,080
epochs when processing?

1076
01:13:25,080 --> 01:13:30,360
Mohammad What do you mean by hiccups?

1077
01:13:30,360 --> 01:13:37,400
Let me let me jump.

1078
01:13:37,400 --> 01:13:38,720
Like atoms. None.

1079
01:13:38,720 --> 01:13:40,840
They don't have those errors.

1080
01:13:41,400 --> 01:13:44,000
The this is what Google shows me.

1081
01:13:44,000 --> 01:13:47,840
You guys are caused by involuntary
contraction of your diaphragm.

1082
01:13:47,840 --> 01:13:52,960
The muscles that separate your.

1083
01:13:52,960 --> 01:13:55,240
There is no terminology
in computers like this.

1084
01:13:55,520 --> 01:13:57,720
So, no, they don't have errors, but

1085
01:13:58,880 --> 01:14:00,400
they have to do a lot of work.

1086
01:14:00,400 --> 01:14:27,880
A lot of work unnecessarily.

1087
01:14:27,880 --> 01:14:30,040
So then

1088
01:14:30,080 --> 01:14:32,040
we should be

1089
01:14:34,240 --> 01:14:36,040
using the link list.

1090
01:14:36,040 --> 01:14:36,880
Right.

1091
01:14:37,160 --> 01:14:39,720
And but again, this is
this is very useful.

1092
01:14:39,720 --> 01:14:43,080
So how how link list solves this problem.

1093
01:14:43,600 --> 01:14:48,640
So link list instead of splitting
all the data and contracting.

1094
01:14:48,640 --> 01:14:51,920
So imagine this is are
this is are computers memory

1095
01:14:51,920 --> 01:14:56,680
instead of storing all the data side
by side in consecutive memory locations

1096
01:14:57,480 --> 01:15:00,920
linked list it's stores
that are randomly right?

1097
01:15:00,920 --> 01:15:03,720
Maybe somewhere here, somewhere
here, somewhere here.

1098
01:15:04,000 --> 01:15:06,200
But then it will remember

1099
01:15:06,800 --> 01:15:10,320
where it has stored the next element

1100
01:15:12,400 --> 01:15:14,600
link restores the elements and doubly link

1101
01:15:14,600 --> 01:15:18,320
so if you can go from previously.

1102
01:15:18,320 --> 01:15:20,600
So let's say this is cell number zero.

1103
01:15:20,600 --> 01:15:26,680
You have to store
you have stored in here. Okay

1104
01:15:37,000 --> 01:15:39,960
so in doubly linked list

1105
01:15:40,200 --> 01:15:45,720
you will be having 2.1 pointer
that tells the location of the next memory

1106
01:15:45,720 --> 01:15:50,560
cell and another pointer
that tells the location of previous cell.

1107
01:15:50,560 --> 01:15:54,880
So in simply a single link list,
you can move in one direction

1108
01:15:55,200 --> 01:15:59,040
because previous node
only knows the address of the next node.

1109
01:15:59,560 --> 01:16:02,720
It does not have the information of
so the previous node,

1110
01:16:03,000 --> 01:16:07,200
but in a doubly linked place, you can move
forward, you can move backwards.

1111
01:16:07,200 --> 01:16:10,480
So that's why it's called doubling list
because it has to point us.

1112
01:16:11,280 --> 01:16:14,760
So instead of so that I stored randomly

1113
01:16:18,600 --> 01:16:20,240
but link me list

1114
01:16:20,240 --> 01:16:22,800
W link list it stores

1115
01:16:24,000 --> 01:16:25,120
to point line

1116
01:16:25,120 --> 01:16:28,960
to tell the location, the previous cell,
one proposal, the location of it.

1117
01:16:29,040 --> 01:16:31,680
And now let's imagine you have to store

1118
01:16:32,200 --> 01:16:35,080
this new element 15 inside this link.

1119
01:16:35,080 --> 01:16:41,920
If I don't have to move a single cell
in this case, I will go inside the memory.

1120
01:16:41,920 --> 01:16:45,280
I will check wherever the location
is available, wherever the space

1121
01:16:45,280 --> 01:16:48,800
is available, inside computer,
I will place my data,

1122
01:16:50,120 --> 01:16:52,480
I will place my data.

1123
01:16:53,160 --> 01:16:54,960
So I want let's say I want to insert it.

1124
01:16:54,960 --> 01:16:57,240
And the first location I will like

1125
01:16:59,800 --> 01:17:02,040
this pointer to here

1126
01:17:02,040 --> 01:17:05,280
and this pointer

1127
01:17:05,280 --> 01:17:08,080
to backwards and how to link release.

1128
01:17:08,080 --> 01:17:10,040
Note that this is the starting point

1129
01:17:10,040 --> 01:17:14,640
because the starting node has this left
part as empty.

1130
01:17:14,680 --> 01:17:16,760
The the the pointer is empty in here.

1131
01:17:16,800 --> 01:17:20,160
That's how link list knows
that this is the starting point.

1132
01:17:20,680 --> 01:17:22,320
Okay. This is the starting point.

1133
01:17:22,320 --> 01:17:25,600
So I just place the data
anywhere inside the computer.

1134
01:17:25,600 --> 01:17:29,280
And here I rearranged the pointers
in case of linked list.

1135
01:17:29,440 --> 01:17:33,360
I don't move a single
cell of memory in here.

1136
01:17:35,160 --> 01:17:38,560
Yes. Still it maintains the order
because this pointer is empty.

1137
01:17:38,560 --> 01:17:40,880
And I know
that this is the starting point.

1138
01:17:40,880 --> 01:17:44,960
And if I know the starting point,
I can go anywhere, right?

1139
01:17:45,560 --> 01:17:47,800
I can ask for the next node.

1140
01:17:47,800 --> 01:17:50,280
Node location using this pointers.

1141
01:17:50,280 --> 01:17:54,400
I can do this or that node and that node
can tell me the address of next node

1142
01:17:54,400 --> 01:17:56,720
and then next node
and then I can keep on going

1143
01:17:59,040 --> 01:18:02,120
and let's say
I have to insert some new piece of back

1144
01:18:02,840 --> 01:18:08,920
maybe in here, right in here.

1145
01:18:08,920 --> 01:18:11,640
So what I will do,

1146
01:18:11,720 --> 01:18:14,560
I will simply remove

1147
01:18:14,560 --> 01:18:19,920
these two pointers.

1148
01:18:19,920 --> 01:18:23,400
I will like this that I in here
and in here

1149
01:18:24,160 --> 01:18:26,680
and then this here and here

1150
01:18:26,680 --> 01:18:28,680
that I inserted successfully in between.

1151
01:18:29,120 --> 01:18:31,400
I don't have to shift any of these things.

1152
01:18:31,400 --> 01:18:32,120
Right.

1153
01:18:32,280 --> 01:18:37,040
So this is how link list link list manages
the data under the code.

1154
01:18:37,400 --> 01:18:40,760
So in here, yes, it's also not perfect.

1155
01:18:41,280 --> 01:18:45,640
We will be learning a new data
structure that is the that is

1156
01:18:47,400 --> 01:18:48,440
I would say it's

1157
01:18:48,440 --> 01:18:50,440
the most widely used data structure

1158
01:18:51,720 --> 01:18:52,520
In that case.

1159
01:18:52,520 --> 01:18:55,720
Storing, retrieving
searching is super, super fast.

1160
01:18:55,720 --> 01:18:58,880
So when we have the right things
that are in

1161
01:18:58,880 --> 01:19:00,120
between

1162
01:19:01,960 --> 01:19:05,160
or in front

1163
01:19:05,160 --> 01:19:07,000
of the

1164
01:19:07,800 --> 01:19:10,080
list, most of the time

1165
01:19:12,960 --> 01:19:15,360
we should use the linkages, right?

1166
01:19:16,440 --> 01:19:19,680
So are the concepts clear
about the link list and the

1167
01:19:19,680 --> 01:19:26,440
and the and the ArrayList?

1168
01:19:26,440 --> 01:19:28,960
So if the underlying concepts
they are clear,

1169
01:19:29,760 --> 01:19:34,560
you guys will see that both of these

1170
01:19:35,160 --> 01:19:40,280
that are structures.

1171
01:19:40,280 --> 01:19:45,480
So both of these data structures,

1172
01:19:45,480 --> 01:19:49,080
what they do is

1173
01:20:02,800 --> 01:20:05,160
what if I cover my mouth

1174
01:20:05,160 --> 01:20:10,040
and if I click on that, at least,

1175
01:20:10,040 --> 01:20:16,640
and if I scroll to the top.

1176
01:20:16,640 --> 01:20:20,000
So you see both of these data structures.

1177
01:20:20,000 --> 01:20:22,040
So this is the ArrayList and

1178
01:20:24,080 --> 01:20:26,240
if I say new

1179
01:20:29,120 --> 01:20:39,440
link list, let me open them

1180
01:20:39,600 --> 01:20:55,000
side by side of the.

1181
01:20:55,000 --> 01:20:59,640
So you guys will notice
that both of these classes, this ArrayList

1182
01:21:00,760 --> 01:21:05,400
and Link list, they implement

1183
01:21:07,560 --> 01:21:08,400
this list

1184
01:21:08,400 --> 01:21:15,040
interface, right?

1185
01:21:15,600 --> 01:21:19,200
So if two classes
they are implementing the same interface

1186
01:21:19,680 --> 01:21:23,280
and if let's say they are hundred meter
and these classes,

1187
01:21:23,280 --> 01:21:26,400
they are not abstract by these classes,
they are not abstract.

1188
01:21:26,400 --> 01:21:32,520
And if this list last to contain thousand,
will I see

1189
01:21:32,520 --> 01:21:45,360
all the method in both the classes?

1190
01:21:45,360 --> 01:21:48,600
So you guys see the use of interfaces

1191
01:21:49,640 --> 01:21:52,800
we are forcing to class these

1192
01:21:53,480 --> 01:21:55,840
two different classes

1193
01:21:55,840 --> 01:21:58,440
who have the same meters.

1194
01:21:58,440 --> 01:22:00,600
One class is implementing

1195
01:22:00,960 --> 01:22:03,840
the method in a different way,

1196
01:22:03,840 --> 01:22:05,880
but the other class for meters.

1197
01:22:05,880 --> 01:22:10,120
They are same names, the same,
but type is same, but internally

1198
01:22:10,800 --> 01:22:13,560
they are implemented
in a totally different way.

1199
01:22:14,240 --> 01:22:18,000
So when you have to make sure
that two classes are more

1200
01:22:18,000 --> 01:22:22,680
than two classes,
they must have all same methods.

1201
01:22:22,680 --> 01:22:25,320
We make an interface.

1202
01:22:25,320 --> 01:22:28,440
We put the
those methods inside the interface

1203
01:22:28,440 --> 01:22:33,480
and we make those classes
implement, those interface.

1204
01:22:34,360 --> 01:22:37,200
And even if one of the classes
not implementing

1205
01:22:37,200 --> 01:22:41,320
a single method,
we will be getting a compile time matter.

1206
01:22:41,880 --> 01:22:44,400
So This is how we enforce the rules.

1207
01:22:45,000 --> 01:22:48,760
With the help of interfaces,
we bind classes

1208
01:22:49,080 --> 01:22:53,040
to have the specific methods
linked to syntax like set

1209
01:22:55,440 --> 01:22:55,920
list.

1210
01:22:55,920 --> 01:23:00,840
The syntax is like set, so they all have
the same same method. Why?

1211
01:23:01,120 --> 01:23:05,040
Because they are all coming
from the collections framework.

1212
01:23:05,040 --> 01:23:07,960
They are all coming from collections
interface.

1213
01:23:07,960 --> 01:23:09,160
I will show you that as well.

1214
01:23:09,160 --> 01:23:12,760
So if I go in here,

1215
01:23:14,120 --> 01:23:15,480
let me scroll

1216
01:23:25,680 --> 01:23:36,200
so they have some specific methods.

1217
01:23:36,200 --> 01:23:39,680
So let's discuss the remove

1218
01:23:39,720 --> 01:23:49,200
method.

1219
01:23:49,200 --> 01:24:15,600
Really the structure of the.

1220
01:24:15,600 --> 01:24:18,520
So you guys don't
need to open these files. So

1221
01:24:20,600 --> 01:24:22,680
I just wanted to show you that

1222
01:24:22,680 --> 01:24:26,280
although these two matters,
they are coming

1223
01:24:26,280 --> 01:24:29,280
from the same interface,

1224
01:24:29,280 --> 01:24:32,120
but check out the logic guys.

1225
01:24:32,280 --> 01:24:35,320
Same operation is happening in this method

1226
01:24:38,760 --> 01:24:41,320
and inside this this method.

1227
01:24:41,320 --> 01:24:45,440
But because internally
they are using totally different data

1228
01:24:45,480 --> 01:24:49,880
structures, the implementation
can be totally, totally different.

1229
01:24:50,480 --> 01:24:54,000
Now, does all the examples that we

1230
01:24:54,000 --> 01:24:57,360
we did they do they make sense?

1231
01:24:58,920 --> 01:25:01,600
So if you are trying to do

1232
01:25:01,600 --> 01:25:04,800
the same operation in multiple ways,

1233
01:25:05,640 --> 01:25:09,200
if the internal implementation is totally,
totally different,

1234
01:25:09,960 --> 01:25:12,320
you create an interface,

1235
01:25:12,320 --> 01:25:14,960
you make separate classes,

1236
01:25:14,960 --> 01:25:17,520
you put your logic you want to do,

1237
01:25:18,080 --> 01:25:21,920
and you make those classes
inherit that interface,

1238
01:25:22,360 --> 01:25:25,240
and then the programmer

1239
01:25:25,240 --> 01:25:28,120
or the other who will be using your code.

1240
01:25:28,680 --> 01:25:30,920
His life will be super, super easy.

1241
01:25:31,440 --> 01:25:34,080
You guys can use the same method

1242
01:25:34,320 --> 01:25:36,680
to add the elements inside of the list.

1243
01:25:37,320 --> 01:25:41,320
You can use the same method
to add the element inside the linked list,

1244
01:25:42,560 --> 01:25:45,280
inside a BQ, inside a set inside.

1245
01:25:45,400 --> 01:25:47,000
So classes.

1246
01:25:47,000 --> 01:25:50,880
So you guys don't
have to learn new methods each time

1247
01:25:50,920 --> 01:25:55,520
if they are essentially
doing the same things.

1248
01:25:55,520 --> 01:26:06,000
Does it make sense right?

1249
01:26:06,000 --> 01:26:10,720
So now how it is making your life easier

1250
01:26:27,640 --> 01:26:29,880
but is a totally different class.

1251
01:26:30,960 --> 01:26:34,600
This one is also totally different class.

1252
01:26:34,600 --> 01:26:38,680
But what I can do because both implement
the list interface,

1253
01:26:39,240 --> 01:26:43,280
I can store the objects of these classes

1254
01:26:44,400 --> 01:26:48,800
inside a variable of type list.

1255
01:26:49,320 --> 01:26:52,640
And then what I can do is

1256
01:26:53,320 --> 01:26:56,040
I can call the exact same methods

1257
01:26:59,600 --> 01:27:00,840
in here.

1258
01:27:01,560 --> 01:27:13,920
Okay.

1259
01:27:13,920 --> 01:27:16,920
And in. Whereas. All right,

1260
01:27:16,920 --> 01:27:19,880
I don't have to come up
with a different name

1261
01:27:19,880 --> 01:27:22,680
if I am essentially doing the same thing.

1262
01:27:22,680 --> 01:27:25,320
I know the internal implementation
is different, right?

1263
01:27:25,320 --> 01:27:28,560
From the perspective of a coder,
the person

1264
01:27:28,560 --> 01:27:31,600
who will be writing the code,
it has to do it.

1265
01:27:31,640 --> 01:27:33,480
It don't have to.

1266
01:27:33,480 --> 01:27:34,200
He don't.

1267
01:27:34,200 --> 01:27:36,520
He does not have to learn all those

1268
01:27:38,040 --> 01:27:41,640
those new methods
and then remember those names.

1269
01:27:42,000 --> 01:27:44,680
He will always be using The exact

1270
01:27:44,680 --> 01:27:47,640
same name matters because technical

1271
01:27:48,200 --> 01:27:53,480
he is doing the essentially
the same operation.

1272
01:27:53,480 --> 01:27:58,840
So you guys already know about the methods

1273
01:27:59,520 --> 01:28:02,320
that are present inside the list.

1274
01:28:02,320 --> 01:28:02,960
Right?

1275
01:28:02,960 --> 01:28:09,240
Add remove contains,
and all those methods.

1276
01:28:09,240 --> 01:28:14,960
So if I say students dot doc,
you guys already know, right?

1277
01:28:15,040 --> 01:28:21,000
So I got clear
and remove all add all contains is empty

1278
01:28:23,760 --> 01:28:25,960
last index of first index of

1279
01:28:26,000 --> 01:28:29,840
and all of these matters right
you can convert it to edit

1280
01:28:30,560 --> 01:28:33,800
if you want to convert a list to
the state is also possible.

1281
01:28:33,800 --> 01:28:35,480
You need to call the story.

1282
01:28:35,480 --> 01:28:37,960
So I want you, you guys to

1283
01:28:38,480 --> 01:28:40,680
to explore these matters.

1284
01:28:41,000 --> 01:28:48,960
Okay.

1285
01:28:48,960 --> 01:28:51,480
So let's do the homework.

1286
01:28:52,680 --> 01:28:56,640
And in the homework I will also tell you

1287
01:28:59,160 --> 01:29:02,000
side by side how we can use different.

1288
01:29:02,160 --> 01:29:06,000
So by now this should be super,
super clear

1289
01:29:06,000 --> 01:29:09,800
when we should be using the edit list
and when we should be using the link list.

1290
01:29:11,280 --> 01:29:12,840
Layers is same as hash map.

1291
01:29:12,840 --> 01:29:15,120
No, they are not same.

1292
01:29:15,120 --> 01:29:17,200
So if someone is confused,
what is the difference

1293
01:29:17,200 --> 01:29:18,840
between an ArrayList and being placed?

1294
01:29:18,840 --> 01:29:20,040
You guys can stop me.

1295
01:29:20,040 --> 01:29:22,560
You guys can ask your questions.

1296
01:29:22,560 --> 01:29:36,760
Then we will be starting
the homework questions. So

1297
01:29:38,000 --> 01:29:38,520
you guys are

1298
01:29:38,520 --> 01:29:44,000
not confused.

1299
01:29:44,000 --> 01:29:46,080
Let me check your first task.

1300
01:29:46,120 --> 01:29:48,640
So your first task.

1301
01:29:48,640 --> 01:29:51,240
Can you tell one more time?

1302
01:29:51,240 --> 01:29:51,640
Alex?

1303
01:29:51,640 --> 01:29:53,880
What do you want me to tell the difference
between this

1304
01:29:55,000 --> 01:29:57,360
early and the link list?

1305
01:29:57,360 --> 01:30:01,800
Okay, so the ArrayList,

1306
01:30:01,800 --> 01:30:04,600
you can think of the ArrayList as

1307
01:30:06,000 --> 01:30:08,640
a data structure

1308
01:30:10,680 --> 01:30:15,040
that stored the data
internally under the hood

1309
01:30:15,040 --> 01:30:20,240
inside your computer,
always in consecutive memory.

1310
01:30:20,240 --> 01:30:23,640
So it will always for your data
in consecutive memory locations.

1311
01:30:24,000 --> 01:30:28,200
Now, if you have to insert something
in between, order this start

1312
01:30:29,000 --> 01:30:31,680
what you have to do
because the data is stored

1313
01:30:31,680 --> 01:30:35,440
in consecutive memory locations,
you have to ship all the data

1314
01:30:36,040 --> 01:30:39,880
and that is very expensive, very computer

1315
01:30:39,880 --> 01:30:42,920
expensive,
takes a lot of memory computing power.

1316
01:30:43,760 --> 01:30:49,240
So if you have to only access
the elements stored inside, then

1317
01:30:49,760 --> 01:30:54,560
and at least always use the inside
list, always use the ArrayList.

1318
01:30:55,160 --> 01:31:01,600
If you are planning to do operations,
inserting the time between at the start

1319
01:31:01,600 --> 01:31:06,840
at the end and deleting the data
from between, manipulating these things,

1320
01:31:07,480 --> 01:31:11,520
then you should always
go with the linked list

1321
01:31:13,920 --> 01:31:15,200
for accessing areas.

1322
01:31:15,200 --> 01:31:18,720
For manipulating linked. Yes.

1323
01:31:18,720 --> 01:31:20,400
Is it clear

1324
01:31:25,560 --> 01:31:27,560
for subscription?

1325
01:31:27,560 --> 01:31:29,240
Let's say which one is better?

1326
01:31:29,240 --> 01:31:44,160
I said, What do you mean by subscription?

1327
01:31:44,160 --> 01:31:46,480
When is the break time? Okay,
we will be having a break.

1328
01:31:46,480 --> 01:31:51,560
So in this subscription,
what happens is that when we are

1329
01:31:52,160 --> 01:31:57,680
so when a news new user signs
sign up right?

1330
01:31:57,680 --> 01:32:03,400
So we take the credentials,
we take all the data from that user

1331
01:32:03,400 --> 01:32:08,240
and then we store that data somewhere.

1332
01:32:08,240 --> 01:32:11,400
And the next time that user
is trying to log in,

1333
01:32:11,800 --> 01:32:16,400
what we have, what we do,
we scan all the usernames

1334
01:32:16,640 --> 01:32:22,240
and all the passwords,
we compare one by one, and if that

1335
01:32:22,240 --> 01:32:26,520
username and password is preserved,
then we allow that user to log in.

1336
01:32:26,520 --> 01:32:32,040
Now me the frequency
of signing up new users

1337
01:32:32,520 --> 01:32:36,400
and the users who are logging
in your application on a daily basis.

1338
01:32:36,400 --> 01:32:40,440
Which frequency is more new customers
sign up or the customers

1339
01:32:40,440 --> 01:32:46,000
who are logging in
or using your website on a daily basis?

1340
01:32:46,000 --> 01:32:47,720
Logging. Right.

1341
01:32:47,720 --> 01:32:51,520
So what happens is that you decide
based on the operations.

1342
01:32:51,520 --> 01:32:55,480
So most of the time in your case,
you will be reading the data

1343
01:32:56,080 --> 01:32:59,680
and you will be comparing all the data
one by one

1344
01:32:59,920 --> 01:33:04,240
with all the data
that is present inside your computer.

1345
01:33:04,240 --> 01:33:07,120
So you should always go
with which data structure.

1346
01:33:07,120 --> 01:33:07,480
Guys,

1347
01:33:08,760 --> 01:33:09,520
most of my

1348
01:33:09,520 --> 01:33:13,360
operations, they are reading and comparing

1349
01:33:13,640 --> 01:33:16,000
at any stripe,

1350
01:33:16,000 --> 01:33:17,800
at least

1351
01:33:20,520 --> 01:33:23,800
none of them, nor the single ad is single.

1352
01:33:23,800 --> 01:33:25,320
It is. They are fakes.

1353
01:33:25,320 --> 01:33:28,880
If I if I make an error
for 10,000 customers again,

1354
01:33:28,880 --> 01:33:36,920
110 11,000 customers can design up.

1355
01:33:36,920 --> 01:33:39,920
No, I have to do a lot of work.

1356
01:33:40,200 --> 01:33:41,840
At least we mean.

1357
01:33:41,840 --> 01:33:43,400
No, no, you guys didn't have to be there.

1358
01:33:43,400 --> 01:33:46,000
At least I am sure about that. It

1359
01:33:49,080 --> 01:33:50,200
So you should be

1360
01:33:50,200 --> 01:33:57,480
using the ArrayList.

1361
01:33:57,480 --> 01:33:59,080
Sorry, silly question.

1362
01:33:59,080 --> 01:34:02,080
Is the link
list more efficient than ArrayList said?

1363
01:34:02,080 --> 01:34:05,600
If depends what of operation
you want to perform

1364
01:34:06,360 --> 01:34:08,640
with link list or be added list.

1365
01:34:09,200 --> 01:34:12,560
It depends on the operations

1366
01:34:15,800 --> 01:34:18,840
for subscription,
like people subscribing or unsubscribing.

1367
01:34:18,840 --> 01:34:20,280
Then use linked list.

1368
01:34:20,280 --> 01:34:23,760
So far subscriptions
in which are unsubscribing.

1369
01:34:23,760 --> 01:34:29,400
Instead of removing that customer data,
what companies do they have a flag

1370
01:34:30,920 --> 01:34:31,360
which is

1371
01:34:31,360 --> 01:34:34,280
actively
if a customer has active subscription

1372
01:34:34,360 --> 01:34:37,320
and if that customer
does not have an active subscription,

1373
01:34:37,320 --> 01:34:39,560
they don't completely delete
the user data.

1374
01:34:39,880 --> 01:34:42,800
They just put that flag to.

1375
01:34:42,800 --> 01:34:47,600
So still the analyst will be better.

1376
01:34:47,600 --> 01:34:51,760
Yes, you'll get that if you are planning
to completely delete that data.

1377
01:34:52,480 --> 01:34:54,920
And if you know that your customers,

1378
01:34:55,160 --> 01:35:00,280
they always sign up and always
keep on signing up an answer.

1379
01:35:00,280 --> 01:35:03,360
So subscribing and unsubscribing
these operations,

1380
01:35:03,360 --> 01:35:07,680
they are more than the customers
that are logging in your system.

1381
01:35:08,040 --> 01:35:10,080
Yes. Then you should go with the link
list.

1382
01:35:10,400 --> 01:35:13,320
So totally depends how your application

1383
01:35:13,320 --> 01:35:17,520
is working.

1384
01:35:17,520 --> 01:35:21,080
Like following your

1385
01:35:26,280 --> 01:35:27,000
likelihood.

1386
01:35:27,000 --> 01:35:30,280
To be very clear,

1387
01:35:30,280 --> 01:35:32,760
there are a lot of data structures

1388
01:35:33,840 --> 01:35:36,920
other than like, listen, they are a list
of these companies they use.

1389
01:35:37,400 --> 01:35:40,640
And sometimes because these companies,
they are so big

1390
01:35:41,160 --> 01:35:45,160
for a specific operation,
they create their own data structures

1391
01:35:45,920 --> 01:35:48,720
which will be more efficient
to store the data.

1392
01:35:48,720 --> 01:35:54,040
For example,
he is not using the link list of the list.

1393
01:35:55,120 --> 01:35:55,520
They are

1394
01:35:55,520 --> 01:35:58,400
using
something called the relationship graph.

1395
01:35:58,560 --> 01:36:02,640
So you guys see,
I am if I can have 500 friends,

1396
01:36:02,680 --> 01:36:06,640
those 500 friends
they can again have and have 500 friends.

1397
01:36:06,640 --> 01:36:10,640
So if something like this one user
having 500

1398
01:36:10,880 --> 01:36:15,920
friends linked to all of those friends,
then they can be linked to all others.

1399
01:36:16,840 --> 01:36:20,040
And in this hierarchy
it can be super, super complex

1400
01:36:20,520 --> 01:36:25,160
If this user or something right,
it should be visible to all of these

1401
01:36:25,160 --> 01:36:26,400
and then the friends.

1402
01:36:26,400 --> 01:36:29,520
If it has allowed, it's a very,
very complex

1403
01:36:30,360 --> 01:36:32,440
data structure that Facebook is using.

1404
01:36:32,880 --> 01:36:37,360
They they created their own data structure
because the scale was massive.

1405
01:36:37,520 --> 01:36:37,880
Right?

1406
01:36:37,880 --> 01:36:42,480
There was no pre-built data structure
to accommodate these use cases.

1407
01:36:42,640 --> 01:36:46,280
So it's always kind of this you
if your basics are clear,

1408
01:36:46,800 --> 01:36:50,360
you can create a new data structure
specific for your needs.

1409
01:36:51,320 --> 01:36:52,560
And there was a point

1410
01:36:52,560 --> 01:36:55,880
in which a lot of experts
and data scientists,

1411
01:36:56,360 --> 01:37:00,360
they said that Facebook crash
because the data was in,

1412
01:37:00,600 --> 01:37:05,280
that was messy, huge, that Facebook
was floating very huge amounts of data

1413
01:37:05,600 --> 01:37:10,160
and there was nothing already built
in the history to accommodate back data.

1414
01:37:10,920 --> 01:37:14,280
So they believe that Facebook
will not be able to cater that, but

1415
01:37:14,280 --> 01:37:17,520
they created their own data structures.

1416
01:37:17,520 --> 01:37:21,400
So it depends on your application. But

1417
01:37:22,560 --> 01:37:25,720
most of the time
for not that big applications,

1418
01:37:25,720 --> 01:37:29,520
this list at least, and the other
simple data structures, they will be fine.

1419
01:37:29,760 --> 01:37:32,200
If I can show you

1420
01:37:32,280 --> 01:37:36,120
I think it's prevalent over the internet

1421
01:38:08,760 --> 01:38:11,680
to maintain a total of the demographic
Facebook

1422
01:38:11,680 --> 01:38:23,920
have made smart, blah blah blah.

1423
01:38:23,920 --> 01:38:25,720
It's all about revenue

1424
01:38:28,160 --> 01:38:30,720
we are not interested in of

1425
01:38:59,280 --> 01:39:00,000
to see.

1426
01:39:00,000 --> 01:39:05,280
More than 250 billion
photos have been uploaded.

1427
01:39:05,280 --> 01:39:06,360
Facebook.

1428
01:39:06,360 --> 01:39:09,360
This equates to 50 million photos

1429
01:39:09,720 --> 01:39:15,240
for day each day 350 million

1430
01:39:15,560 --> 01:39:19,560
new photos are being uploaded
to Google on Facebook.

1431
01:39:20,280 --> 01:39:23,880
And then then there are people
who likes, dislikes,

1432
01:39:23,880 --> 01:39:27,600
put comments, put emojis,

1433
01:39:27,720 --> 01:39:30,880
public, private, shared with only friends
and all that.

1434
01:39:31,240 --> 01:39:33,760
You're the super, super complex system

1435
01:39:36,800 --> 01:39:38,760
on this list and linked list.

1436
01:39:38,760 --> 01:39:42,480
We can store string and integer
no primitive data types.

1437
01:39:42,720 --> 01:39:45,760
Again, we saw very primitive data types
collections framework

1438
01:39:45,760 --> 01:39:50,520
guys, you create

1439
01:39:50,520 --> 01:39:52,680
50 million photos each day,

1440
01:39:54,280 --> 01:40:02,200
so primitives are not allowed.

1441
01:40:02,200 --> 01:40:04,440
Okay, let's have a break.

1442
01:40:04,440 --> 01:40:09,960
And then after the break,

1443
01:40:09,960 --> 01:40:12,480
we will be

1444
01:40:17,040 --> 01:40:19,560
we will be solving the questions.

1445
01:40:19,560 --> 01:40:22,760
Okay. But.

1446
01:40:22,760 --> 01:40:23,720
Oh, sorry.

1447
01:40:23,720 --> 01:40:31,800
The homework.

1448
01:40:31,800 --> 01:40:34,400
Well, Lugo has resigned. I

1449
01:40:42,960 --> 01:40:45,600
Lugo already on break.

1450
01:40:45,600 --> 01:40:46,760
I'm waiting already.

1451
01:40:46,760 --> 01:40:49,080
Investigate that.

1452
01:40:49,080 --> 01:41:06,720
Alright,
guys, please be back in 15 minutes.

1453
01:41:06,720 --> 01:41:13,200
Okay,

1454
01:41:13,200 --> 01:41:16,560
So let me

1455
01:41:17,920 --> 01:41:21,000
all the time to side as but

1456
01:42:24,480 --> 01:42:27,400
create an ArrayList of cars

1457
01:42:28,280 --> 01:42:33,640
and retrieve
all the values using three different ways.

1458
01:42:33,640 --> 01:42:39,920
Okay, So

1459
01:42:39,960 --> 01:42:44,920
to create the ArrayList, we see

1460
01:42:46,720 --> 01:42:47,920
a list

1461
01:42:48,800 --> 01:42:53,360
and I will be storing the cars
inside this ArrayList.

1462
01:42:53,360 --> 01:42:56,760
So what should be the data type
that I should specified

1463
01:42:56,760 --> 01:42:59,920
inside this diamond Operator

1464
01:42:59,920 --> 01:43:01,360
Oh, string.

1465
01:43:01,360 --> 01:43:02,320
Right.

1466
01:43:02,600 --> 01:43:05,240
Okay.

1467
01:43:05,240 --> 01:43:09,480
And cars and then equal to sign new

1468
01:43:10,760 --> 01:43:14,200
and then edit just like

1469
01:43:14,200 --> 01:43:18,080
and if I have to add some elements
to an analyst

1470
01:43:18,640 --> 01:43:21,360
which method I should use

1471
01:43:23,520 --> 01:43:25,000
be admitted.

1472
01:43:25,000 --> 01:43:26,040
Right.

1473
01:43:26,680 --> 01:43:30,960
So I have two different
add methods that intelligence shows me.

1474
01:43:31,200 --> 01:43:34,560
One is taking an index and an element,

1475
01:43:34,680 --> 01:43:37,000
the other one only takes an element.

1476
01:43:37,680 --> 01:43:40,440
Can you guys tell me the difference
between these two meters

1477
01:43:57,480 --> 01:43:58,920
boolean and Ward?

1478
01:43:58,920 --> 01:44:03,480
Yes, this is one difference.

1479
01:44:03,480 --> 01:44:05,160
Well, what is this index?

1480
01:44:05,160 --> 01:44:13,600
What is the second parameter?

1481
01:44:13,600 --> 01:44:21,640
First, I want to add a specific index.

1482
01:44:21,640 --> 01:44:34,360
So let's say you guys,

1483
01:44:34,360 --> 01:44:37,160
I have this ArrayList here

1484
01:44:37,880 --> 01:44:41,400
and I want to add this new element.

1485
01:44:41,400 --> 01:44:44,880
Now, if I only use the add the method

1486
01:44:46,320 --> 01:44:49,960
by default,
this add method will always append

1487
01:44:50,040 --> 01:44:53,360
the new values at the end of the list.

1488
01:44:54,360 --> 01:44:59,160
But if I want to add the new element
at a specific location,

1489
01:45:00,040 --> 01:45:02,160
let's on this 13.

1490
01:45:03,840 --> 01:45:06,240
Then I specify the index.

1491
01:45:06,240 --> 01:45:10,440
I said that Hey Java, let's say
maybe I want to add this hundred.

1492
01:45:10,440 --> 01:45:14,760
So I say Hey Java, add this 100 add index

1493
01:45:15,720 --> 01:45:20,280
number one right?

1494
01:45:20,280 --> 01:45:21,800
Index number one.

1495
01:45:21,800 --> 01:45:24,840
So I specify

1496
01:45:25,080 --> 01:45:28,560
the class has started already,
so I specify

1497
01:45:28,720 --> 01:45:32,200
index plus the data that I want to add

1498
01:45:32,880 --> 01:45:35,080
to this section to add method.

1499
01:45:35,840 --> 01:45:38,600
And then what Java will do in

1500
01:45:38,640 --> 01:45:42,240
Java will shape all the elements

1501
01:45:44,040 --> 01:45:47,440
towards right. So

1502
01:45:50,320 --> 01:45:51,200
the 13 will

1503
01:45:51,200 --> 01:45:54,720
be shifted in here,
14 relative to being here, 15 here,

1504
01:45:55,160 --> 01:45:58,200
and then this hundred, this new element

1505
01:45:59,680 --> 01:46:02,160
will be added in here.

1506
01:46:02,160 --> 01:46:02,840
Okay.

1507
01:46:03,200 --> 01:46:07,160
So if you want to add at a specific index,

1508
01:46:07,800 --> 01:46:10,040
you pass the index plus the data.

1509
01:46:10,800 --> 01:46:13,320
If you always want to append
at the end of the list,

1510
01:46:13,840 --> 01:46:15,000
you only

1511
01:46:16,440 --> 01:46:18,120
pass the data. Okay.

1512
01:46:18,120 --> 01:46:24,120
So this is the difference
between to add methods.

1513
01:46:24,120 --> 01:46:27,160
So there are no elements in the list.

1514
01:46:27,160 --> 01:46:38,560
So if I see,

1515
01:46:38,560 --> 01:46:43,320
oh, here we go.

1516
01:46:43,320 --> 01:46:47,440
Yes, we can remove the same.

1517
01:46:47,440 --> 01:46:50,440
Here are the cards from

1518
01:46:50,440 --> 01:46:52,920
Jimmy.

1519
01:46:52,920 --> 01:46:53,400
Yeah.

1520
01:46:54,080 --> 01:46:56,160
So this in here

1521
01:46:56,160 --> 01:47:03,680
we are only passing the data
to this add method.

1522
01:47:04,080 --> 01:47:05,680
So what will happen?

1523
01:47:05,680 --> 01:47:09,120
A list will be created
first before it will be added,

1524
01:47:09,120 --> 01:47:11,800
then BMW, then Ferrari, then Mercedes.

1525
01:47:11,800 --> 01:47:12,160
Right.

1526
01:47:13,840 --> 01:47:15,720
So now

1527
01:47:17,760 --> 01:47:21,800
I can simply say cards.

1528
01:47:21,800 --> 01:47:25,760
And if I had secured this

1529
01:47:32,880 --> 01:47:34,200
to the U.S.

1530
01:47:34,200 --> 01:47:38,040
first we see Ford offer that BMW offered

1531
01:47:38,040 --> 01:47:42,160
that Ferrari offer that Mercedes likes.

1532
01:47:42,160 --> 01:47:46,400
So this is the default behavior
of the method.

1533
01:47:46,400 --> 01:47:49,600
But let's see, I say

1534
01:47:53,240 --> 01:47:53,720
Toyota.

1535
01:47:53,720 --> 01:47:54,480
All right.

1536
01:47:54,880 --> 01:47:57,640
And this time with Delta,

1537
01:47:57,640 --> 01:48:01,320
I also pass the index.

1538
01:48:01,320 --> 01:48:02,000
Right.

1539
01:48:02,080 --> 01:48:06,160
So let's say after this Ford,
I want this Toyota.

1540
01:48:06,240 --> 01:48:08,160
So what value should I pass in here?

1541
01:48:08,160 --> 01:48:12,240
Right.

1542
01:48:12,240 --> 01:48:22,680
I passed the index
where I want this delta.

1543
01:48:22,680 --> 01:48:27,840
So now, although I am adding this Toyota

1544
01:48:29,040 --> 01:48:32,080
in the last but because this time

1545
01:48:32,080 --> 01:48:35,440
I use the overloaded add method

1546
01:48:36,000 --> 01:48:39,480
and I specified the plus the data.

1547
01:48:39,960 --> 01:48:42,240
So to Java I will do

1548
01:48:42,760 --> 01:48:47,000
it will insert this specific data

1549
01:48:49,920 --> 01:48:55,280
at that specific index.

1550
01:48:55,280 --> 01:49:01,560
Or is it clear now
the difference between add and add all?

1551
01:49:01,560 --> 01:49:08,880
So the task was to retrieve
all the values using three different ways.

1552
01:49:08,880 --> 01:49:12,480
So let me are the comments helpful guys?

1553
01:49:12,480 --> 01:49:14,000
If I put comments with code

1554
01:49:22,920 --> 01:49:24,560
both, they

1555
01:49:24,880 --> 01:49:27,160
will be added at

1556
01:49:27,160 --> 01:49:28,720
index

1557
01:49:29,200 --> 01:49:31,960
number one.

1558
01:49:31,960 --> 01:49:37,800
Yeah.

1559
01:49:37,800 --> 01:49:41,720
All right. Plus

1560
01:49:42,880 --> 01:49:47,440
where to retrieve the data from

1561
01:49:48,560 --> 01:49:50,760
a from an

1562
01:49:51,880 --> 01:49:57,000
ad it used to.

1563
01:49:57,000 --> 01:50:02,040
So the one simple way to retrieving a data
and the

1564
01:50:03,240 --> 01:50:05,080
most common

1565
01:50:05,080 --> 01:50:09,840
and the most powerful good way to retrieve
the data is a

1566
01:50:11,560 --> 01:50:12,120
hard edge.

1567
01:50:12,120 --> 01:50:15,360
Look. Okay.

1568
01:50:15,360 --> 01:50:19,240
And I specify the data type

1569
01:50:19,280 --> 01:50:23,760
which is spring in here.

1570
01:50:23,760 --> 01:50:26,800
Then I specify the name for that variable

1571
01:50:28,200 --> 01:50:33,720
and simply the name of the list.

1572
01:50:33,720 --> 01:50:40,160
And now if I see car,

1573
01:50:40,160 --> 01:50:42,720
I will see all the cars

1574
01:50:46,560 --> 01:50:48,600
in individual cars

1575
01:50:48,600 --> 01:50:57,960
one by one.

1576
01:50:57,960 --> 01:50:59,600
All right.

1577
01:50:59,760 --> 01:51:04,800
But I told you that a using loops with
ArrayList is not good.

1578
01:51:04,800 --> 01:51:08,640
But what I am using a loop in here
the what is going on?

1579
01:51:08,640 --> 01:51:09,000
Why? Why?

1580
01:51:09,000 --> 01:51:14,040
I'm using loops if they are not good. So

1581
01:51:29,520 --> 01:51:30,840
here we go.

1582
01:51:30,840 --> 01:51:35,160
If I am I changing the
Am I doing some kind of operations of guys

1583
01:51:36,360 --> 01:51:40,800
which may change, which might
which might change this sides of the list?

1584
01:51:40,800 --> 01:51:42,640
Am I doing something like this inside
this?

1585
01:51:42,640 --> 01:51:46,920
Edit No, I am only accessing the elements.

1586
01:51:47,280 --> 01:51:50,760
So whenever you guys have to access
the elements,

1587
01:51:50,760 --> 01:51:53,360
you guys can use any type of loop, right?

1588
01:51:53,480 --> 01:51:57,560
The restriction is only
when you are doing it

1589
01:51:57,920 --> 01:52:02,400
and operation
that can change the size of the list.

1590
01:52:02,520 --> 01:52:03,440
It can.

1591
01:52:03,440 --> 01:52:06,200
It can be increasing
or it can be decreasing.

1592
01:52:06,200 --> 01:52:06,840
Right?

1593
01:52:07,160 --> 01:52:09,760
If you are not doing these two operations,

1594
01:52:09,760 --> 01:52:12,520
you can freely use any types of loops.

1595
01:52:13,320 --> 01:52:13,920
You can

1596
01:52:17,480 --> 01:52:45,760
just.

1597
01:52:45,760 --> 01:52:51,720
Okay, So this second way
I can use a simple for I loop.

1598
01:52:53,280 --> 01:52:56,400
So at
least they also told me that all based on

1599
01:52:56,400 --> 01:53:00,800
index is right starting from zero
and then point will decide

1600
01:53:02,640 --> 01:53:05,600
so which method can use to

1601
01:53:05,600 --> 01:53:15,520
get the size of the list.

1602
01:53:15,520 --> 01:53:18,880
I can see cars

1603
01:53:19,920 --> 01:53:22,080
dot size.

1604
01:53:23,480 --> 01:53:26,320
Most of our shortcut
for writing this for loop

1605
01:53:30,960 --> 01:53:34,760
just type four
and then put either the under

1606
01:53:34,760 --> 01:53:37,440
and hit tab or enter like this

1607
01:53:38,760 --> 01:53:42,360
f for r I hit enter

1608
01:53:42,360 --> 01:53:44,760
and it will create loop

1609
01:53:46,640 --> 01:53:49,120
and then you can press bear

1610
01:53:49,120 --> 01:53:51,600
to move to the next location.

1611
01:53:52,920 --> 01:53:58,680
So this is called using your keyboard
and this is what you guys should learn.

1612
01:53:58,680 --> 01:54:03,600
Always try to use your keyboard
instead of mouse.

1613
01:54:04,160 --> 01:54:06,800
You guys will see
will be much, much faster.

1614
01:54:06,800 --> 01:54:14,440
It will save a lot of a lot of time.

1615
01:54:14,440 --> 01:54:19,280
So now Google is saying what is the
difference between length and size?

1616
01:54:20,080 --> 01:54:23,120
So so can you guys
tell me what is this length?

1617
01:54:24,160 --> 01:54:25,960
Can you guys tell how

1618
01:54:31,080 --> 01:54:32,240
length

1619
01:54:32,240 --> 01:54:36,720
is for strings only if you want to count

1620
01:54:37,320 --> 01:54:40,040
the number of characters in this string,

1621
01:54:40,720 --> 01:54:43,320
then you use the length method.

1622
01:54:43,640 --> 01:54:47,840
So let's say,
for example, inside of this for loop,

1623
01:54:47,840 --> 01:54:53,800
if I want to not only get the

1624
01:54:56,440 --> 01:54:59,520
actual elements,

1625
01:54:59,640 --> 01:55:04,120
but I also want to get

1626
01:55:07,280 --> 01:55:10,040
its the number of characters

1627
01:55:11,040 --> 01:55:13,560
that are present

1628
01:55:13,560 --> 01:55:17,440
inside.

1629
01:55:17,440 --> 01:55:21,600
Each string.

1630
01:55:21,600 --> 01:55:23,640
Then I will be using

1631
01:55:24,840 --> 01:55:37,040
the length method.

1632
01:55:37,040 --> 01:55:42,000
So Ford has four characters,
Toyota has six

1633
01:55:42,000 --> 01:55:44,720
BMW has three like this.

1634
01:55:45,080 --> 01:55:50,040
Is it clear?

1635
01:55:50,040 --> 01:55:54,720
Okay.

1636
01:55:54,720 --> 01:56:02,880
Is there anyone else
who has any kind of questions?

1637
01:56:02,880 --> 01:56:04,680
And there is there is one more thing.

1638
01:56:04,680 --> 01:56:07,280
There is this lent without parentheses.

1639
01:56:07,600 --> 01:56:09,640
Can you guys tell me what it is that

1640
01:56:11,840 --> 01:56:14,520
only dot length

1641
01:56:21,720 --> 01:56:24,120
while you are having
some issues with importing?

1642
01:56:25,320 --> 01:56:28,080
Yes. Be

1643
01:56:31,720 --> 01:56:35,240
some is

1644
01:56:35,240 --> 01:56:38,040
it's a matter

1645
01:56:41,600 --> 01:56:43,280
side is also a matter

1646
01:56:43,280 --> 01:56:46,920
because we are using the parentheses

1647
01:57:01,160 --> 01:57:04,080
and length is for it is simple.

1648
01:57:04,080 --> 01:57:06,760
But will it be? It is
or it will be resolved.

1649
01:57:06,760 --> 01:57:11,600
And so I just want to say
don't don't don't

1650
01:57:12,520 --> 01:57:15,360
hurt point Dick of all
I don't wait anyone.

1651
01:57:15,720 --> 01:57:18,400
I will show you during the break
how to do that itself.

1652
01:57:18,400 --> 01:57:20,360
Something is not working.

1653
01:57:20,360 --> 01:57:24,800
Yeah I can
I know it can feel very very frustrating.

1654
01:57:24,800 --> 01:57:25,320
Right?

1655
01:57:25,520 --> 01:57:28,920
Simple things when they don't work.

1656
01:57:28,920 --> 01:57:32,880
You are unable to import this project
right from your eclipse.

1657
01:57:32,880 --> 01:57:33,960
I guess

1658
01:57:36,280 --> 01:57:45,720
the note will remind me during the break
I would fix that.

1659
01:57:46,840 --> 01:57:48,160
The import method. Okay.

1660
01:57:48,160 --> 01:57:49,040
Don't worry.

1661
01:57:49,720 --> 01:57:54,840
All okay.

1662
01:57:54,840 --> 01:58:01,040
I'm. And how can I use the why?

1663
01:58:01,040 --> 01:58:10,320
Look, guys, in here.

1664
01:58:10,320 --> 01:58:13,560
Yes, we
we will use the iterate, translate, etc..

1665
01:58:13,600 --> 01:58:16,240
So can I use divide look without iterator

1666
01:58:21,120 --> 01:58:21,800
can I use

1667
01:58:21,800 --> 01:58:32,920
I look without right
return to get all the elements.

1668
01:58:32,920 --> 01:58:36,840
Good question.

1669
01:58:36,840 --> 01:58:40,800
Boolean. No.

1670
01:58:40,800 --> 01:58:43,680
So this is how I can use

1671
01:58:44,720 --> 01:58:47,760
one of the ways to use the

1672
01:58:48,000 --> 01:58:50,840
why are is less than

1673
01:58:51,960 --> 01:58:53,560
RS or five.

1674
01:58:53,560 --> 01:58:56,200
I hope you guys have not.

1675
01:58:56,440 --> 01:58:59,160
But what about the values?

1676
01:58:59,160 --> 01:59:01,800
Because it's a what you guys use.

1677
01:59:01,800 --> 01:59:03,960
I can see

1678
01:59:06,840 --> 01:59:10,480
got don't get and I

1679
01:59:11,640 --> 01:59:16,040
will this code word guys
if I execute the score, will

1680
01:59:16,160 --> 01:59:42,960
I get all the elements.

1681
01:59:42,960 --> 01:59:45,120
Okay I think no.

1682
01:59:45,960 --> 01:59:49,560
Yes it will be an infinite low.

1683
01:59:49,800 --> 01:59:52,760
I have to do the

1684
01:59:52,760 --> 02:00:03,960
plus plus as well.

1685
02:00:03,960 --> 02:00:09,320
So this is by simply printing the array
using the s out.

1686
02:00:09,320 --> 02:00:12,400
One of the ways
to retrieve the method element.

1687
02:00:13,160 --> 02:00:15,240
So simply use this

1688
02:00:16,640 --> 02:00:17,520
s out

1689
02:00:18,760 --> 02:00:20,520
and you will get all the

1690
02:00:20,520 --> 02:00:24,600
elements in this format.

1691
02:00:24,600 --> 02:00:28,120
But if you want to use
the individual elements

1692
02:00:32,720 --> 02:00:35,600
and then what you guys can do,

1693
02:00:37,240 --> 02:00:41,880
oops,

1694
02:00:41,880 --> 02:00:45,400
you can write a loop

1695
02:00:45,480 --> 02:00:49,120
and you can get all the elements
one by one

1696
02:00:50,280 --> 02:00:51,280
in here

1697
02:00:54,720 --> 02:00:56,280
and then you can write

1698
02:00:56,280 --> 02:00:58,640
the symbol for loop as well

1699
02:01:00,120 --> 02:01:03,000
to get all the elements, a lot of buyback

1700
02:01:03,240 --> 02:01:05,920
and then you guys can use

1701
02:01:10,680 --> 02:01:12,880
a y loop as well

1702
02:01:14,480 --> 02:01:15,560
in here.

1703
02:01:15,720 --> 02:01:16,240
All right.

1704
02:01:16,320 --> 02:01:21,600
So what you guys are noticing
that I get all the elements

1705
02:01:22,560 --> 02:01:26,880
in the same order
in which I inserted a B as

1706
02:01:27,720 --> 02:01:32,680
So is it some kind of property of arrays
or I'm just getting these elements

1707
02:01:32,680 --> 02:01:36,480
within them The in the same order

1708
02:01:38,880 --> 02:01:42,720
and you use enhanced
for loop for ArrayList.

1709
02:01:42,720 --> 02:01:44,920
So what is this? Shareef

1710
02:01:46,320 --> 02:01:48,840
Well, what we are doing in here

1711
02:01:53,840 --> 02:01:55,560
Okay, so this

1712
02:01:55,560 --> 02:01:59,520
here we are already using the enhanced
for loop, right?

1713
02:01:59,520 --> 02:02:05,880
So on the onset of your question is yes,

1714
02:02:05,880 --> 02:02:12,000
So if I ask you
about the properties of list,

1715
02:02:12,240 --> 02:02:16,520
so when I write, when I write list,
I mean add a list

1716
02:02:16,520 --> 02:02:20,160
and the link or list.

1717
02:02:20,160 --> 02:02:23,080
So one of their properties is that there

1718
02:02:26,640 --> 02:02:30,760
maintain the tool in

1719
02:02:31,840 --> 02:02:34,320
insertion order

1720
02:02:34,320 --> 02:02:37,240
the, order in which we insert the data,

1721
02:02:38,280 --> 02:02:41,640
we get the data in the same order

1722
02:02:41,640 --> 02:02:45,960
when we use, they get print method.

1723
02:02:45,960 --> 02:02:49,080
Any other method,
we get the data in the same order.

1724
02:02:50,320 --> 02:02:53,760
Yes. Not to just give me one moment

1725
02:02:58,440 --> 02:02:59,960
and again,

1726
02:02:59,960 --> 02:03:03,960
can I,
can I put to duplicate elements guys.

1727
02:03:03,960 --> 02:03:04,360
No, no.

1728
02:03:04,360 --> 02:03:07,440
It's the property of both the list.

1729
02:03:07,720 --> 02:03:09,520
It can be.

1730
02:03:09,560 --> 02:03:12,280
It can be and released

1731
02:03:13,560 --> 02:03:16,400
or linked list.

1732
02:03:16,640 --> 02:03:22,200
All right.

1733
02:03:22,200 --> 02:03:24,240
We can insert

1734
02:03:25,920 --> 02:03:29,200
duplicate data as that.

1735
02:03:30,200 --> 02:03:32,480
Okay.

1736
02:03:32,480 --> 02:03:37,360
So for example, and you guys
tell me the shortcut if I want to go back

1737
02:03:37,360 --> 02:03:40,520
to the file
that law that I was editing before,

1738
02:03:40,520 --> 02:03:44,120
this knows file.

1739
02:03:44,160 --> 02:03:45,600
No, there is no difference.

1740
02:03:45,600 --> 02:03:47,560
But both they are same.

1741
02:03:47,560 --> 02:03:51,480
The only difference is how internally
they see the data.

1742
02:03:51,480 --> 02:03:53,680
Yes, it's control.

1743
02:03:53,680 --> 02:03:54,440
I press this.

1744
02:03:54,440 --> 02:03:57,200
I go back to the file.

1745
02:03:57,720 --> 02:04:01,640
Okay So if let's say for example,

1746
02:04:01,640 --> 02:04:06,960
if I say car dot Ferrari,
how many Ferraris I will see

1747
02:04:06,960 --> 02:04:10,920
now guys in the output

1748
02:04:12,080 --> 02:04:14,560
everywhere I will see too.

1749
02:04:14,600 --> 02:04:17,360
But if I do the same with sets,

1750
02:04:18,480 --> 02:04:20,720
if I do the same thing with search,

1751
02:04:20,760 --> 02:04:25,240
if I try to add to duplicate
elements in this set,

1752
02:04:26,640 --> 02:04:27,760
how many Ferraris I

1753
02:04:27,760 --> 02:04:31,320
will get, I will get only write

1754
02:04:31,520 --> 02:04:36,400
only and only one.

1755
02:04:36,400 --> 02:04:39,240
Okay, so how is the class today?

1756
02:04:39,240 --> 02:04:40,600
Is it still confusing?

1757
02:04:40,600 --> 02:04:44,520
Like the start,
like they started last Sunday's class?

1758
02:04:44,520 --> 02:04:53,680
Or is it better?

1759
02:04:53,680 --> 02:05:00,280
Okay, so the main point is to learn
how to use these structures,

1760
02:05:00,960 --> 02:05:03,520
like how to use the methods

1761
02:05:03,520 --> 02:05:05,760
of removal contains.

1762
02:05:05,760 --> 02:05:09,600
And the second most part is to learning

1763
02:05:09,600 --> 02:05:14,000
the underlying data structure
so that you guys can decide

1764
02:05:15,000 --> 02:05:18,000
in a certain scenario which data structure

1765
02:05:18,000 --> 02:05:25,080
you should use.

1766
02:05:25,080 --> 02:05:27,160
So how many ways we have learned?

1767
02:05:27,160 --> 02:05:28,080
We have learned.

1768
02:05:28,080 --> 02:05:30,480
One way to bring to be that.

1769
02:05:30,480 --> 02:05:33,920
The second way,
the third way, the fourth way.

1770
02:05:33,920 --> 02:05:37,840
And now let me show you the fifth way
using the iterator.

1771
02:05:38,240 --> 02:05:41,280
Then I will show you the sixth way
and the seventh way as well.

1772
02:05:41,280 --> 02:05:45,600
If you guys promise
me, do not get confused.

1773
02:05:47,200 --> 02:05:49,760
So now let's try to get

1774
02:05:49,800 --> 02:05:52,960
the elements using the I papers as well.

1775
02:05:53,560 --> 02:05:56,680
So I have a list.

1776
02:05:57,240 --> 02:05:59,840
List is the collection right? And

1777
02:06:01,200 --> 02:06:02,280
the top class.

1778
02:06:02,280 --> 02:06:05,360
What is the topmost interface
in the collections framework

1779
02:06:05,360 --> 02:06:13,680
based? Yes.

1780
02:06:13,680 --> 02:06:19,720
Do while is also possible.

1781
02:06:19,720 --> 02:06:23,920
Yes. Object class is the
is the father of all the classes

1782
02:06:24,680 --> 02:06:28,320
I treble is the father in all

1783
02:06:28,320 --> 02:06:32,080
the classes
are the interfaces inside this interface.

1784
02:06:32,760 --> 02:06:36,120
So if I show you

1785
02:06:37,440 --> 02:06:47,320
that picture again,

1786
02:06:47,320 --> 02:06:50,640
this I triple is is at the very top.

1787
02:06:51,320 --> 02:06:53,800
I think it's actually the so

1788
02:06:55,320 --> 02:06:58,480
what I can do

1789
02:06:59,120 --> 02:07:01,120
that means every class

1790
02:07:01,120 --> 02:07:04,080
or interface in this collection framework,

1791
02:07:05,440 --> 02:07:07,400
they have to implement

1792
02:07:07,400 --> 02:07:10,840
the methods
provided by that iterator interface.

1793
02:07:10,840 --> 02:07:11,640
Right.

1794
02:07:11,800 --> 02:07:16,320
So and this is the object of my error list

1795
02:07:16,400 --> 02:07:18,960
last night I have called it cause I,

1796
02:07:19,560 --> 02:07:21,840
I have all this object has cards.

1797
02:07:22,480 --> 02:07:25,440
So if I want to get the iterator,

1798
02:07:25,440 --> 02:07:30,000
I simply use the name of the object,
then dot.

1799
02:07:30,000 --> 02:07:31,560
And then I say

1800
02:07:32,600 --> 02:07:34,400
I try to

1801
02:07:37,320 --> 02:07:40,240
and it will return me and I return

1802
02:07:40,560 --> 02:07:44,200
which I can store

1803
02:07:44,200 --> 02:07:47,680
inside the variable of.

1804
02:07:48,960 --> 02:07:53,000
I create the interface and the data

1805
02:07:53,000 --> 02:07:56,120
that this object contains itself
string type.

1806
02:07:56,120 --> 02:07:58,400
So I will say string.

1807
02:07:58,400 --> 02:08:01,320
Is it clear, guys, this line

1808
02:08:01,400 --> 02:08:03,760
why I am using this iterator variable?

1809
02:08:03,760 --> 02:08:05,520
What is this string?

1810
02:08:05,520 --> 02:08:13,560
And I am calling this method.

1811
02:08:13,560 --> 02:08:15,960
So if I show you this, it returns at 30.

1812
02:08:15,960 --> 02:08:20,320
It actually returns another object of the

1813
02:08:20,360 --> 02:08:24,360
I prefer the interface.

1814
02:08:24,360 --> 02:08:27,600
And now what I can do,

1815
02:08:27,600 --> 02:08:30,760
I can use those three famous methods

1816
02:08:31,440 --> 02:08:34,160
from the iterator interface

1817
02:08:34,160 --> 02:08:37,040
to get all the elements right.

1818
02:08:37,960 --> 02:08:40,680
So what are those famous
three methods of guys

1819
02:08:41,880 --> 02:09:20,760
as a next?

1820
02:09:20,760 --> 02:09:23,920
So this next has next method.

1821
02:09:23,920 --> 02:09:26,400
It will always return mean true

1822
02:09:28,240 --> 02:09:31,200
as far as I have some

1823
02:09:31,200 --> 02:09:36,480
elements in my Creator,
so I can use that as a condition.

1824
02:09:36,520 --> 02:09:40,040
Right? I can see a while.

1825
02:09:40,040 --> 02:09:43,000
There are elements in the iterator.

1826
02:09:43,440 --> 02:09:45,840
Keep on looping,

1827
02:09:46,320 --> 02:09:47,920
keep on looping

1828
02:09:48,000 --> 02:09:52,160
and if I want to get the elements

1829
02:09:52,920 --> 02:09:56,040
from the side greater,
which method I should use guys,

1830
02:09:56,880 --> 02:09:59,640
I should really use.

1831
02:09:59,640 --> 02:10:09,800
I prefer dark next right?

1832
02:10:09,800 --> 02:10:11,880
And now

1833
02:10:12,240 --> 02:10:15,280
if I use this,

1834
02:10:15,280 --> 02:10:18,960
I get all the elements using the

1835
02:10:19,080 --> 02:10:26,080
I creator as well.

1836
02:10:26,080 --> 02:10:29,160
Okay. Are all these five meters?

1837
02:10:29,160 --> 02:11:47,360
Are they clear? Yes.

1838
02:11:47,360 --> 02:11:50,680
So if you want to use another I later

1839
02:11:50,720 --> 02:11:54,080
will need new one
just to repeat the whole thing.

1840
02:11:54,120 --> 02:12:01,160
Yes. Yep.

1841
02:12:01,240 --> 02:12:04,160
Yep, yep.

1842
02:12:04,160 --> 02:12:06,960
Is this also good eye cards?

1843
02:12:07,320 --> 02:12:08,160
Yes. Yes.

1844
02:12:08,160 --> 02:12:12,360
This is also good,
but it will only print one element

1845
02:12:12,960 --> 02:12:16,560
because you are using a
break statement after it has

1846
02:12:18,320 --> 02:12:20,800
printed one element,

1847
02:12:21,840 --> 02:12:23,280
it will break right?

1848
02:12:23,280 --> 02:12:26,280
So you don't want to do that?

1849
02:12:26,400 --> 02:12:30,240
No. That some
that stuff is for another class

1850
02:12:30,600 --> 02:12:34,000
or maybe not at all.

1851
02:12:34,000 --> 02:12:36,280
By the way, by the way,
if these lambda expressions,

1852
02:12:36,280 --> 02:12:39,360
they are confusing you, it's
all because of Simon.

1853
02:12:39,720 --> 02:12:47,080
He asked me
to show those lambda expressions.

1854
02:12:47,080 --> 02:12:52,800
So this this is important
from the same task that I have.

1855
02:12:52,800 --> 02:12:54,080
We used this.

1856
02:12:54,080 --> 02:12:56,640
I prefer once in here

1857
02:13:00,240 --> 02:13:03,480
if I'm just getting this statement.

1858
02:13:03,480 --> 02:13:04,240
Don't worry.

1859
02:13:04,240 --> 02:13:08,400
Actually, you guys don't have the basics,
so it will be confusing for you.

1860
02:13:08,400 --> 02:13:10,400
I will show you
what are lambda expressions

1861
02:13:10,400 --> 02:13:15,040
and then I will teach you
how to use those.

1862
02:13:15,040 --> 02:13:18,640
But if I want to print the last element,
not all of it.

1863
02:13:18,640 --> 02:13:22,840
Yes, but you can also do.

1864
02:13:22,840 --> 02:13:25,160
Guys,
how can I only print the last element

1865
02:13:56,520 --> 02:13:58,600
by not printing the previous elements.

1866
02:13:59,760 --> 02:14:02,640
So I am saying God is to get

1867
02:14:03,400 --> 02:14:07,440
and as the index what I am passing
I am passing

1868
02:14:08,000 --> 02:14:10,920
car size minus one.

1869
02:14:12,160 --> 02:14:14,680
So what I am saying

1870
02:14:14,840 --> 02:14:18,800
I am specifying
the index of the last element

1871
02:14:18,840 --> 02:14:24,360
right.

1872
02:14:24,360 --> 02:14:26,880
So I get the last element. It's very easy.

1873
02:14:27,240 --> 02:14:29,280
You see.
You need to specify the last index.

1874
02:14:29,280 --> 02:14:30,440
That's it.

1875
02:14:30,440 --> 02:14:35,280
You can get the last index by size
minus one outside minus one.

1876
02:14:36,920 --> 02:14:54,120
Is it clear?

1877
02:14:54,120 --> 02:14:58,320
So maybe let's move to next exercises
instead of going deeper and deeper.

1878
02:14:59,800 --> 02:15:04,360
No, it's actually I want to
I want to show you because these

1879
02:15:04,600 --> 02:15:09,760
this collections framework is the most
widely used framework in real life.

1880
02:15:09,760 --> 02:15:12,520
You guys will not be using A-D
or anything like that

1881
02:15:13,400 --> 02:15:16,680
99% of the time
you guys will be using this ArrayList

1882
02:15:16,680 --> 02:15:20,880
class or add a class
or this kind of stuff to solve

1883
02:15:20,880 --> 02:15:27,280
your real life problems.

1884
02:15:27,280 --> 02:15:31,800
Okay,
so Nabeel said that if I have used this,

1885
02:15:31,800 --> 02:15:37,760
I tried to to print out the elements once.

1886
02:15:38,680 --> 02:15:43,920
Can I use it again
to print out the elements.

1887
02:15:43,920 --> 02:15:45,640
So this is a good question.

1888
02:15:45,640 --> 02:15:48,880
Let me but let me show you in another

1889
02:15:50,960 --> 02:16:08,280
class.

1890
02:16:08,280 --> 02:16:10,560
So I had a list.

1891
02:16:11,040 --> 02:16:13,120
I created one I printer.

1892
02:16:13,120 --> 02:16:16,360
I used that I tried to once

1893
02:16:17,160 --> 02:16:20,040
to get all the elements from this list.

1894
02:16:20,040 --> 02:16:25,480
So my question is,
if I repeated this code again,

1895
02:16:25,480 --> 02:16:28,040
how many times I will see these entries?

1896
02:16:28,040 --> 02:16:36,480
Will I see them twice or only once?

1897
02:16:36,480 --> 02:16:40,520
So this is the question from Nabeel.

1898
02:16:40,520 --> 02:16:52,200
So if I execute this code,

1899
02:16:52,200 --> 02:16:58,320
I see the elements
only once why it is happening?

1900
02:16:58,880 --> 02:17:01,720
Because once we have consumed

1901
02:17:01,720 --> 02:17:06,480
and I try to to get all the elements
from start to end,

1902
02:17:07,320 --> 02:17:11,720
then that I can not
can cannot be used anymore.

1903
02:17:12,360 --> 02:17:14,840
If we want to iterate again,

1904
02:17:14,840 --> 02:17:19,600
we have to get a new iterator again
as well.

1905
02:17:19,600 --> 02:17:23,040
So right now, because we have consumed

1906
02:17:23,040 --> 02:17:25,120
all the elements in here.

1907
02:17:26,040 --> 02:17:27,760
So you guys remember that pointer

1908
02:17:29,640 --> 02:17:32,440
pointer starts from minus one, right?

1909
02:17:32,440 --> 02:17:36,680
And Pointer was here for this
Hydrator Pointer was minus one

1910
02:17:37,200 --> 02:17:41,680
when we called the next method
once as next return does true,

1911
02:17:41,680 --> 02:17:45,840
we call the pointer log move here,
then here, then here.

1912
02:17:46,080 --> 02:17:48,120
And finally the pointer moved

1913
02:17:48,680 --> 02:17:52,320
to the last location
and there are no elements off of the back.

1914
02:17:52,920 --> 02:17:56,640
So we have not reset that pointer.

1915
02:17:57,080 --> 02:18:00,720
This triple pointer inside this hydrator,

1916
02:18:01,200 --> 02:18:03,760
it is still at the last location.

1917
02:18:04,680 --> 02:18:07,040
So if the pointer that like
look at last location

1918
02:18:07,040 --> 02:18:10,040
and like all this has a next method
we like that

1919
02:18:10,040 --> 02:18:12,120
brewer follow this

1920
02:18:14,440 --> 02:18:18,680
I will get false
and if I get false that loop

1921
02:18:18,680 --> 02:18:23,840
will never execute execute
and I will never get the elements right.

1922
02:18:24,720 --> 02:18:30,120
So if you want to do that again,

1923
02:18:30,120 --> 02:18:33,960
you have to all this line of code

1924
02:18:35,040 --> 02:18:37,200
again in here.

1925
02:18:37,200 --> 02:18:42,360
Okay, get the iterator again.

1926
02:18:44,320 --> 02:18:46,600
He has got to be iterator again.

1927
02:18:46,600 --> 02:18:49,400
Store it inside the again.

1928
02:18:49,400 --> 02:18:51,320
No, we don't need to give different name.

1929
02:18:51,320 --> 02:18:54,320
Well we can store it inside the same,

1930
02:18:54,320 --> 02:19:01,560
get the numerator and then execute it.

1931
02:19:02,600 --> 02:19:06,400
Now we will see all the output splice

1932
02:19:06,760 --> 02:19:10,880
because we create here we got a new to.

1933
02:19:11,080 --> 02:19:13,880
So every time you call this iterator
method,

1934
02:19:13,880 --> 02:19:22,920
you get a new type of task.

1935
02:19:22,920 --> 02:19:25,160
So getting the

1936
02:19:26,400 --> 02:19:28,560
new fresh.

1937
02:19:30,080 --> 02:19:30,520
All right.

1938
02:19:30,520 --> 02:19:33,360
Return again.

1939
02:19:33,360 --> 02:19:36,040
Yes. Now the pointer has again moved

1940
02:19:36,040 --> 02:19:38,640
to the initial location, has really sliced

1941
02:19:39,040 --> 02:19:43,600
and now we can use it again to move
to the next member locations one by one.

1942
02:19:43,600 --> 02:19:46,240
And can we get the elements?

1943
02:19:46,240 --> 02:19:48,600
Is there anyone
confused this question, guys,

1944
02:19:49,920 --> 02:19:52,320
why will you have to write this line again

1945
02:19:53,160 --> 02:19:56,280
to to use use the creator

1946
02:19:56,520 --> 02:20:02,040
to print out
why we cannot use the same iterator, but

1947
02:20:07,200 --> 02:20:09,600
maybe no one is confused.

1948
02:20:09,600 --> 02:20:19,400
All clear.

1949
02:20:19,400 --> 02:20:25,840
Okay.

1950
02:20:25,840 --> 02:20:28,680
All right. So this was task one,

1951
02:20:29,160 --> 02:20:33,120
braving the elements,
using different different methods to show

1952
02:20:33,240 --> 02:20:36,520
Can I move to the task to Yes,
ask questions.

1953
02:20:36,520 --> 02:20:37,480
If you have

1954
02:20:40,680 --> 02:20:42,680
you just duplicate the iterator.

1955
02:20:42,720 --> 02:20:46,800
I i you I re initialize

1956
02:20:46,840 --> 02:20:48,400
the iterator

1957
02:20:50,800 --> 02:20:53,120
for one.

1958
02:20:53,120 --> 02:20:56,000
I re initialize the apparatus

1959
02:20:56,000 --> 02:20:58,760
or you can say I reset pointer

1960
02:20:59,320 --> 02:21:16,360
so that I can use it again
to go through all of the elements.

1961
02:21:16,360 --> 02:21:20,160
Can I move to the next task based

1962
02:21:22,920 --> 02:21:25,120
to use a string of necessity

1963
02:21:25,120 --> 02:21:37,000
I did with string way.

1964
02:21:37,000 --> 02:21:38,600
Both of the waves are good housing,

1965
02:21:39,600 --> 02:21:40,200
but this

1966
02:21:40,200 --> 02:21:43,720
one that you have written,
this one is more work.

1967
02:21:44,160 --> 02:21:46,520
So if you have written this,

1968
02:21:47,040 --> 02:21:52,000
getting the element first
and storing inside a variable

1969
02:21:52,000 --> 02:21:55,680
and then using that variable to print out,
it's more good

1970
02:21:56,760 --> 02:21:59,360
because you remember if you are

1971
02:21:59,360 --> 02:22:01,760
calling the next method twice,

1972
02:22:02,440 --> 02:22:07,080
your pointer will also move twice
to memory locations to cells, right?

1973
02:22:07,440 --> 02:22:09,640
So you don't want to skip the elements.

1974
02:22:09,640 --> 02:22:12,520
Let's say you want to use this string

1975
02:22:12,880 --> 02:22:16,040
to perform
further operations on your data.

1976
02:22:16,720 --> 02:22:17,400
All right.

1977
02:22:17,400 --> 02:22:29,800
So once you store the data,
you can do anything with that.

1978
02:22:29,800 --> 02:22:30,880
Okay.

1979
02:22:30,880 --> 02:22:33,680
So the task to

1980
02:22:49,840 --> 02:22:53,440
create an array list of words, remove

1981
02:22:53,600 --> 02:22:56,640
every word that ends with E,

1982
02:22:57,720 --> 02:23:04,440
you mean,
can you check the list that contains E?

1983
02:23:04,440 --> 02:23:08,240
Did anyone else just hear a loud feedback

1984
02:23:10,920 --> 02:23:11,600
with feedback

1985
02:23:11,600 --> 02:23:22,400
from me?

1986
02:23:22,400 --> 02:23:26,240
Is there anything wrong with my mic

1987
02:23:26,760 --> 02:23:29,040
or it's happening in there

1988
02:23:30,440 --> 02:23:32,760
or I thought I have

1989
02:23:36,280 --> 02:23:39,720
just scared you guys

1990
02:23:45,120 --> 02:24:03,560
from our side.

1991
02:24:03,560 --> 02:24:13,720
So it was that loud.

1992
02:24:15,440 --> 02:24:17,840
I mean, I hope you guys are located

1993
02:24:17,840 --> 02:24:33,920
pretty far away from each other right?

1994
02:24:33,920 --> 02:24:34,280
Okay.

1995
02:24:34,280 --> 02:24:36,840
And then then maybe
I have heard that as well.

1996
02:24:38,000 --> 02:24:39,960
Ammad, what what about you?

1997
02:24:39,960 --> 02:24:44,600
You have also heard that.

1998
02:24:44,600 --> 02:24:47,760
So I heard it to Alex.

1999
02:24:49,200 --> 02:24:50,160
Like, just kidding.

2000
02:24:50,160 --> 02:24:51,560
So I'm

2001
02:24:52,480 --> 02:24:56,680
so this time, guys, I want to remove

2002
02:24:57,320 --> 02:24:59,520
every word from the list

2003
02:25:02,200 --> 02:25:04,840
that ends with E.

2004
02:25:04,840 --> 02:25:09,200
So can I use the for loop

2005
02:25:12,160 --> 02:25:13,240
for this

2006
02:25:14,160 --> 02:25:14,640
task?

2007
02:25:14,640 --> 02:25:17,360
Can I use D for loop or why loop

2008
02:25:19,360 --> 02:25:25,320
without the iterator?

2009
02:25:25,320 --> 02:25:26,800
No. Why?

2010
02:25:26,800 --> 02:25:28,960
Because I am

2011
02:25:30,600 --> 02:25:34,280
I have I might be doing so.

2012
02:25:34,280 --> 02:25:37,160
If there are any words which ends with e,

2013
02:25:37,760 --> 02:25:42,760
I might end up
changing the size of the list.

2014
02:25:42,760 --> 02:25:43,320
Right.

2015
02:25:44,960 --> 02:25:46,320
So it give me. Yes.

2016
02:25:46,320 --> 02:25:51,520
Sometimes it will work, other times
it will give you errors.

2017
02:25:51,920 --> 02:26:05,320
Okay, So it's not a good idea
to use that for loop. So

2018
02:26:06,400 --> 02:26:09,440
because we can be changing the size

2019
02:26:09,440 --> 02:26:15,240
of the ArrayList.

2020
02:26:15,240 --> 02:26:22,080
So this operation

2021
02:26:24,480 --> 02:26:26,720
might change

2022
02:26:26,720 --> 02:26:29,280
if these size of the

2023
02:26:32,160 --> 02:26:34,520
original list

2024
02:26:42,800 --> 02:26:46,680
is not a good idea

2025
02:26:47,440 --> 02:26:49,680
to use

2026
02:26:52,480 --> 02:26:53,600
loops

2027
02:26:54,680 --> 02:26:56,960
with out.

2028
02:26:57,600 --> 02:27:04,480
I k. So instead

2029
02:27:04,520 --> 02:27:08,320
I should first get an iterator.

2030
02:27:08,320 --> 02:27:10,760
I use lambda grade for odd.

2031
02:27:10,760 --> 02:27:12,240
That's great lambda out.

2032
02:27:12,240 --> 02:27:15,240
If you just after maybe ten

2033
02:27:15,240 --> 02:27:19,520
or 15 years
everyone will be using lambdas. So

2034
02:27:21,000 --> 02:27:23,600
I should fast to get the iterator.

2035
02:27:23,760 --> 02:27:25,760
So I should say I straight

2036
02:27:27,480 --> 02:27:29,800
and. Then string

2037
02:27:31,200 --> 02:27:33,480
I create is equal to

2038
02:27:34,680 --> 02:27:37,960
at least talk. I

2039
02:27:39,120 --> 02:27:41,480
and again I can use those simple methods.

2040
02:27:41,600 --> 02:27:42,000
Right

2041
02:27:43,440 --> 02:27:44,880
while

2042
02:27:46,080 --> 02:27:51,520
iterator dot heads next.

2043
02:27:51,520 --> 02:27:54,840
So I see if

2044
02:27:59,160 --> 02:28:02,040
let me use the best practice.

2045
02:28:02,240 --> 02:28:05,240
So I first store the data

2046
02:28:07,520 --> 02:28:12,840
inside a string and work the like I say

2047
02:28:14,200 --> 02:28:17,080
I prepare dot next

2048
02:28:17,080 --> 02:28:20,760
and then I write the if condition

2049
02:28:22,800 --> 02:28:24,840
and I see

2050
02:28:25,760 --> 02:28:30,480
new word dot to lower case.

2051
02:28:30,840 --> 02:28:34,080
And you guys don't need to write this lock
located or walk

2052
02:28:36,000 --> 02:28:38,120
out ends with

2053
02:28:43,080 --> 02:28:49,200
e, then what should I do guys?

2054
02:28:49,680 --> 02:28:57,360
What should I write inside this
F condition?

2055
02:28:57,360 --> 02:29:04,080
I should say
I created a dot of remove right?

2056
02:29:04,080 --> 02:29:07,000
And now

2057
02:29:11,480 --> 02:29:15,240
if I print out

2058
02:29:15,240 --> 02:29:24,280
the a list in here,
I should not see this oriented,

2059
02:29:24,320 --> 02:29:28,920
this life, this powerful
and this slap right.

2060
02:29:28,920 --> 02:29:31,880
So only car and lap.

2061
02:29:31,880 --> 02:29:32,760
Is it clear, guys?

2062
02:29:32,760 --> 02:29:39,440
This task is clear.

2063
02:29:39,440 --> 02:29:43,320
And Damir has used the lambda expression
that is also good.

2064
02:29:43,800 --> 02:29:47,320
Less less lines of code.

2065
02:29:47,320 --> 02:29:50,960
But first I will teach you the basics
about the lambda expressions,

2066
02:29:51,720 --> 02:29:55,200
and then you guys can start
using those lambda expression

2067
02:29:55,200 --> 02:30:02,160
expression.

2068
02:30:02,160 --> 02:30:07,720
They are very powerful lambda expressions
once combined with the stream API.

2069
02:30:07,800 --> 02:30:11,040
If there are eight
physical calls in your computer

2070
02:30:11,840 --> 02:30:15,720
and if the list has 8 million entries,

2071
02:30:16,960 --> 02:30:18,960
your computer will divide

2072
02:30:19,640 --> 02:30:24,760
1 million for physical for each
kind of the brain of your laptop.

2073
02:30:25,320 --> 02:30:28,520
They will be processed in parallel,
each of them,

2074
02:30:29,080 --> 02:30:34,040
and then the results will be combined so
it can increase your performance by many.

2075
02:30:34,040 --> 02:30:39,040
For if your computer has 20 or 30 course
physical calls,

2076
02:30:39,640 --> 02:30:44,280
you can reduce the time of your data
processing by 30.

2077
02:30:44,280 --> 02:30:46,760
By 2020 times or 30 times.

2078
02:30:46,760 --> 02:30:52,320
You can you can all your data
that much weight using lambda expressions

2079
02:30:52,320 --> 02:30:54,720
and steam API is

2080
02:30:57,960 --> 02:30:58,720
okay.

2081
02:30:58,720 --> 02:31:01,160
What about taking the E letter
from the world?

2082
02:31:01,160 --> 02:31:03,960
How to do that? Can it be done?

2083
02:31:04,680 --> 02:31:09,240
You Want to remove the letter
E from each word?

2084
02:31:09,240 --> 02:31:10,080
The linear

2085
02:31:13,280 --> 02:31:15,680
that that is also possible.

2086
02:31:15,680 --> 02:31:17,480
That is also possible.

2087
02:31:17,480 --> 02:31:19,000
Can you guys tell me how to do that?

2088
02:31:20,600 --> 02:31:23,640
So instead
of removing the complete element,

2089
02:31:23,760 --> 02:31:28,240
Melanie wants to only remove
this last element

2090
02:31:29,520 --> 02:31:41,720
from each word.

2091
02:31:41,720 --> 02:31:45,000
So first tell me, guys, will I be changing

2092
02:31:45,840 --> 02:31:48,760
this operation of changing

2093
02:31:48,760 --> 02:31:53,640
this operation, of changing the last
element, removing the last element?

2094
02:31:53,640 --> 02:32:04,680
Will it change the size of the added?

2095
02:32:04,680 --> 02:32:07,720
So what I can do

2096
02:32:12,840 --> 02:32:15,240
and if anyone gets confused,

2097
02:32:15,480 --> 02:32:18,960
it's all because of William.

2098
02:32:18,960 --> 02:32:28,120
Because it's

2099
02:32:29,760 --> 02:32:31,800
so fast, I notice that okay,

2100
02:32:31,800 --> 02:32:34,760
I will not be changing
the size of the list.

2101
02:32:34,760 --> 02:32:35,720
Right?

2102
02:32:36,040 --> 02:32:40,320
So I can use the simple for loop.

2103
02:32:40,920 --> 02:32:43,240
I can see

2104
02:32:45,280 --> 02:32:48,840
ArrayList dot size.

2105
02:32:48,840 --> 02:32:52,520
And then what
I can say I can say is spring,

2106
02:32:52,520 --> 02:32:55,920
SDR is equal to at least

2107
02:32:57,400 --> 02:33:00,360
to get I right.

2108
02:33:00,360 --> 02:33:02,520
So inside this SDR,

2109
02:33:02,520 --> 02:33:06,160
I will be getting all the
elements one by one, right?

2110
02:33:07,920 --> 02:33:09,760
So then I can check.

2111
02:33:09,760 --> 02:33:13,720
I can check if SDR DOT

2112
02:33:14,880 --> 02:33:18,960
to load a start and with

2113
02:33:20,440 --> 02:33:27,600
E if this is the case,
I want to replace this word.

2114
02:33:27,600 --> 02:33:29,600
So for example, I take orange,

2115
02:33:30,640 --> 02:33:34,560
I remove this E and I store the ore

2116
02:33:34,560 --> 02:33:38,040
and energy back on that location.

2117
02:33:38,040 --> 02:33:38,920
Right.

2118
02:33:39,320 --> 02:33:40,520
So what do I do?

2119
02:33:40,520 --> 02:33:42,200
I see

2120
02:33:43,440 --> 02:33:44,640
ArrayList.

2121
02:33:44,640 --> 02:33:47,320
Dot said

2122
02:33:47,320 --> 02:33:48,400
the same index.

2123
02:33:48,400 --> 02:33:53,120
I am starting the data
back to the same index back.

2124
02:33:53,120 --> 02:33:57,040
I am only only storing

2125
02:34:08,600 --> 02:34:10,800
the word, not the letter E,

2126
02:34:10,800 --> 02:34:15,400
so I use the substring
to get all the letters starting from all.

2127
02:34:15,720 --> 02:34:18,600
Still this D
I get all the letters starting from L.

2128
02:34:18,920 --> 02:34:23,520
I don't include this E so I use minus two

2129
02:34:23,760 --> 02:34:29,440
and I stored this data
at the same index back and now

2130
02:34:30,440 --> 02:34:35,920
I actually let me

2131
02:34:37,320 --> 02:34:53,400
copy to a new file.

2132
02:34:53,400 --> 02:34:57,400
But in any you did this where you remove
the last character instead of

2133
02:34:58,560 --> 02:35:01,600
removing the complete work

2134
02:35:04,920 --> 02:35:07,720
I was trying that all the

2135
02:35:11,480 --> 02:35:13,480
so we are done with the task

2136
02:35:13,480 --> 02:35:15,840
going here now let's discuss about this

2137
02:35:18,320 --> 02:35:19,120
other task.

2138
02:35:19,120 --> 02:35:19,640
Okay.

2139
02:35:20,040 --> 02:35:23,840
So after I am done doing this,

2140
02:35:23,840 --> 02:35:35,200
I print out the adding, I put

2141
02:35:36,480 --> 02:35:37,920
minus one

2142
02:35:38,600 --> 02:35:43,360
because the last element is not inclusive.

2143
02:35:43,360 --> 02:35:46,560
So now e is removed from our life, E

2144
02:35:46,560 --> 02:35:49,880
is removed, the is removed from purple.

2145
02:35:49,880 --> 02:35:54,320
And no, do you guys understand
what is going on in here?

2146
02:35:54,840 --> 02:36:00,240
How how this example is working?

2147
02:36:00,240 --> 02:36:16,040
You want me to debug this
or you guys understand this?

2148
02:36:16,040 --> 02:36:19,840
If he is in the middle
and then you guys can use the

2149
02:36:22,000 --> 02:36:22,680
and then you guys

2150
02:36:22,680 --> 02:36:25,640
can use the regular expressions.

2151
02:36:26,520 --> 02:36:28,720
You guys remember the regular expressions.

2152
02:36:29,400 --> 02:36:32,640
You can find anything from

2153
02:36:32,640 --> 02:36:35,840
in between
you can remove anything from in between.

2154
02:36:35,840 --> 02:36:39,480
You remember it will replace all methods
from the string plus

2155
02:36:41,280 --> 02:36:42,480
and then you specify

2156
02:36:42,480 --> 02:36:45,480
the character that you want to replace.

2157
02:36:45,480 --> 02:36:48,920
So let's say, for example, if you have

2158
02:36:49,080 --> 02:36:55,920
you want to replace something from
in between.

2159
02:36:55,920 --> 02:36:59,480
Okay, I am very happy to hear that Illini

2160
02:37:00,840 --> 02:37:02,120
that you guys have for that.

2161
02:37:02,120 --> 02:37:04,680
I forgot everything.

2162
02:37:04,680 --> 02:37:07,720
If so, I say

2163
02:37:09,480 --> 02:37:12,960
Spain, don't replace all.

2164
02:37:12,960 --> 02:37:15,720
And then I say

2165
02:37:15,720 --> 02:37:18,200
I specify

2166
02:37:20,360 --> 02:37:22,680
the regular expression, right?

2167
02:37:24,240 --> 02:37:28,680
And then I want to replace it with the
nothing, right.

2168
02:37:28,800 --> 02:37:30,960
I want to replace it with nothing.

2169
02:37:30,960 --> 02:37:33,160
Yes, you guys can use the replace as well.

2170
02:37:33,760 --> 02:37:36,080
You can use the replace as that.

2171
02:37:36,080 --> 02:37:42,760
So let's say oops, you want to use

2172
02:37:43,840 --> 02:37:45,520
the replacement

2173
02:37:48,360 --> 02:37:51,200
E and you want to replace it with nothing,
right.

2174
02:37:51,400 --> 02:37:52,360
Like this.

2175
02:37:52,800 --> 02:37:55,240
So if let's say

2176
02:37:56,840 --> 02:38:00,160
now the E is let's say in between right

2177
02:38:01,200 --> 02:38:02,760
or in here. Right.

2178
02:38:02,760 --> 02:38:09,800
So I have placed the E in between.

2179
02:38:09,800 --> 02:38:13,800
I can be truly proud of you.

2180
02:38:13,800 --> 02:38:14,160
Don't

2181
02:38:30,840 --> 02:38:33,840
replace the replacement

2182
02:38:34,720 --> 02:39:03,440
as as the are or replace.

2183
02:39:03,440 --> 02:39:04,920
This should not be happy.

2184
02:39:04,920 --> 02:39:07,560
It does not end with e

2185
02:39:08,760 --> 02:39:11,400
but I changed the logic, right?

2186
02:39:12,920 --> 02:39:15,360
Oh, because it is not going

2187
02:39:15,360 --> 02:39:18,360
inside this F condition.

2188
02:39:18,360 --> 02:39:22,200
We also have good change this with

2189
02:39:22,360 --> 02:39:23,400
contains.

2190
02:39:23,400 --> 02:39:24,200
Right?

2191
02:39:24,240 --> 02:39:29,000
Because if this condition is not true,
we will never enter inside this pullout.

2192
02:39:29,040 --> 02:39:29,360
Right?

2193
02:39:29,360 --> 02:39:33,760
If we never enter the inside this block,
then we will never replace that

2194
02:39:33,880 --> 02:39:36,840
or this this code will never execute.

2195
02:39:38,280 --> 02:39:38,720
And so

2196
02:39:38,720 --> 02:39:41,920
now the E is removed from in between as.

2197
02:39:41,920 --> 02:39:45,240
But could you wait a minute for Decode?

2198
02:39:45,240 --> 02:39:49,040
Yes. Can you explain?

2199
02:39:49,040 --> 02:39:55,680
What does this have to do?

2200
02:39:55,680 --> 02:39:57,720
So set

2201
02:39:57,840 --> 02:40:00,240
replace the element

2202
02:40:00,240 --> 02:40:04,080
at specific index.

2203
02:40:04,080 --> 02:40:06,640
So let me debug this code for you.

2204
02:40:06,640 --> 02:40:23,800
Actually.

2205
02:40:23,800 --> 02:40:27,560
So this code was to replace that thing

2206
02:40:27,560 --> 02:40:29,400
which ends with

2207
02:40:31,600 --> 02:40:35,280
and that's what we want this.

2208
02:40:35,800 --> 02:40:36,400
Okay.

2209
02:40:36,480 --> 02:40:39,680
So to remove it removes the E from words

2210
02:40:42,000 --> 02:40:43,440
from diverse

2211
02:40:44,760 --> 02:40:46,280
at the end

2212
02:41:00,120 --> 02:41:01,240
from any

2213
02:41:07,680 --> 02:41:09,920
let me, let me debug this code

2214
02:41:09,920 --> 02:41:13,120
and let me try to show you
what is going on in here.

2215
02:41:13,560 --> 02:41:15,600
So I placed a debug point first

2216
02:41:16,840 --> 02:41:18,280
and now

2217
02:41:18,600 --> 02:41:21,040
I am trying to debug this.

2218
02:41:21,320 --> 02:41:27,560
So if I check my variables window,
I have this error list in here right now.

2219
02:41:27,560 --> 02:41:31,080
I have all the elements in here
and they are

2220
02:41:31,080 --> 02:41:35,200
indexes are also specified
with those letters

2221
02:41:36,000 --> 02:41:38,480
and the value of I is right now zero.

2222
02:41:39,480 --> 02:41:41,680
So I get the element

2223
02:41:42,040 --> 02:41:47,160
index number zero
by this array list to get right.

2224
02:41:47,640 --> 02:41:50,880
And I want to
if I want to check what is stored

2225
02:41:50,880 --> 02:41:54,200
inside this SDR,

2226
02:41:54,200 --> 02:41:56,920
I can do that.

2227
02:41:56,920 --> 02:41:59,520
So intelligence is showing me

2228
02:41:59,520 --> 02:42:01,760
the contents of this variable

2229
02:42:02,000 --> 02:42:05,160
which will be stored inside this variable.

2230
02:42:06,840 --> 02:42:11,320
Then I check if I convert it to lowercase

2231
02:42:12,200 --> 02:42:15,000
and then check if this letter

2232
02:42:15,080 --> 02:42:17,800
if it ends with E or not.

2233
02:42:18,280 --> 02:42:20,200
Yes, it ends.

2234
02:42:20,200 --> 02:42:22,560
So what I do

2235
02:42:25,160 --> 02:42:27,320
now, I am doing

2236
02:42:27,320 --> 02:42:30,960
multiple operations on this line.

2237
02:42:30,960 --> 02:42:35,360
So if I want to check out the output
of each operation, guys,

2238
02:42:35,560 --> 02:42:38,600
is there any way that I can do that?

2239
02:42:38,600 --> 02:42:42,000
So I am doing side the subspace in land

2240
02:42:42,720 --> 02:42:45,440
law to right.

2241
02:42:45,920 --> 02:42:48,680
I can say

2242
02:42:48,680 --> 02:42:53,280
substring dot length.

2243
02:42:53,280 --> 02:42:58,080
I can create a white
for this to understand what is going on.

2244
02:42:58,840 --> 02:43:02,160
So SDR dot land is returning me for

2245
02:43:03,160 --> 02:43:07,040
I am subtracting one from the for

2246
02:43:09,480 --> 02:43:12,360
so I create a white for that I get three.

2247
02:43:13,880 --> 02:43:17,600
Then I call SDR dot substring

2248
02:43:18,600 --> 02:43:21,360
and if I call SDR dot substring

2249
02:43:22,560 --> 02:43:27,240
instead of life
because there are four letters in life.

2250
02:43:27,240 --> 02:43:31,200
But I am only getting the elements
starting from index

2251
02:43:31,200 --> 02:43:33,240
zero be index

2252
02:43:34,440 --> 02:43:35,160
three

2253
02:43:37,560 --> 02:43:39,880
so I only get l i

2254
02:43:39,880 --> 02:43:42,760
f with the help of this substring method.

2255
02:43:43,800 --> 02:43:47,160
And then I set that.

2256
02:43:47,760 --> 02:43:50,600
So right now if you observe

2257
02:43:51,320 --> 02:43:56,160
at index number zero still I have life.

2258
02:43:56,160 --> 02:43:58,240
So I have done my operation.

2259
02:43:58,240 --> 02:44:01,120
Now I want to store the results back

2260
02:44:01,760 --> 02:44:05,200
inside this list at index number zero.

2261
02:44:05,200 --> 02:44:08,680
So I set, I passed the index

2262
02:44:08,680 --> 02:44:14,400
I and then whatever result I have computed
So you guys will observe after

2263
02:44:14,400 --> 02:44:21,840
this line is executed,

2264
02:44:21,840 --> 02:44:26,400
I now see l i f instead of life.

2265
02:44:27,000 --> 02:44:29,600
So I take this thing,

2266
02:44:29,600 --> 02:44:32,040
I check if it ends with e

2267
02:44:33,040 --> 02:44:35,320
I remove the last letter and

2268
02:44:35,320 --> 02:44:39,360
I store it back in that index.

2269
02:44:39,640 --> 02:44:41,400
Is it clear now

2270
02:44:53,720 --> 02:44:54,800
then is

2271
02:44:54,880 --> 02:44:58,400
is it clear?

2272
02:44:58,400 --> 02:45:01,200
You guys can divide it
into multiple steps as well.

2273
02:45:01,720 --> 02:45:06,360
So if you guys are not comfortable
writing this complex score, So let's see,

2274
02:45:06,360 --> 02:45:09,440
maybe some you are still confused so

2275
02:45:09,440 --> 02:45:13,080
you guys can be worried. This

2276
02:45:13,080 --> 02:45:15,320
you can get

2277
02:45:15,320 --> 02:45:20,640
maybe you can write in page five of word

2278
02:45:22,440 --> 02:45:24,200
you you get these sides

2279
02:45:24,200 --> 02:45:28,440
inside a variable.

2280
02:45:28,440 --> 02:45:32,920
Then you can say in the last index

2281
02:45:34,000 --> 02:45:36,040
you subtract one

2282
02:45:36,400 --> 02:45:38,880
the sides to get the lasting bags

2283
02:45:40,680 --> 02:45:42,880
and then you say

2284
02:45:42,880 --> 02:45:47,040
spring new F you a new string

2285
02:45:48,120 --> 02:45:51,040
by using the substring method.

2286
02:45:51,480 --> 02:45:58,680
So SDR not substring,
you pass the starting index to this method

2287
02:45:58,680 --> 02:46:05,520
and the last index right?

2288
02:46:05,520 --> 02:46:09,200
And then you store
the newly created string,

2289
02:46:09,200 --> 02:46:14,240
the modified string back
at that specific location.

2290
02:46:14,240 --> 02:46:17,480
Right. So now if I have your this,

2291
02:46:18,600 --> 02:46:21,160
if you guys are not comfortable
writing all the code

2292
02:46:21,160 --> 02:46:27,640
in a single line,

2293
02:46:27,640 --> 02:46:30,520
you can divide your steps
into multiple steps.

2294
02:46:31,200 --> 02:46:34,200
So I get all the letters by one.

2295
02:46:35,720 --> 02:46:38,080
So first I get the life,

2296
02:46:38,080 --> 02:46:41,480
I check if it ends with e e s.

2297
02:46:42,240 --> 02:46:44,280
I enter inside if condition.

2298
02:46:45,120 --> 02:46:49,560
Then I calculate the length
of the number of characters which is four.

2299
02:46:49,560 --> 02:46:52,320
So I get four.

2300
02:46:52,400 --> 02:46:54,080
Then I subtract one

2301
02:46:54,080 --> 02:46:57,360
because I only want to retain the letters

2302
02:46:57,440 --> 02:47:00,240
starting from index zero one and two.

2303
02:47:01,720 --> 02:47:06,720
Right.

2304
02:47:06,720 --> 02:47:09,880
So I get this last index which is three.

2305
02:47:09,880 --> 02:47:14,680
And because this substring method,
it does include this three.

2306
02:47:14,680 --> 02:47:18,680
So it will do this instead of three,
it will treat it as two.

2307
02:47:19,120 --> 02:47:21,000
Okay, It is not inclusive.

2308
02:47:21,000 --> 02:47:24,760
It is less than minus one.

2309
02:47:24,760 --> 02:47:26,320
Oh, yes, I will do that as well.

2310
02:47:27,600 --> 02:47:29,040
So if

2311
02:47:29,040 --> 02:47:32,160
if you guys are confused,
it might be because you

2312
02:47:32,280 --> 02:47:35,640
you don't remember how this substring
method works.

2313
02:47:36,080 --> 02:47:38,440
What is this length returning?

2314
02:47:38,440 --> 02:47:42,040
So I encourage you to go back
and wash that again.

2315
02:47:42,040 --> 02:47:42,320
Right?

2316
02:47:42,320 --> 02:47:47,040
So I go to the life
and I sent it back inside the list.

2317
02:47:47,240 --> 02:47:51,160
Right now, if I check my list,
I have a life

2318
02:47:51,160 --> 02:47:57,200
instead of life.

2319
02:47:57,200 --> 02:47:59,520
Then I pick the next letter, right?

2320
02:47:59,680 --> 02:48:01,680
The next letter is orange.

2321
02:48:02,280 --> 02:48:06,000
It also ends with E,
so the condition will be true.

2322
02:48:06,640 --> 02:48:09,000
I get the length number of characters.

2323
02:48:09,000 --> 02:48:12,280
They are six. I subtract one,
which is five.

2324
02:48:12,680 --> 02:48:16,320
I call the substring method
to only get the letters, build

2325
02:48:16,320 --> 02:48:19,560
the index, build the letter G.

2326
02:48:20,800 --> 02:48:24,000
Once I have the letters still,
I store them back

2327
02:48:24,560 --> 02:48:28,320
at the same index
from which I got that letter.

2328
02:48:28,680 --> 02:48:30,960
And then I do the same again
and again and again.

2329
02:48:31,080 --> 02:48:32,880
Then that's how it is looking.

2330
02:48:32,880 --> 02:48:41,920
Is it better now?

2331
02:48:41,920 --> 02:48:44,400
And in its because I

2332
02:48:45,120 --> 02:48:48,760
and then as we are not

2333
02:48:54,360 --> 02:48:56,280
replace

2334
02:48:56,680 --> 02:48:59,080
but or something

2335
02:49:00,600 --> 02:49:03,240
and then I pass the starting index

2336
02:49:03,400 --> 02:49:09,080
and then SDR DOT and then my investigating

2337
02:49:13,120 --> 02:49:15,000
and remember guys for your interview

2338
02:49:15,000 --> 02:49:18,280
with your coding tests, questions from UPS

2339
02:49:18,880 --> 02:49:22,080
and methods from screen class

2340
02:49:22,080 --> 02:49:24,520
and this collection framework.

2341
02:49:25,160 --> 02:49:26,960
They are very, very important.

2342
02:49:26,960 --> 02:49:30,160
I have seen like 70% of the time,

2343
02:49:31,320 --> 02:49:33,840
even more 80 to 90% of the time.

2344
02:49:34,240 --> 02:49:36,960
The interview questions,
they are from these decoding tests,

2345
02:49:36,960 --> 02:49:41,320
they are from stained glass
and from the collections framework.

2346
02:49:41,720 --> 02:49:45,120
So make sure you remember
all those methods from this string.

2347
02:49:46,120 --> 02:49:51,360
Yes, for the testers, especially.

2348
02:49:51,360 --> 02:49:55,480
Okay, so should we move to

2349
02:49:55,480 --> 02:50:04,200
the next task?

2350
02:50:04,200 --> 02:50:06,680
That is stressful.

2351
02:50:06,680 --> 02:50:09,080
Yes. If you guys don't study,

2352
02:50:10,200 --> 02:50:13,360
you guys will be in stress all the time.

2353
02:50:13,600 --> 02:50:14,880
Oh, okay.

2354
02:50:14,880 --> 02:50:15,240
I looked.

2355
02:50:15,240 --> 02:50:24,320
Let me know once you are done typing, then

2356
02:50:25,520 --> 02:50:27,480
copy and paste.

2357
02:50:27,480 --> 02:50:28,640
You want this code?

2358
02:50:28,640 --> 02:50:30,760
I will share this code on the top.

2359
02:50:30,760 --> 02:50:33,880
You guys don't need to worry about this.

2360
02:50:33,880 --> 02:50:41,760
Still, if you guys want this,

2361
02:50:41,760 --> 02:50:42,600
we go

2362
02:50:47,280 --> 02:50:50,560
task number three

2363
02:50:56,520 --> 02:50:59,280
for the year in the store for drinks.

2364
02:50:59,280 --> 02:51:03,960
And you can send me that list.

2365
02:51:03,960 --> 02:51:14,280
Oops.

2366
02:51:14,280 --> 02:51:16,760
We had a list of bank.

2367
02:51:16,800 --> 02:51:21,960
If I have a or e, replace it with water.

2368
02:51:21,960 --> 02:51:26,280
So have you guys created a list for this

2369
02:51:26,720 --> 02:51:29,480
task and negotiated that list

2370
02:51:29,600 --> 02:51:32,120
so that we don't have to

2371
02:51:35,000 --> 02:51:36,480
give me.

2372
02:51:36,480 --> 02:51:39,440
I cannot use that list, you know,

2373
02:51:39,440 --> 02:51:58,120
can we have some gentle list? Oh,

2374
02:51:59,480 --> 02:52:02,360
I have heard of this drink
for the first time.

2375
02:52:02,680 --> 02:52:03,840
Sex on the beach.

2376
02:52:03,840 --> 02:52:13,400
What kind of drink is this?

2377
02:52:13,400 --> 02:52:15,160
And you knew you are great

2378
02:52:28,720 --> 02:52:31,680
if you drinking this

2379
02:52:36,040 --> 02:52:38,200
very popular drink.

2380
02:52:38,200 --> 02:52:41,560
It's actually a drink.

2381
02:52:41,560 --> 02:52:42,760
And then screwdriver.

2382
02:52:42,760 --> 02:52:46,800
It's also a drink.

2383
02:52:46,800 --> 02:52:49,160
Come on, guys.

2384
02:52:49,320 --> 02:52:54,360
Will you increase my knowledge?

2385
02:52:54,360 --> 02:52:56,440
Can you show me a picture of this thing?

2386
02:52:57,160 --> 02:52:59,520
I really want to take out this drink.

2387
02:52:59,880 --> 02:53:04,400
Modica.

2388
02:53:04,400 --> 02:53:07,720
Or in your work, I think.

2389
02:53:11,320 --> 02:53:11,760
Well,

2390
02:53:11,760 --> 02:53:19,680
but it looks great.

2391
02:53:19,680 --> 02:53:21,360
Oh, my God.

2392
02:53:21,360 --> 02:53:24,640
Okay, so

2393
02:53:24,960 --> 02:53:27,040
create an error list of brains.

2394
02:53:28,200 --> 02:53:38,560
Maybe next time I will add this.

2395
02:53:38,560 --> 02:53:40,800
We will beat the hell out of me.

2396
02:53:40,800 --> 02:53:41,120
If I.

2397
02:53:41,120 --> 02:54:02,880
If I had a tricky.

2398
02:54:02,880 --> 02:54:05,920
So if any drink has a letter e

2399
02:54:08,800 --> 02:54:14,240
or E, it should be replaced with water.

2400
02:54:14,800 --> 02:54:15,480
Okay.

2401
02:54:15,680 --> 02:54:18,240
So in this operation, guys, might changing

2402
02:54:18,240 --> 02:54:20,360
the size of the list

2403
02:54:25,160 --> 02:54:27,600
so no

2404
02:54:28,080 --> 02:54:31,680
and will only be accessing elements.

2405
02:54:31,680 --> 02:54:36,720
Or I also need to update the elements
inside the list for this task

2406
02:54:38,400 --> 02:54:39,240
update as well.

2407
02:54:39,240 --> 02:54:42,920
Right. So should I use enhance for law.

2408
02:54:42,920 --> 02:54:45,080
Can I use enhance for look for this task

2409
02:54:48,160 --> 02:54:49,560
can enhance loop.

2410
02:54:49,560 --> 02:54:55,800
Help us update the elements as well.

2411
02:54:55,800 --> 02:54:59,560
We only access the elements
using that list

2412
02:54:59,800 --> 02:55:02,360
that loop right for each.

2413
02:55:02,880 --> 02:55:03,560
We use.

2414
02:55:03,560 --> 02:55:07,280
It will only access,
not update for update.

2415
02:55:08,280 --> 02:55:13,560
And because we are not using,
we are not changing the size of the list.

2416
02:55:13,560 --> 02:55:15,760
I can use this simple follow. Right.

2417
02:55:15,920 --> 02:55:18,120
So looking for the comment
out here as well.

2418
02:55:18,120 --> 02:55:22,080
So a lot

2419
02:55:22,320 --> 02:55:25,320
changing the size of the list

2420
02:55:26,360 --> 02:55:32,520
and updating the elements so

2421
02:55:33,640 --> 02:55:37,560
we don't use

2422
02:55:39,000 --> 02:55:41,800
enhanced for

2423
02:55:43,480 --> 02:55:44,680
Lambda.

2424
02:55:45,240 --> 02:55:45,960
Yes, I can.

2425
02:55:45,960 --> 02:55:52,280
We can do it with Lambda.

2426
02:55:52,280 --> 02:55:58,760
So I see at least size.

2427
02:55:58,760 --> 02:56:02,880
So most probably
we will be learning about the maps.

2428
02:56:03,720 --> 02:56:05,520
We will be having an extra class.

2429
02:56:05,520 --> 02:56:07,400
I will teach you about lambdas

2430
02:56:09,240 --> 02:56:11,000
because you guys were confused.

2431
02:56:11,000 --> 02:56:14,280
So it's one.

2432
02:56:14,280 --> 02:56:19,560
And so we will not be having time to
complete all class or maps, but it's fine.

2433
02:56:20,000 --> 02:56:25,920
I will arrange an extra session for next.

2434
02:56:25,920 --> 02:56:31,720
You know, understanding is more important
than just coding the concepts.

2435
02:56:31,720 --> 02:56:34,560
So like I do,

2436
02:56:36,360 --> 02:56:39,640
I can see if

2437
02:56:43,280 --> 02:56:46,080
if at least

2438
02:56:46,080 --> 02:56:49,840
to get
So I get all the elements one by one

2439
02:56:51,800 --> 02:56:53,760
if they contains.

2440
02:56:53,760 --> 02:56:57,720
So I need to convert it to

2441
02:56:58,920 --> 02:57:02,400
lowercase as the likes for better results

2442
02:57:02,840 --> 02:57:05,680
so that I can get a uppercase or yes.

2443
02:57:06,240 --> 02:57:09,240
So at at least don't get

2444
02:57:09,240 --> 02:57:11,480
I get all the words one by one.

2445
02:57:11,640 --> 02:57:16,640
I convert them to lowercase,
then I check if that word contains

2446
02:57:16,640 --> 02:57:18,000
the letter

2447
02:57:19,720 --> 02:57:23,360
E right.

2448
02:57:23,360 --> 02:57:23,840
Okay.

2449
02:57:24,480 --> 02:57:27,960
So what

2450
02:57:28,880 --> 02:57:32,080
are or the letter

2451
02:57:33,920 --> 02:57:37,760
E, right.

2452
02:57:37,760 --> 02:57:38,040
Okay.

2453
02:57:38,320 --> 02:57:41,760
So I use or

2454
02:57:42,600 --> 02:57:45,240
by the way,
there is another way to do this

2455
02:57:47,640 --> 02:57:49,000
using

2456
02:57:53,720 --> 02:57:55,600
the regular expressions

2457
02:57:55,600 --> 02:57:58,200
in which you don't have to write
this condition twice.

2458
02:57:58,720 --> 02:58:01,200
But, but let's not go there.

2459
02:58:01,200 --> 02:58:05,080
So if the letter contains error

2460
02:58:05,640 --> 02:58:07,160
and e

2461
02:58:08,880 --> 02:58:13,680
then we want to replace that special

2462
02:58:15,360 --> 02:58:16,680
drink with water.

2463
02:58:16,680 --> 02:58:18,960
So how can replace it.

2464
02:58:18,960 --> 02:58:21,200
I use the

2465
02:58:21,200 --> 02:58:24,240
at least dot statement.

2466
02:58:24,240 --> 02:58:24,960
Third,

2467
02:58:25,800 --> 02:58:29,640
I specify the and next and specify the

2468
02:58:32,680 --> 02:58:35,280
length with which I want to replace.

2469
02:58:35,640 --> 02:58:36,480
Right.

2470
02:58:37,440 --> 02:58:39,240
And that's it.

2471
02:58:39,320 --> 02:58:58,400
After they are replaced,
I can print out that.

2472
02:58:58,400 --> 02:58:59,840
So do you mean you were first

2473
02:58:59,840 --> 02:59:05,360
to removing the elements
and then adding new elements?

2474
02:59:05,360 --> 02:59:08,280
So that's why we have this set dramatic,
right?

2475
02:59:08,760 --> 02:59:15,920
It performs both of these operations.

2476
02:59:15,920 --> 02:59:18,720
Yes. Dammit, there is a shortcut way

2477
02:59:31,880 --> 02:59:36,080
to word insert the OR within the first

2478
02:59:37,120 --> 02:59:39,760
word.

2479
02:59:39,760 --> 02:59:45,720
You mean in here? Yes.

2480
02:59:46,000 --> 02:59:46,920
So let me show you.

2481
02:59:46,920 --> 02:59:49,360
It's it's not that difficult.

2482
02:59:51,240 --> 02:59:54,040
So one trick that I have been using,

2483
02:59:54,040 --> 02:59:57,280
if you don't want to go in to

2484
02:59:57,760 --> 03:00:06,000
details, what you guys can do,

2485
03:00:06,000 --> 03:00:09,360
you guys can say the place

2486
03:00:11,800 --> 03:00:14,920
to replace all of

2487
03:00:15,800 --> 03:00:19,800
and you remember
inside the lambda expressions

2488
03:00:26,320 --> 03:00:36,440
that we can specify

2489
03:00:36,440 --> 03:00:38,640
multiple characters

2490
03:00:58,880 --> 03:00:59,880
but just

2491
03:01:01,720 --> 03:01:05,160
more useful when you have

2492
03:01:06,720 --> 03:01:09,120
multiple characters
for which you are checking.

2493
03:01:09,120 --> 03:01:11,640
For example,
any other characters like this.

2494
03:01:11,960 --> 03:01:15,280
Then instead of writing

2495
03:01:15,280 --> 03:01:20,320
all of the characters, if

2496
03:01:21,920 --> 03:01:24,960
I have been doing programing
for the last seven years,

2497
03:01:25,240 --> 03:01:31,240
that's why everything is on my fingertips.

2498
03:01:31,240 --> 03:01:36,000
You can you do contains E
and and that means

2499
03:01:36,000 --> 03:01:40,280
if both the letters are present,
then you will be in this condition.

2500
03:01:40,280 --> 03:01:41,920
Then only it will be true.

2501
03:01:43,440 --> 03:01:47,640
Yes, we can do the.

2502
03:01:47,640 --> 03:01:51,640
So this is another way of doing that
right.

2503
03:01:51,880 --> 03:01:58,480
And I am.

2504
03:01:58,480 --> 03:02:00,560
I am duplicating the elements.

2505
03:02:02,120 --> 03:02:04,240
But I hope 90%

2506
03:02:04,240 --> 03:02:08,920
you have not understood
what is going on in here.

2507
03:02:08,920 --> 03:02:15,480
Do you guys understand
what is going on inside this condition?

2508
03:02:15,480 --> 03:02:19,520
Okay, imagine we never coded this part.

2509
03:02:21,000 --> 03:02:24,560
No one, I mean, takes some time.

2510
03:02:24,560 --> 03:02:27,520
It's not that difficult.

2511
03:02:27,520 --> 03:02:35,040
It's.

2512
03:02:35,040 --> 03:02:37,360
Here we go. Damn it. Perfect.

2513
03:02:37,360 --> 03:02:40,760
If I delete A and E, the size will change

2514
03:02:41,400 --> 03:02:44,240
and it will be less
than the original size.

2515
03:02:44,240 --> 03:02:44,960
Right?

2516
03:02:44,960 --> 03:02:48,040
There's how I know that the letters
and ever present

2517
03:02:51,240 --> 03:02:56,240
only them here has underscore like.

2518
03:02:56,240 --> 03:02:58,320
Okay,

2519
03:02:58,720 --> 03:03:01,200
yes, let me copy paste this.

2520
03:03:01,200 --> 03:03:03,320
So this code is all inside

2521
03:03:03,320 --> 03:03:21,320
out of them.

2522
03:03:21,320 --> 03:03:23,160
So if I comment this out

2523
03:03:33,480 --> 03:03:38,160
so I now get all the same results.

2524
03:03:38,640 --> 03:03:41,560
So let me tell you nice.

2525
03:03:41,560 --> 03:03:44,640
Because when you guys will be writing
real life programs,

2526
03:03:44,640 --> 03:03:48,600
we will be putting tons of method
called inside of the same line.

2527
03:03:49,080 --> 03:03:53,680
I am calling one, two, three, four,
five, six.

2528
03:03:53,680 --> 03:03:57,800
I am calling six methods on the same line
and then manipulating the results.

2529
03:03:58,440 --> 03:04:00,840
So that's why it is confusing for you.

2530
03:04:00,840 --> 03:04:04,560
So what I am doing in here,

2531
03:04:04,560 --> 03:04:08,920
I get all the letters one by one.

2532
03:04:08,920 --> 03:04:11,840
So for example, I get this D,

2533
03:04:11,840 --> 03:04:15,880
I get this t I converted to lowercase

2534
03:04:16,560 --> 03:04:19,360
and then I replace the E

2535
03:04:19,360 --> 03:04:23,040
and E with the nothing,
which means they will be removed.

2536
03:04:23,040 --> 03:04:24,840
So I will only be left with the T.

2537
03:04:24,840 --> 03:04:28,760
Is this
is this point clear till this point?

2538
03:04:28,760 --> 03:04:30,560
Is it clear till this point?

2539
03:04:30,560 --> 03:04:34,960
I get all the elements
I remove and Andy that will reduce

2540
03:04:34,960 --> 03:04:39,240
the size of divide right now
if I call the length length method.

2541
03:04:39,240 --> 03:04:41,120
I will be getting one as the answer.

2542
03:04:42,720 --> 03:04:43,560
Right.

2543
03:04:44,000 --> 03:04:46,160
But what was the original size
of the letter?

2544
03:04:46,680 --> 03:04:49,440
Original Size was three.

2545
03:04:49,440 --> 03:04:50,240
Right?

2546
03:04:50,640 --> 03:04:52,920
So this size has been reduced.

2547
03:04:52,920 --> 03:04:57,560
That means the letters
E and ever present inside this word

2548
03:04:59,200 --> 03:05:03,720
right?

2549
03:05:03,720 --> 03:05:05,760
And that's how I have my condition.

2550
03:05:05,840 --> 03:05:08,760
If the letters were present,
then I am replacing that.

2551
03:05:09,160 --> 03:05:11,880
So I check the original size,

2552
03:05:11,880 --> 03:05:14,960
I get the list again

2553
03:05:14,960 --> 03:05:16,520
and I get the other list.

2554
03:05:16,520 --> 03:05:18,800
Remove the elements
and then compare their sizes.

2555
03:05:19,000 --> 03:05:22,320
If decided to reduce and,
that means the letters were present

2556
03:05:22,920 --> 03:05:25,160
and this condition is now true.

2557
03:05:26,160 --> 03:05:28,600
And now I replaced that. So why? Why?

2558
03:05:28,680 --> 03:05:30,480
We have
why you have followed this approach?

2559
03:05:30,480 --> 03:05:34,600
Because in in in other case,
let's say if you are checking for five

2560
03:05:34,600 --> 03:05:38,600
or ten characters, you have to write
a very lengthy if condition.

2561
03:05:39,480 --> 03:05:41,720
So instead of writing
that lengthy condition.

2562
03:05:41,920 --> 03:05:46,600
So let's say for example
this drinks is not replaced

2563
03:05:46,600 --> 03:05:49,920
so I can put that that s as well in here.

2564
03:05:49,920 --> 03:05:51,360
This will also be replaced.

2565
03:05:51,360 --> 03:05:53,520
I don't have to copy
and paste again and again.

2566
03:05:54,720 --> 03:05:55,480
Yes, it is

2567
03:05:55,480 --> 03:05:58,440
more useful
if there are more than two letters

2568
03:05:58,560 --> 03:06:05,320
that you are trying to replace.

2569
03:06:05,320 --> 03:06:07,560
You see that that has also replaced.

2570
03:06:07,720 --> 03:06:10,200
So there almost everything is replaced

2571
03:06:11,640 --> 03:06:14,040
because all the letters contains e or

2572
03:06:14,040 --> 03:06:19,720
S, So this is regular expressions.

2573
03:06:19,720 --> 03:06:22,840
Maryam When we put B, e, e

2574
03:06:22,840 --> 03:06:27,680
and S inside these square brackets,
it means this or condition,

2575
03:06:28,680 --> 03:06:33,160
it means this or condition.

2576
03:06:33,160 --> 03:06:38,600
This means either the letter is present
or E is present or S is present.

2577
03:06:38,600 --> 03:06:41,000
Replace any of these.

2578
03:06:41,000 --> 03:06:47,600
If any one these is present
replaced for the or.

2579
03:06:47,600 --> 03:06:49,640
Okay,

2580
03:06:51,240 --> 03:06:56,040
So I have created some
so I have created some ripples

2581
03:06:56,160 --> 03:07:00,520
based on the interview questions
that previous students use.

2582
03:07:00,720 --> 03:07:03,440
I have have got in their interviews.

2583
03:07:03,440 --> 03:07:07,080
I have created ripples out of all
those interview questions, common ones.

2584
03:07:07,640 --> 03:07:12,280
And after the next week
I will release those ripples as but

2585
03:07:12,320 --> 03:07:14,680
so you guys can test
your knowledge and can test

2586
03:07:16,120 --> 03:07:17,640
how much more practice

2587
03:07:17,640 --> 03:07:24,080
you need for Java.

2588
03:07:24,080 --> 03:07:31,760
Or should we move to the next task,

2589
03:07:31,760 --> 03:07:32,760
which

2590
03:07:45,160 --> 03:07:46,320
next week is last

2591
03:07:46,320 --> 03:07:53,640
for Java?

2592
03:07:53,640 --> 03:07:55,840
I mean,
you guys will be writing the Java code

2593
03:07:56,720 --> 03:07:59,120
throughout this course
and for the rest of your life

2594
03:07:59,120 --> 03:08:22,040
if you are going to be an automation
engineer, I will teach Squirrel

2595
03:08:22,040 --> 03:08:26,040
and Jenkins and then I will prepare you
for your interview.

2596
03:08:26,040 --> 03:08:28,480
I will sit with your coding pads.

2597
03:08:28,920 --> 03:08:32,080
But don't tell this to anyone

2598
03:08:39,720 --> 03:08:41,920
because we had ten task.

2599
03:08:41,920 --> 03:08:44,880
I think we will have today's class
only doing those tasks.

2600
03:08:44,880 --> 03:08:45,640
It's fine.

2601
03:08:45,640 --> 03:08:48,920
It's fine if you guys, those
who are comfortable, the tasks

2602
03:08:49,800 --> 03:08:51,720
you guys can leave if you want.

2603
03:08:51,720 --> 03:08:55,400
But I don't want to rush
and I want to spend some time

2604
03:08:55,400 --> 03:09:02,640
on regular expressions.

2605
03:09:02,640 --> 03:09:06,960
Come to our selenium classes also.

2606
03:09:06,960 --> 03:09:11,440
Yes, the reviews will still be there.

2607
03:09:11,440 --> 03:09:17,120
Okay.

2608
03:09:17,120 --> 03:09:18,680
Are you guys done writing the code

2609
03:09:21,240 --> 03:09:21,960
in reviews?

2610
03:09:21,960 --> 03:09:27,120
I, I have planned something else
to page you a little bit in-depth.

2611
03:09:27,120 --> 03:09:30,320
Knowledge of collections, framework
and dealing

2612
03:09:30,320 --> 03:09:36,560
with objects.

2613
03:09:36,560 --> 03:09:37,920
How, how, how.

2614
03:09:37,920 --> 03:09:40,080
How is your selenium classes going?

2615
03:09:40,080 --> 03:09:44,280
Are they confusing fun?

2616
03:09:44,280 --> 03:09:47,640
Easy to learn, hard

2617
03:09:48,640 --> 03:09:50,200
remembering a lot of syntax,

2618
03:09:50,200 --> 03:09:54,760
right?

2619
03:09:54,760 --> 03:09:58,320
Will there deeper knowledge

2620
03:10:00,480 --> 03:10:02,600
learning those x spots right

2621
03:10:03,760 --> 03:10:06,120
or less for me,

2622
03:10:06,120 --> 03:10:13,840
not easy.

2623
03:10:13,840 --> 03:10:18,120
And doing real things is always better.

2624
03:10:18,120 --> 03:10:19,640
Better than Java.

2625
03:10:19,640 --> 03:10:23,640
Here we go.

2626
03:10:23,640 --> 03:10:25,200
Okay.

2627
03:10:28,000 --> 03:10:31,000
I like Java more

2628
03:10:32,320 --> 03:10:34,720
fast for

2629
03:10:41,440 --> 03:10:42,840
right here in Java.

2630
03:10:42,840 --> 03:10:43,600
For real.

2631
03:10:43,600 --> 03:10:45,160
It starts

2632
03:10:47,040 --> 03:10:49,400
worse than Java

2633
03:10:52,320 --> 03:10:53,160
spasticity

2634
03:10:53,160 --> 03:10:58,760
because the rest of your life
will be with Java.

2635
03:10:58,760 --> 03:11:03,000
So I will not suggest
to use these kind of words for Java

2636
03:11:03,000 --> 03:11:07,880
because if it here's to you
those words, your life will be very tough

2637
03:11:15,360 --> 03:11:16,800
to start, right?

2638
03:11:16,800 --> 03:11:20,680
I guess for more classes
and you guys will be done with selenium.

2639
03:11:21,360 --> 03:11:26,160
That's it.

2640
03:11:26,160 --> 03:11:26,800
Oh yes.

2641
03:11:26,800 --> 03:11:39,760
I am planning to visit Amazon
for that roster.

2642
03:11:39,760 --> 03:11:41,400
Okay, so create there.

2643
03:11:41,400 --> 03:11:43,560
There used to be a roster with me as well.

2644
03:11:43,960 --> 03:11:47,800
I think it was in batch. It

2645
03:11:47,800 --> 03:11:49,120
and then

2646
03:11:49,480 --> 03:11:53,760
it disappeared.

2647
03:11:53,760 --> 03:11:55,920
It's now part of me

2648
03:11:58,240 --> 03:12:13,040
just right

2649
03:12:16,360 --> 03:12:17,680
you give that

2650
03:12:17,680 --> 03:12:20,880
will create an array list of even numbers

2651
03:12:22,560 --> 03:12:25,480
from 1 to 50 right

2652
03:12:27,360 --> 03:12:31,480
and remove any number that is divisible

2653
03:12:31,520 --> 03:12:36,800
by five from that list. So

2654
03:12:46,520 --> 03:12:47,760
so first

2655
03:12:47,760 --> 03:12:51,160
I have to populate a list

2656
03:12:52,320 --> 03:12:55,000
that has all the even numbers, right?

2657
03:12:55,000 --> 03:12:57,920
So what I can do,

2658
03:12:57,920 --> 03:13:00,360
I can create and edit list

2659
03:13:03,160 --> 03:13:06,160
what should be the data type guys,
What should be there.

2660
03:13:06,240 --> 03:13:07,320
Right. For this task

2661
03:13:10,520 --> 03:13:11,920
in pride.

2662
03:13:11,920 --> 03:13:18,840
Oh, but I get an editor for in.

2663
03:13:18,840 --> 03:13:23,880
I cannot use the primitive data types

2664
03:13:30,600 --> 03:13:34,560
with collections particular so

2665
03:13:42,960 --> 03:13:44,440
so now

2666
03:13:44,440 --> 03:13:49,240
I have to populate this list
so I save for I.

2667
03:13:49,240 --> 03:13:52,080
I start from B to

2668
03:13:54,360 --> 03:13:57,680
mean it should be

2669
03:13:58,800 --> 03:14:02,280
50 right

2670
03:14:03,040 --> 03:14:05,760
less than equal to and then

2671
03:14:05,760 --> 03:14:08,960
I is equal to I plus two

2672
03:14:10,680 --> 03:14:13,320
and then I say or numbers don't add.

2673
03:14:13,480 --> 03:14:17,080
I but you guys understand

2674
03:14:17,080 --> 03:14:20,640
what is how
I will get all the order numbers.

2675
03:14:20,640 --> 03:14:30,320
What is this
I is equal to plus two boys don't.

2676
03:14:30,320 --> 03:14:32,000
Oh there should be one numbers.

2677
03:14:32,000 --> 03:14:33,520
Yep. That's

2678
03:14:37,160 --> 03:14:40,080
if even number.

2679
03:14:40,120 --> 03:14:43,080
So if I execute this

2680
03:14:45,840 --> 03:14:46,400
problem

2681
03:14:48,000 --> 03:14:50,840
I get all the even numbers in here

2682
03:14:52,000 --> 03:14:52,920
right.

2683
03:14:52,920 --> 03:14:54,960
So this is one of the ways
of doing things.

2684
03:14:55,120 --> 03:15:00,640
You can increment
the I twice for you can use I modulus two

2685
03:15:00,640 --> 03:15:04,440
if that is equal to zero,
then you put that element.

2686
03:15:04,800 --> 03:15:08,920
But in that case, you guys are doing extra
steps, right?

2687
03:15:08,920 --> 03:15:14,600
It's always good to reduce
the number of steps that your computer

2688
03:15:14,600 --> 03:15:19,920
has to go, both to go to go to,
so it will increase your performance.

2689
03:15:20,960 --> 03:15:22,920
So instead of putting that, if condition

2690
03:15:22,920 --> 03:15:26,680
then checking each number
and looping through 50 elements,

2691
03:15:27,120 --> 03:15:30,000
I am only looping through 25 elements

2692
03:15:30,000 --> 03:15:35,880
and I am not writing any
if conditions right.

2693
03:15:35,880 --> 03:15:39,360
So imagine if you have to do it for 1
million entries.

2694
03:15:40,000 --> 03:15:45,360
Do you mean in your case you will be going
through all 1 million entries right

2695
03:15:45,560 --> 03:15:50,000
then checking all those 1 million entries
and then inserting inside the list.

2696
03:15:51,120 --> 03:15:53,400
It's also good at this point.

2697
03:15:53,400 --> 03:15:54,000
It's also good.

2698
03:15:54,000 --> 03:15:57,960
I'm not saying it's about did you change
the order number to even number at once.

2699
03:15:58,440 --> 03:15:59,880
So it is

2700
03:16:00,240 --> 03:16:03,160
shift and f6 on your keyboard.

2701
03:16:04,560 --> 03:16:07,240
It's called refactor

2702
03:16:07,880 --> 03:16:10,280
and everywhere we are this

2703
03:16:10,640 --> 03:16:14,040
the variable value is used now A now

2704
03:16:14,280 --> 03:16:18,120
they will change that variable inside

2705
03:16:18,120 --> 03:16:22,440
all of the code,
even if it is used 50 million times.

2706
03:16:22,440 --> 03:16:27,880
So all those 50
million entries will be replaced.

2707
03:16:27,880 --> 03:16:32,040
You can also do this by right clicking
and then refactor and then rename

2708
03:16:40,640 --> 03:16:41,720
and got it.

2709
03:16:42,240 --> 03:16:48,640
Okay, so
once I have all the numbers in here guys,

2710
03:16:48,640 --> 03:16:51,720
now I have to remove any numbers

2711
03:16:51,840 --> 03:16:55,280
that is divisible by five from the list.

2712
03:16:55,520 --> 03:16:56,000
Now what?

2713
03:16:56,000 --> 03:16:59,800
One way of doing this
is I remove the elements.

2714
03:17:00,200 --> 03:17:02,600
I don't even add the elements in here.

2715
03:17:02,800 --> 03:17:03,720
Right.

2716
03:17:04,440 --> 03:17:08,240
So in here now I can put condition

2717
03:17:09,200 --> 03:17:11,760
right in here

2718
03:17:11,760 --> 03:17:15,120
and then I don't actually add
of those elements.

2719
03:17:15,120 --> 03:17:17,960
Well, why would I add those elements
at the first place?

2720
03:17:17,960 --> 03:17:24,440
But I explicitly wrote this line
so that first you guys create a list

2721
03:17:24,440 --> 03:17:32,320
and then I trade through that list again
to remove those elements.

2722
03:17:32,320 --> 03:17:34,560
I created this list manually. I

2723
03:17:37,800 --> 03:17:41,400
literally created a list manually,

2724
03:17:43,400 --> 03:17:47,520
but I wrote the Me too.

2725
03:17:48,160 --> 03:17:50,920
I want to have a salute for you ladies.

2726
03:17:51,920 --> 03:17:53,280
What if I put 200?

2727
03:17:53,280 --> 03:18:00,240
Like you will be doing this
amend with you 400 as well.

2728
03:18:00,240 --> 03:18:01,680
What's the point of teaching?

2729
03:18:01,680 --> 03:18:06,880
You look
well if you have to do it manually.

2730
03:18:06,880 --> 03:18:09,040
We are not looking for an easier way.

2731
03:18:10,320 --> 03:18:14,040
That's more time for the task

2732
03:18:15,520 --> 03:18:20,120
as long as it words don't take it.

2733
03:18:20,120 --> 03:18:23,400
Maybe I should add

2734
03:18:23,400 --> 03:18:26,200
using a loop as well for the next batch.

2735
03:18:28,080 --> 03:18:29,600
And maybe I should add

2736
03:18:29,600 --> 03:18:31,880
maybe, maybe I should do it to 500.

2737
03:18:32,400 --> 03:18:37,200
Then this students will think,
How can we do it for 500 numbers?

2738
03:18:37,200 --> 03:18:38,440
Right? Maybe that.

2739
03:18:38,440 --> 03:18:43,920
But then again,
maybe then they will use their mind.

2740
03:18:43,920 --> 03:18:44,720
Right.

2741
03:18:45,600 --> 03:18:48,440
Let me that

2742
03:18:57,240 --> 03:18:59,280
it is this task

2743
03:19:06,360 --> 03:19:16,760
application.

2744
03:19:16,760 --> 03:19:18,960
Okay. Let's see
what happens in the next batch.

2745
03:19:18,960 --> 03:19:22,440
And I will explicitly ask
from the students what they have done

2746
03:19:22,440 --> 03:19:26,280
for this.

2747
03:19:26,280 --> 03:19:27,360
I did manually too.

2748
03:19:27,360 --> 03:19:29,640
And after that I think it's not good. We

2749
03:19:32,480 --> 03:19:33,400
okay, It's fine.

2750
03:19:33,400 --> 03:19:34,480
It's fine.

2751
03:19:35,520 --> 03:19:37,360
But you should click your mind.

2752
03:19:37,360 --> 03:19:42,720
It should click your mind.

2753
03:19:42,720 --> 03:19:45,960
You are always more than welcome to ask

2754
03:19:45,960 --> 03:19:48,120
this kind of things in this sports journal

2755
03:19:49,520 --> 03:19:50,640
articles.

2756
03:19:50,640 --> 03:19:54,400
First, it should click your mind
that you are not doing something right,

2757
03:19:56,000 --> 03:19:57,720
and then you can consult your friends

2758
03:19:57,720 --> 03:20:00,360
and ask someone else
maybe what approach they have used.

2759
03:20:02,000 --> 03:20:04,560
But in your case
I say if you would have asked

2760
03:20:04,560 --> 03:20:07,760
and and then and I'll ask someone else.

2761
03:20:07,760 --> 03:20:09,360
You'll get that right.

2762
03:20:09,360 --> 03:20:12,520
You will be very happy
that all everybody is doing it manually.

2763
03:20:12,960 --> 03:20:15,920
Let's do it manually.

2764
03:20:16,240 --> 03:20:20,000
If Okay.

2765
03:20:20,000 --> 03:20:22,480
So I was just kidding. It's fine.

2766
03:20:23,040 --> 03:20:25,200
It happened some time.

2767
03:20:25,760 --> 03:20:27,760
So now I have to remove

2768
03:20:27,760 --> 03:20:30,280
the elements from this list.

2769
03:20:31,720 --> 03:20:32,560
Yep. Now.

2770
03:20:32,560 --> 03:20:37,600
Now I think you guys will remember
it forever, because now

2771
03:20:38,920 --> 03:20:41,200
you will
always try to look for better ways.

2772
03:20:42,240 --> 03:20:44,640
So that's why I saw all the gasp in the

2773
03:20:46,040 --> 03:20:46,920
classes.

2774
03:20:46,960 --> 03:20:49,640
So, guys, this removing thing

2775
03:20:49,640 --> 03:20:58,160
will change the size of my list.

2776
03:20:58,160 --> 03:21:00,600
So what should I use?

2777
03:21:00,720 --> 03:21:03,720
If you can change this side of list

2778
03:21:09,000 --> 03:21:11,440
I hear me use and I create the

2779
03:21:16,600 --> 03:21:18,680
what should be the data
type inside the site rate.

2780
03:21:18,680 --> 03:21:19,600
Today's

2781
03:21:24,920 --> 03:21:27,000
in beta, right?

2782
03:21:27,000 --> 03:21:33,680
Because we are dealing with numbers now
a beta equal to new.

2783
03:21:34,320 --> 03:21:38,160
And then I can see

2784
03:21:39,000 --> 03:21:41,400
not me, I can say even number

2785
03:21:41,840 --> 03:21:43,120
I triple

2786
03:21:47,360 --> 03:21:48,360
delete them manually

2787
03:21:48,360 --> 03:21:51,600
by using remove one by one.

2788
03:21:51,600 --> 03:21:56,080
Yes, I said so did
you guys also removed manually one by one

2789
03:21:56,680 --> 03:21:59,240
by specifying 50 or something like that?

2790
03:22:01,000 --> 03:22:04,480
Or do you guys use the look for that?

2791
03:22:04,480 --> 03:22:16,840
No, we are not at all in here.

2792
03:22:17,040 --> 03:22:21,120
You guys have used the looks.

2793
03:22:21,120 --> 03:22:22,160
So while

2794
03:22:25,520 --> 03:22:26,240
I will be

2795
03:22:26,240 --> 03:22:29,280
given the first task on the company
and the manager will ask

2796
03:22:30,120 --> 03:22:34,480
how much time you need, I will say,
let me let me go through the task

2797
03:22:35,080 --> 03:22:37,560
and then I, I will get back to you

2798
03:22:38,280 --> 03:22:41,960
and I can looks at the task
or let's do it manually.

2799
03:22:42,240 --> 03:22:46,440
It will take 50
is let's let's ask what 55 years

2800
03:22:46,440 --> 03:22:48,160
from the manager

2801
03:22:50,400 --> 03:22:52,920
that has next

2802
03:22:55,920 --> 03:22:57,560
I'm just kidding

2803
03:22:57,960 --> 03:23:00,600
a lifetime job yet

2804
03:23:00,600 --> 03:23:02,800
by the way I have done this literally

2805
03:23:03,360 --> 03:23:06,240
they give me a very useless task

2806
03:23:06,520 --> 03:23:10,240
and they asked me for the timeline
and I said it will take three months.

2807
03:23:10,800 --> 03:23:13,360
And I literally took three months

2808
03:23:13,360 --> 03:23:17,120
for that task
because it was all repetitive.

2809
03:23:17,120 --> 03:23:20,240
Same task again and again and again. It's

2810
03:23:25,280 --> 03:23:27,120
so if

2811
03:23:29,800 --> 03:23:32,160
so I say integer

2812
03:23:32,160 --> 03:23:34,560
number is equal to

2813
03:23:36,040 --> 03:23:38,040
hydrator dot next.

2814
03:23:38,040 --> 03:23:41,520
If that number

2815
03:23:42,640 --> 03:23:47,200
is divisible by five,

2816
03:23:47,200 --> 03:23:49,880
I will be getting the modulus and zero.

2817
03:23:51,640 --> 03:23:54,960
Then I say I try to start putting more

2818
03:23:59,280 --> 03:24:02,240
and I printout

2819
03:24:02,240 --> 03:24:04,480
the again

2820
03:24:09,560 --> 03:24:10,680
and yes logo.

2821
03:24:10,680 --> 03:24:13,840
You guys are genius.

2822
03:24:13,840 --> 03:24:14,800
You guys are genius.

2823
03:24:14,800 --> 03:24:17,160
You are already using them expressions.
Right?

2824
03:24:17,200 --> 03:24:21,040
Reducing one, two, three, four,

2825
03:24:21,040 --> 03:24:26,520
five, 5 to 6 lines of code
you are guys are doing simply in line

2826
03:24:26,520 --> 03:24:30,360
nine 2920

2827
03:24:30,360 --> 03:24:33,600
in here
I am dividing each number by by five.

2828
03:24:34,280 --> 03:24:36,600
If the answer is the remainder is zero.

2829
03:24:36,600 --> 03:24:40,320
I mean the number is divisible by five
and I am removing that.

2830
03:24:41,560 --> 03:24:44,600
Not 21, 20 or 21.

2831
03:24:46,080 --> 03:24:50,200
Yes, in 21 I am doing this
dividing each number by five.

2832
03:24:50,880 --> 03:24:54,000
If the remainder is zero,
that means the number is divisible,

2833
03:24:54,000 --> 03:25:00,000
completely divisible by that number number
is completely divisible by five.

2834
03:25:00,000 --> 03:25:00,960
And I remove that

2835
03:25:02,400 --> 03:25:04,440
I mean 2020.

2836
03:25:04,440 --> 03:25:07,800
I am only getting the elements
one by one using the next

2837
03:25:12,480 --> 03:25:14,160
line. 20.

2838
03:25:14,160 --> 03:25:16,680
I am getting all the elements one by one

2839
03:25:16,680 --> 03:25:19,080
and storing inside number variable.

2840
03:25:20,800 --> 03:25:22,320
Is it clear

2841
03:25:42,480 --> 03:25:42,880
moment?

2842
03:25:42,880 --> 03:25:46,040
Is it clear? Yes.

2843
03:25:46,040 --> 03:25:49,280
I was wondering
if integer needs to be gone

2844
03:25:49,320 --> 03:25:52,320
consistent and not used in.

2845
03:25:53,200 --> 03:25:55,000
No, you can using you.

2846
03:25:55,000 --> 03:25:58,160
You remember that
concept of wrapping and unwrapping,

2847
03:25:59,040 --> 03:26:02,760
not wrapping, boxing and unboxing.

2848
03:26:02,760 --> 03:26:06,560
So now I will automatically the data types

2849
03:26:06,560 --> 03:26:10,760
if they are the corresponding ones
from wrapper to primitive and primitive.

2850
03:26:11,040 --> 03:26:14,720
So you can use the integer as well.

2851
03:26:14,720 --> 03:26:34,440
Okay, now let's have a break.

2852
03:26:34,440 --> 03:26:41,160
Next.

2853
03:26:41,160 --> 03:26:44,200
That also works

2854
03:26:44,200 --> 03:26:44,560
because

2855
03:26:46,400 --> 03:26:47,520
yes are enough.

2856
03:26:47,520 --> 03:26:49,080
It also works. It's also good.

2857
03:26:49,080 --> 03:26:53,760
What I explicitly wanted you guys
to write a separate loop to remove.

2858
03:26:54,040 --> 03:26:56,720
So first add and then remove it.

2859
03:26:56,760 --> 03:27:06,720
But it's also fine
if you guys followed this approach.

2860
03:27:06,720 --> 03:27:08,640
All right, guys, please be back before too

2861
03:27:09,800 --> 03:27:10,520
many questions.

2862
03:27:10,520 --> 03:27:12,120
Before we leave.

2863
03:27:12,120 --> 03:27:13,600
I just

2864
03:27:43,400 --> 03:27:44,480
I just wanted to have

2865
03:27:44,480 --> 03:27:47,040
you have some practice with that later.

2866
03:27:47,480 --> 03:27:48,960
That's why I am doing it.

2867
03:27:48,960 --> 03:27:54,360
Additionally, otherwise,
this approach is more efficient.

2868
03:27:54,360 --> 03:27:56,000
No questions.

2869
03:27:56,000 --> 03:28:00,520
Okay.

2870
03:28:00,520 --> 03:28:24,120
Please be back by back to well.

2871
03:28:24,120 --> 03:28:26,360
And you guys sent me
the statement for task five

2872
03:29:19,920 --> 03:29:20,280
here.

2873
03:29:20,280 --> 03:29:24,200
The class insurance
that will have an attribute

2874
03:29:24,560 --> 03:29:28,680
the insurance name and implement
the behavior

2875
03:29:28,920 --> 03:29:33,960
as net code.

2876
03:29:33,960 --> 03:29:35,960
So let me

2877
03:29:36,000 --> 03:29:38,960
change this name

2878
03:29:39,240 --> 03:29:42,880
to insurance.

2879
03:29:42,880 --> 03:29:43,160
Okay.

2880
03:29:43,160 --> 03:29:46,160
The name of this class

2881
03:30:04,640 --> 03:30:05,400
create a class

2882
03:30:05,400 --> 03:30:07,840
that will have an attribute
as the insurance name.

2883
03:30:09,440 --> 03:30:11,560
So Let's create a glove

2884
03:30:12,320 --> 03:30:15,920
attribute insurance name

2885
03:30:16,360 --> 03:30:18,800
and unimplemented behavior

2886
03:30:18,800 --> 03:30:26,760
as in that code for.

2887
03:30:26,760 --> 03:30:29,160
So what would be the return type
of this matter?

2888
03:30:29,200 --> 03:30:39,000
Guys, I'm asking about the return type

2889
03:30:39,960 --> 03:30:40,440
so it can

2890
03:30:40,440 --> 03:30:44,400
be logged or it can be a double
that returns the code.

2891
03:30:44,400 --> 03:30:46,600
Okay, so let's do it.

2892
03:30:46,600 --> 03:30:50,400
So I first just specify the

2893
03:30:52,120 --> 03:30:54,680
access modifiers, right?

2894
03:30:54,680 --> 03:30:57,880
So if I check, there is no information

2895
03:30:57,880 --> 03:31:01,280
of abstract on, on the access modifier.

2896
03:31:01,280 --> 03:31:04,080
So let's use public

2897
03:31:04,080 --> 03:31:07,040
and then let's get for the non
abstract modifiers.

2898
03:31:08,760 --> 03:31:11,280
So we need the

2899
03:31:11,480 --> 03:31:13,560
right as the non access modifier

2900
03:31:16,240 --> 03:31:20,440
and then the method return type
and then the method name.

2901
03:31:20,800 --> 03:31:23,480
So get group

2902
03:31:28,080 --> 03:31:28,720
right.

2903
03:31:28,960 --> 03:31:43,920
Why I get an error
this class should now be abstract

2904
03:31:44,440 --> 03:31:47,840
because I now have one abstract

2905
03:31:50,440 --> 03:31:51,160
inside

2906
03:31:51,160 --> 03:31:58,680
here.

2907
03:31:58,680 --> 03:32:01,160
Can I make this static?

2908
03:32:01,160 --> 03:32:18,000
Can I use static here?

2909
03:32:18,000 --> 03:32:24,000
So if I try to use static
I get an error. Why?

2910
03:32:24,480 --> 03:32:25,920
Why? I'm getting another date

2911
03:32:56,160 --> 03:32:58,640
because
static didn't go with the abstract.

2912
03:32:58,680 --> 03:33:03,080
If we make static
it will not be inheritance contradiction.

2913
03:33:03,080 --> 03:33:06,720
Static is something that this year
the abstract is something undefined

2914
03:33:07,520 --> 03:33:09,920
until defined.

2915
03:33:10,240 --> 03:33:13,120
Starting born during compile time.

2916
03:33:14,160 --> 03:33:16,520
Then I override static

2917
03:33:16,520 --> 03:33:23,560
methods.

2918
03:33:23,560 --> 03:33:27,400
Then if I cannot override, then
who will be providing the implementation

2919
03:33:27,400 --> 03:33:31,280
right?

2920
03:33:31,280 --> 03:33:34,280
Can I create a constructor
inside this class?

2921
03:33:34,920 --> 03:33:36,360
Inside the abstract class?

2922
03:33:36,360 --> 03:33:41,640
Can I create the constructor?

2923
03:33:41,640 --> 03:33:45,480
Yes. Like.

2924
03:33:45,480 --> 03:33:49,960
So I will now be using
most of the time shortcuts.

2925
03:33:49,960 --> 03:33:53,400
So right now I am using all and insert

2926
03:33:54,320 --> 03:33:57,280
to a constructor

2927
03:33:57,280 --> 03:33:59,280
and I suggest you to start using

2928
03:33:59,280 --> 03:34:02,120
the shortcuts as a

2929
03:34:03,640 --> 03:34:04,160
okay,

2930
03:34:05,000 --> 03:34:07,520
so I have called and then insert.

2931
03:34:08,240 --> 03:34:13,240
Let me repeat, if we guys didn't see it
all, insert constructor then okay.

2932
03:34:13,240 --> 03:34:17,640
And constructor is created.

2933
03:34:17,640 --> 03:34:18,120
Okay.

2934
03:34:19,680 --> 03:34:23,840
Then create three subclasses dog part

2935
03:34:23,960 --> 03:34:32,080
then help you.

2936
03:34:32,080 --> 03:34:36,360
The class bar extends

2937
03:34:37,560 --> 03:34:39,240
insurance

2938
03:34:42,960 --> 03:34:45,400
and has its own attribute

2939
03:34:45,400 --> 03:34:48,160
as call car model, so

2940
03:34:50,160 --> 03:34:53,800
alternate alternate insert

2941
03:34:54,560 --> 03:34:56,840
the string

2942
03:34:58,600 --> 03:35:00,760
or model

2943
03:35:02,480 --> 03:35:05,480
and then I have to implement the method.

2944
03:35:05,480 --> 03:35:05,840
Right?

2945
03:35:05,840 --> 03:35:10,400
Otherwise I will be getting an error.

2946
03:35:10,400 --> 03:35:13,480
So I implement to get called

2947
03:35:13,480 --> 03:35:16,800
this this abstract method
I implement to cancel insurance.

2948
03:35:17,760 --> 03:35:25,000
Mac don't have all these options for Mac,

2949
03:35:25,000 --> 03:35:27,760
but there is no requirement
to have a constructed here.

2950
03:35:28,720 --> 03:35:31,560
You have this insurance
field for hard and here

2951
03:35:33,360 --> 03:35:35,760
whenever you have an instance field,

2952
03:35:36,520 --> 03:35:48,120
you should always create a constructor
for that.

2953
03:35:48,120 --> 03:35:50,520
And then there is non default constructor.

2954
03:35:52,080 --> 03:35:54,720
So constructor is also created

2955
03:35:58,280 --> 03:36:00,240
for this

2956
03:36:00,360 --> 03:36:03,200
car model and

2957
03:36:05,160 --> 03:36:07,440
car model equal to the bottom line.

2958
03:36:08,320 --> 03:36:10,920
Is there any issue in this code,
guys, that I have written

2959
03:36:13,920 --> 03:36:15,040
this line

2960
03:36:20,400 --> 03:36:21,720
is right, otherwise

2961
03:36:21,720 --> 03:36:24,240
Java will not be able to distinguish

2962
03:36:25,080 --> 03:36:27,120
between local

2963
03:36:27,320 --> 03:36:29,440
instance variable 23

2964
03:36:29,480 --> 03:36:39,240
missing This.

2965
03:36:39,240 --> 03:36:46,880
So let me let me implement this.

2966
03:36:46,880 --> 03:36:51,360
That's a code

2967
03:36:53,960 --> 03:36:58,200
for all

2968
03:37:00,120 --> 03:37:01,680
model

2969
03:37:07,480 --> 03:37:09,160
or model

2970
03:37:11,160 --> 03:37:16,160
from insurance name.

2971
03:37:17,120 --> 03:37:17,680
So. All right.

2972
03:37:17,680 --> 03:37:21,120
I don't have this insurance
name inside this class

2973
03:37:21,600 --> 03:37:28,040
from where this insurance name is coming.

2974
03:37:28,040 --> 03:37:30,600
So don't don't I need to put super in here

2975
03:37:31,080 --> 03:37:37,160
or this fine. Why?

2976
03:37:39,000 --> 03:37:39,480
It's fine.

2977
03:37:39,480 --> 03:37:53,400
And when I should use super,

2978
03:37:53,400 --> 03:37:58,240
What if I have the same name field
in here, in there, or still fine.

2979
03:37:58,240 --> 03:38:04,200
Or do I need to use super now?

2980
03:38:04,200 --> 03:38:09,120
Okay, so

2981
03:38:11,520 --> 03:38:15,000
if name name field is

2982
03:38:16,440 --> 03:38:20,520
present in the file and the

2983
03:38:21,840 --> 03:38:23,640
parent class,

2984
03:38:24,000 --> 03:38:30,000
then we could use this

2985
03:38:32,960 --> 03:38:33,560
loop.

2986
03:38:35,520 --> 03:38:45,480
You with the name

2987
03:38:48,560 --> 03:38:54,560
right?

2988
03:38:54,560 --> 03:38:56,040
And then I can write

2989
03:38:57,480 --> 03:38:57,840
a very

2990
03:38:57,840 --> 03:39:29,400
simple implementation,

2991
03:39:29,400 --> 03:39:32,760
then create a pet and health class
as well.

2992
03:39:33,240 --> 03:39:36,600
Create three objects of subclasses
install them in ArrayList

2993
03:39:37,680 --> 03:39:39,880
using for the was for loop

2994
03:39:40,080 --> 03:39:43,400
greater access
all the matters of the class.

2995
03:39:43,520 --> 03:39:50,160
Okay, so let's create the class pet.

2996
03:39:50,160 --> 03:39:54,120
It also extends the insurance class.

2997
03:39:56,000 --> 03:40:00,880
And if it extends the insurance class,

2998
03:40:00,880 --> 03:40:03,400
then what I have to do, I must

2999
03:40:04,600 --> 03:40:06,640
override

3000
03:40:07,840 --> 03:40:08,960
these two methods.

3001
03:40:08,960 --> 03:40:09,720
Right?

3002
03:40:11,040 --> 03:40:15,360
And because our model
is not tethered in here.

3003
03:40:16,200 --> 03:40:18,160
So I must

3004
03:40:19,240 --> 03:40:22,800
back type in here instead of

3005
03:40:24,880 --> 03:40:26,920
our model.

3006
03:40:27,480 --> 03:40:31,360
So model, car model.

3007
03:40:32,000 --> 03:40:35,080
Can you please show me your page?

3008
03:40:35,080 --> 03:40:44,080
Yes. Is it better now?

3009
03:40:44,080 --> 03:40:48,800
Are both creating this something?

3010
03:40:53,160 --> 03:40:55,200
But I

3011
03:40:55,760 --> 03:40:58,640
thought it was important to prototype.

3012
03:41:00,480 --> 03:41:02,640
And now Max called

3013
03:41:02,640 --> 03:41:06,880
for a fact

3014
03:41:10,040 --> 03:41:14,520
type or type

3015
03:41:16,560 --> 03:41:19,800
from this insurance company.

3016
03:41:19,800 --> 03:41:22,320
And then we should create

3017
03:41:22,320 --> 03:41:27,360
the health insurance as well.

3018
03:41:27,360 --> 03:41:28,520
The health class as well.

3019
03:41:28,520 --> 03:41:32,520
So class, health

3020
03:41:32,920 --> 03:41:36,840
and insurance

3021
03:41:40,320 --> 03:41:42,360
override the method

3022
03:41:43,920 --> 03:41:47,080
and have

3023
03:42:00,960 --> 03:42:03,480
no income structure that

3024
03:42:12,360 --> 03:42:14,920
let me know once
you guys are done typing difficult.

3025
03:42:14,920 --> 03:42:42,440
If you are typing it.

3026
03:42:42,440 --> 03:42:45,000
I did it with the constructor and without.

3027
03:42:45,240 --> 03:42:46,920
Is that okay?

3028
03:42:46,920 --> 03:42:51,360
It's okay, but not a good practice.

3029
03:42:51,360 --> 03:42:53,040
If there are instance failures.

3030
03:42:53,040 --> 03:43:11,600
Always always create a constructor.

3031
03:43:11,600 --> 03:43:12,360
You're not there.

3032
03:43:12,360 --> 03:43:14,760
Be a string inside the class

3033
03:43:16,840 --> 03:43:18,480
Health class

3034
03:43:19,280 --> 03:43:28,080
is it mentioned?

3035
03:43:28,080 --> 03:43:29,520
I don't think so.

3036
03:43:29,520 --> 03:43:47,080
It is mentioned.

3037
03:43:47,080 --> 03:44:03,200
Are you guys done typing?

3038
03:44:03,200 --> 03:44:06,120
Let me send this code in the live.

3039
03:44:06,440 --> 03:44:12,360
Just and let me push it to the top

3040
03:44:12,360 --> 03:45:03,560
as well.

3041
03:45:03,560 --> 03:46:18,840
Let's take 2 minutes, type it and
I will be right back in just one minute.

3042
03:46:18,840 --> 03:46:33,000
Are you guys done typing?

3043
03:46:33,000 --> 03:46:36,120
So let's create and released

3044
03:46:36,480 --> 03:46:39,280
what should be the data type
that I should mention.

3045
03:46:39,280 --> 03:46:40,080
Now, guys,

3046
03:46:41,120 --> 03:46:42,240
I have to store the

3047
03:46:42,240 --> 03:46:46,160
objects of that and then health

3048
03:46:46,800 --> 03:46:48,840
and then cough

3049
03:46:51,880 --> 03:46:53,240
insurance, right?

3050
03:46:53,240 --> 03:46:58,440
Because the parent object and hold the

3051
03:47:05,360 --> 03:47:06,600
all the child.

3052
03:47:06,600 --> 03:47:08,360
All right

3053
03:47:09,880 --> 03:47:12,520
so I see God

3054
03:47:12,520 --> 03:47:15,280
is equal on new car

3055
03:47:15,720 --> 03:47:19,800
right.

3056
03:47:19,800 --> 03:47:22,560
Let me specify

3057
03:47:22,560 --> 03:47:24,600
the insurance and then

3058
03:47:30,120 --> 03:47:31,000
because

3059
03:47:35,520 --> 03:47:39,400
and then let me clear to the backlog

3060
03:47:48,240 --> 03:47:51,320
and then the insurance name

3061
03:48:01,480 --> 03:48:03,680
and health as well.

3062
03:48:03,960 --> 03:48:08,440
And then

3063
03:48:24,240 --> 03:48:26,960
now I can use the ADD matter.

3064
03:48:27,120 --> 03:48:29,600
So insurance is stored and

3065
03:48:31,440 --> 03:48:34,440
I can store

3066
03:48:37,880 --> 03:48:44,480
it, I can add it, and then I can add,

3067
03:48:44,520 --> 03:48:47,400
as I added them to at least right of it.

3068
03:48:48,320 --> 03:48:51,520
There's also would actually let me do that

3069
03:48:51,840 --> 03:48:54,960
if it's better to do exactly

3070
03:49:05,160 --> 03:49:07,320
like you did like this

3071
03:49:10,080 --> 03:49:20,160
is your perspective.

3072
03:49:20,160 --> 03:49:26,040
So now how can I call all
the methods I can see for it

3073
03:49:27,960 --> 03:49:29,120
works would be the data type.

3074
03:49:29,120 --> 03:49:34,640
And you here guys.

3075
03:49:34,640 --> 03:49:35,880
Insurance.

3076
03:49:35,880 --> 03:49:38,000
Insurance and then

3077
03:49:39,560 --> 03:49:40,800
insurance. Yeah.

3078
03:49:40,800 --> 03:49:42,880
And then say I and

3079
03:49:44,520 --> 03:49:47,800
Connecticut and I can not

3080
03:49:49,000 --> 03:49:52,280
cancel insurance.

3081
03:49:52,280 --> 03:49:54,600
Same polymorphism

3082
03:49:58,760 --> 03:50:00,280
and legal territory.

3083
03:50:00,280 --> 03:50:02,240
Is that a legal

3084
03:50:18,120 --> 03:50:21,160
when an individual character

3085
03:50:22,200 --> 03:50:23,760
or you guys

3086
03:50:23,760 --> 03:50:38,520
give me one more.

3087
03:50:38,520 --> 03:50:40,640
Oh come on

3088
03:50:41,040 --> 03:50:43,200
I think I have to now fix

3089
03:50:43,440 --> 03:50:50,200
all of these.

3090
03:50:50,200 --> 03:50:55,680
I think 3 to 4 more.

3091
03:50:55,680 --> 03:51:05,280
Okay,

3092
03:51:05,280 --> 03:51:13,880
fine.

3093
03:51:13,880 --> 03:51:45,640
Mean, here
we see the outputs from all of this.

3094
03:51:45,640 --> 03:51:48,920
By the way, there is one more thing
that I want to show you that

3095
03:51:49,480 --> 03:51:52,760
it is called to do list on your companies.

3096
03:51:53,120 --> 03:51:55,920
You might be getting these to do list.

3097
03:51:55,920 --> 03:52:00,880
So let's say
you are writing some piece of logic and

3098
03:52:03,840 --> 03:52:05,680
you have to add

3099
03:52:05,680 --> 03:52:07,800
something to that, that logic, right?

3100
03:52:08,400 --> 03:52:11,240
Or maybe you are given a task

3101
03:52:11,240 --> 03:52:13,880
to create
only the class name, method names

3102
03:52:14,280 --> 03:52:17,800
and field names, and you want to
leave some type of comments

3103
03:52:18,880 --> 03:52:20,760
for the other person.

3104
03:52:20,760 --> 03:52:22,760
So for example

3105
03:52:23,760 --> 03:52:27,360
I can write this double double for slashes

3106
03:52:27,360 --> 03:52:32,160
and then this capital to do
and I can put anything in here.

3107
03:52:32,680 --> 03:52:35,560
So for example, create a

3108
03:52:37,720 --> 03:52:40,080
new method.

3109
03:52:40,080 --> 03:52:42,600
I mean, here and

3110
03:52:44,240 --> 03:52:49,520
implement it.

3111
03:52:49,520 --> 03:52:54,320
So now what will happen
all the list of four

3112
03:52:54,600 --> 03:52:59,040
for all the two rules,
if you on this to do a screen in here,

3113
03:52:59,640 --> 03:53:04,760
you will be getting the list of all
those classes which contain these photos.

3114
03:53:05,560 --> 03:53:08,600
So let's do for example,
you are writing a very big project

3115
03:53:08,600 --> 03:53:11,960
and you want to change something
in some of the places.

3116
03:53:12,080 --> 03:53:17,520
So it's kind of a marker,
a kind of a command

3117
03:53:18,120 --> 03:53:22,200
that you can access from this window
if you put forward slashes

3118
03:53:22,200 --> 03:53:26,000
and then capital to do after that.

3119
03:53:26,000 --> 03:53:29,160
So you can keep track of your ten years,
you can put comments

3120
03:53:29,160 --> 03:53:32,360
and you will be able to access
all of those totals from here.

3121
03:53:32,760 --> 03:53:36,000
So your artifacts, most likely
they will be using tools.

3122
03:53:36,720 --> 03:53:40,920
So they will be putting these comments
that you have to implement to matter,

3123
03:53:40,920 --> 03:53:43,800
that matter to pick this subject
and this blah, blah, blah.

3124
03:53:44,400 --> 03:53:46,360
And then they will
share the project video.

3125
03:53:46,360 --> 03:53:47,600
So what you guys will do is

3126
03:53:47,600 --> 03:53:51,880
you will go to this list, you will start
implementing the meters from top

3127
03:53:52,960 --> 03:53:53,280
when you

3128
03:53:53,280 --> 03:53:56,120
complete
it, although you do erase it. Yes.

3129
03:53:56,360 --> 03:53:59,400
So once you are done, let's say
you are done this task, you remove

3130
03:53:59,400 --> 03:54:02,480
this, it is removed from your list

3131
03:54:02,480 --> 03:54:06,480
and just a good way to keep track of

3132
03:54:06,840 --> 03:54:08,640
the tasks that you have to incorporate

3133
03:54:08,640 --> 03:54:16,080
in your projects.

3134
03:54:16,080 --> 03:54:36,040
Are there any questions
from this insurance task?

3135
03:54:36,040 --> 03:54:38,520
So next to the next task

3136
03:54:41,200 --> 03:54:44,160
on this

3137
03:54:44,160 --> 03:54:48,280
and with the requirement for the next task

3138
03:55:03,440 --> 03:55:05,760
is to guard the last

3139
03:55:19,920 --> 03:55:20,480
to create

3140
03:55:20,480 --> 03:55:26,640
a card class that will have implemented
and unimplemented methods

3141
03:55:26,960 --> 03:55:29,640
and a constructor that will initialize

3142
03:55:31,560 --> 03:55:33,240
the card

3143
03:55:33,240 --> 03:55:36,240
type created to your subclasses of card.

3144
03:55:36,480 --> 03:55:39,840
Create three objects of different cards
for them inside.

3145
03:55:39,840 --> 03:55:43,440
A link list used for loop advanced form

3146
03:55:43,560 --> 03:55:46,400
part later to access all of these matters.

3147
03:55:46,600 --> 03:55:47,160
All right, so

3148
03:55:52,440 --> 03:55:53,480
let me

3149
03:55:53,480 --> 03:55:57,920
zinging this to card.

3150
03:55:57,920 --> 03:55:58,400
Yeah,

3151
03:55:59,400 --> 03:56:01,440
let me put it a field

3152
03:56:03,960 --> 03:56:06,520
as a card by

3153
03:56:09,880 --> 03:56:11,040
now. Okay.

3154
03:56:11,040 --> 03:56:13,280
And then I have to create a constructor.

3155
03:56:13,280 --> 03:56:16,600
So I use the shortcut or insert
constructor.

3156
03:56:16,600 --> 03:56:18,800
It's created.

3157
03:56:18,800 --> 03:56:24,080
Then I have some implemented
and implemented method.

3158
03:56:24,120 --> 03:56:24,640
Right.

3159
03:56:24,640 --> 03:56:29,800
So let's see.

3160
03:56:29,800 --> 03:56:33,280
Public Lloyd

3161
03:56:37,280 --> 03:56:38,600
issue

3162
03:56:39,080 --> 03:56:42,560
the card

3163
03:56:50,400 --> 03:56:51,040
in particular.

3164
03:56:51,040 --> 03:57:02,760
And about the card I include

3165
03:57:04,240 --> 03:57:06,880
and then some unimplemented method.

3166
03:57:07,040 --> 03:57:11,040
So let's say for example, public

3167
03:57:12,200 --> 03:57:14,400
abstract.

3168
03:57:14,480 --> 03:57:15,920
Lloyd

3169
03:57:16,680 --> 03:57:19,800
There you go. Let

3170
03:57:24,360 --> 03:57:25,040
me know.

3171
03:57:25,040 --> 03:57:29,600
My class would also be abstract.

3172
03:57:29,600 --> 03:57:30,840
Come on

3173
03:57:33,160 --> 03:57:33,800
in now.

3174
03:57:33,800 --> 03:57:39,120
I don't get any others.

3175
03:57:39,120 --> 03:57:39,720
Okay,

3176
03:57:41,040 --> 03:57:42,840
Now I have to create three classes.

3177
03:57:42,840 --> 03:57:43,360
Right?

3178
03:57:43,360 --> 03:57:47,320
So let's see.

3179
03:57:47,320 --> 03:57:48,960
Class

3180
03:57:49,920 --> 03:57:51,920
credit card

3181
03:57:52,120 --> 03:57:53,000
interest.

3182
03:57:53,080 --> 03:57:56,720
The card

3183
03:58:13,680 --> 03:58:15,760
and the

3184
03:58:17,480 --> 03:58:18,360
first business.

3185
03:58:18,360 --> 03:58:34,440
Then maybe 10%.

3186
03:58:34,440 --> 03:58:37,720
Then I create the

3187
03:58:40,760 --> 03:58:53,680
private class, and then I see

3188
03:58:53,840 --> 03:58:59,560
your interest is zero.

3189
03:58:59,560 --> 03:59:02,720
And then maybe I can create ID

3190
03:59:04,560 --> 03:59:05,040
prepaid

3191
03:59:05,040 --> 03:59:29,400
class. Then

3192
03:59:31,760 --> 03:59:34,520
you must

3193
03:59:34,760 --> 03:59:37,080
agree on the

3194
03:59:39,920 --> 03:59:46,440
vehicle for.

3195
03:59:46,440 --> 04:00:16,040
Okay.

3196
04:00:16,040 --> 04:00:16,960
Delivery. Incredible.

3197
04:00:16,960 --> 04:00:32,200
Guys, has anyone created the test

3198
04:00:32,200 --> 04:00:35,680
for class? Only?

3199
04:00:35,800 --> 04:00:38,560
A simple so

3200
04:00:39,000 --> 04:00:42,000
linked list is equal to link list

3201
04:00:42,840 --> 04:00:46,560
name place priority.

3202
04:00:46,560 --> 04:00:51,000
And then we specify the data type

3203
04:00:51,200 --> 04:00:57,600
which will be card the parent of all.

3204
04:00:57,600 --> 04:01:03,120
And then I said link list and and then new

3205
04:01:05,080 --> 04:01:09,080
credit card.

3206
04:01:09,080 --> 04:02:02,200
All right.

3207
04:02:02,200 --> 04:02:04,840
So this loop

3208
04:02:24,640 --> 04:02:28,360
is the third of

3209
04:02:36,480 --> 04:02:37,080
interest.

3210
04:02:37,080 --> 04:02:40,240
So those who were following me,
we send you this test record.

3211
04:02:41,160 --> 04:02:43,360
If you are unable to do the changes

3212
04:02:43,400 --> 04:02:49,360
clicking.

3213
04:02:49,360 --> 04:02:50,720
Okay, again, very simple.

3214
04:02:50,720 --> 04:02:56,120
The purpose of this task was to show you
that how we can use the polymorphism in

3215
04:02:56,400 --> 04:03:12,000
with with the array lists as well.

3216
04:03:12,000 --> 04:03:14,240
And in this class has been

3217
04:03:19,160 --> 04:03:21,880
are there any questions from
this task place?

3218
04:03:21,880 --> 04:03:22,920
So we had

3219
04:03:24,240 --> 04:03:24,840
each again

3220
04:03:24,840 --> 04:03:27,480
simple, just implemented and implemented
method.

3221
04:03:28,080 --> 04:03:30,360
Each class is implementing the method

3222
04:03:31,720 --> 04:03:35,440
which is unimplemented in the parent

3223
04:03:35,440 --> 04:03:37,440
you can put solve out
or anything like that.

3224
04:03:37,880 --> 04:03:42,400
And then I am calling all the methods
using a loop.

3225
04:03:42,440 --> 04:03:45,480
But first, definitely
I have to store the objects

3226
04:03:46,680 --> 04:04:00,120
of all the classes, no questions.

3227
04:04:00,120 --> 04:04:16,920
All you guys are done from inside.

3228
04:04:16,920 --> 04:04:21,320
Is it because of the use of out to

3229
04:04:22,800 --> 04:04:23,840
nothing?

3230
04:04:24,040 --> 04:04:26,840
Could be an actually very easy

3231
04:04:26,840 --> 04:04:29,160
practicing the speed typing

3232
04:04:37,560 --> 04:04:38,640
easy peasy tasks.

3233
04:04:38,640 --> 04:04:39,240
Right?

3234
04:04:40,040 --> 04:04:43,160
Is there anyone who was unable to do this?

3235
04:04:43,160 --> 04:04:50,000
These tasks?

3236
04:04:50,000 --> 04:04:52,600
I am even partly data
from outside as well.

3237
04:04:53,880 --> 04:04:55,640
It was

3238
04:04:55,880 --> 04:04:59,880
by Berkeley who are not completely

3239
04:05:00,680 --> 04:05:02,880
you are still alive

3240
04:05:02,960 --> 04:05:05,920
after taking 30 Java classes.

3241
04:05:06,960 --> 04:05:09,600
I did not finished two tasks only

3242
04:05:10,760 --> 04:05:11,080
we are

3243
04:05:11,080 --> 04:05:16,080
still alive.

3244
04:05:16,080 --> 04:05:18,120
So then there was this meme

3245
04:05:34,320 --> 04:05:36,640
the humans God, please

3246
04:05:37,560 --> 04:05:42,040
let the year 2021 be better than 2020.

3247
04:05:42,040 --> 04:06:13,000
But you guys that still alive,

3248
04:06:13,000 --> 04:06:15,600
still fighting

3249
04:06:22,400 --> 04:06:24,600
now. Oops.

3250
04:06:24,600 --> 04:06:41,280
That a

3251
04:06:43,680 --> 04:06:44,400
there any questions

3252
04:06:44,400 --> 04:06:47,480
from this task of our anyone.

3253
04:06:47,480 --> 04:06:49,440
So basically our mission is to kill us

3254
04:06:49,440 --> 04:06:51,680
and checking if you still learning or

3255
04:06:53,720 --> 04:06:55,920
the no no that's not my mission

3256
04:07:03,120 --> 04:07:05,960
you guys have to describe
the company is still right.

3257
04:07:06,360 --> 04:07:09,400
We will be destroying production server
and all the data

3258
04:07:10,360 --> 04:07:12,480
if you guys are dead

3259
04:07:13,800 --> 04:07:18,040
we need to review.

3260
04:07:18,040 --> 04:07:19,560
So most of I am here.

3261
04:07:19,560 --> 04:07:25,360
The task was to create a class card
and create any methods.

3262
04:07:25,360 --> 04:07:30,120
Basically, one is sure to be implemented

3263
04:07:30,120 --> 04:07:34,880
method that has the body and the other one
that does not have anybody.

3264
04:07:34,880 --> 04:07:39,520
So I created one method that was
completely implemented in the parent class

3265
04:07:40,720 --> 04:07:43,920
and the
other one which was abstract method.

3266
04:07:44,280 --> 04:07:47,520
And then I provide the implementation
in all the

3267
04:07:48,080 --> 04:07:50,720
in all the trial classes.

3268
04:07:51,040 --> 04:07:51,920
Next.

3269
04:07:51,920 --> 04:07:54,280
The other thing is
I am only creating a constructor

3270
04:07:56,000 --> 04:07:59,040
and then I am creating the object
of all the classes,

3271
04:07:59,880 --> 04:08:03,120
adding it inside a link list

3272
04:08:03,120 --> 04:08:05,160
and using it for loop

3273
04:08:05,720 --> 04:08:08,640
to get all the objects one by one

3274
04:08:09,400 --> 04:08:11,960
and then call the methods on that object.

3275
04:08:12,520 --> 04:08:15,800
Same polymorphism concept.

3276
04:08:15,800 --> 04:08:17,600
The only difference here is that

3277
04:08:17,600 --> 04:08:20,440
instead of previously
we were using arrays.

3278
04:08:20,920 --> 04:08:23,160
Now we are using lists.

3279
04:08:23,160 --> 04:08:26,880
In the previous example,
I use the array list and here I am using.

3280
04:08:26,880 --> 04:08:27,920
This is the only difference.

3281
04:08:27,920 --> 04:08:30,640
Otherwise they are the same examples.

3282
04:08:30,640 --> 04:08:33,320
If you guys remember,

3283
04:08:33,320 --> 04:08:35,320
realize, remember this kind of examples?

3284
04:08:35,320 --> 04:08:39,320
I showed this kind of examples
earlier as well in the polymorphism

3285
04:08:46,880 --> 04:08:49,680
of the so

3286
04:08:51,960 --> 04:08:55,120
now you guys have good grip on intelligent

3287
04:08:55,120 --> 04:09:01,480
and on Java.

3288
04:09:01,480 --> 04:09:05,280
So in the next class
we will be learning how to

3289
04:09:07,320 --> 04:09:10,560
to write and read Excel files text

3290
04:09:10,560 --> 04:09:14,240
PHI is properties filed with Java.

3291
04:09:15,000 --> 04:09:19,280
Okay then you guys pull the data
from Excel files

3292
04:09:19,280 --> 04:09:22,360
and put the data inside
different different fields.

3293
04:09:22,360 --> 04:09:26,520
And if those fields
they allow that certain type of data.

3294
04:09:26,520 --> 04:09:30,480
So you guys will be able to perform

3295
04:09:31,080 --> 04:09:34,000
the data testing, right?

3296
04:09:34,000 --> 04:09:37,080
The test case cases, for example,
if you want to check a field,

3297
04:09:37,160 --> 04:09:40,680
if that allows maybe

3298
04:09:42,240 --> 04:09:44,320
special characters

3299
04:09:44,320 --> 04:09:47,760
or numbers or letters
so, you guys will be creating

3300
04:09:47,760 --> 04:09:50,760
different different combinations
of this data in your Excel,

3301
04:09:51,520 --> 04:09:54,880
then you will link that Excel
to your Java program.

3302
04:09:56,040 --> 04:09:59,280
So Java program
will read the data from Excel,

3303
04:10:00,000 --> 04:10:04,120
and with the help of Selenium,
you will insert data on a web

3304
04:10:04,480 --> 04:10:09,000
or inside of the web fields in the text
fields, the buttons,

3305
04:10:09,480 --> 04:10:13,360
and then you will check if that field
allow a certain type of checked are not

3306
04:10:14,760 --> 04:10:17,120
is doing that again

3307
04:10:19,320 --> 04:10:21,840
this word, but

3308
04:10:21,920 --> 04:10:23,720
what am I doing again

3309
04:10:23,720 --> 04:10:27,160
breaking the brand if it's a

3310
04:10:28,400 --> 04:10:32,040
task, I know you guys will be able to do
that after one class.

3311
04:10:32,040 --> 04:10:33,040
Believe me,

3312
04:10:34,520 --> 04:10:36,360
you guys are ready to join us?

3313
04:10:36,360 --> 04:10:46,280
End. Is there still English guys?

3314
04:10:46,280 --> 04:10:54,240
Can you send me the next task?

3315
04:10:54,240 --> 04:10:57,720
So in the next task,
we will move to hash map.

3316
04:10:57,760 --> 04:11:00,720
Yes, but hash map will not take 5 hours

3317
04:11:04,760 --> 04:11:06,760
manually creating the event numbers.

3318
04:11:06,800 --> 04:11:08,600
It's fine. It's fine.

3319
04:11:08,600 --> 04:11:13,720
It happens.

3320
04:11:13,720 --> 04:11:20,920
It's a

3321
04:11:29,280 --> 04:11:29,800
I hope

3322
04:11:29,800 --> 04:11:32,960
this rocket is not destroyed completely.

3323
04:11:32,960 --> 04:11:36,880
There was this,
I think, Japanese or Chinese guy,

3324
04:11:37,920 --> 04:11:40,720
billionaire guy who

3325
04:11:49,080 --> 04:11:51,080
whose rocket rocket was passed

3326
04:11:52,760 --> 04:11:54,080
and whoever

3327
04:11:54,080 --> 04:11:56,880
he was going inside of that space station,

3328
04:11:57,880 --> 04:12:10,880
that is there and he is dead now.

3329
04:12:10,880 --> 04:12:11,200
Health

3330
04:12:12,400 --> 04:12:14,120
and technology entrepreneur

3331
04:12:14,120 --> 04:12:18,960
flew into the space on Blue Origin rocket
with an actor, William Shatner

3332
04:12:19,040 --> 04:12:23,240
last month died Thursday
in a New Jersey airplane crash, and state

3333
04:12:23,240 --> 04:12:25,160
police officials

3334
04:12:29,440 --> 04:12:31,680
and people risk their lives

3335
04:12:31,680 --> 04:12:37,600
to have these kind of experiences
that are key.

3336
04:12:41,560 --> 04:12:42,680
So before we move to

3337
04:12:42,680 --> 04:12:48,840
the next task,
can you guys tell me about starts?

3338
04:12:49,360 --> 04:12:56,000
So this start interface,

3339
04:12:56,000 --> 04:12:59,280
what is the
what are the properties of sets?

3340
04:12:59,280 --> 04:13:04,320
So START is also an interface like list
as we have classes

3341
04:13:04,320 --> 04:13:08,440
at least ten linked lists
which implement the interface list.

3342
04:13:09,040 --> 04:13:13,080
We have the set interface
which is implemented by hash said

3343
04:13:13,600 --> 04:13:17,520
Bye bye,
risking my brain for learning java

3344
04:13:18,240 --> 04:13:21,240
or linked to high set and then preset

3345
04:13:22,360 --> 04:13:23,520
so cells.

3346
04:13:23,520 --> 04:13:29,280
There is this inherent property
of the service that they can not

3347
04:13:30,320 --> 04:13:33,480
they can't have

3348
04:13:33,480 --> 04:13:38,720
duplicate values.

3349
04:13:38,720 --> 04:13:39,360
Right?

3350
04:13:40,040 --> 04:13:43,320
And so if you don't want to have
duplicate values

3351
04:13:43,320 --> 04:13:45,840
and let's say
you want to maintain the order,

3352
04:13:46,600 --> 04:13:50,040
which type of set we can use in that case,

3353
04:13:50,040 --> 04:13:53,720
we can use the

3354
04:13:55,440 --> 04:13:57,720
link, the high set, right?

3355
04:13:57,720 --> 04:14:01,600
So this has the property
that it will not have duplicate,

3356
04:14:01,600 --> 04:14:05,200
plus it will

3357
04:14:05,960 --> 04:14:08,760
maintain the order.

3358
04:14:09,000 --> 04:14:12,600
Then we discussed about the

3359
04:14:13,600 --> 04:14:18,920
simple hash set.

3360
04:14:18,920 --> 04:14:23,760
It's fast, but no

3361
04:14:25,640 --> 04:14:30,120
in order.

3362
04:14:30,120 --> 04:14:33,760
And then the three hash

3363
04:14:35,120 --> 04:14:38,080
effect,

3364
04:14:38,080 --> 04:14:41,760
no duplicates plus

3365
04:14:43,320 --> 04:14:46,440
that is started.

3366
04:14:48,160 --> 04:14:51,920
And to be honest,
in my seven years of experience,

3367
04:14:52,360 --> 04:14:56,120
I have never used sets other than

3368
04:14:58,320 --> 04:14:59,960
for this kind of tasks.

3369
04:14:59,960 --> 04:15:03,160
So this task five is the only use

3370
04:15:03,160 --> 04:15:06,480
that I have seen in my entire career.

3371
04:15:06,480 --> 04:15:10,680
So let's say,
for example five, task five says

3372
04:15:14,400 --> 04:15:15,240
that we have to

3373
04:15:15,240 --> 04:15:18,880
remove the duplicates from the list.

3374
04:15:19,200 --> 04:15:20,000
Right?

3375
04:15:20,000 --> 04:15:22,760
So we have a list

3376
04:15:24,160 --> 04:15:28,600
and we want to remove the duplicate order
and duplicate. Yes.

3377
04:15:28,720 --> 04:15:30,720
So Gene is twice, right?

3378
04:15:30,720 --> 04:15:32,560
Jim dissolved supplies.

3379
04:15:32,560 --> 04:15:36,400
So if I want to remove the duplicates
guide from a list

3380
04:15:36,400 --> 04:15:39,560
without using this type,
can you guys think of the logic?

3381
04:15:40,040 --> 04:15:42,200
Did you guys try to write logic?

3382
04:15:42,200 --> 04:15:59,600
Remove these elements
without using salt or something?

3383
04:15:59,600 --> 04:16:00,720
Or maybe you guys can.

3384
04:16:00,720 --> 04:16:04,680
You guys think of the logic now

3385
04:16:06,960 --> 04:16:09,560
equals method using if

3386
04:16:16,640 --> 04:16:18,680
tried but give up.

3387
04:16:18,680 --> 04:16:20,760
It's not easy right?

3388
04:16:20,760 --> 04:16:24,840
There are special algorithms
like bubble side model side.

3389
04:16:25,200 --> 04:16:26,720
You guys can read those.

3390
04:16:26,720 --> 04:16:31,200
Actually, there is a complete course
six months course on that are structures.

3391
04:16:32,400 --> 04:16:36,840
There is this complete
my six month course on design patterns.

3392
04:16:37,920 --> 04:16:41,400
So instead of going all of that

3393
04:16:42,920 --> 04:16:46,720
maybe the simplest way what we can do
we can remove the duplicates

3394
04:16:46,720 --> 04:16:50,000
manually like right I show where we can do

3395
04:16:52,840 --> 04:16:54,800
and duplicates removed.

3396
04:16:54,800 --> 04:17:00,240
I can do another six months.

3397
04:17:00,240 --> 04:17:03,040
But if you don't know, how about the data

3398
04:17:03,560 --> 04:17:14,440
that you will be getting inside the list?

3399
04:17:14,440 --> 04:17:15,400
Come on.

3400
04:17:15,480 --> 04:17:17,320
So it's very simple, right?

3401
04:17:17,320 --> 04:17:19,640
That's why I told you this today.

3402
04:17:19,640 --> 04:17:26,440
Just create a new set fact

3403
04:17:28,360 --> 04:17:31,800
bring that is equal to new

3404
04:17:34,480 --> 04:17:35,440
link the high set

3405
04:17:35,440 --> 04:17:37,480
because we don't want to lose that

3406
04:17:38,960 --> 04:17:43,760
that order
and we pass a list inside this set.

3407
04:17:44,160 --> 04:17:47,040
Now tell me, guys, what is the property

3408
04:17:57,480 --> 04:17:58,840
Now you can

3409
04:18:00,480 --> 04:18:03,000
ignore that file from compiling.

3410
04:18:04,080 --> 04:18:07,120
So for example, you can share the code.

3411
04:18:07,120 --> 04:18:08,400
Why didn't you share that?

3412
04:18:08,400 --> 04:18:12,640
Edited with Shiva in the sports channel?

3413
04:18:12,640 --> 04:18:14,120
Okay, focus in here.

3414
04:18:14,120 --> 04:18:16,840
Don't tie focus in here
and then we will fix your

3415
04:18:16,840 --> 04:18:20,520
issues.

3416
04:18:20,520 --> 04:18:21,080
So, guys,

3417
04:18:22,520 --> 04:18:25,800
we know that this is a collection, right?

3418
04:18:26,760 --> 04:18:29,080
This is also a collection, right?

3419
04:18:29,560 --> 04:18:32,880
So what collections
can all of these collections,

3420
04:18:32,880 --> 04:18:36,320
they have this property
that inside the constructor,

3421
04:18:36,320 --> 04:18:39,840
if I pass one type of collection
inside the other one,

3422
04:18:41,120 --> 04:18:44,720
they are automatically
converted to back type.

3423
04:18:44,720 --> 04:18:48,160
So when I passed this list inside, this

3424
04:18:48,160 --> 04:18:50,960
constructor now it has become asset

3425
04:18:51,400 --> 04:18:55,440
checked without and SEC does not allow
duplicate entries.

3426
04:18:55,440 --> 04:18:56,400
Right.

3427
04:18:56,840 --> 04:19:00,960
So all the entries,
they are removed, right?

3428
04:19:01,080 --> 04:19:12,840
They are removed.

3429
04:19:12,840 --> 04:19:16,360
They are removed.

3430
04:19:16,360 --> 04:19:18,960
So what we can do if

3431
04:19:19,320 --> 04:19:21,920
we have to remove something.

3432
04:19:21,920 --> 04:19:26,240
Okay, we can take the existing data.

3433
04:19:27,920 --> 04:19:32,160
It can be a list, it can be a linked list,
it can be an area.

3434
04:19:32,160 --> 04:19:34,880
Also, we can convert and add it to list

3435
04:19:35,240 --> 04:19:37,680
and pass that data to that set.

3436
04:19:38,040 --> 04:19:40,320
Now, Set will perform all the

3437
04:19:41,320 --> 04:19:44,920
duplication removal procedure.

3438
04:19:44,920 --> 04:19:49,200
And because this procedure,
if you are dealing with a big data

3439
04:19:49,200 --> 04:19:52,720
and if you are writing your own algorithm
first, it will it can have buckets.

3440
04:19:52,720 --> 04:19:55,360
The second there can be performance.

3441
04:19:55,360 --> 04:20:01,840
So this start is all already implemented
by the best industry experts.

3442
04:20:02,480 --> 04:20:06,600
So what you can do is you can easily pass
this data inside

3443
04:20:06,640 --> 04:20:12,480
be certain that the duplicates are gone
and you can get a list back from as well.

3444
04:20:12,480 --> 04:20:17,480
So you can see a list is equal to new

3445
04:20:18,640 --> 04:20:22,200
ArrayList
and you can pass this setting here.

3446
04:20:22,600 --> 04:20:25,680
Let's say, for example,
maybe you the data in the

3447
04:20:25,800 --> 04:20:29,720
in the list
now in the original list and sorted

3448
04:20:29,720 --> 04:20:33,760
and sorting out sorted
you can sort as well

3449
04:20:34,840 --> 04:20:36,560
and no duplicates

3450
04:20:39,080 --> 04:20:42,120
so this is how we get back the list

3451
04:20:42,120 --> 04:20:46,080
we send new list
and then past the 13 here.

3452
04:20:46,080 --> 04:20:48,840
Now it will become a list

3453
04:20:51,400 --> 04:20:52,680
and again the duplicates,

3454
04:20:52,680 --> 04:20:55,720
they are gone so we don't have to write
any piece of code.

3455
04:20:56,160 --> 04:21:00,640
If you want to sort data
and you want to remove your data,

3456
04:21:01,000 --> 04:21:04,040
always use the SAP,

3457
04:21:05,160 --> 04:21:07,160
search the new search set

3458
04:21:07,160 --> 04:21:11,720
not at all list, not clear,
at least not add some.

3459
04:21:11,720 --> 04:21:13,360
It's also fine for one.

3460
04:21:13,360 --> 04:21:23,120
Yep, it's also fine.

3461
04:21:23,120 --> 04:21:27,920
So now the duplicates they are going.

3462
04:21:27,920 --> 04:21:48,960
Can I please see your notes? Yes.

3463
04:21:48,960 --> 04:21:53,160
They are very big problems
in computer science sorting

3464
04:21:53,600 --> 04:21:55,920
and removing the duplicates.

3465
04:21:55,920 --> 04:21:58,800
And there are so many algorithms

3466
04:21:59,200 --> 04:22:01,560
which have been

3467
04:22:01,960 --> 04:22:03,840
so research over the years

3468
04:22:03,840 --> 04:22:10,560
to solve this problem.

3469
04:22:10,560 --> 04:22:12,680
Yes, it's fine. It's fine.

3470
04:22:12,680 --> 04:22:17,920
So how how how was the two days class?

3471
04:22:17,920 --> 04:22:21,040
Was it still confusing
or you guys now have much

3472
04:22:21,040 --> 04:22:30,400
more better understanding?

3473
04:22:30,400 --> 04:22:33,520
What is the difference between link
the hash and preset?

3474
04:22:33,720 --> 04:22:42,120
So tree search will sort the data as well.

3475
04:22:42,120 --> 04:22:51,840
Copyrighting for odd
confusion is down 20%.

3476
04:22:51,840 --> 04:22:57,600
So these new classes,
they are only used to solve this problem.

3477
04:22:57,600 --> 04:23:00,960
Then if you guys really want to those
so long to go deeper,

3478
04:23:01,560 --> 04:23:05,960
you guys can search. But

3479
04:23:08,800 --> 04:23:10,040
the you guys will

3480
04:23:10,040 --> 04:23:15,120
find a lot of algorithms
just to sort the data.

3481
04:23:15,120 --> 04:23:15,600
Okay.

3482
04:23:15,600 --> 04:23:18,560
Very complex ones

3483
04:23:20,160 --> 04:23:23,280
much sought absorbed
in search and selection bubble.

3484
04:23:23,720 --> 04:23:27,560
And there are tons of tons of research
on these algorithms

3485
04:23:29,240 --> 04:23:31,520
and they are very simple, right?

3486
04:23:31,600 --> 04:23:32,640
It's easy.

3487
04:23:32,640 --> 04:23:36,800
This is just a piece of code
that will remove

3488
04:23:36,800 --> 04:23:40,120
the duplicates or will sort your data.

3489
04:23:40,560 --> 04:23:43,720
So those who want to do it on your own

3490
04:23:44,040 --> 04:23:48,600
don't want to use search
may be right or the preset. Yes.

3491
04:23:48,600 --> 04:23:55,400
You guys can also write this logic
in here.

3492
04:23:55,400 --> 04:23:56,360
It's very simple.

3493
04:23:56,360 --> 04:24:01,080
There is this integer law high in left
and right eye is left.

3494
04:24:01,080 --> 04:24:05,560
And then we are going left and then right
we are doing the middle plus one, then

3495
04:24:05,560 --> 04:24:09,800
left, right and then left is equal to K
and then I and J.

3496
04:24:09,840 --> 04:24:14,840
They both top zero right
and then left is if left and right.

3497
04:24:14,840 --> 04:24:15,800
Right. Simple.

3498
04:24:15,800 --> 04:24:22,560
We are saying attic is equal to left.

3499
04:24:22,560 --> 04:24:26,840
So that's the reason
why we are teaching you about the

3500
04:24:28,320 --> 04:24:32,400
sex sorting and removing duplicates.

3501
04:24:33,120 --> 04:24:35,600
It's very complex task.

3502
04:24:35,600 --> 04:24:38,040
Yes, you guys
can write the code on your own,

3503
04:24:39,280 --> 04:24:41,760
but you should use these building
data structures.

3504
04:24:42,480 --> 04:24:48,400
They are the most efficient one.

3505
04:24:48,400 --> 04:24:59,240
If we go that deep,
then we will get around. Yes,

3506
04:25:01,080 --> 04:25:25,080
here is the code.

3507
04:25:25,080 --> 04:25:26,760
Then you go over the last three lines.

3508
04:25:26,760 --> 04:25:31,320
So in here
I am creating a link that has said Why

3509
04:25:31,320 --> 04:25:36,360
because I want to maintain the order,
plus I don't want it duplicated.

3510
04:25:36,480 --> 04:25:38,840
So once I pass this list

3511
04:25:40,720 --> 04:25:42,480
to, assert

3512
04:25:42,480 --> 04:25:44,560
all the duplicates will be removed

3513
04:25:45,920 --> 04:25:48,680
and we get back a set

3514
04:25:50,160 --> 04:25:53,240
and then once the duplicates are removed,
I can get a list.

3515
04:25:53,560 --> 04:25:55,760
It's again from this session.

3516
04:25:55,880 --> 04:25:58,120
I can get the list back.

3517
04:25:58,120 --> 04:26:00,360
So I am assigning this list variable

3518
04:26:00,720 --> 04:26:03,640
to a new list that does not contain

3519
04:26:05,160 --> 04:26:07,520
why you put into line number 19.

3520
04:26:08,080 --> 04:26:10,440
If you don't want to blend,
let's see also.

3521
04:26:10,440 --> 04:26:11,040
Fine.

3522
04:26:11,040 --> 04:26:14,080
I just printed those so that you guys can.

3523
04:26:15,120 --> 04:26:16,920
Yes, you guys can use the set.

3524
04:26:16,920 --> 04:26:22,120
So I just sorted because what if you
the data in the form of a list,

3525
04:26:22,200 --> 04:26:26,200
not in the form a set
how we can get back from a set to a list.

3526
04:26:26,520 --> 04:26:28,400
This is how we can get back.

3527
04:26:28,400 --> 04:26:31,680
We can again
create, list and pass this item here.

3528
04:26:31,680 --> 04:26:36,000
Now we have a list. Yes.

3529
04:26:36,000 --> 04:26:39,840
The only important thing is to remember
what kind of search

3530
04:26:40,360 --> 04:26:42,720
to use for the specific requirement.

3531
04:26:42,720 --> 04:26:45,120
If you guys don't want to

3532
04:26:46,440 --> 04:26:49,040
if you guys want to retain the insertion
order,

3533
04:26:49,160 --> 04:26:52,760
plus no duplicates,
which which type of set I should use.

3534
04:26:52,760 --> 04:26:54,920
Guys.

3535
04:26:54,920 --> 04:26:58,760
Non duplicates
plus want to retained the order?

3536
04:26:58,800 --> 04:27:00,520
I should use the link. Dissect

3537
04:27:01,640 --> 04:27:04,360
what if
I want to sort this back to as then

3538
04:27:06,240 --> 04:27:08,840
what if I want the thought
to start as well?

3539
04:27:09,720 --> 04:27:11,160
I want to remove the duplicates.

3540
04:27:11,160 --> 04:27:13,560
Plus I want to store a thought director.

3541
04:27:13,920 --> 04:27:15,960
Then I use the three set

3542
04:27:21,040 --> 04:27:23,680
and then if I only care about speed

3543
04:27:24,480 --> 04:27:32,800
and not duplicates,
then I should use the haystack. So.

3544
04:27:32,880 --> 04:27:35,120
And they are very simple.

3545
04:27:35,120 --> 04:27:39,120
Just passed a list, remove, duplicate
and all that and get it back.

3546
04:27:39,120 --> 04:27:40,680
Your list

3547
04:27:41,040 --> 04:27:43,040
are the more tasks

3548
04:27:43,040 --> 04:27:56,840
or we are done.

3549
04:27:56,840 --> 04:27:58,440
Three more.

3550
04:27:58,440 --> 04:28:04,560
Really.

3551
04:28:04,560 --> 04:28:08,520
Well let's do you guys want to do it

3552
04:28:08,520 --> 04:28:14,880
now or tomorrow?

3553
04:28:14,880 --> 04:28:17,440
Tomorrow. Tomorrow. Tomorrow.

3554
04:28:17,440 --> 04:28:18,320
Okay.

3555
04:28:18,320 --> 04:28:41,560
Let's do it tomorrow.

3556
04:28:41,560 --> 04:28:44,080
Guess so.

3557
04:28:44,120 --> 04:28:46,920
If, if something is still confusing you,

3558
04:28:47,680 --> 04:28:49,760
you guys can post back

3559
04:28:52,760 --> 04:28:54,040
in the sports channel

3560
04:28:54,040 --> 04:28:58,480
and I can help you out.

3561
04:28:58,480 --> 04:28:59,520
Blah, blah, blah, blah.

3562
04:28:59,520 --> 04:29:00,760
Okay, I got it.

3563
04:29:00,760 --> 04:29:13,320
Yeah.

3564
04:29:13,320 --> 04:29:15,160
Tomorrow, set the

3565
04:29:16,520 --> 04:29:18,800
map for tomorrow's maps.

3566
04:29:20,200 --> 04:29:23,640
So, do we just rewatch the video fash map
for tomorrow?

3567
04:29:24,040 --> 04:29:28,440
Yes, If you don't,
if you are planning to delete everything

3568
04:29:30,080 --> 04:29:32,480
before you go back and go to bed.

3569
04:29:33,120 --> 04:29:37,920
So maybe you need to rewatch
that for tomorrow.

3570
04:29:37,920 --> 04:29:42,880
Are you enjoying giving us a task

3571
04:29:42,880 --> 04:29:46,280
that you didn't even pay attention
to how much you did give us?

3572
04:29:47,000 --> 04:29:49,800
Nicole I told you last week

3573
04:29:50,120 --> 04:29:53,840
might to 25% of my brain was working.

3574
04:29:54,000 --> 04:29:58,240
I don't remember what happened
with you guys in the last week.

3575
04:29:58,240 --> 04:30:03,280
They only attacked the comments
when I was feeling better.

3576
04:30:03,280 --> 04:30:04,680
I checked the comments

3577
04:30:04,680 --> 04:30:08,520
and a lot of you were complaining
that the last class was terrible.

3578
04:30:09,280 --> 04:30:12,680
So that's why I read it at class.

3579
04:30:14,280 --> 04:30:14,880
I don't know.

3580
04:30:14,880 --> 04:30:16,920
How much does I give to you

3581
04:30:18,720 --> 04:30:20,520
that day.

3582
04:30:22,120 --> 04:30:23,800
So I have this already.

3583
04:30:23,800 --> 04:30:24,440
I don't know.

3584
04:30:24,440 --> 04:30:29,640
With every time I get this flow,

3585
04:30:29,640 --> 04:30:33,760
it makes me terrible.

3586
04:30:33,760 --> 04:30:41,040
Only remember this.

3587
04:30:41,040 --> 04:30:42,800
Maybe I should not have.

3588
04:30:42,800 --> 04:30:45,920
No, no, no. COVID. It's simple.

3589
04:30:45,920 --> 04:30:46,800
Seasonal flu.

3590
04:30:46,800 --> 04:30:48,600
Maybe I should not.

3591
04:30:48,800 --> 04:30:51,000
Maybe I should have canceled that class.

3592
04:30:51,960 --> 04:30:54,440
But anything
I think you guys, it's kind of a revision.

3593
04:30:54,440 --> 04:30:59,320
And you guys have
learned something as well.

3594
04:30:59,320 --> 04:31:02,200
But I took it out when the timer went off.

3595
04:31:03,480 --> 04:31:04,080
Not on.

3596
04:31:04,080 --> 04:31:07,920
That was the smoke alarm

3597
04:31:08,760 --> 04:31:09,800
your knee

3598
04:31:09,800 --> 04:31:15,000
or that was the.

3599
04:31:15,000 --> 04:31:18,440
All right, guys, take some rest

3600
04:31:18,440 --> 04:31:20,160
and I will see you

3601
04:31:20,160 --> 04:31:26,240
guys tomorrow.

3602
04:31:26,240 --> 04:31:28,600
Bye bye.
