1
00:00:03,360 --> 00:00:05,600
Hey, Estelle.

2
00:00:06,480 --> 00:00:08,640
So Ashley's not feeling well.

3
00:00:08,640 --> 00:00:12,160
She might be able to do the classes
in the next week,

4
00:00:12,480 --> 00:00:14,480
but not this week.

5
00:00:20,440 --> 00:00:22,720
Or I don't know.

6
00:00:22,720 --> 00:00:30,960
At this point,
if this is COVID or something else,

7
00:00:30,960 --> 00:00:34,040
let me start my career.

8
00:00:38,280 --> 00:00:43,320
Yes, the symptoms are more of like COVID.

9
00:00:44,840 --> 00:00:45,360
Morning.

10
00:00:45,360 --> 00:00:48,440
Morning, Robin.

11
00:00:51,560 --> 00:00:53,440
Good evening from Istanbul.

12
00:00:53,440 --> 00:00:56,200
Hi, Ali.

13
00:00:59,800 --> 00:01:01,800
Already started last night.

14
00:01:01,800 --> 00:01:13,040
Are there any questions
from the previous sessions? No.

15
00:01:17,400 --> 00:01:21,360
And you guys prior to the rebels

16
00:01:28,680 --> 00:01:37,640
are in great.

17
00:01:38,920 --> 00:01:40,040
Not yet.

18
00:02:02,960 --> 00:02:03,960
I see around

19
00:02:03,960 --> 00:02:08,280
281 submissions on the first exercise.

20
00:02:08,520 --> 00:02:10,840
Second one, third one.

21
00:02:10,840 --> 00:02:14,200
So a lot of you have provided
the five rebels plus five rebels.

22
00:02:14,200 --> 00:02:14,920
Right.

23
00:02:15,600 --> 00:02:16,680
Even been excellent.

24
00:02:16,680 --> 00:02:19,120
Some of you have tried the next ones.

25
00:02:19,120 --> 00:02:21,120
2031 97.

26
00:02:21,280 --> 00:02:22,840
All right, That's great.

27
00:02:22,840 --> 00:02:25,000
We will work at the clips they played

28
00:02:25,320 --> 00:02:27,800
so far following your exercises.

29
00:02:28,160 --> 00:02:34,200
You will be working with the rebels
and are following me during the class. And

30
00:02:35,280 --> 00:02:37,640
once you guys are done with Java,

31
00:02:37,640 --> 00:02:41,480
you guys going to be building your
frameworks, writing large amounts of code.

32
00:02:41,720 --> 00:02:44,480
Then you will be using Eclipse.

33
00:02:44,800 --> 00:02:47,880
They will review the pilot
homework and review class. Yes.

34
00:02:47,960 --> 00:02:52,000
In all the review classes, we will be
reviewing the homeworks as well.

35
00:02:52,200 --> 00:02:53,960
So let's see

36
00:02:54,160 --> 00:02:57,040
if some of you are unable
to solve a specific rebel.

37
00:02:57,440 --> 00:03:02,240
Then I will be following that grapple
with you during the class.

38
00:03:04,000 --> 00:03:08,480
So Arwa is saying
I don't have the link for the class.

39
00:03:08,480 --> 00:03:10,120
I did have to go to an email.

40
00:03:10,120 --> 00:03:14,600
So again, someone by to provide
that she can use the previous

41
00:03:15,600 --> 00:03:19,800
link that she had so far these six months.

42
00:03:20,280 --> 00:03:22,560
The links,
they are unique to each student,

43
00:03:23,160 --> 00:03:25,600
but the link stays same

44
00:03:25,600 --> 00:03:29,720
for all the week, days, classes,
weekend classes and review classes.

45
00:03:30,160 --> 00:03:33,880
So zoom will send you the same link again

46
00:03:33,880 --> 00:03:38,160
and again for all the weekdays
and weekends and three classes.

47
00:03:38,160 --> 00:03:41,720
So if for some reason,
if you guys don't get the link,

48
00:03:42,160 --> 00:03:45,440
you can use the previous link.

49
00:03:45,960 --> 00:03:47,880
Yes, it's the same from last week.

50
00:03:47,880 --> 00:03:48,960
Last week I class

51
00:03:58,520 --> 00:04:00,720
is the link for today's class working.

52
00:04:00,720 --> 00:04:06,000
So now we'll make sure
that you are joining.

53
00:04:06,000 --> 00:04:07,080
I don't know.

54
00:04:07,080 --> 00:04:08,040
I don't think so.

55
00:04:08,040 --> 00:04:12,320
He can listen to me,
but someone please ask him that

56
00:04:12,840 --> 00:04:15,240
he should be joining the weekend
class link

57
00:04:17,720 --> 00:04:18,360
not week

58
00:04:18,360 --> 00:04:28,440
did not review classes.

59
00:04:33,040 --> 00:04:33,720
Alright guys,

60
00:04:33,720 --> 00:04:38,120
if there are no questions, let's start

61
00:04:38,160 --> 00:04:53,320
this session.

62
00:04:55,400 --> 00:05:41,360
Just give me a moment.

63
00:05:45,200 --> 00:05:47,680
I think you here from a

64
00:05:47,680 --> 00:05:52,800
from a season.

65
00:05:53,120 --> 00:05:57,040
I don't remember the name that that is a
it's a great idea season.

66
00:05:57,480 --> 00:06:02,520
If you guys I will suggest you
to watch that season after of when you are

67
00:06:02,520 --> 00:06:06,280
in the middle of drama classes
it will it will make more sense

68
00:06:22,440 --> 00:06:25,920
which they didn't they
the meme is from that show.

69
00:06:26,080 --> 00:06:27,360
I don't remember the name.

70
00:06:28,560 --> 00:06:30,400
It's something.

71
00:06:30,400 --> 00:06:33,520
Are we covering the last week and missed
class content?

72
00:06:34,000 --> 00:06:37,320
I Yes I will be go or revising
I will be going through

73
00:06:37,320 --> 00:06:41,760
over that content as well
when we will use intelligence.

74
00:06:42,320 --> 00:06:45,720
So we will be using intelligence after

75
00:06:45,720 --> 00:06:47,360
four weeks

76
00:06:49,040 --> 00:06:51,280
so that you guys know how to use multiple.

77
00:06:51,280 --> 00:06:54,360
Because in the industry right
now, eclipse and intelligence,

78
00:06:54,360 --> 00:06:58,240
they are used to around 80% of the times.

79
00:06:58,240 --> 00:06:59,800
So we want to teach you both.

80
00:06:59,800 --> 00:07:04,360
So it depends on your company,
which I did in my and they will be using

81
00:07:04,360 --> 00:07:07,560
so that you guys are compatible
with both the IDs.

82
00:07:12,720 --> 00:07:15,600
All right, guys,
let's start from the region.

83
00:07:15,600 --> 00:07:19,320
So let's start from programing.

84
00:07:20,000 --> 00:07:25,800
What is programing?

85
00:07:25,800 --> 00:07:28,200
Who wants to give it
a shot? What is programing?

86
00:07:29,280 --> 00:07:31,680
It's too early here.

87
00:07:31,680 --> 00:07:36,000
I didn't I did not save previous
session, Eugene.

88
00:07:36,760 --> 00:07:39,240
What do you mean
you didn't save the previous session?

89
00:07:39,240 --> 00:07:49,960
You mean the code that you were writing
during the sessions?

90
00:07:49,960 --> 00:07:51,160
It's fine,

91
00:07:51,800 --> 00:07:52,560
but make sure you.

92
00:07:52,560 --> 00:07:55,440
You guys are saving those

93
00:07:55,440 --> 00:07:56,080
notes.

94
00:07:56,360 --> 00:07:58,200
The the code that you will be writing
later on.

95
00:07:58,200 --> 00:08:00,320
We will be teaching you a tool.

96
00:08:00,320 --> 00:08:03,040
The tool will save the the code for

97
00:08:03,040 --> 00:08:26,400
you will automatically.

98
00:08:26,400 --> 00:08:31,960
So programing is a writing instructions

99
00:08:31,960 --> 00:08:34,840
for the machine to execute

100
00:08:36,000 --> 00:08:38,520
list of instructions given to computer

101
00:08:38,600 --> 00:08:43,640
to perform particular task
without any mistakes that they attempt

102
00:08:43,880 --> 00:08:47,480
to get a computer
to complete a specific task

103
00:08:47,480 --> 00:08:50,200
without making mistakes.

104
00:08:51,600 --> 00:08:53,640
So it's simple. It's

105
00:08:54,880 --> 00:08:56,160
giving

106
00:08:56,880 --> 00:08:59,760
instructions to the computer

107
00:09:01,960 --> 00:09:05,560
to solve a

108
00:09:05,760 --> 00:09:06,760
problem.

109
00:09:06,760 --> 00:09:10,520
Okay, so this problem, it can be anything,

110
00:09:11,720 --> 00:09:12,880
let's say, for example.

111
00:09:12,880 --> 00:09:14,920
So you guys are

112
00:09:15,400 --> 00:09:17,120
ASP.NET engineers.

113
00:09:17,120 --> 00:09:19,520
So before ASP.NET engineers,

114
00:09:20,880 --> 00:09:23,520
people used to test websites or

115
00:09:23,760 --> 00:09:26,880
mobile applications
and other things manually.

116
00:09:27,440 --> 00:09:34,840
So let's say, for example,
if they have to,

117
00:09:34,840 --> 00:09:36,560
if they have to

118
00:09:41,680 --> 00:09:43,440
if they have to test this Web site.

119
00:09:43,440 --> 00:09:44,080
Right?

120
00:09:44,200 --> 00:09:49,080
So and if you are manually testing it,
so what you will do,

121
00:09:49,080 --> 00:09:53,720
you have a go ahead and you will check
manually if the logo is being displayed

122
00:09:53,720 --> 00:09:54,840
properly or not.

123
00:09:54,840 --> 00:09:58,320
If the position of the logo logo
is proper or not,

124
00:09:58,920 --> 00:10:01,280
you will check,
you will click on this home button.

125
00:10:01,720 --> 00:10:05,640
Okay, You will check
if that click on that home button.

126
00:10:05,640 --> 00:10:11,280
If it takes you to the proper web page
or not, forget you can click on courses.

127
00:10:11,640 --> 00:10:14,360
So you will do all of this manually. Okay.

128
00:10:14,760 --> 00:10:20,040
And what happens is that
because the the IP sector is so fast,

129
00:10:21,240 --> 00:10:22,560
these websites,

130
00:10:22,560 --> 00:10:26,640
they they
they keep on getting new features each day

131
00:10:27,360 --> 00:10:30,960
and what happens
is that when we add new features

132
00:10:31,960 --> 00:10:34,520
more, sometimes

133
00:10:34,520 --> 00:10:38,360
it does not effect the previous features,
but a lot of times

134
00:10:39,080 --> 00:10:41,880
when we are adding something new
to a website,

135
00:10:42,480 --> 00:10:46,360
it can introduce some bugs
in the previous functionality.

136
00:10:46,800 --> 00:10:50,560
So let's say there are like one, two,

137
00:10:50,560 --> 00:10:54,200
three, four, five, six, seven,
eight buttons in here right now.

138
00:10:54,200 --> 00:10:55,640
Okay, eight links in here.

139
00:10:55,640 --> 00:10:58,000
Let's say tomorrow you add a new button

140
00:10:58,000 --> 00:11:01,080
and the previous buttons,
did they stop working?

141
00:11:01,320 --> 00:11:03,480
Now what do you have to do?

142
00:11:03,480 --> 00:11:06,560
All of these steps
that you have taken previously

143
00:11:07,560 --> 00:11:11,480
to test this website,
you have to repeat all of those steps.

144
00:11:11,720 --> 00:11:13,720
Okay, All of those steps.

145
00:11:13,960 --> 00:11:16,560
And it will take a huge amount of time.

146
00:11:16,560 --> 00:11:17,920
So to avoid that

147
00:11:20,040 --> 00:11:20,760
companies this

148
00:11:20,760 --> 00:11:23,760
doctor, this is position
they started this mechanism

149
00:11:23,760 --> 00:11:27,440
to automate this process
because this website is very simple.

150
00:11:27,440 --> 00:11:28,440
Think of

151
00:11:29,400 --> 00:11:32,160
think of the think of websites like Amazon

152
00:11:32,160 --> 00:11:35,680
or Facebook or other websites
that are complex.

153
00:11:36,120 --> 00:11:38,720
So if you have to make sure that

154
00:11:38,720 --> 00:11:41,400
when you are adding any new feature,

155
00:11:42,080 --> 00:11:45,120
it does not affect the previous features.

156
00:11:46,040 --> 00:11:48,440
Each time you add something

157
00:11:48,440 --> 00:11:52,040
new, you have to test
all the previous features

158
00:11:52,040 --> 00:11:55,680
and if you are doing it manually,
it will take a lot of time.

159
00:11:55,920 --> 00:11:57,160
That means

160
00:11:57,880 --> 00:12:01,000
it can take up to months
to introduce a new feature.

161
00:12:02,640 --> 00:12:05,680
So what do you guys will be doing instead?

162
00:12:05,880 --> 00:12:08,360
You guys will be writing instructions

163
00:12:09,000 --> 00:12:11,240
with the help of Java programing language.

164
00:12:11,720 --> 00:12:14,200
To automate this, your computer

165
00:12:14,240 --> 00:12:17,440
will automatically test
all of the buttons.

166
00:12:17,440 --> 00:12:21,080
It will verify automatically
if when you are

167
00:12:21,120 --> 00:12:24,600
when you click on a button,
if you learned on the proper page or not,

168
00:12:24,600 --> 00:12:28,960
okay, it will automatically check
if you are on the home page.

169
00:12:29,000 --> 00:12:29,560
This this

170
00:12:30,680 --> 00:12:31,360
also is where you

171
00:12:31,360 --> 00:12:34,840
also the button is displayed or not
if this logo is being displayed or not.

172
00:12:35,240 --> 00:12:38,200
If the position of this logo is proper
or not,

173
00:12:38,200 --> 00:12:42,000
it will do all of this automatically
with the help of programing.

174
00:12:42,000 --> 00:12:46,200
So we will write the program once

175
00:12:46,880 --> 00:12:51,120
and every time we have
passed this website, we will just click

176
00:12:51,120 --> 00:12:56,760
on that play button and all of the testing
will be done for us automatically.

177
00:12:56,760 --> 00:12:59,720
Okay, so you it's a one time effort,
but it can so

178
00:12:59,840 --> 00:13:02,000
it can save a lot of time in the future.

179
00:13:03,200 --> 00:13:05,800
So we will be instructing

180
00:13:05,800 --> 00:13:09,360
our computer to do this
task with the help of programing.

181
00:13:09,600 --> 00:13:13,520
Now you guys can use programing
to create softwares as well.

182
00:13:14,040 --> 00:13:16,560
Softwares like Google Chrome, Slack,

183
00:13:16,560 --> 00:13:20,880
Zoom, Windows operating System,
iOS operating system,

184
00:13:21,240 --> 00:13:24,640
all of this stuff that you guys see
on laptops, mobile phones,

185
00:13:25,080 --> 00:13:28,720
smartphones, you guys can create
those applications as well.

186
00:13:28,720 --> 00:13:31,400
Okay. Again, they are instructions.

187
00:13:31,400 --> 00:13:33,520
So you are giving instructions
to your computer

188
00:13:33,520 --> 00:13:37,800
that take a computer
whenever someone tries to click on this

189
00:13:38,880 --> 00:13:40,640
this button that says Vicious,

190
00:13:40,640 --> 00:13:44,960
please show him
the options are like enable login control.

191
00:13:45,240 --> 00:13:47,920
So these are again, all instructions.

192
00:13:48,360 --> 00:13:50,960
So you have written this line

193
00:13:50,960 --> 00:13:53,160
by line, piece by piece,

194
00:13:54,280 --> 00:13:57,400
that computer

195
00:13:57,400 --> 00:14:01,320
or computer takes those instructions
and executes those instructions.

196
00:14:01,320 --> 00:14:05,160
All of the possible possible scenarios
like clicking on this free button

197
00:14:05,160 --> 00:14:07,080
and getting all of these options

198
00:14:07,080 --> 00:14:10,920
again, clicking on this button
and then getting all of these options.

199
00:14:10,920 --> 00:14:13,120
And when you click on this option,
something happens

200
00:14:13,240 --> 00:14:15,760
so that that ping is already

201
00:14:16,040 --> 00:14:21,080
someone has already talked about that
process that if someone will click either

202
00:14:21,120 --> 00:14:25,280
chosen that option, if that link is
displayed, then I will perform this task.

203
00:14:25,280 --> 00:14:27,600
Then I will perform this, this, this task.

204
00:14:27,600 --> 00:14:29,280
Look, this or all of this.

205
00:14:29,280 --> 00:14:32,520
It is written in the form of programing
with the help of some kind

206
00:14:32,520 --> 00:14:33,560
of programing language

207
00:14:35,240 --> 00:14:36,760
Programing is a process.

208
00:14:36,760 --> 00:14:41,080
It is giving instructions to the computer
to solve a problem.

209
00:14:41,080 --> 00:14:41,640
Okay.

210
00:14:41,640 --> 00:14:45,720
And all of these programs that you see,
they are the they are example

211
00:14:45,720 --> 00:14:50,640
of all these instructions.

212
00:14:50,640 --> 00:14:52,920
So my next question is what is Java then?

213
00:14:53,200 --> 00:14:57,520
Okay, so programing is solving the
some some kind of problem

214
00:14:57,680 --> 00:15:00,280
instructing a computer
to solve some kind of problem.

215
00:15:00,280 --> 00:15:08,760
Then what is Java?

216
00:15:08,760 --> 00:15:10,800
So are you facing any issues

217
00:15:16,560 --> 00:15:16,960
or are not

218
00:15:16,960 --> 00:15:20,520
computers, programing language,
the language from those instructions?

219
00:15:20,520 --> 00:15:21,200
Right.

220
00:15:21,240 --> 00:15:24,240
So if you have to ask someone

221
00:15:24,520 --> 00:15:26,640
to do something for you, right.

222
00:15:27,360 --> 00:15:32,240
So you in real life, you can
communicate it to the other person.

223
00:15:32,240 --> 00:15:36,960
But before the other person can understand
both of you,

224
00:15:37,040 --> 00:15:40,880
you must understand
that medium of instructions, right?

225
00:15:41,280 --> 00:15:44,720
So let's say if two persons
they both non English language

226
00:15:45,120 --> 00:15:47,720
now one of them can tell,

227
00:15:47,720 --> 00:15:51,000
one of them can give instructions
in English language

228
00:15:51,000 --> 00:15:55,160
and the other person can understand and
then it can execute those instructions.

229
00:15:55,800 --> 00:16:00,400
So if we want our computers,
our laptops to solve something,

230
00:16:00,400 --> 00:16:04,320
for us to do something for us,
we also need that medium.

231
00:16:04,320 --> 00:16:06,440
We also need that language. Okay.

232
00:16:06,840 --> 00:16:09,560
So in real life, as we have languages

233
00:16:09,560 --> 00:16:13,920
like English, French,
Spanish, Arabic, Chinese,

234
00:16:14,160 --> 00:16:19,760
this Java is the language
of computers, okay? So

235
00:16:21,040 --> 00:16:23,560
Java is a

236
00:16:24,760 --> 00:16:26,440
programing

237
00:16:26,640 --> 00:16:33,600
language.

238
00:16:33,600 --> 00:16:35,320
What about the eclipse?

239
00:16:35,320 --> 00:16:37,600
What is the application

240
00:16:42,440 --> 00:16:46,200
idea and where does this idea
E stands for?

241
00:16:46,920 --> 00:16:52,200
Okay,

242
00:16:52,200 --> 00:16:56,720
it's a extensible
integrated development environment.

243
00:16:57,080 --> 00:16:59,480
Yeah. So

244
00:17:00,560 --> 00:17:03,480
can you give me some analogies of this

245
00:17:03,480 --> 00:17:14,560
eclipse in real life?

246
00:17:14,560 --> 00:17:15,360
Except.

247
00:17:15,480 --> 00:17:18,920
All right, so what
what kind of tools we use

248
00:17:18,920 --> 00:17:25,320
when we have to write something
in English?

249
00:17:25,320 --> 00:17:31,280
The word right, We can use the word
to write that that program, those lesser

250
00:17:31,280 --> 00:17:35,880
essays or any other instructions
or letters or applications.

251
00:17:36,240 --> 00:17:36,880
Right.

252
00:17:36,880 --> 00:17:40,720
Or we can use PowerPoint
if we have to deal with a lot of images.

253
00:17:40,720 --> 00:17:41,440
Right.

254
00:17:41,560 --> 00:17:45,960
So C++ basically is a software
that will help you write

255
00:17:46,000 --> 00:17:49,440
because it will help you execute the code.

256
00:17:49,800 --> 00:17:52,120
It will help you manage that code. Okay.

257
00:17:52,120 --> 00:17:54,560
And it can also do many of things.

258
00:17:54,560 --> 00:18:23,880
But we learn those things step by step,
right?

259
00:18:23,880 --> 00:18:26,520
Okay. So I have used this, this,

260
00:18:28,000 --> 00:18:31,160
this, this combination of two words
I'm using that

261
00:18:31,200 --> 00:18:34,400
if help us execute Java programs.

262
00:18:35,040 --> 00:18:38,040
So can you guys tell me about
what are these programs?

263
00:18:38,240 --> 00:18:41,240
When I say programs and Java programs,
we're doing mean

264
00:18:41,240 --> 00:18:42,240
by that

265
00:18:48,240 --> 00:18:49,720
or right?

266
00:18:49,720 --> 00:18:53,040
So it simply is simply the instruction

267
00:18:53,320 --> 00:18:56,640
instructions that I applied in
Java programing language.

268
00:18:56,640 --> 00:18:57,320
Okay.

269
00:18:58,280 --> 00:19:00,120
So it's a

270
00:19:00,600 --> 00:19:03,640
collection of

271
00:19:06,560 --> 00:19:08,960
instructions

272
00:19:09,600 --> 00:19:13,080
in general.

273
00:19:13,080 --> 00:19:18,560
So as we move forward in this course,
I will be using new new keywords, okay?

274
00:19:18,600 --> 00:19:20,640
I will be using new terminologies.

275
00:19:20,640 --> 00:19:24,720
So at any point of time,
if I am writing a keyword

276
00:19:24,720 --> 00:19:29,640
or if I am speaking about something
and that thing is not clear to you

277
00:19:29,640 --> 00:19:32,360
or it does not make sense to you,
stop me right there.

278
00:19:32,400 --> 00:19:33,440
Ask me in the past

279
00:19:33,440 --> 00:19:37,320
that you have written this Java program
or what do you mean by this Java program?

280
00:19:37,320 --> 00:19:39,120
What are these programs?

281
00:19:39,120 --> 00:19:42,320
So once these smaller pieces
are clear to you,

282
00:19:42,440 --> 00:19:45,720
then you will be able
to figure out the bigger picture easily.

283
00:19:45,720 --> 00:19:51,120
Because I will be using a lot of technical
terminology is technical keywords.

284
00:19:51,120 --> 00:19:54,920
Okay, So make sure that you understand
those terminologies as well.

285
00:19:55,000 --> 00:20:01,840
Okay.

286
00:20:01,840 --> 00:20:03,040
And one more thing, guys.

287
00:20:04,080 --> 00:20:07,400
The source of so let's say some of you are

288
00:20:08,880 --> 00:20:12,880
maybe some of you will like
I would like to revise the concepts

289
00:20:13,280 --> 00:20:15,360
that you have learned in a previous class.

290
00:20:15,920 --> 00:20:19,840
So the main source of that
will be these slides.

291
00:20:20,160 --> 00:20:20,640
Okay.

292
00:20:20,640 --> 00:20:24,440
And what I will do,
I will be sharing these slides

293
00:20:25,320 --> 00:20:29,320
and if 5 to 10 minutes video
before the class.

294
00:20:29,320 --> 00:20:35,120
Okay, so tomorrow, before tomorrow's
class, I will share the fliers in advance.

295
00:20:35,120 --> 00:20:37,960
I will share a video in advance
right after today's class.

296
00:20:38,560 --> 00:20:42,120
So I want you to at least
just skim through those slides

297
00:20:42,280 --> 00:20:46,560
so that you kind of have an idea in
your mind that what you will be learning

298
00:20:46,560 --> 00:20:47,880
in the next class. Okay.

299
00:20:47,880 --> 00:20:52,600
And watch that in that small video
so that when I am saying something,

300
00:20:52,600 --> 00:20:53,680
you are not listening it

301
00:20:53,680 --> 00:20:57,320
for the first time and you can ask much
more sensible questions.

302
00:20:58,040 --> 00:20:59,120
And one more thing, guys,

303
00:21:00,360 --> 00:21:03,360
when you are reading these slides,

304
00:21:03,360 --> 00:21:04,800
okay, give me these slides.

305
00:21:04,800 --> 00:21:06,480
They are available on canvas.

306
00:21:06,480 --> 00:21:08,800
I hope you guys have access to the canvas.

307
00:21:08,880 --> 00:21:11,600
Is there anyone who does
not have access to the canvas

308
00:21:14,240 --> 00:21:15,400
so you can use the canvas

309
00:21:15,400 --> 00:21:33,840
on your mobile phones
or on your computers?

310
00:21:33,840 --> 00:21:37,840
So all of the material related to

311
00:21:37,840 --> 00:21:41,880
Java will be inside this Java folder.

312
00:21:42,560 --> 00:21:45,440
And for each class

313
00:21:45,800 --> 00:21:47,880
you guys will be having a separate folder.

314
00:21:48,600 --> 00:21:53,960
Okay, You can, you can find out
all of the code that I will be writing.

315
00:21:54,000 --> 00:21:57,920
You can get all of this slide,
all of the north

316
00:21:57,920 --> 00:22:01,880
and everything that I will be writing
or using during this class.

317
00:22:01,880 --> 00:22:04,080
So you guys don't have to write any notes

318
00:22:05,120 --> 00:22:07,800
just to listen to me pay attention.

319
00:22:07,800 --> 00:22:10,760
And when I am doing something,
try to follow me.

320
00:22:10,760 --> 00:22:11,320
Okay?

321
00:22:11,320 --> 00:22:14,400
And always stop me if you think I am going
too fast.

322
00:22:14,880 --> 00:22:15,560
Okay?

323
00:22:15,640 --> 00:22:20,440
Otherwise
you guys will be busy catching me

324
00:22:20,440 --> 00:22:29,560
and you guys will be missing a lot.

325
00:22:29,560 --> 00:22:40,800
So let me check what else we learned.

326
00:22:40,800 --> 00:22:41,120
Okay.

327
00:22:41,120 --> 00:22:43,960
So we learned about the main
method as well, right?

328
00:22:44,200 --> 00:22:46,080
So let's say

329
00:22:49,000 --> 00:22:50,760
let me create again.

330
00:22:50,760 --> 00:22:53,200
So, guys, I want to create a new package.

331
00:22:53,400 --> 00:22:53,800
Okay?

332
00:22:53,800 --> 00:22:56,840
Are we going to be learning
what Canvas tells us today

333
00:22:56,840 --> 00:23:00,480
or are we doing what we missed last week
since?

334
00:23:00,960 --> 00:23:05,720
So, yes, you guys will be learning
what you missed in the last week.

335
00:23:06,000 --> 00:23:08,880
Okay. I will be starting from there,

336
00:23:08,880 --> 00:23:11,040
so I will fix the canvas as well

337
00:23:11,480 --> 00:23:13,960
so that you guys don't don't get confused.

338
00:23:14,400 --> 00:23:18,400
So guys, Art, for today's class,
I want to create a new package.

339
00:23:18,600 --> 00:23:19,440
Well, what should I do?

340
00:23:19,440 --> 00:23:28,480
How can I create a new package
in my in my project?

341
00:23:28,480 --> 00:23:29,880
Okay, so.

342
00:23:30,320 --> 00:23:33,240
So what should I click today?

343
00:23:33,240 --> 00:23:33,840
Right click.

344
00:23:33,840 --> 00:23:36,520
Or should I left?

345
00:23:36,520 --> 00:23:39,480
I should first click on this source.

346
00:23:39,560 --> 00:23:43,720
This s r c then I should right click.

347
00:23:44,160 --> 00:23:48,200
I should say new
and then I should say package.

348
00:23:48,840 --> 00:23:50,880
I should say package.

349
00:23:50,880 --> 00:23:54,760
And then I can say Bong Dark.

350
00:23:54,760 --> 00:23:57,080
So I want you to follow me right now.

351
00:23:57,080 --> 00:24:00,280
I want you to follow me right
click on your see folders

352
00:24:00,920 --> 00:24:16,600
and let's create a new package.

353
00:24:16,600 --> 00:24:17,880
We are on Eclipse,

354
00:24:18,960 --> 00:24:21,000
we are on Eclipse

355
00:24:28,320 --> 00:24:29,800
merchandise.

356
00:24:30,560 --> 00:24:35,000
I have noticed this
that a lot of you have sent me messages

357
00:24:35,000 --> 00:24:39,000
directly, personally,
regarding your reputation,

358
00:24:39,000 --> 00:24:42,360
all your eclipse issues,
your classes and stuff like that.

359
00:24:42,720 --> 00:24:45,800
So remember, guys, all of us in here,

360
00:24:45,840 --> 00:24:48,720
all of you, you are here to learn.

361
00:24:48,800 --> 00:24:51,280
Okay, Don't be shy.

362
00:24:51,280 --> 00:24:54,400
There are no dumb questions
or anything like that.

363
00:24:55,080 --> 00:24:59,200
If something is not clear to you,
don't think what people will say,

364
00:24:59,200 --> 00:25:00,440
what other students will say.

365
00:25:00,440 --> 00:25:02,640
If I post this thing
in this Internet sport.

366
00:25:03,000 --> 00:25:05,120
Okay, you have to learn.

367
00:25:05,120 --> 00:25:05,960
Definitely.

368
00:25:05,960 --> 00:25:09,200
You will be learning
if you are asking the questions.

369
00:25:09,200 --> 00:25:09,520
Okay.

370
00:25:09,520 --> 00:25:10,680
So if you are not asking the

371
00:25:10,680 --> 00:25:15,000
asking questions, I personally believe
that you will be missing a lot around 50,

372
00:25:15,000 --> 00:25:17,880
but you can miss up to 50%
if you are not asking questions.

373
00:25:18,480 --> 00:25:20,400
So don't finish. I don't wait.

374
00:25:20,400 --> 00:25:23,880
Do not think that what others will say
if something is not clear

375
00:25:23,880 --> 00:25:26,760
to you also in this course
channel, Tag me.

376
00:25:26,920 --> 00:25:28,920
Tag me in there. Okay. I'll ask others.

377
00:25:28,920 --> 00:25:30,480
Okay, You're fine.

378
00:25:30,480 --> 00:25:31,800
Everyone is here.

379
00:25:31,800 --> 00:25:34,120
Everyone in here is here is to learn.

380
00:25:34,600 --> 00:25:36,760
How can you create CRC?

381
00:25:36,760 --> 00:25:42,240
So you need to create
that as you have to create a new project.

382
00:25:42,400 --> 00:25:42,680
Okay.

383
00:25:42,680 --> 00:25:44,800
That that's how state is created
automatically

384
00:25:44,800 --> 00:25:50,800
when you create a new project
that I showed in the previous session,

385
00:25:50,800 --> 00:25:55,120
you knew
you don't have that project as well.

386
00:25:55,120 --> 00:26:00,600
So if you want to create that, that's I
you have to let me show you.

387
00:26:00,600 --> 00:26:02,080
So click on this file.

388
00:26:03,480 --> 00:26:04,560
Okay, Click on this

389
00:26:04,560 --> 00:26:08,400
file, then click on new

390
00:26:08,400 --> 00:26:10,760
and then then click on this project.

391
00:26:11,400 --> 00:26:14,240
So those who don't have SAIC, please
follow me.

392
00:26:14,760 --> 00:26:17,480
Fine.

393
00:26:17,480 --> 00:26:18,960
Then new

394
00:26:19,320 --> 00:26:21,200
and then project.

395
00:26:21,920 --> 00:26:22,040
Okay.

396
00:26:22,040 --> 00:26:22,440
Okay.

397
00:26:25,200 --> 00:26:27,000
So then you guys click on this file.

398
00:26:27,000 --> 00:26:28,160
Neo, do you guys see this?

399
00:26:28,160 --> 00:26:38,400
The same window
as I am seeing on my screen.

400
00:26:38,400 --> 00:26:42,440
So make sure you have selected this
Java project from here.

401
00:26:44,160 --> 00:26:45,000
Okay?

402
00:26:45,000 --> 00:26:47,160
Then click on next

403
00:26:48,960 --> 00:26:51,680
and give any name to your project.

404
00:26:51,680 --> 00:26:51,960
Okay.

405
00:26:51,960 --> 00:26:54,480
I will suggest you to give some sensible
name like

406
00:26:55,160 --> 00:26:57,680
start batch 11

407
00:27:01,720 --> 00:27:02,520
project.

408
00:27:02,520 --> 00:27:06,160
Okay.

409
00:27:06,160 --> 00:27:11,480
Not Nyah this screen in here
I cannot zoom in.

410
00:27:11,520 --> 00:27:12,080
Okay.

411
00:27:12,080 --> 00:27:15,640
It is not possible in Eclipse,
but I can zoom.

412
00:27:15,920 --> 00:27:20,760
Did this call that this little window
behind this where I will be acting before.

413
00:27:20,920 --> 00:27:30,560
Okay.

414
00:27:30,560 --> 00:27:34,520
So have you guys
given a name to your project

415
00:27:38,640 --> 00:27:41,560
so he know this

416
00:27:41,560 --> 00:27:45,160
form dog syntax, node class, this package.

417
00:27:45,160 --> 00:27:46,360
It's five packages.

418
00:27:46,360 --> 00:27:46,920
Okay.

419
00:27:46,920 --> 00:27:50,080
It's not for project, but right now

420
00:27:50,080 --> 00:27:56,120
we are creating a project.

421
00:27:56,120 --> 00:27:59,200
I found it my C in that folder.

422
00:27:59,360 --> 00:28:00,720
Okay, it's fine. It's fine.

423
00:28:00,720 --> 00:28:04,440
So still, if you some of you are new,
I see some of you and you are

424
00:28:05,960 --> 00:28:08,000
in the last session.

425
00:28:08,000 --> 00:28:11,280
So those who don't have before
projects here

426
00:28:11,960 --> 00:28:14,800
guys, please create projects like this.

427
00:28:15,000 --> 00:28:17,840
Okay, so if I click on Finish,

428
00:28:18,160 --> 00:28:20,720
I can see my project in here.

429
00:28:20,960 --> 00:28:26,120
Okay?

430
00:28:26,120 --> 00:28:28,920
I can see my project in here now.

431
00:28:28,920 --> 00:28:34,080
And if I expand on this now,
I see my S C folder.

432
00:28:34,560 --> 00:28:37,640
So is there anyone who still don't
have this

433
00:28:37,960 --> 00:28:46,560
RC folder? So

434
00:28:48,400 --> 00:28:48,960
Mohana.

435
00:28:48,960 --> 00:28:51,960
Why, why don't you have that SRT folder?

436
00:28:52,760 --> 00:28:54,400
Have you created a new project

437
00:28:57,880 --> 00:28:59,880
or. I don't you have this.

438
00:28:59,880 --> 00:29:04,560
Why don't you still have this?

439
00:29:04,560 --> 00:29:05,880
Okay. Okay then. Then please follow.

440
00:29:05,880 --> 00:29:09,120
Make clear that project
because I will be writing

441
00:29:09,120 --> 00:29:17,120
the code in here.

442
00:29:17,120 --> 00:29:18,760
Please create a new project.

443
00:29:18,760 --> 00:29:20,360
Do you want me to show it again?

444
00:29:20,360 --> 00:29:26,360
How to create a new project?

445
00:29:26,360 --> 00:29:28,280
Okay, let. Let
let me repeat one more time.

446
00:29:28,280 --> 00:29:31,360
So, guys, those who don't have this
project, please follow me.

447
00:29:31,680 --> 00:29:35,640
Okay, So I have deleted that project.

448
00:29:35,640 --> 00:29:37,880
I go to file,

449
00:29:38,200 --> 00:29:41,040
I click on Neo,

450
00:29:41,240 --> 00:29:43,920
then isolate, select Java Project.

451
00:29:45,240 --> 00:29:49,480
Okay.

452
00:29:49,480 --> 00:29:55,040
And then you should see this
window in here.

453
00:29:55,040 --> 00:30:02,520
So you see this window.

454
00:30:02,520 --> 00:30:03,120
Okay.

455
00:30:03,120 --> 00:30:06,360
And in here
now you can give any name to your project.

456
00:30:06,360 --> 00:30:08,440
So let's see aspect

457
00:30:10,160 --> 00:30:11,640
of Java

458
00:30:11,640 --> 00:30:15,560
badge
and I want project or anything like that.

459
00:30:15,600 --> 00:30:15,880
Okay,

460
00:30:16,880 --> 00:30:19,040
so give
any name and simply click on Finish

461
00:30:20,720 --> 00:30:23,280
and then you should see your project.

462
00:30:23,320 --> 00:30:24,360
And here,

463
00:30:25,080 --> 00:30:33,440
do you see the project Now?

464
00:30:33,440 --> 00:30:34,680
Okay, great.

465
00:30:35,400 --> 00:30:39,360
So let me do this one.

466
00:30:39,360 --> 00:30:41,200
Yes. Dollar Basics is also fine.

467
00:30:41,200 --> 00:30:47,440
You you can give any name to your project.

468
00:30:47,440 --> 00:30:47,840
Okay.

469
00:30:47,840 --> 00:30:51,880
Now I want you to right
click on your s C folder.

470
00:30:51,880 --> 00:30:57,240
So I want you to first expand
your your project using this arrow.

471
00:30:58,080 --> 00:31:00,160
Then right click

472
00:31:01,560 --> 00:31:03,200
it, then right click

473
00:31:03,200 --> 00:31:06,640
and then click on this package.

474
00:31:06,920 --> 00:31:07,560
Okay.

475
00:31:07,680 --> 00:31:11,680
So right click on your s RC folder,

476
00:31:12,480 --> 00:31:16,080
then select new and then select package

477
00:31:23,280 --> 00:31:26,280
and then give and this package

478
00:31:26,280 --> 00:31:31,080
and then like on the syntax,

479
00:31:31,080 --> 00:31:45,440
not the last one.

480
00:31:45,440 --> 00:31:48,480
So have you guys created the new package?

481
00:31:48,640 --> 00:31:49,440
I love you.

482
00:31:49,440 --> 00:31:53,040
This class one package.

483
00:31:53,040 --> 00:31:56,120
Okay, let's get,
let's create a class inside this package.

484
00:31:56,120 --> 00:31:57,360
Okay, Let's create a class.

485
00:31:58,640 --> 00:31:59,880
So what is it?

486
00:31:59,880 --> 00:32:01,520
Class? Guys, I'm using this.

487
00:32:01,520 --> 00:32:03,080
This keyword class. Right?

488
00:32:03,080 --> 00:32:10,520
So what is this class?

489
00:32:10,520 --> 00:32:12,080
Yes, we.

490
00:32:12,080 --> 00:32:15,200
We also call it a program.

491
00:32:15,200 --> 00:32:17,200
So if just simple file.

492
00:32:17,200 --> 00:32:17,600
Okay.

493
00:32:17,600 --> 00:32:21,600
It's a simple file with Dart and Java
extension.

494
00:32:21,920 --> 00:32:22,480
Okay.

495
00:32:22,480 --> 00:32:26,440
So any file
that has this dog to Java extension,

496
00:32:27,360 --> 00:32:32,960
we call it a class, even that class
as the main method as well.

497
00:32:33,320 --> 00:32:36,120
We call it a program in Java program.
Okay.

498
00:32:36,440 --> 00:32:39,600
So, so any file with DART

499
00:32:39,600 --> 00:32:41,880
and Java extension is a class.

500
00:32:42,800 --> 00:32:45,360
And if that class if that file

501
00:32:45,360 --> 00:32:48,960
has that main method,
we call it a program.

502
00:32:50,040 --> 00:32:52,200
Okay, So let's create a class

503
00:33:00,120 --> 00:33:02,920
and let's call it variables Demo one.

504
00:33:03,120 --> 00:33:03,920
Okay.

505
00:33:03,920 --> 00:33:08,120
And I am selecting this checkbox in here,
okay?

506
00:33:08,160 --> 00:33:13,440
I'm selecting this checkbox in here
so that I don't have to write Main method.

507
00:33:13,440 --> 00:33:22,440
I don't have to write.

508
00:33:22,440 --> 00:33:28,000
And so I give any name to my my class.

509
00:33:28,880 --> 00:33:31,200
Then I selected this checkbox

510
00:33:31,200 --> 00:33:34,320
that says public start date, avoid me.

511
00:33:34,680 --> 00:33:35,000
Okay.

512
00:33:35,000 --> 00:33:41,880
So that eclipse automatically arrives
the main method for me.

513
00:33:41,880 --> 00:33:43,560
Okay. And then I clicked on finished

514
00:33:47,480 --> 00:33:48,520
two days package

515
00:33:48,520 --> 00:33:52,320
name must be com or class dart syntax to.

516
00:33:52,320 --> 00:33:56,120
Okay so let's say guys by mistake. I.

517
00:33:56,480 --> 00:34:00,640
I forgot how I forgot that
it should be class two.

518
00:34:00,640 --> 00:34:01,360
Okay.

519
00:34:01,400 --> 00:34:04,840
Or let's say
I have given any name to my file

520
00:34:05,400 --> 00:34:07,640
and and the name is wrong, right?

521
00:34:08,000 --> 00:34:09,960
So how can I rename it?

522
00:34:09,960 --> 00:34:14,800
Okay, so as we can rename our normal files
on our computer,

523
00:34:14,800 --> 00:34:18,720
we can rename the packages
the files in here as back.

524
00:34:18,960 --> 00:34:19,680
Okay.

525
00:34:19,800 --> 00:34:24,480
So if let's say I have given wrong names,
I will right click.

526
00:34:24,480 --> 00:34:25,120
Okay.

527
00:34:27,480 --> 00:34:31,880
And then I will select this option

528
00:34:31,920 --> 00:34:38,320
that says refactor.

529
00:34:38,320 --> 00:34:42,000
Okay, so and then I will select a rename.

530
00:34:42,520 --> 00:34:43,960
Okay.

531
00:34:43,960 --> 00:34:48,400
So right
click on the package, then refactor,

532
00:34:49,480 --> 00:34:50,800
then rename.

533
00:34:50,800 --> 00:34:52,600
Do you guys see this option?

534
00:34:52,600 --> 00:35:01,840
You see this option. So

535
00:35:03,240 --> 00:35:04,080
before I can

536
00:35:04,080 --> 00:35:06,480
rename it eclipses is saying that hey,

537
00:35:07,080 --> 00:35:10,800
please make sure that you use
save the file first.

538
00:35:11,000 --> 00:35:11,240
Okay.

539
00:35:11,240 --> 00:35:14,640
Before you make any
if I will say okay, I will say the first

540
00:35:16,520 --> 00:35:18,320
and now I will change it

541
00:35:18,320 --> 00:35:20,440
from class one to class two.

542
00:35:21,840 --> 00:35:23,120
I am confused.

543
00:35:23,120 --> 00:35:24,800
So why are you confused?

544
00:35:24,800 --> 00:35:26,040
But it's confusing. You.

545
00:35:26,040 --> 00:35:28,280
I am just renaming a file name.

546
00:35:30,000 --> 00:35:44,040
I'm giving it a different name.

547
00:35:44,040 --> 00:35:44,920
Take your time. Right.

548
00:35:44,920 --> 00:35:48,000
Why? You are confused.

549
00:35:48,000 --> 00:35:53,680
So if you guys have given me package
as class one, if you have given this name

550
00:35:53,840 --> 00:35:56,480
last one, then yes,
you should be naming two class two

551
00:35:57,120 --> 00:36:02,800
because we are in the class right now.

552
00:36:02,800 --> 00:36:05,400
All that s Derek batch 11.

553
00:36:05,560 --> 00:36:08,640
That was just to show you
how to create a new package.

554
00:36:08,760 --> 00:36:12,760
But because I have already created
a project, I don't want to repeat

555
00:36:12,760 --> 00:36:13,920
all of that process.

556
00:36:13,920 --> 00:36:21,520
So that's why I give any random
name to that package.

557
00:36:21,520 --> 00:36:24,600
Baby class
we were told to name is Java Basics.

558
00:36:24,600 --> 00:36:26,840
It's also fine. It's also fine.

559
00:36:26,840 --> 00:36:28,080
Basics is also fine.

560
00:36:28,080 --> 00:36:30,080
You don't need to change it.

561
00:36:30,080 --> 00:36:31,320
The name can be anything

562
00:36:34,680 --> 00:36:38,400
if you
guys want, only give the name basics.

563
00:36:38,400 --> 00:36:41,080
It's fine. So right now you guys see?

564
00:36:42,000 --> 00:36:44,040
Let me, let me tell you why I gave it.

565
00:36:45,320 --> 00:36:47,600
I gave so far. Batch nine.

566
00:36:47,600 --> 00:36:51,200
I have this back
and this project in here on batch night.

567
00:36:51,440 --> 00:36:52,480
Okay, final batch.

568
00:36:52,480 --> 00:36:56,280
Then I have this dark batch,
and then I have this one.

569
00:36:56,360 --> 00:37:00,120
So for me, I am organizing
my code in a different way.

570
00:37:00,360 --> 00:37:01,080
Okay?

571
00:37:01,720 --> 00:37:04,520
Because you guys only have one project,
so you can.

572
00:37:04,520 --> 00:37:08,480
You can give any name to your project.

573
00:37:08,480 --> 00:37:09,920
Just naming is not that big.

574
00:37:09,920 --> 00:37:18,480
A big problem.

575
00:37:18,480 --> 00:37:21,480
Okay, So if you have our basics,
you can give that.

576
00:37:21,480 --> 00:37:24,040
If you have any other name,
there's also fine.

577
00:37:24,040 --> 00:37:24,920
You can keep track.

578
00:37:24,920 --> 00:37:33,240
It is clear case.

579
00:37:33,240 --> 00:37:37,240
Yes. Most of all, we can move the packages
and classes from one project

580
00:37:37,240 --> 00:37:41,040
to another project.

581
00:37:41,040 --> 00:37:41,760
So nice.

582
00:37:41,760 --> 00:37:52,320
What do you want me to show again? Yes.

583
00:37:52,720 --> 00:37:54,440
You can have this class.

584
00:37:54,440 --> 00:37:56,600
And the dialog basically says that.

585
00:37:56,880 --> 00:38:01,840
Okay, it's
just my way of organizing the code.

586
00:38:01,840 --> 00:38:03,760
It's just my way of organizing the code.

587
00:38:03,760 --> 00:38:06,960
You guys can organize your code
in a different manner.

588
00:38:07,200 --> 00:38:09,240
Okay, It's fine.

589
00:38:09,240 --> 00:38:14,040
So to to change the
name and you guys right click

590
00:38:16,000 --> 00:38:19,480
retain the name, you guys right click,

591
00:38:19,560 --> 00:38:21,720
then you click on Refactor

592
00:38:23,520 --> 00:38:26,320
and then rename.

593
00:38:26,320 --> 00:38:26,880
Okay,

594
00:38:28,640 --> 00:38:31,280
so right click refactor,

595
00:38:31,720 --> 00:38:40,480
then rename and then you can give
any new name to your package.

596
00:38:40,480 --> 00:39:27,000
Let me write it down in the north as well.

597
00:39:27,000 --> 00:39:29,040
Can you repeat it please?

598
00:39:29,040 --> 00:39:32,320
I already see this
coffee is not strong enough

599
00:39:41,400 --> 00:39:44,520
to put it in here.

600
00:39:45,840 --> 00:39:50,280
So this is how uranium.

601
00:39:50,280 --> 00:39:52,200
So right click

602
00:39:52,680 --> 00:39:54,400
the effective

603
00:39:54,720 --> 00:39:57,760
and then rename.

604
00:39:57,760 --> 00:39:59,320
Okay.

605
00:39:59,320 --> 00:40:03,600
What do I do
if it does not if I don't see cancel?

606
00:40:04,320 --> 00:40:09,120
Okay, so let's say I lost my consult.

607
00:40:09,440 --> 00:40:11,480
Okay, so I don't see my consult.

608
00:40:12,480 --> 00:40:14,880
So if you

609
00:40:17,000 --> 00:40:19,080
try to print out something

610
00:40:26,160 --> 00:40:31,480
so I don't see my console, I right click,

611
00:40:32,560 --> 00:40:35,760
I click on Run and then Java program.

612
00:40:36,480 --> 00:40:39,920
So now my console
will automatically appear.

613
00:40:40,400 --> 00:40:44,800
Okay.

614
00:40:44,800 --> 00:40:48,360
Is it allowed to use shortcuts
like you are not allowed name?

615
00:40:48,360 --> 00:40:49,840
Yes, almost definitely.

616
00:40:49,840 --> 00:40:51,480
You guys should be using the

617
00:40:52,560 --> 00:40:53,360
shortcuts.

618
00:40:53,360 --> 00:40:56,640
Okay.

619
00:40:56,640 --> 00:40:58,920
So what do you want me to do?

620
00:40:58,920 --> 00:40:59,720
Again?

621
00:41:01,080 --> 00:41:05,520
We can also select the class
name and click and do some typing.

622
00:41:05,760 --> 00:41:08,400
Yes, we can also be loaded etc.

623
00:41:08,400 --> 00:41:11,480
From there. Yes.

624
00:41:11,840 --> 00:41:25,800
Now while I rename the class
one to class two.

625
00:41:25,800 --> 00:41:28,440
Okay, so do you see a control now

626
00:41:31,080 --> 00:41:32,920
how you put in the system?

627
00:41:32,920 --> 00:41:35,040
I'll put intel.

628
00:41:35,040 --> 00:41:37,320
So I just wrote this line.

629
00:41:37,320 --> 00:41:39,840
I just wrote this line. Amita.

630
00:41:39,840 --> 00:41:41,680
I just wrote this line.

631
00:41:41,680 --> 00:41:45,960
I right click,
I execute and I see my output.

632
00:41:46,080 --> 00:41:52,680
That's it.

633
00:41:52,680 --> 00:42:01,280
So. All right.

634
00:42:01,280 --> 00:42:01,440
Okay.

635
00:42:01,440 --> 00:42:05,400
So tell me about this main method
or what is this main method?

636
00:42:05,400 --> 00:42:08,000
What is this public start table?

637
00:42:08,000 --> 00:42:12,200
What happens if I if I don't have this
main method in my program, what happens

638
00:42:19,680 --> 00:42:22,320
if they mean or right? If I

639
00:42:25,960 --> 00:42:29,400
let's say
if I so tried to follow me guys really

640
00:42:29,400 --> 00:42:33,360
that that is the right path and BSD

641
00:42:33,840 --> 00:42:36,920
all your your system dark outline in here

642
00:42:38,120 --> 00:42:39,920
and try to remove your main

643
00:42:39,920 --> 00:42:44,600
method.

644
00:42:44,600 --> 00:42:52,560
Have you guys removed your main method.

645
00:42:52,560 --> 00:42:53,040
Okay.

646
00:42:53,120 --> 00:42:55,800
Have you guys created this new file and

647
00:42:57,160 --> 00:42:59,480
and this main method in here?

648
00:42:59,480 --> 00:43:00,000
Okay.

649
00:43:00,000 --> 00:43:04,880
So try to remove that main method
and try to write this system down.

650
00:43:04,880 --> 00:43:06,560
But println,

651
00:43:06,840 --> 00:43:10,640
you see,
I'll have started getting this at us.

652
00:43:10,880 --> 00:43:11,320
Right?

653
00:43:11,320 --> 00:43:14,800
So if I don't have main matter
whether they are repos

654
00:43:15,120 --> 00:43:18,640
or whether you are in eclipse,
your code will not work.

655
00:43:18,640 --> 00:43:23,160
No execution, no starting by
your computer does not know from it.

656
00:43:23,160 --> 00:43:25,560
It should start executing the code.

657
00:43:25,560 --> 00:43:28,440
Okay. So even if I try to execute

658
00:43:31,360 --> 00:43:32,280
and if I say

659
00:43:32,280 --> 00:43:34,720
run as I don't see that run option,

660
00:43:35,560 --> 00:43:37,880
okay, I don't see that as option.

661
00:43:37,880 --> 00:43:42,000
And if I do, if I try to execute
from this one green button here,

662
00:43:42,640 --> 00:43:45,040
I, I get this error

663
00:43:45,880 --> 00:43:50,720
and BNSF main method not found in class.

664
00:43:51,240 --> 00:43:55,520
The last two variables demo one
and the addresses.

665
00:43:55,520 --> 00:43:58,560
Please define main method

666
00:43:58,560 --> 00:44:02,160
as public static void main.

667
00:44:02,800 --> 00:44:03,640
Okay.

668
00:44:03,680 --> 00:44:05,720
So your eclipse is trying to help.

669
00:44:05,840 --> 00:44:07,560
Your java is trying to help you.

670
00:44:07,560 --> 00:44:11,680
It is saying there take a half
that you don't have main method.

671
00:44:12,000 --> 00:44:14,520
Okay.
And that's why you are getting this add.

672
00:44:14,520 --> 00:44:17,920
If you want to fix it,
please create a main method.

673
00:44:18,600 --> 00:44:21,240
Yes, you should be creating a new class

674
00:44:22,120 --> 00:44:27,400
like like me and you should give it
a name as variables and more.

675
00:44:29,000 --> 00:44:33,120
And then this should be the name.

676
00:44:33,120 --> 00:44:36,320
So if I press control Z,

677
00:44:36,320 --> 00:44:38,600
I get my main method back.

678
00:44:38,640 --> 00:44:39,600
Okay. So it controls.

679
00:44:39,600 --> 00:44:41,520
It works in here as

680
00:44:43,560 --> 00:44:48,440
and if I execute, I get my output.

681
00:44:48,760 --> 00:44:49,680
Good morning.

682
00:44:49,680 --> 00:44:52,680
How do you change at the package name?

683
00:44:53,040 --> 00:44:56,720
So Catalina, I think I have showed
it at least five times

684
00:44:57,000 --> 00:44:59,680
how to change the package name.

685
00:45:01,400 --> 00:45:05,400
So have you joined the class right now?

686
00:45:05,400 --> 00:45:06,480
Were you late?

687
00:45:06,480 --> 00:45:07,760
Oh, you joined Justin.

688
00:45:07,760 --> 00:45:09,960
Okay, let me repeat it one more time.

689
00:45:09,960 --> 00:45:11,120
Definitely repeat one more time.

690
00:45:11,120 --> 00:45:15,320
So you right click on your package

691
00:45:18,560 --> 00:45:20,920
and then you select a refactor

692
00:45:21,960 --> 00:45:24,120
and then rename.

693
00:45:24,120 --> 00:45:28,920
Okay, What about Mad Cow?

694
00:45:28,920 --> 00:45:30,240
Do we go back?

695
00:45:30,240 --> 00:45:35,560
So it should be command Z on Mac.

696
00:45:35,560 --> 00:45:37,160
If this is how we rename it,

697
00:45:39,120 --> 00:45:40,320
let to know if if you still

698
00:45:40,320 --> 00:45:54,000
can't rename your package.

699
00:45:54,000 --> 00:45:58,480
Okay, let's actually move this line.

700
00:45:58,480 --> 00:46:00,200
No, it is not working.

701
00:46:00,200 --> 00:46:03,840
So is there anyone else who is using Mac?

702
00:46:04,040 --> 00:46:08,080
And again,
can you guys those who are using Mac

703
00:46:08,080 --> 00:46:11,080
and you try to undo using Command Z

704
00:46:12,600 --> 00:46:14,960
and if you can tell me if it is working

705
00:46:14,960 --> 00:46:18,920
or if it is working or not, it should work

706
00:46:20,880 --> 00:46:24,560
all to get back to Main using control
Z or commands.

707
00:46:24,560 --> 00:46:29,520
The Mac users Command Z, Windows
Users controls

708
00:46:30,000 --> 00:46:33,480
so far for those

709
00:46:34,920 --> 00:46:38,520
if it is not working,
I'm saying about the Mac users.

710
00:46:38,520 --> 00:46:40,800
So it is possible

711
00:46:41,840 --> 00:46:45,600
maybe because you have blinded that e

712
00:46:45,800 --> 00:46:50,120
you have used
that command the E to something else.

713
00:46:50,520 --> 00:46:53,280
So you can assign
different shortcuts on your Mac.

714
00:46:53,400 --> 00:46:57,360
If you have assigned a different shortcut
to that command, the shortcut,

715
00:46:57,880 --> 00:47:01,520
the different command,
then it will not work, okay?

716
00:47:01,520 --> 00:47:03,160
It will not work.

717
00:47:03,160 --> 00:47:07,080
So for that, if you want to fix it,
you can also in this port channel

718
00:47:07,080 --> 00:47:12,640
and maybe she can help
you get back to control command C

719
00:47:13,680 --> 00:47:19,200
command back.

720
00:47:19,200 --> 00:47:25,440
I use Mac.

721
00:47:25,440 --> 00:47:27,120
How did you print it?

722
00:47:27,120 --> 00:47:38,880
I just tried this this out,
so I tried this line

723
00:47:39,960 --> 00:47:42,600
and that's how I put it.

724
00:47:42,600 --> 00:47:44,840
I write this line

725
00:47:47,680 --> 00:47:49,840
and that's how print.

726
00:47:50,000 --> 00:47:53,520
No, I mean number five O

727
00:47:54,480 --> 00:48:00,360
which which number five.

728
00:48:00,360 --> 00:48:08,960
I didn't print number five anywhere.

729
00:48:08,960 --> 00:48:12,520
Main method C means

730
00:48:12,520 --> 00:48:14,600
I am not printing it.

731
00:48:14,600 --> 00:48:19,360
I am not printing it.

732
00:48:19,360 --> 00:48:21,840
I guess she means line five.

733
00:48:21,840 --> 00:48:24,360
But what I am not printing
the line by line

734
00:48:24,360 --> 00:48:27,880
five is a main matter.

735
00:48:27,880 --> 00:48:30,360
So you don't have this this main method.

736
00:48:30,720 --> 00:48:41,640
You mean you don't have this man method?

737
00:48:41,640 --> 00:48:45,360
So those who don't have this main method,
you guys can type it.

738
00:48:45,360 --> 00:48:47,480
So you're looking at Elsa.

739
00:48:47,480 --> 00:48:50,360
If you don't have this main method,
you can just type public

740
00:48:52,680 --> 00:48:54,920
that big void.

741
00:48:55,600 --> 00:48:59,120
Main like this.

742
00:48:59,120 --> 00:49:13,400
Okay, You can just type it so base.

743
00:49:14,520 --> 00:49:17,800
When I am writing something
in this editor, well,

744
00:49:18,120 --> 00:49:20,320
we said that we are writing something.

745
00:49:20,320 --> 00:49:23,000
We don't say
we are printing something in here, okay?

746
00:49:23,440 --> 00:49:26,720
And when we are seeing any output

747
00:49:26,760 --> 00:49:29,720
in the console,
then we say we are printing something.

748
00:49:29,720 --> 00:49:30,440
Okay,

749
00:49:31,320 --> 00:49:34,400
so, so, so try,
try to use proper terminology

750
00:49:34,400 --> 00:49:42,120
so that others can understand
you better look

751
00:49:45,840 --> 00:49:46,880
so I can

752
00:49:46,880 --> 00:49:50,200
type plus two and then it should work.

753
00:49:50,760 --> 00:49:52,040
Okay, so nice.

754
00:49:52,040 --> 00:49:58,240
Make sure everyone can see the output
that you are writing inside the system.

755
00:49:58,240 --> 00:50:00,760
Not out. Okay.

756
00:50:00,760 --> 00:50:02,680
Because now we will be using this class.

757
00:50:02,680 --> 00:50:03,920
The one plywood.

758
00:50:03,920 --> 00:50:21,000
Okay,
so you guys see this output, All of you.

759
00:50:21,000 --> 00:50:22,680
So it let's say

760
00:50:32,720 --> 00:50:35,040
I want you to type this as well.

761
00:50:35,040 --> 00:50:37,080
I want you to type this

762
00:50:47,640 --> 00:50:48,960
and let me know what you guys are

763
00:50:48,960 --> 00:50:53,360
done typing.

764
00:50:53,360 --> 00:50:57,320
Just write a plus sign.

765
00:50:57,320 --> 00:51:02,840
You know, something like that.

766
00:51:02,840 --> 00:51:10,920
So if I execute this code,
I see to output, right?

767
00:51:11,400 --> 00:51:16,560
What, you guys, I don't want to see this
first task on the next line.

768
00:51:16,680 --> 00:51:20,320
On the second line, what if I want to
see it side by side with class two?

769
00:51:20,520 --> 00:51:24,560
Well, what should I change?

770
00:51:24,560 --> 00:51:26,160
I should change.

771
00:51:26,160 --> 00:51:28,680
So what should I change
in this print to print?

772
00:51:28,680 --> 00:51:30,840
Or should I take this parental to print

773
00:51:35,280 --> 00:51:36,240
the first one?

774
00:51:36,240 --> 00:51:36,960
Right.

775
00:51:37,040 --> 00:51:40,720
So if I if I remove this and then after

776
00:51:40,720 --> 00:51:42,240
this print

777
00:51:48,120 --> 00:51:50,480
now I will see my output in here.

778
00:51:50,480 --> 00:51:55,360
And if I want to put some spaces,
I can put some spaces like, yeah, okay.

779
00:51:55,400 --> 00:51:56,760
As many spaces where they want,

780
00:51:58,160 --> 00:52:02,160
like the administration, if they want.

781
00:52:02,160 --> 00:52:05,400
Okay. And I will see those spaces in here.

782
00:52:05,760 --> 00:52:08,480
Is there anyone who is not getting
the same output as of me

783
00:52:10,560 --> 00:52:11,520
now? Space

784
00:52:11,520 --> 00:52:16,640
before class?

785
00:52:16,640 --> 00:52:19,560
So this is how we can use print

786
00:52:19,560 --> 00:52:21,280
and print.

787
00:52:21,280 --> 00:52:24,320
And I guess this is the difference
when you write print and then

788
00:52:25,320 --> 00:52:27,200
so when you write print alone.

789
00:52:27,200 --> 00:52:30,360
So in here I have written this print.

790
00:52:31,200 --> 00:52:34,960
So everything that I would put after
this line,

791
00:52:35,760 --> 00:52:38,360
it will be printed on a new line.

792
00:52:38,640 --> 00:53:19,120
Okay.

793
00:53:19,120 --> 00:53:22,320
Can anyone remind me how to format decode?

794
00:53:22,320 --> 00:53:25,680
So the format record this control shift
and f

795
00:53:29,000 --> 00:53:31,440
how do I find my control shape?

796
00:53:31,480 --> 00:54:25,440
And let me write it down and you.

797
00:54:25,440 --> 00:54:28,880
Supermarket's string should be uppercase

798
00:54:29,480 --> 00:54:32,880
for spring.

799
00:54:32,880 --> 00:54:34,560
It gave me an address

800
00:54:35,840 --> 00:54:39,320
so the s off of this string online type.

801
00:54:39,320 --> 00:55:09,840
It should be kept.

802
00:55:09,840 --> 00:55:11,040
All right, guys.

803
00:55:11,040 --> 00:55:13,720
So how many?

804
00:55:13,760 --> 00:55:16,840
How many different types
are there in Java?

805
00:55:18,000 --> 00:55:21,280
The basic ones.

806
00:55:21,280 --> 00:55:22,040
All right.

807
00:55:22,040 --> 00:55:26,440
The main category,
there are two main categories of data

808
00:55:26,440 --> 00:55:46,840
types, right?

809
00:55:46,840 --> 00:55:48,360
What are they guys?

810
00:55:48,360 --> 00:55:50,640
What are these two primitive

811
00:55:50,640 --> 00:55:54,480
and non primitives, right.

812
00:55:54,480 --> 00:56:00,800
So first is primitive.

813
00:56:02,080 --> 00:56:07,360
The second one is known two.

814
00:56:10,160 --> 00:56:13,880
And how many primitive data types

815
00:56:13,880 --> 00:56:25,080
are there in Java?

816
00:56:25,080 --> 00:56:31,120
Can you guys tell me the names?

817
00:56:31,120 --> 00:56:32,920
What does primitive means?

818
00:56:32,920 --> 00:56:36,480
So the primitive means a specific type

819
00:56:36,480 --> 00:56:41,040
of matter types
that we will be using to store

820
00:56:41,280 --> 00:56:45,240
different type of data
in our dialog programs.

821
00:56:46,440 --> 00:56:47,080
Okay.

822
00:56:47,160 --> 00:56:50,120
So primitive means they are the old ones.

823
00:56:50,120 --> 00:56:52,200
They are the the

824
00:56:53,320 --> 00:56:56,080
the first ones that in Java introduce.

825
00:56:56,520 --> 00:57:01,120
Okay, so let's start from the numbers.

826
00:57:01,120 --> 00:57:02,480
Right? So we have

827
00:57:03,680 --> 00:57:14,520
byte and

828
00:57:14,640 --> 00:57:21,200
then we have short,

829
00:57:21,200 --> 00:57:24,160
then we have and

830
00:57:25,480 --> 00:57:26,840
then we have long.

831
00:57:26,840 --> 00:57:27,480
Right

832
00:57:30,360 --> 00:57:34,120
then we have load

833
00:57:36,920 --> 00:57:37,880
double

834
00:57:42,240 --> 00:57:44,720
or the end

835
00:57:45,960 --> 00:57:48,000
and then job.

836
00:57:48,000 --> 00:57:50,280
So what kind of data

837
00:57:50,440 --> 00:57:54,720
I can store inside the containers

838
00:57:55,120 --> 00:58:01,160
which have by two that data type.

839
00:58:01,160 --> 00:58:06,880
Okay, can I store numbers
with the decimal point inside byte.

840
00:58:06,880 --> 00:58:11,040
Can I store numbers with decimal point?

841
00:58:11,040 --> 00:58:13,360
Right. So this,

842
00:58:14,680 --> 00:58:19,720
this byte we can use it to store

843
00:58:21,920 --> 00:58:23,840
numbers

844
00:58:24,240 --> 00:58:26,240
without

845
00:58:30,440 --> 00:58:33,400
decimal point from

846
00:58:34,600 --> 00:58:37,200
-128.

847
00:58:37,200 --> 00:58:43,720
So 127.

848
00:58:44,040 --> 00:58:46,040
Okay. So

849
00:58:46,080 --> 00:58:48,440
and this is how we stored it.

850
00:58:48,440 --> 00:58:50,760
So if I, if I have

851
00:58:51,280 --> 00:58:54,720
this requirement
that I will only be storing numbers

852
00:58:55,160 --> 00:59:01,080
from minus one, going to be 8 to 127,

853
00:59:01,680 --> 00:59:04,760
I can use the by two data type.

854
00:59:04,760 --> 00:59:05,040
Right.

855
00:59:05,040 --> 00:59:12,240
So how,
how can I declare a variable of type byte?

856
00:59:12,240 --> 00:59:34,640
I am making notes in an intelligent.

857
00:59:34,640 --> 00:59:37,800
So how I will how I can store

858
00:59:38,160 --> 00:59:41,200
byte,

859
00:59:41,200 --> 00:59:45,320
I will write byte organized raw numbers
inside of byte variable.

860
00:59:45,320 --> 00:59:50,760
I will side with a lowercase
b I will say byte. Then

861
00:59:52,000 --> 00:59:53,240
I can say it's a

862
00:59:53,240 --> 01:00:01,240
small container right?

863
01:00:01,240 --> 01:00:04,520
Then I will use equal to sign, right?

864
01:00:04,520 --> 01:00:08,080
And then I can store

865
01:00:08,080 --> 01:00:10,520
a number in here.

866
01:00:10,520 --> 01:00:11,120
Right.

867
01:00:12,600 --> 01:00:14,960
So if you focus

868
01:00:15,160 --> 01:00:17,520
the first letter

869
01:00:17,520 --> 01:00:22,520
of this variable,
of this container of this box,

870
01:00:22,520 --> 01:00:28,120
I am using a lowercase s
and the after each word,

871
01:00:29,600 --> 01:00:32,360
the next word I started with uppercase

872
01:00:34,440 --> 01:00:35,000
letter.

873
01:00:35,000 --> 01:00:36,520
So do you guys know about this?

874
01:00:36,520 --> 01:00:41,000
We have we,
we have this camel case, right?

875
01:00:41,000 --> 01:00:45,000
So we have this specif notation in Java.

876
01:00:45,720 --> 01:00:51,480
If we want to give names
to the containers.

877
01:00:51,480 --> 01:00:53,400
So this,

878
01:00:53,680 --> 01:00:58,440
this, this, this process of giving names,
it is called camel case.

879
01:00:58,440 --> 01:00:58,760
Okay.

880
01:00:58,760 --> 01:01:01,480
So it's like B thoughts
of that camel, right?

881
01:01:01,680 --> 01:01:03,480
And we have become a leg.

882
01:01:03,480 --> 01:01:06,960
Then we have that top of the camel
and then it goes like that.

883
01:01:07,320 --> 01:01:12,000
So first word, it's
actually the lowercase letter.

884
01:01:12,120 --> 01:01:15,280
The first letter is lowercase.

885
01:01:15,280 --> 01:01:18,960
The next word that we
write, we use the uppercase.

886
01:01:20,280 --> 01:01:20,800
Will we

887
01:01:20,800 --> 01:01:23,880
write
the character of that word in uppercase?

888
01:01:23,880 --> 01:01:24,160
Okay.

889
01:01:24,160 --> 01:01:25,920
It's a convention in Java,

890
01:01:25,920 --> 01:01:29,640
but if you are not following
that convention, we will get any errors.

891
01:01:29,760 --> 01:01:36,840
If I don't follow this convention.

892
01:01:36,840 --> 01:01:39,480
So if I don't follow this convention.

893
01:01:39,480 --> 01:01:45,120
So let's say
if I am using a lot right, and

894
01:01:54,160 --> 01:01:55,840
so I will not be getting any it.

895
01:01:55,840 --> 01:01:56,280
Okay.

896
01:01:56,280 --> 01:01:59,160
So it's just to

897
01:01:59,240 --> 01:02:01,400
write better code, okay.

898
01:02:01,400 --> 01:02:03,200
It's just to

899
01:02:03,960 --> 01:02:07,680
make these variable names more obvious.

900
01:02:07,680 --> 01:02:08,240
Okay.

901
01:02:08,240 --> 01:02:10,680
And guys, I have changed.

902
01:02:11,760 --> 01:02:14,520
I have changed this C

903
01:02:14,520 --> 01:02:16,680
from uppercase

904
01:02:16,680 --> 01:02:19,280
to lowercase
and now I am getting any errors.

905
01:02:19,480 --> 01:02:21,840
Well, what does it what does this mean?

906
01:02:21,840 --> 01:02:25,720
Well, why I am getting an error is not is
not is not

907
01:02:25,720 --> 01:02:32,920
is still the same keyword.

908
01:02:32,920 --> 01:02:34,400
So what does this mean?

909
01:02:34,400 --> 01:02:38,880
Is Java is dumb is they are sensitive to
uppercase and look at things

910
01:02:41,280 --> 01:02:45,080
So Java is is sensitive

911
01:02:46,320 --> 01:02:47,880
by case sensitive.

912
01:02:47,880 --> 01:02:54,400
What do we mean if we write
something in uppercase is not the same

913
01:02:54,400 --> 01:02:58,080
as if we write the same thing
in lowercase.

914
01:02:58,480 --> 01:03:01,080
So java is keys sensitive?

915
01:03:01,080 --> 01:03:04,440
Okay, so that's why Java is saying

916
01:03:04,440 --> 01:03:09,400
that Tasker, you
you don't have any container,

917
01:03:10,200 --> 01:03:12,720
You don't have any container

918
01:03:12,720 --> 01:03:15,280
with this lowercase C Okay.

919
01:03:15,640 --> 01:03:21,200
You are asking me to print out
the value of a container

920
01:03:21,360 --> 01:03:25,200
whose name is small container
with the law. K.C.

921
01:03:25,320 --> 01:03:27,240
But I don't see any container.

922
01:03:27,240 --> 01:03:28,720
I don't see any variables.

923
01:03:28,720 --> 01:03:31,640
I don't see any boxes with this name

924
01:03:31,640 --> 01:03:33,720
because thought of Java,

925
01:03:33,720 --> 01:03:36,400
this container name, this variable name.

926
01:03:36,400 --> 01:03:39,360
This box name is different from this one.

927
01:03:39,880 --> 01:03:40,480
Okay.

928
01:03:40,560 --> 01:03:44,880
So if I don't have
a variable in my program

929
01:03:45,200 --> 01:03:50,640
and if I try to spell, if
I try to print it out, I will get an edit.

930
01:03:50,800 --> 01:03:51,160
Okay.

931
01:03:51,160 --> 01:03:54,360
Because I didn't declare that box, right?

932
01:03:54,360 --> 01:03:56,640
I didn't declare that box.

933
01:03:56,640 --> 01:04:00,040
So and even if I try to execute this

934
01:04:00,040 --> 01:04:04,960
code, I will get this added.

935
01:04:05,160 --> 01:04:07,760
So guys, I want you to focus on the atoms.

936
01:04:08,000 --> 01:04:11,760
So Maryam, please post the issues
in the syntax sports.

937
01:04:11,760 --> 01:04:11,920
Okay,

938
01:04:14,400 --> 01:04:15,000
so it

939
01:04:15,000 --> 01:04:19,040
says exception in the mantra.

940
01:04:19,120 --> 01:04:22,280
So I want you
to focus on the errors as well.

941
01:04:22,440 --> 01:04:23,240
All right?

942
01:04:23,240 --> 01:04:25,320
I want you to focus on the errors as well.

943
01:04:25,320 --> 01:04:27,760
These errors,
they try to tell you something.

944
01:04:28,920 --> 01:04:30,760
So the NSA is an exception in main

945
01:04:30,760 --> 01:04:34,000
thread, unresolved compilation error.

946
01:04:34,720 --> 01:04:40,200
And then it says small container
cannot be resolved to a variable.

947
01:04:40,280 --> 01:04:40,600
Okay.

948
01:04:40,600 --> 01:04:45,120
In simple words,
it means there is you you can declare this

949
01:04:45,480 --> 01:04:47,200
small container variable.

950
01:04:47,200 --> 01:04:49,880
Okay,
So that's why you are getting this letter.

951
01:04:49,880 --> 01:04:53,040
So if I change this lowercase
to uppercase, see,

952
01:04:54,280 --> 01:05:00,280
now the error was let me.

953
01:05:00,280 --> 01:05:02,640
So now I see my output. Yeah.

954
01:05:03,320 --> 01:05:06,320
So it's case sensitive

955
01:05:08,280 --> 01:05:11,320
and an integer type where containers

956
01:05:11,320 --> 01:05:15,280
I can store negative numbers,
I can store a positive number.

957
01:05:15,320 --> 01:05:18,080
Right. But I have to make sure

958
01:05:23,960 --> 01:05:26,000
I don't

959
01:05:26,000 --> 01:05:29,640
store numbers beyond the range.

960
01:05:29,640 --> 01:05:32,360
Okay. The numbers they should be medium.

961
01:05:32,360 --> 01:05:34,440
Please post in this sports channel

962
01:05:34,440 --> 01:05:37,920
index if you are facing any issues
or anything like that post.

963
01:05:37,920 --> 01:05:42,600
In this post we have a special
we have special person over there

964
01:05:43,440 --> 01:05:47,880
to solve your issues.

965
01:05:47,880 --> 01:05:50,520
Shiva. Shiva
is there just to solve your issues.

966
01:05:50,520 --> 01:05:55,640
Okay,
So that way we don't interrupt the class.

967
01:05:55,640 --> 01:05:59,200
So if I try to put a number

968
01:05:59,560 --> 01:06:03,000
beyond the range, I will get an error.

969
01:06:03,440 --> 01:06:04,720
Okay, I will get an error.

970
01:06:04,720 --> 01:06:09,960
So I can also run 20
because the max range is positive. 128

971
01:06:12,760 --> 01:06:13,840
And this

972
01:06:16,800 --> 01:06:19,320
and then if I if I execute my program,

973
01:06:19,880 --> 01:06:23,640
that is why I don't see this 127
on my console.

974
01:06:23,920 --> 01:06:26,280
Well,
why I don't see this 127 on my console

975
01:06:30,600 --> 01:06:33,520
because I didn't use

976
01:06:34,080 --> 01:06:38,640
this command
to put into the value on my console.

977
01:06:38,840 --> 01:06:39,520
Okay.

978
01:06:39,600 --> 01:06:45,000
If I want to see something on my console,
I must first use this system

979
01:06:45,000 --> 01:06:49,160
not down, but parental and command
to put it back out.

980
01:06:49,160 --> 01:06:49,400
Okay.

981
01:06:49,400 --> 01:06:52,080
Otherwise,
even if I have million variables,

982
01:06:53,200 --> 01:06:55,080
I will not see them

983
01:06:58,960 --> 01:07:03,040
so I can adjust this out.

984
01:07:03,040 --> 01:07:04,680
I can put

985
01:07:05,520 --> 01:07:07,720
a small box.

986
01:07:07,720 --> 01:07:08,320
Okay.

987
01:07:08,840 --> 01:07:13,240
And now if I execute my code,

988
01:07:13,240 --> 01:07:15,960
so now I see 127.

989
01:07:17,000 --> 01:07:18,400
They will not see them.

990
01:07:18,400 --> 01:07:22,920
But why they will still be executed in
Java.

991
01:07:22,920 --> 01:07:23,880
Right.

992
01:07:24,840 --> 01:07:25,200
Okay.

993
01:07:25,200 --> 01:07:30,360
So, Catalina,
you see, not all the programs that we used

994
01:07:30,360 --> 01:07:31,920
in our day to day life.

995
01:07:31,920 --> 01:07:36,280
It's not necess
re that they always produce an output.

996
01:07:36,720 --> 01:07:38,400
Okay, It's not necessary.

997
01:07:38,400 --> 01:07:43,440
So sometimes you write some piece of code
that does a lot of things, but

998
01:07:43,440 --> 01:07:48,280
you don't see any change on your screens
or on your consoles in your real life.

999
01:07:48,360 --> 01:07:51,360
Okay, so it's perfectly fine. Okay.

1000
01:07:51,600 --> 01:07:55,800
Maybe to write a piece of logic,
you are writing ten lines,

1001
01:07:55,800 --> 01:07:58,640
and then once those ten lines produce

1002
01:07:59,240 --> 01:08:03,760
an output, then you only put
into the value of that output.

1003
01:08:03,760 --> 01:08:15,000
It will clear with time
it will get here with now.

1004
01:08:15,000 --> 01:08:15,680
All right.

1005
01:08:15,680 --> 01:08:19,280
So if I use these double forward slashes

1006
01:08:20,600 --> 01:08:25,200
and if I, if I try to point that out,

1007
01:08:25,200 --> 01:08:31,960
if I try to print out,

1008
01:08:31,960 --> 01:08:35,880
will I see that on my console?

1009
01:08:35,880 --> 01:08:37,640
It's a comment. Right.

1010
01:08:37,640 --> 01:08:39,840
So comments there.

1011
01:08:39,840 --> 01:08:42,120
Oh, what is the need of these comments.

1012
01:08:42,160 --> 01:08:42,440
Right.

1013
01:08:42,440 --> 01:08:49,200
Well, why why do we need these comments?

1014
01:08:49,200 --> 01:08:52,600
They are not for others

1015
01:08:52,640 --> 01:08:56,160
or maybe for the same programmer
who wrote the program.

1016
01:08:56,160 --> 01:08:58,760
So what happens is that

1017
01:08:58,760 --> 01:09:03,600
when you are writing something
complex, right, you might want to put

1018
01:09:03,600 --> 01:09:09,760
some notes inside your file
so that others can easily understand

1019
01:09:10,200 --> 01:09:16,200
that how you solve a specific program
using some specific guidelines structure.

1020
01:09:16,360 --> 01:09:20,280
Okay, So for that reason,
we have these comments and

1021
01:09:21,600 --> 01:09:25,400
everything that we write inside
the Command Java ignore stack.

1022
01:09:25,400 --> 01:09:26,120
Okay?

1023
01:09:26,240 --> 01:09:31,040
It is not
it is not executed and it is not printed.

1024
01:09:31,040 --> 01:09:31,280
Okay.

1025
01:09:31,280 --> 01:09:35,760
So if I execute before,

1026
01:09:35,760 --> 01:09:39,360
I will not see
it's a comment on my output.

1027
01:09:39,360 --> 01:09:39,920
Okay.

1028
01:09:40,000 --> 01:09:43,480
Because Java is ignoring they're saying,
okay, it's just a note for us

1029
01:09:43,480 --> 01:09:49,400
that I don't have
to do anything with this. So

1030
01:09:50,480 --> 01:09:52,560
are there other types of comments as well?

1031
01:09:53,440 --> 01:09:57,800
Can you please quickly explain on
when to use bracket and when not?

1032
01:09:58,200 --> 01:10:02,160
So you'll get that this is something
that you will learn with time?

1033
01:10:02,400 --> 01:10:02,720
Okay.

1034
01:10:02,720 --> 01:10:07,960
There are no specific rules
that when you have to use parenthesis,

1035
01:10:07,960 --> 01:10:12,920
when you have to use brackets,
then you has to use square brackets.

1036
01:10:12,920 --> 01:10:15,160
So let's say, for example, you again
ask me their task.

1037
01:10:15,200 --> 01:10:17,680
Go to why you are using square
brackets in here, right?

1038
01:10:17,680 --> 01:10:18,800
Why not?

1039
01:10:19,120 --> 01:10:22,880
Why not the parentheses
and why you are using curly brackets in.

1040
01:10:22,880 --> 01:10:25,320
So they are part of Java language. Okay.

1041
01:10:25,520 --> 01:10:30,240
So you will times slowly you will
you will learn that we are

1042
01:10:30,440 --> 01:10:34,480
we use parentheses are to use a sphere and

1043
01:10:37,880 --> 01:10:39,960
so are there any other types of commas?

1044
01:10:39,960 --> 01:10:43,240
Is there any other way
I can write comments in my program?

1045
01:10:45,280 --> 01:10:48,160
How can I write comments

1046
01:10:48,160 --> 01:10:49,600
other than this

1047
01:10:50,240 --> 01:10:52,840
double forward slashes multi-line comment.

1048
01:10:52,840 --> 01:10:53,440
Right.

1049
01:10:53,520 --> 01:10:56,320
So if I put something in here

1050
01:10:56,320 --> 01:10:57,880
I will get an error.

1051
01:10:57,880 --> 01:11:00,200
So Java will only trade

1052
01:11:01,800 --> 01:11:04,320
down, only treat anything

1053
01:11:04,320 --> 01:11:07,920
that I put after
these two forward slashes as comments,

1054
01:11:08,600 --> 01:11:12,760
but it will not treat anything
that is in the next line.

1055
01:11:13,480 --> 01:11:16,400
If I want to write a bigger note, okay.

1056
01:11:16,400 --> 01:11:19,800
If I want to write a beginner
so one thing I can do, I can maybe

1057
01:11:19,800 --> 01:11:22,680
keep on adding these forward slashes
before each line.

1058
01:11:22,840 --> 01:11:23,120
Okay.

1059
01:11:23,120 --> 01:11:25,560
So sometimes it can be
it can be cumbersome.

1060
01:11:25,920 --> 01:11:28,200
So what I can do instead,

1061
01:11:28,720 --> 01:11:30,920
I can write one forward slash,

1062
01:11:32,240 --> 01:11:37,920
I can write star,
and then if I press enter,

1063
01:11:37,920 --> 01:11:41,400
it will keep on adding these stars
before each line.

1064
01:11:42,200 --> 01:11:46,440
Okay, so now I can write
multiple lines in here like this.

1065
01:11:46,800 --> 01:11:48,280
Like just multiple lines.

1066
01:11:48,280 --> 01:11:50,280
Multiple. Okay.

1067
01:11:50,280 --> 01:11:55,280
So I don't have to put all those forward
slashes before each line explicitly.

1068
01:11:57,000 --> 01:11:57,360
Okay.

1069
01:11:57,360 --> 01:12:00,880
So if I have to write a bigger note
that contains multiple lines,

1070
01:12:01,760 --> 01:12:04,720
then I can use this second way

1071
01:12:04,720 --> 01:12:07,040
of putting comments on my program

1072
01:12:09,120 --> 01:12:11,720
so I can say

1073
01:12:11,720 --> 01:12:14,080
this is a multi

1074
01:12:17,920 --> 01:12:19,640
margaret line comment.

1075
01:12:19,640 --> 01:12:22,720
Yeah. All right, guys.

1076
01:12:22,960 --> 01:12:26,760
Now tell me about about the other data
types.

1077
01:12:27,120 --> 01:12:30,240
Well, what if I have those four

1078
01:12:30,240 --> 01:12:32,800
decimal, which are data types I can use

1079
01:12:39,400 --> 01:12:41,000
float and double, right.

1080
01:12:41,000 --> 01:12:57,520
So, so

1081
01:12:57,520 --> 01:13:01,080
this byte is
same as this short is same as bite.

1082
01:13:01,360 --> 01:13:02,080
Okay.

1083
01:13:02,080 --> 01:13:04,400
The only difference is of range.

1084
01:13:04,480 --> 01:13:06,360
Okay. Far short.

1085
01:13:06,360 --> 01:13:11,080
The range is -3 to 7, six, eight.

1086
01:13:11,600 --> 01:13:14,920
And guys, you don't have to
memorize these ranges, okay?

1087
01:13:15,640 --> 01:13:21,600
You don't have to memorize these ranges.

1088
01:13:21,600 --> 01:13:25,120
And why I am saying that you are
you don't have to memorize these ranges

1089
01:13:25,400 --> 01:13:29,280
because whenever you guys
will be writing a program loss

1090
01:13:29,320 --> 01:13:33,320
99% of the time,
you guys will be using an integer, okay?

1091
01:13:33,640 --> 01:13:36,320
And the range of the integer
is up to billions.

1092
01:13:36,600 --> 01:13:42,680
Okay, It's up to billions and so that's
why why do I have this buy chart?

1093
01:13:42,680 --> 01:13:47,640
And if I, if I am 99% of the time,
if I will be using integer,

1094
01:13:47,920 --> 01:13:50,760
well, why I have this byte short and long

1095
01:13:55,080 --> 01:13:57,160
storage capacity. So

1096
01:13:58,840 --> 01:14:00,360
if I can show you

1097
01:14:00,360 --> 01:14:05,400
when computers were invented in 1971,
first computer was invented.

1098
01:14:06,000 --> 01:14:08,640
But can you guys imagine
the size of that computer?

1099
01:14:09,960 --> 01:14:12,080
Can you guys imagine
the size of that computer?

1100
01:14:12,080 --> 01:14:15,320
The first computer? So

1101
01:14:16,680 --> 01:14:20,120
size of us.

1102
01:14:20,280 --> 01:14:24,480
Some people.

1103
01:14:24,480 --> 01:14:27,520
So this was first first,

1104
01:14:27,560 --> 01:14:32,960
a personal computer was invented in 1971,
but the first computer,

1105
01:14:32,960 --> 01:14:38,360
which was not personal,
was of a size of something like this.

1106
01:14:38,800 --> 01:14:39,520
Okay.

1107
01:14:39,520 --> 01:14:43,320
And can you guys
imagine the total of memory

1108
01:14:43,760 --> 01:14:47,760
the computer had that Nassar used to land

1109
01:14:47,760 --> 01:14:58,040
the first person on the moon?

1110
01:14:58,040 --> 01:14:59,600
It was only 64.

1111
01:14:59,600 --> 01:15:01,720
Give me 64 can be

1112
01:15:03,000 --> 01:15:04,920
only 64 can be

1113
01:15:04,920 --> 01:15:07,640
now even even even if you ask me.

1114
01:15:07,640 --> 01:15:13,440
Even that Nokia 3310
has more memory than that computer

1115
01:15:13,760 --> 01:15:21,720
which which I used to learn
the first person on more.

1116
01:15:21,720 --> 01:15:25,480
So the first computer had this thought
of five kilobytes only.

1117
01:15:25,720 --> 01:15:26,040
Okay,

1118
01:15:27,160 --> 01:15:29,400
so why, why I am telling you this?

1119
01:15:29,400 --> 01:15:32,040
So when computers were invented,

1120
01:15:32,040 --> 01:15:35,360
when Java was invented,
Jello was invented in 1995.

1121
01:15:35,800 --> 01:15:40,280
At that point of time,
memory was very expensive

1122
01:15:40,560 --> 01:15:45,680
and there used to be a very small, small
amount of memory in computers.

1123
01:15:46,320 --> 01:15:50,920
So at that point of time, programmers
did this.

1124
01:15:50,920 --> 01:15:54,440
They used to decide about these data type,

1125
01:15:54,480 --> 01:15:57,600
they used to write their programs

1126
01:15:57,720 --> 01:16:01,440
very carefully so that they did all

1127
01:16:02,480 --> 01:16:05,080
so that they don't waste memory.

1128
01:16:05,080 --> 01:16:08,640
But these days, even on our mobile phones,

1129
01:16:08,640 --> 01:16:13,080
we have 12 gigabytes of memory,
16 gigabytes of memory on our computers.

1130
01:16:13,080 --> 01:16:15,960
We can have up to 64 or 128 or maybe more.

1131
01:16:15,960 --> 01:16:16,480
Right?

1132
01:16:16,640 --> 01:16:19,680
So these days
memory is not that big problem.

1133
01:16:19,960 --> 01:16:22,080
Okay? Memory is not a problem.

1134
01:16:22,080 --> 01:16:27,000
So for that reason, we don't use
these smaller data types any anymore.

1135
01:16:27,160 --> 01:16:29,600
Okay.
And as you guys must have noticed that

1136
01:16:30,920 --> 01:16:32,720
in day to day life,

1137
01:16:32,720 --> 01:16:37,280
usually we have numbers
that are greater than 148 or 127, right?

1138
01:16:37,320 --> 01:16:39,480
-128 or 127.

1139
01:16:39,480 --> 01:16:43,800
Well, we don't deal with those
that many small numbers in our daily life.

1140
01:16:44,160 --> 01:16:47,880
So the programs that we will be writing,
they will not be that practical if.

1141
01:16:47,880 --> 01:16:50,280
You are using this chart,
our database. Okay.

1142
01:16:50,520 --> 01:16:52,800
They used to be important

1143
01:16:53,560 --> 01:16:55,840
back in the time,
but not in today's world.

1144
01:16:56,040 --> 01:16:56,640
Okay.

1145
01:16:56,640 --> 01:17:00,600
So in today's world we deal with numbers
up to billion or trillion.

1146
01:17:00,720 --> 01:17:03,640
So we will be using 99% of the time.

1147
01:17:03,640 --> 01:17:06,480
We will be using the integers in

1148
01:17:06,480 --> 01:17:10,000
and other times we will be using a lot.

1149
01:17:10,160 --> 01:17:14,480
So so that's why you guys don't need
to memorize these buy charts.

1150
01:17:15,000 --> 01:17:16,440
What is the other end?

1151
01:17:16,440 --> 01:17:17,320
All of that.

1152
01:17:17,320 --> 01:17:20,800
I will write the data type
that you guys will be using most.

1153
01:17:21,000 --> 01:17:26,040
You only need to know the range
and how to use those type. So

1154
01:17:29,440 --> 01:17:31,320
this one is the most widely used

1155
01:17:31,320 --> 01:17:35,120
when it comes to store numbers

1156
01:17:35,120 --> 01:18:10,560
without the decimal points.

1157
01:18:10,560 --> 01:18:13,680
And same is the case would be flawed

1158
01:18:13,680 --> 01:18:17,920
and we would want to use flawed
that often in real life.

1159
01:18:18,360 --> 01:18:22,680
We numbers.

1160
01:18:22,680 --> 01:18:25,440
So you guys,
if you have to store decimal park

1161
01:18:26,600 --> 01:18:28,240
then only go with doubles.

1162
01:18:28,240 --> 01:18:30,240
Always, always go with doubles.

1163
01:18:30,240 --> 01:18:33,400
If you have store numbers
without decimal point,

1164
01:18:33,400 --> 01:18:36,000
always go with integer

1165
01:18:45,480 --> 01:18:47,280
and this is how we use it.

1166
01:18:47,280 --> 01:18:50,360
So let's say
I have a number with decimal point.

1167
01:18:50,480 --> 01:18:53,000
I will say double

1168
01:19:05,040 --> 01:19:07,200
and maybe I want to store 12.5 inches

1169
01:19:08,160 --> 01:19:10,760
and then again I can print it out

1170
01:19:11,440 --> 01:19:13,440
on my console

1171
01:19:16,600 --> 01:19:21,440
like this.

1172
01:19:21,440 --> 01:19:23,600
So I see 12.5 on my console.

1173
01:19:24,960 --> 01:19:29,000
What about,
what about the other characters guys that

1174
01:19:29,000 --> 01:19:32,920
I see on my keyboard like this
plus sign minus sign

1175
01:19:33,840 --> 01:19:36,080
this model, Assign dollar sign.

1176
01:19:36,080 --> 01:19:39,360
What kind of data type I can use.

1177
01:19:39,360 --> 01:19:42,840
So if I want to store those characters

1178
01:19:43,240 --> 01:19:47,520
or those symbols on my keyboard, I can use

1179
01:19:48,800 --> 01:19:50,440
the card at that time and

1180
01:19:50,440 --> 01:19:52,560
I will write job

1181
01:20:00,240 --> 01:20:02,040
and sure, should I use double course

1182
01:20:02,040 --> 01:20:03,800
or single course

1183
01:20:06,320 --> 01:20:07,680
single right.

1184
01:20:07,680 --> 01:20:11,120
So far, the characters in Java,
we use single code,

1185
01:20:11,120 --> 01:20:17,120
so I can put maybe a percentage sign.

1186
01:20:17,120 --> 01:20:17,400
Okay.

1187
01:20:17,400 --> 01:20:27,440
Or any other sign
that I see on my keyboard.

1188
01:20:32,280 --> 01:20:33,560
Are you guys following me?

1189
01:20:33,560 --> 01:20:49,280
Is there anyone who is lagging behind
or is not able to follow me?

1190
01:20:49,280 --> 01:20:55,320
Okay, guys, what if I have to store
only maybe true or false values?

1191
01:20:55,320 --> 01:20:58,680
Or maybe only yes or no kind of values.

1192
01:20:58,680 --> 01:21:00,960
So let's say I want to store
all this information.

1193
01:21:00,960 --> 01:21:03,960
Eve, is it raining outside or not?

1194
01:21:04,160 --> 01:21:05,960
If I am hungry or not?

1195
01:21:05,960 --> 01:21:11,320
So I if I have to store
this kind of info, I can use boolean.

1196
01:21:11,560 --> 01:21:11,880
Right?

1197
01:21:12,960 --> 01:21:33,960
So boolean.

1198
01:21:33,960 --> 01:21:39,720
So this type of box, this type of
container, it only stores true or false.

1199
01:21:39,960 --> 01:21:41,440
So should I use the real course?

1200
01:21:41,440 --> 01:21:46,040
And then I should put this false
or I should put this false.

1201
01:21:46,040 --> 01:21:49,120
Good double for single code or anything

1202
01:21:49,120 --> 01:21:53,360
like that.

1203
01:21:53,360 --> 01:21:55,560
I should use

1204
01:21:55,560 --> 01:21:59,640
this without the course
and then I can take get like this.

1205
01:21:59,680 --> 01:22:03,080
And I put a smaller capital in here.

1206
01:22:04,440 --> 01:22:06,640
Or should I always be using the lowercase?

1207
01:22:07,360 --> 01:22:09,960
So as Java is case sensitive,

1208
01:22:10,640 --> 01:22:14,880
I cannot use uppercase
F, Yes, always lowercase.

1209
01:22:14,880 --> 01:22:33,120
If so, I see my files.

1210
01:22:33,520 --> 01:22:48,000
I can store the info like this. So.

1211
01:22:48,000 --> 01:22:50,160
So what should be the value
of this variable

1212
01:22:53,360 --> 01:22:55,800
group?

1213
01:22:55,800 --> 01:22:57,920
So if you have to store
something like this,

1214
01:22:59,160 --> 01:23:02,320
you can, you can use these type
of boxes of containers.

1215
01:23:02,360 --> 01:23:02,640
Okay.

1216
01:23:02,640 --> 01:23:16,840
They are called boolean containers.

1217
01:23:16,840 --> 01:23:19,840
Did you guys learn about
the string data type as well

1218
01:23:21,000 --> 01:23:24,360
in the first class?

1219
01:23:24,360 --> 01:23:27,560
Okay, let's go through that type as well.

1220
01:23:27,560 --> 01:23:31,000
Not yet, no.

1221
01:23:31,000 --> 01:23:31,520
Okay.

1222
01:23:31,520 --> 01:23:34,320
So let's learn it after the date.

1223
01:23:34,400 --> 01:23:35,000
Okay.

1224
01:23:35,520 --> 01:23:37,560
So how much time is enough of the break

1225
01:23:39,280 --> 01:23:41,280
for you to stretch out yourself,

1226
01:23:41,360 --> 01:23:44,560
get some coffee?

1227
01:23:44,560 --> 01:23:54,280
15, 20.

1228
01:23:54,280 --> 01:23:56,040
Let's have a 15 minute break.

1229
01:23:56,040 --> 01:24:00,120
Yes, guys, make sure you don't just keep
on keeping on your tears.

1230
01:24:00,240 --> 01:24:02,760
It's very important
that you move yourself.

1231
01:24:03,120 --> 01:24:05,160
Okay, so waiting for 5 hours

1232
01:24:05,160 --> 01:24:08,280
or maybe 3 hours or 2 hours,
it's not good for your health.

1233
01:24:08,800 --> 01:24:12,240
And I know this because
I am in the industry for five years.

1234
01:24:12,240 --> 01:24:13,880
It creates a lot of problems.

1235
01:24:13,880 --> 01:24:16,880
So try to get yourself moving.

1236
01:24:16,960 --> 01:24:17,240
Okay?

1237
01:24:17,240 --> 01:24:20,600
Try to get some coffee,
take some fresh air,

1238
01:24:21,160 --> 01:24:25,680
and please remind me about the recording
when we come back from the break

1239
01:24:26,120 --> 01:24:29,400
and we'll be back before 1140. Do not go.

1240
01:24:30,920 --> 01:24:31,880
Yes, do not go

1241
01:24:31,880 --> 01:24:36,040
farther that far. Yes.

1242
01:24:36,040 --> 01:24:38,520
And the note. Okay. So this one.

1243
01:24:38,520 --> 01:24:39,440
You're sure

1244
01:24:44,400 --> 01:24:45,480
we are spending

1245
01:24:45,480 --> 01:24:49,800
our third day of learning,
repeating the same thing three times.

1246
01:24:49,800 --> 01:24:55,400
So assignment for the first two or three
weeks, we will be following this process.

1247
01:24:55,640 --> 01:24:56,000
Okay.

1248
01:24:56,000 --> 01:24:58,400
Repeating the same thing again and again.

1249
01:24:58,400 --> 01:25:00,680
So there is a saying in Russian Russia

1250
01:25:00,960 --> 01:25:05,120
that repetition is the mother of learning
or something like that.

1251
01:25:05,200 --> 01:25:07,920
Okay, so we are doing it
intentionally. Okay?

1252
01:25:08,040 --> 01:25:11,440
We are doing it intentionally
because programing

1253
01:25:11,440 --> 01:25:14,640
job, there is so much new things
for some of you.

1254
01:25:14,640 --> 01:25:18,840
You guys may never have heard
about programing or ideas or the

1255
01:25:19,320 --> 01:25:20,800
or blah blah like that.

1256
01:25:20,800 --> 01:25:22,800
So we are doing it intentionally

1257
01:25:22,800 --> 01:25:26,240
and we will keep on doing it for the next
2 to 3 weeks.

1258
01:25:26,760 --> 01:25:29,240
Then we will gradually cut it down.

1259
01:25:29,240 --> 01:25:30,680
So don't worry about that.

1260
01:25:31,800 --> 01:25:33,000
Yes, definitely.

1261
01:25:33,000 --> 01:25:37,840
We will be learning new things.

1262
01:25:37,840 --> 01:25:44,400
I am writing my notes on in Intelligent.

1263
01:25:44,400 --> 01:25:51,600
So after the break
we will start learning new things.

1264
01:25:51,600 --> 01:25:53,760
So I have downloaded. No,
you guys don't need it.

1265
01:25:53,760 --> 01:25:56,440
You guys can use the bird or not.

1266
01:25:56,800 --> 01:25:57,520
Not bad.

1267
01:25:57,520 --> 01:26:00,320
Or at or anything of that at all.

1268
01:26:00,320 --> 01:26:02,400
Or you guys don't
even need to write the notes

1269
01:26:03,800 --> 01:26:05,680
because I will be
writing the notes for you.

1270
01:26:05,680 --> 01:26:08,760
I will be sharing these notes with you
so you guys don't have to write

1271
01:26:08,760 --> 01:26:12,000
notes.

1272
01:26:12,000 --> 01:26:16,400
You guys can use the Google Docs as well.

1273
01:26:16,400 --> 01:26:23,040
Otherwise please be back by 1140.

1274
01:26:23,040 --> 01:26:28,240
Let me be the in the recording.

1275
01:26:28,240 --> 01:26:33,560
Are you guys back?

1276
01:26:33,560 --> 01:26:41,520
Only I show.

1277
01:26:41,520 --> 01:26:44,680
Okay so they booleans are to store

1278
01:26:49,200 --> 01:26:50,320
profiles

1279
01:26:51,280 --> 01:26:52,480
for foreign news.

1280
01:26:54,000 --> 01:26:55,960
Jobs are

1281
01:26:55,960 --> 01:26:58,280
used for spoof

1282
01:27:03,680 --> 01:27:08,280
and most on

1283
01:27:18,400 --> 01:27:21,120
then we have these non

1284
01:27:21,440 --> 01:27:26,280
primitive data types.

1285
01:27:26,280 --> 01:27:31,760
So the one difference between a primitive
and non primitive is that non primitive

1286
01:27:31,760 --> 01:27:35,760
data types, they will always start
with an uppercase letter.

1287
01:27:35,760 --> 01:27:36,400
Okay.

1288
01:27:36,800 --> 01:27:39,400
So on primitive

1289
01:27:39,400 --> 01:27:43,160
data type,

1290
01:27:43,160 --> 01:27:46,320
always start with

1291
01:27:48,600 --> 01:27:50,400
uppercase.

1292
01:27:51,160 --> 01:27:54,080
So and the first non primitive data

1293
01:27:54,120 --> 01:27:57,280
type that we will be learning if the

1294
01:28:12,200 --> 01:28:15,600
so we use string

1295
01:28:17,880 --> 01:28:22,320
whose code numbers letters

1296
01:28:24,440 --> 01:28:28,120
and detectors

1297
01:28:37,480 --> 01:28:38,880
are eight

1298
01:28:40,200 --> 01:28:41,680
mixture

1299
01:28:42,440 --> 01:28:47,520
of all.

1300
01:28:47,520 --> 01:28:50,080
So this thing that are type

1301
01:28:50,640 --> 01:28:52,800
B boxes of type string are

1302
01:28:53,280 --> 01:28:57,280
we would be uppercase and we like string

1303
01:28:57,800 --> 01:29:02,040
and we can we can have boxes
like let's say for example name type

1304
01:29:03,120 --> 01:29:05,000
and we use double code.

1305
01:29:05,000 --> 01:29:07,680
How do I put a single space in middle?

1306
01:29:07,680 --> 01:29:10,040
And I print two variables,

1307
01:29:11,480 --> 01:29:14,880
so we will
learn how to put into that space as that.

1308
01:29:15,160 --> 01:29:17,760
Okay,
this is called sync and coordination.

1309
01:29:17,760 --> 01:29:22,040
We will learn about that
string concatenation.

1310
01:29:22,040 --> 01:29:25,320
I can write in here

1311
01:29:25,320 --> 01:29:27,120
and it name.

1312
01:29:27,480 --> 01:29:28,480
Okay.

1313
01:29:28,480 --> 01:29:30,000
I can

1314
01:29:30,480 --> 01:29:33,080
I can maybe have

1315
01:29:36,320 --> 01:29:38,760
address variable

1316
01:29:38,760 --> 01:29:49,800
that can store any address.

1317
01:29:49,800 --> 01:29:52,280
I can have a string variable

1318
01:29:53,640 --> 01:29:57,000
on that and that can have numbers

1319
01:30:02,360 --> 01:30:03,320
like this.

1320
01:30:04,080 --> 01:30:07,240
So this new type be sustained.

1321
01:30:07,240 --> 01:30:11,600
That type,
it can hold numbers, it can hold letters,

1322
01:30:11,880 --> 01:30:15,120
it can hold different symbols like

1323
01:30:15,600 --> 01:30:18,480
plus sign minus almost all the things

1324
01:30:19,400 --> 01:30:22,280
that you can store inside a character.

1325
01:30:22,840 --> 01:30:28,560
You can also store inside this string that
are type the differences in characters.

1326
01:30:28,800 --> 01:30:33,080
We can only store one character at a time,
but in strings

1327
01:30:33,080 --> 01:30:35,880
we can store as many characters
as we like.

1328
01:30:36,240 --> 01:30:40,560
Yeah, and then deposit the same.

1329
01:30:40,560 --> 01:30:42,280
We can print out the values

1330
01:30:43,800 --> 01:30:49,080
and this name.

1331
01:30:49,080 --> 01:30:51,200
And so I see my name in here.

1332
01:30:51,800 --> 01:31:02,600
Do you guys see the same output?

1333
01:31:02,600 --> 01:31:08,280
All right, So now if I, if I do same name

1334
01:31:09,320 --> 01:31:12,800
and if I say

1335
01:31:13,880 --> 01:31:15,240
I shop,

1336
01:31:16,040 --> 01:31:17,520
I get this as well.

1337
01:31:17,520 --> 01:31:18,840
Why I'm getting this error.

1338
01:31:18,840 --> 01:31:21,560
Viruses duplicate it.

1339
01:31:21,640 --> 01:31:25,080
Local variable name

1340
01:31:36,840 --> 01:31:40,240
so I can not have to

1341
01:31:40,560 --> 01:31:44,280
same type of boxes with the same name.

1342
01:31:44,920 --> 01:31:45,680
Okay.

1343
01:31:45,680 --> 01:31:51,000
So when we have two same name boxes Java
and we again confused.

1344
01:31:51,000 --> 01:31:51,560
Right.

1345
01:31:51,560 --> 01:31:54,360
So if same as if in a class there are

1346
01:31:55,280 --> 01:31:58,280
40 student and all of them
they have the same name.

1347
01:31:58,560 --> 01:32:02,520
Now if I want to call someone, I
no one will know

1348
01:32:02,600 --> 01:32:06,600
to whom I am going to whom I am calling.

1349
01:32:06,600 --> 01:32:09,560
Right.
So it can create can create a confusion.

1350
01:32:09,560 --> 01:32:13,720
So way
when we have two same variable names

1351
01:32:14,040 --> 01:32:16,440
in a class York and confuse.

1352
01:32:16,720 --> 01:32:18,520
So that's why it is not allowed.

1353
01:32:18,520 --> 01:32:22,320
So I can have string type of variable,

1354
01:32:22,320 --> 01:32:25,320
but it should not have been declared

1355
01:32:26,200 --> 01:32:28,680
before before this variable. Okay.

1356
01:32:29,000 --> 01:32:33,880
So I can have maybe name one or I can have
name two or three or four or five.

1357
01:32:33,880 --> 01:32:37,480
I can put any anything
that with that variable name for

1358
01:32:37,480 --> 01:32:43,800
make it different.

1359
01:32:43,800 --> 01:32:45,480
So even if we don't assign,

1360
01:32:47,040 --> 01:32:47,880
even if we don't

1361
01:32:47,880 --> 01:32:51,960
find anything, it's
not about the assignment.

1362
01:32:51,960 --> 01:32:54,960
It's about it's about having same names.

1363
01:32:54,960 --> 01:32:58,600
Okay, so not two variables in.

1364
01:32:58,600 --> 01:33:25,320
A class can have same name.

1365
01:33:25,320 --> 01:33:27,680
Can we just

1366
01:33:28,800 --> 01:33:30,120
run this out?

1367
01:33:30,120 --> 01:33:33,720
But the output name and last name together
in one line.

1368
01:33:33,720 --> 01:33:35,920
I know,
but in terms of internal and optional.

1369
01:33:36,680 --> 01:33:38,680
So yes, I shall. We will learn about that.

1370
01:33:38,680 --> 01:33:42,720
No, not worry.

1371
01:33:42,720 --> 01:33:44,760
So yes, you guys can do this.

1372
01:33:44,760 --> 01:33:47,360
You guys can put a plus sign.

1373
01:33:47,360 --> 01:33:49,560
Okay. You can put a plus sign

1374
01:33:49,560 --> 01:33:53,280
and you can put into the address as well
in here like this.

1375
01:33:54,080 --> 01:33:56,480
Okay. With this plus sign,

1376
01:33:56,760 --> 01:33:59,040
this is called string concatenation.

1377
01:33:59,400 --> 01:34:03,480
Okay, so we remove this error first

1378
01:34:03,960 --> 01:34:07,560
so that I don't get any others.

1379
01:34:07,560 --> 01:34:10,040
So I see my name and address in here.

1380
01:34:10,040 --> 01:34:13,040
And some of you were asking
how to put spaces.

1381
01:34:13,440 --> 01:34:14,880
So this is how you put spaces

1382
01:34:18,440 --> 01:34:23,120
like this.

1383
01:34:23,120 --> 01:34:24,000
Like this.

1384
01:34:24,280 --> 01:34:27,480
So you can have spaces,
you can put multiple variables

1385
01:34:27,480 --> 01:34:30,920
in the same system outline,
but we will learn about that in detail.

1386
01:34:30,920 --> 01:34:35,880
Okay, this is called string concatenation.

1387
01:34:36,120 --> 01:34:39,240
Just give me a few minutes
and I will show you how how we can do

1388
01:34:39,240 --> 01:34:45,920
a distinct definition.

1389
01:34:45,920 --> 01:34:48,200
Let me check if we are missing something.

1390
01:34:48,600 --> 01:34:52,120
So you guys already know
about the data types, right?

1391
01:34:52,120 --> 01:34:54,720
So from non primitive data types,

1392
01:34:56,000 --> 01:34:58,000
now we know about this thing as that.

1393
01:34:58,080 --> 01:35:00,280
Okay,
We already know about the primitives.

1394
01:35:00,280 --> 01:35:01,120
These one

1395
01:35:12,480 --> 01:35:14,160
guys already know about this,

1396
01:35:14,160 --> 01:35:43,480
this, this.

1397
01:35:43,480 --> 01:35:49,800
You guys know about naming conventions.

1398
01:35:49,800 --> 01:35:52,400
All right, so in Java, guys,

1399
01:35:53,880 --> 01:35:58,120
there are some keywords
which are result of our specific things

1400
01:35:58,560 --> 01:36:01,200
these keywords,
they mean something to Java.

1401
01:36:01,840 --> 01:36:05,480
And whenever we are creating a variable,

1402
01:36:05,800 --> 01:36:09,920
we cannot use that name
for that fire, for our variable.

1403
01:36:10,080 --> 01:36:11,680
So let's say, for example,

1404
01:36:13,200 --> 01:36:15,520
if I say

1405
01:36:16,160 --> 01:36:17,480
string

1406
01:36:19,800 --> 01:36:23,640
class is equal to I.

1407
01:36:23,760 --> 01:36:26,400
So if I try to do this,
I will get that error.

1408
01:36:26,720 --> 01:36:29,440
Now, this time, why I am getting an error.

1409
01:36:29,440 --> 01:36:32,200
I am getting an error

1410
01:36:32,640 --> 01:36:34,600
because this variable name

1411
01:36:34,600 --> 01:36:38,400
that I am using, it's actually a result.

1412
01:36:38,400 --> 01:36:39,920
Right? Okay.

1413
01:36:39,920 --> 01:36:40,560
But is result.

1414
01:36:40,560 --> 01:36:42,080
Well, what do I mean?

1415
01:36:42,080 --> 01:36:44,360
That it's some specific words.

1416
01:36:44,600 --> 01:36:48,680
They have specific meanings
that are defined in Java.

1417
01:36:48,920 --> 01:36:49,560
Okay.

1418
01:36:50,200 --> 01:36:53,520
So no, it's
not because we have already used it.

1419
01:36:53,520 --> 01:36:58,000
It's because for variable names
we cannot use the reserved keywords.

1420
01:36:58,000 --> 01:36:58,360
Okay.

1421
01:36:58,360 --> 01:37:01,920
Even if I am using a result keyword
which I have not used already,

1422
01:37:02,200 --> 01:37:04,280
I still cannot use it. Okay.

1423
01:37:04,280 --> 01:37:07,800
So this public, this class, this started

1424
01:37:07,840 --> 01:37:10,520
this void, this by this packet,

1425
01:37:10,920 --> 01:37:16,200
all the keyword that you see in person,
they are all reserved keywords here.

1426
01:37:16,280 --> 01:37:16,800
Okay.

1427
01:37:17,400 --> 01:37:21,400
So They have already a specific meaning
assigned for them

1428
01:37:21,920 --> 01:37:25,920
so we can not use them
as the variable names.

1429
01:37:25,920 --> 01:37:42,480
Okay. So

1430
01:37:44,400 --> 01:37:46,600
this is the list of reserved errors.

1431
01:37:47,600 --> 01:37:50,640
They're going to be right around
50 result keywords

1432
01:37:50,920 --> 01:37:53,680
so that make sure whenever
you are giving variable names, you,

1433
01:37:53,680 --> 01:37:58,920
you are not using the desert keywords.

1434
01:37:58,920 --> 01:38:00,120
Have you guys

1435
01:38:00,720 --> 01:38:02,600
gone through this task already

1436
01:38:02,600 --> 01:38:12,520
in the first class?

1437
01:38:12,520 --> 01:38:13,320
Great.

1438
01:38:14,920 --> 01:38:16,320
So let's move to the second

1439
01:38:16,320 --> 01:38:21,640
class.

1440
01:38:21,640 --> 01:38:28,000
Okay, So second class, a half of the
second class is we did it today as well.

1441
01:38:28,000 --> 01:38:31,360
Okay, so half of this class is based on
do that thing that I type.

1442
01:38:31,600 --> 01:38:32,200
Okay.

1443
01:38:32,720 --> 01:38:35,760
So now we will discuss what is that string

1444
01:38:35,760 --> 01:38:39,080
class,
that string non primitive data type.

1445
01:38:39,080 --> 01:38:39,560
Okay.

1446
01:38:39,720 --> 01:38:41,920
What is the string concatenation?

1447
01:38:42,960 --> 01:38:45,240
What are the automatic operators in Java?

1448
01:38:45,720 --> 01:39:00,560
Okay.

1449
01:39:00,560 --> 01:39:00,800
Right.

1450
01:39:00,840 --> 01:39:02,920
There are some other rules
about the variables.

1451
01:39:03,960 --> 01:39:06,120
I'll tell you about the

1452
01:39:07,080 --> 01:39:09,760
rules to give names to your variables

1453
01:39:09,760 --> 01:39:14,600
like we cannot start a variable
with the number.

1454
01:39:14,600 --> 01:39:34,440
Okay, that's stage.

1455
01:39:34,440 --> 01:39:38,400
So you guys already know
you may have repeated again.

1456
01:39:38,400 --> 01:39:42,880
So fairly simple variable
and they should not start with number.

1457
01:39:43,080 --> 01:39:46,200
They cannot start
with specific characters.

1458
01:39:46,200 --> 01:39:46,800
Right.

1459
01:39:46,800 --> 01:39:49,280
So always talk to your variables
with the letters.

1460
01:39:49,280 --> 01:39:49,560
Okay.

1461
01:39:49,560 --> 01:39:53,880
If you follow this approach
99% of the time, you guys will not get any

1462
01:39:53,880 --> 01:39:59,440
errors and always use meaningful names
for your variables.

1463
01:39:59,440 --> 01:40:02,280
Question
Do we want to know all the keywords?

1464
01:40:02,280 --> 01:40:04,320
No, we don't need to want more.

1465
01:40:04,320 --> 01:40:08,040
Don't need to know
all the keywords around 30 plus keywords.

1466
01:40:08,040 --> 01:40:10,960
We will learn in this course, but slowly

1467
01:40:11,400 --> 01:40:14,880
over the course of in the course
of the course of three months.

1468
01:40:14,880 --> 01:40:17,360
Okay, so right now
you guys don't need to worry about

1469
01:40:17,560 --> 01:40:20,920
just just make sure
that when you are giving names

1470
01:40:20,920 --> 01:40:24,480
to your variables like this,
you are not conflicting.

1471
01:40:24,480 --> 01:40:27,840
You are not using pre
reserved keywords, okay?

1472
01:40:28,200 --> 01:40:32,560
So that you guys don't get any others.

1473
01:40:32,560 --> 01:40:34,680
So let's create a new class.

1474
01:40:34,840 --> 01:40:37,800
String almost takes care of everything
like numbers.

1475
01:40:37,800 --> 01:40:39,560
Let us get at this.

1476
01:40:39,560 --> 01:40:41,800
Then when to use primitive types.

1477
01:40:41,840 --> 01:40:43,680
Okay, that's a great question actually.

1478
01:40:44,640 --> 01:40:47,240
So tell me guys, are

1479
01:40:48,560 --> 01:40:51,720
you have multiple jobs in your kitchen,
right?

1480
01:40:51,880 --> 01:40:55,520
One are maybe to store sugar,

1481
01:40:55,920 --> 01:40:59,040
another jar,
or maybe to store to another job

1482
01:40:59,040 --> 01:41:04,200
or maybe to a store side and a jar
and another container to store milk.

1483
01:41:04,960 --> 01:41:07,400
What what if if you but

1484
01:41:07,400 --> 01:41:11,000
if you try to put all of those things
in a single jar.

1485
01:41:11,320 --> 01:41:13,480
Okay. All of those things in a single job.

1486
01:41:14,080 --> 01:41:16,280
So same jar equal to sugar.

1487
01:41:16,320 --> 01:41:19,000
Then you would start, then equal floor,
then it would be

1488
01:41:19,800 --> 01:41:31,720
so that is what will happen.

1489
01:41:31,720 --> 01:41:36,520
The first thing, whoever is the in-charge
of the kitchen, whether it's your mother

1490
01:41:36,560 --> 01:41:39,960
or your wife, that they will throw you
out of the kitchen right

1491
01:41:41,840 --> 01:41:43,880
by while they will throw you
out of the kitchen.

1492
01:41:43,880 --> 01:41:44,360
Because

1493
01:41:45,720 --> 01:41:48,000
let's say you have to make tea.

1494
01:41:48,000 --> 01:41:48,560
You have to wait.

1495
01:41:48,560 --> 01:41:53,040
If you have to make tea
and you put everything into the same jar.

1496
01:41:53,040 --> 01:41:56,520
Now, if you want to separate out sugar

1497
01:41:56,880 --> 01:42:02,480
floor, be and salt,
it will be almost impossible for you.

1498
01:42:02,640 --> 01:42:06,720
Or at least it will be very hard
for you to separate all this information,

1499
01:42:07,280 --> 01:42:09,560
separate all this stuff. Right.

1500
01:42:09,560 --> 01:42:11,760
So if you use a strings, Yes,

1501
01:42:11,920 --> 01:42:14,800
this has the capability
to store everything.

1502
01:42:15,400 --> 01:42:18,640
But later on, whenever
you will be needing information

1503
01:42:18,640 --> 01:42:23,120
outside of those strings variables,
it will be a mess.

1504
01:42:23,440 --> 01:42:26,960
It will be very hard
for you to separate out numbers

1505
01:42:27,240 --> 01:42:30,360
and then characters
and then other things from that.

1506
01:42:30,480 --> 01:42:31,160
Okay.

1507
01:42:31,440 --> 01:42:34,360
So yes,
they have the capacity and they can store.

1508
01:42:34,800 --> 01:42:37,320
But if we are dealing with only

1509
01:42:38,280 --> 01:42:41,120
we don't
put those numbers inside this thing.

1510
01:42:41,320 --> 01:42:43,320
This is the one reason. The second reason

1511
01:42:44,520 --> 01:42:48,000
that you guys, we learned today things.

1512
01:42:48,000 --> 01:42:50,280
So there so you have to add two numbers.

1513
01:42:51,280 --> 01:42:56,920
Okay.

1514
01:42:56,920 --> 01:43:00,040
So let's say you have two

1515
01:43:00,720 --> 01:43:05,360
do mathematical operations like addition,
multiplication and division.

1516
01:43:05,640 --> 01:43:06,240
Right?

1517
01:43:07,040 --> 01:43:09,600
For those operations,
you cannot use Sphinx.

1518
01:43:09,720 --> 01:43:12,120
Yes, they can store numbers,
but you cannot perform

1519
01:43:12,120 --> 01:43:14,200
those mathematical operations on that.
Okay.

1520
01:43:14,760 --> 01:43:19,280
You guys will learn slowly about why why
this thing, that type and hold everything.

1521
01:43:19,280 --> 01:43:21,600
And what are they downfalls
and what are the upsides.

1522
01:43:22,800 --> 01:43:25,000
So first, let's create a new package.

1523
01:43:25,000 --> 01:43:27,120
We cannot use string types
of calculations.

1524
01:43:27,120 --> 01:43:32,480
Think of them as a letter. Yes.

1525
01:43:32,480 --> 01:43:36,160
So let's create a new class and let's

1526
01:43:37,280 --> 01:43:38,280
call it

1527
01:43:39,960 --> 01:43:41,280
string

1528
01:43:42,040 --> 01:43:42,360
them.

1529
01:43:43,800 --> 01:43:51,120
Okay.

1530
01:43:51,120 --> 01:43:52,240
So do I.

1531
01:43:52,240 --> 01:44:13,080
Have you guys created the class?

1532
01:44:13,080 --> 01:44:15,480
So I yes, I can I can store the

1533
01:44:16,200 --> 01:44:18,760
I guess or any type of letters,
the nesting.

1534
01:44:18,840 --> 01:44:19,360
Okay.

1535
01:44:19,360 --> 01:44:22,880
By just speculating,
can you show us one more time Union.

1536
01:44:23,000 --> 01:44:25,200
What do you want me to show again?

1537
01:44:25,200 --> 01:44:27,080
How to create a class

1538
01:44:28,240 --> 01:44:28,920
string there?

1539
01:44:28,920 --> 01:44:30,400
The more you write.

1540
01:44:30,880 --> 01:44:33,000
Okay, let me think. Name it.

1541
01:44:33,000 --> 01:44:35,520
So I right click refactor

1542
01:44:35,920 --> 01:44:45,960
and then rename.

1543
01:44:45,960 --> 01:44:47,400
Okay, so

1544
01:44:47,720 --> 01:44:50,520
you do it right click on your package,

1545
01:44:50,520 --> 01:44:52,920
then click on new and then class.

1546
01:44:54,640 --> 01:44:56,520
Let let me know once you have created

1547
01:44:56,520 --> 01:45:17,560
class.

1548
01:45:17,560 --> 01:45:21,040
Okay, so this is how we can declare
a string type of variable.

1549
01:45:21,040 --> 01:45:23,440
And then we can just because

1550
01:45:23,440 --> 01:45:59,760
whatever we have storing inside that.

1551
01:45:59,760 --> 01:46:02,880
So if so, in strings

1552
01:46:03,000 --> 01:46:05,960
we have something called as concatenation.

1553
01:46:05,960 --> 01:46:09,480
So we don't need quotation
when we print. Yes.

1554
01:46:09,720 --> 01:46:15,440
So whenever we are writing variable names,
okay, whenever we are trying

1555
01:46:15,440 --> 01:46:20,800
to print the contents of a variable,
we don't put all those double quotes.

1556
01:46:21,120 --> 01:46:21,760
Okay.

1557
01:46:21,800 --> 01:46:24,440
If you directly want to print
something on the console,

1558
01:46:24,440 --> 01:46:32,440
then you use the double quotes.

1559
01:46:32,440 --> 01:46:46,640
Yes, that is correct.

1560
01:46:46,640 --> 01:46:48,240
Okay.

1561
01:46:48,240 --> 01:46:50,640
So guys, if I have to

1562
01:46:52,520 --> 01:46:53,360
attach

1563
01:46:53,360 --> 01:46:56,480
two variables together,
if I have to can get in there

1564
01:46:56,480 --> 01:47:01,680
two variables together in Java,
I can use the plus sign for that.

1565
01:47:01,720 --> 01:47:03,760
Okay. And how it works.

1566
01:47:03,760 --> 01:47:07,320
So if let's say, for example,
if we write this out,

1567
01:47:08,080 --> 01:47:11,200
we use the name of the variable,

1568
01:47:11,440 --> 01:47:14,280
both content will be locked first,

1569
01:47:14,280 --> 01:47:17,640
then we use the plus sign and then

1570
01:47:18,960 --> 01:47:22,600
we use the second variable name.

1571
01:47:23,600 --> 01:47:24,080
Okay.

1572
01:47:26,280 --> 01:47:28,080
And now if I print out

1573
01:47:28,080 --> 01:47:33,160
the contents in here, so you guys see

1574
01:47:34,600 --> 01:47:40,040
from this name, I see

1575
01:47:42,160 --> 01:47:44,040
this first part of this output.

1576
01:47:44,040 --> 01:47:47,720
Okay, This first one from this address.

1577
01:47:48,840 --> 01:47:50,160
I see

1578
01:47:50,800 --> 01:47:53,160
this second box from here.

1579
01:47:53,160 --> 01:47:55,440
Okay. So

1580
01:47:56,680 --> 01:48:00,240
Dawn, 26 years old.

1581
01:48:00,240 --> 01:48:03,200
So I put name. Okay.

1582
01:48:03,240 --> 01:48:06,720
Without course, because I am printing
the values of variables,

1583
01:48:07,560 --> 01:48:10,520
I use this plus sign in between,

1584
01:48:11,400 --> 01:48:15,600
and then I use this variable name.

1585
01:48:16,080 --> 01:48:18,520
Okay. And now Java.

1586
01:48:18,520 --> 01:48:19,240
I will

1587
01:48:19,440 --> 01:48:24,000
actually contents from both the variables
that we will combine them together.

1588
01:48:24,280 --> 01:48:24,640
Okay.

1589
01:48:24,640 --> 01:48:32,800
And then if we print them out.

1590
01:48:32,800 --> 01:48:35,760
So this is how string concatenation works.

1591
01:48:35,920 --> 01:48:44,760
Now this a string string. So

1592
01:49:11,840 --> 01:49:13,280
so instinct and coordination.

1593
01:49:13,280 --> 01:49:17,400
We can use the plus operator.

1594
01:49:17,920 --> 01:49:18,720
Okay.

1595
01:49:18,800 --> 01:49:21,960
To combine

1596
01:49:22,160 --> 01:49:24,200
the values

1597
01:49:25,840 --> 01:49:29,360
from two string

1598
01:49:31,480 --> 01:49:32,280
variables.

1599
01:49:32,280 --> 01:49:38,080
Okay.

1600
01:49:38,080 --> 01:49:43,280
And I can
I can not only combine the values

1601
01:49:43,560 --> 01:49:46,360
from two spring type variables,

1602
01:49:46,480 --> 01:49:50,520
I can combine the values of one string

1603
01:49:51,120 --> 01:49:55,520
and the other one as the integer
one thing, the other one.

1604
01:49:55,520 --> 01:49:58,120
S characters, boolean and character.

1605
01:49:58,120 --> 01:49:58,760
So let me show you.

1606
01:49:58,760 --> 01:50:01,160
Let's see if I have another variable.

1607
01:50:01,200 --> 01:50:05,760
Okay, so if I have integer, it is equal to

1608
01:50:07,400 --> 01:50:10,400
18, right?

1609
01:50:10,400 --> 01:50:15,520
I can see this out.

1610
01:50:15,520 --> 01:50:19,160
I can say name plus age.

1611
01:50:19,960 --> 01:50:22,080
So what are what
I can see this time, guys?

1612
01:50:22,240 --> 01:50:26,880
If I see name plus age,
one variable is off type string,

1613
01:50:27,440 --> 01:50:31,400
the other one is off type int

1614
01:50:33,720 --> 01:50:37,480
but if you want them in separate line,
then you can use two different system out

1615
01:50:37,920 --> 01:50:41,960
or you can use a new line character.

1616
01:50:41,960 --> 01:50:42,480
All right.

1617
01:50:42,960 --> 01:50:46,760
So if I print out this value now,

1618
01:50:47,720 --> 01:50:51,680
so now the values from the variable name

1619
01:50:52,720 --> 01:50:57,560
and the value for all that this in B here

1620
01:50:57,960 --> 01:51:01,680
E variable contains
they have been combined.

1621
01:51:01,680 --> 01:51:06,160
So this is what we call
as string concatenation, combining

1622
01:51:06,160 --> 01:51:11,520
two values, combining things
with a string type of variable.

1623
01:51:11,560 --> 01:51:13,760
Okay.

1624
01:51:13,760 --> 01:51:15,960
And I can do maybe

1625
01:51:17,160 --> 01:51:38,040
now I can combine a boolean,

1626
01:51:38,040 --> 01:51:41,440
so I can combine two variables

1627
01:51:47,280 --> 01:51:49,240
because this

1628
01:52:07,800 --> 01:52:10,440
I can put through

1629
01:52:10,680 --> 01:52:12,800
in here or may be false.

1630
01:52:13,440 --> 01:52:17,520
And if I now do this out

1631
01:52:20,000 --> 01:52:24,600
so I can use any,
any string variable first.

1632
01:52:24,600 --> 01:52:25,320
Okay,

1633
01:52:26,280 --> 01:52:29,920
I can use the plus sign.

1634
01:52:29,920 --> 01:52:33,600
And the second variable,
it can be an integer.

1635
01:52:33,600 --> 01:52:39,480
It can be a spin, it can be a boolean,
it can be a character.

1636
01:52:39,480 --> 01:52:42,000
So what do you guys
think? What I will back now

1637
01:53:08,160 --> 01:53:10,800
your address and then is raining.

1638
01:53:10,800 --> 01:53:18,480
Okay, so I see this true in here.

1639
01:53:18,600 --> 01:53:19,200
Okay.

1640
01:53:19,560 --> 01:53:22,040
So I can combine

1641
01:53:22,040 --> 01:53:24,960
if being with another string,

1642
01:53:25,520 --> 01:53:27,600
I can combine a spring

1643
01:53:28,640 --> 01:53:29,760
with an integer.

1644
01:53:29,760 --> 01:53:34,080
I can combine all the primitive
data types, which is things.

1645
01:53:34,400 --> 01:53:37,480
But if, if I have

1646
01:53:37,800 --> 01:53:42,560
two integer variables or two long variable

1647
01:53:42,760 --> 01:53:46,440
are two double variables,
then things will work differently.

1648
01:53:46,440 --> 01:53:49,680
So let's say, for example,

1649
01:53:49,680 --> 01:53:51,640
if I have a double.

1650
01:53:51,640 --> 01:53:54,240
Okay, if I have a double number one

1651
01:53:57,200 --> 01:53:59,960
30.5,

1652
01:54:00,000 --> 01:54:03,200
I already have a double

1653
01:54:03,200 --> 01:54:07,080
number 2.5.

1654
01:54:08,600 --> 01:54:11,520
And this time, if I try to combine

1655
01:54:11,520 --> 01:54:15,520
these two variables for this time,
I don't have a string.

1656
01:54:15,520 --> 01:54:20,040
Okay,
So if I have one string type variable

1657
01:54:20,040 --> 01:54:24,240
and then the other variable, it can be
it can be of any other type.

1658
01:54:24,480 --> 01:54:28,360
But if I don't have
a string variable, then Java

1659
01:54:29,320 --> 01:54:31,080
will perform

1660
01:54:31,080 --> 01:54:34,440
the mathematical addition
with that number.

1661
01:54:34,560 --> 01:54:37,080
Okay, so this time we will not see

1662
01:54:38,080 --> 01:54:40,440
we will not see 12.5

1663
01:54:40,440 --> 01:54:43,120
and another 12.5 return to get that.

1664
01:54:43,120 --> 01:54:43,680
Okay.

1665
01:54:43,720 --> 01:54:48,000
This time
I will actually perform the calculation.

1666
01:54:48,440 --> 01:54:52,600
It will add two numbers
and then it will show you the results.

1667
01:54:52,960 --> 01:54:57,240
Okay,

1668
01:54:57,240 --> 01:55:03,440
I should have a number.

1669
01:55:03,440 --> 01:55:07,960
So now I see 25.20.

1670
01:55:08,280 --> 01:55:09,800
Okay, 25.2.

1671
01:55:09,800 --> 01:55:12,440
So string concatenation only works

1672
01:55:13,120 --> 01:55:17,040
if we have at least one thing with us.

1673
01:55:17,800 --> 01:55:21,080
Yes, because in
now we don't have any string variable.

1674
01:55:21,240 --> 01:55:21,880
Okay.

1675
01:55:22,400 --> 01:55:25,800
So if if I have this guys

1676
01:55:25,840 --> 01:55:30,080
if I have this spring, number three

1677
01:55:30,960 --> 01:55:34,560
is equal to 1.5

1678
01:55:37,120 --> 01:55:38,080
being

1679
01:55:38,720 --> 01:55:41,040
number or

1680
01:55:41,040 --> 01:55:47,200
equal to 2.5.

1681
01:55:47,200 --> 01:55:52,120
So if I say number three plus number four,

1682
01:55:52,680 --> 01:55:57,200
what are what, I will go to this.

1683
01:55:57,200 --> 01:56:03,040
Will I get 25.0 or 12.5
and then under 12.5

1684
01:56:03,040 --> 01:56:09,480
combine to get. All

1685
01:56:10,440 --> 01:56:10,880
right.

1686
01:56:10,960 --> 01:56:14,280
So this time I will not get 25.0,

1687
01:56:15,560 --> 01:56:18,760
I will get 12.5, then another 12.5.

1688
01:56:20,120 --> 01:56:23,880
Why? Because the plus operator,

1689
01:56:23,880 --> 01:56:29,200
it works differently with strings
and we call it strength and calculation.

1690
01:56:29,520 --> 01:56:30,080
Okay.

1691
01:56:30,640 --> 01:56:32,920
Spring recognition

1692
01:56:33,000 --> 01:56:34,640
and you guys can also do this.

1693
01:56:34,640 --> 01:56:36,240
You guys can also do this.

1694
01:56:36,240 --> 01:56:38,840
Let's see, maybe you can also do this.

1695
01:56:38,840 --> 01:56:44,120
It's not necessity
that you put the string first.

1696
01:56:44,680 --> 01:56:46,400
Yes. Just because of quotations.

1697
01:56:46,400 --> 01:56:50,520
It's not necessity
that you put the string first.

1698
01:56:50,640 --> 01:56:51,360
Okay.

1699
01:56:51,360 --> 01:56:56,360
So it can be maybe if you put the integer
variable first

1700
01:56:57,480 --> 01:57:00,480
and then the address

1701
01:57:03,160 --> 01:57:06,600
will it still double,

1702
01:57:06,640 --> 01:57:09,720
will perform the string
it can concatenation.

1703
01:57:09,760 --> 01:57:10,440
Okay,

1704
01:57:11,160 --> 01:57:16,080
So 18 and then one, two, three and 450.

1705
01:57:16,080 --> 01:57:20,920
So if we have at least
one string type variable,

1706
01:57:22,200 --> 01:57:25,280
the other data type, it does not matter.

1707
01:57:25,280 --> 01:57:28,600
Java will always perform
the string concatenation,

1708
01:57:28,600 --> 01:57:31,960
meaning combining two values
from those two variables.

1709
01:57:31,960 --> 01:57:35,120
Okay, I'm
putting those two things together

1710
01:57:37,800 --> 01:57:39,840
and this is what we call
the single calculation.

1711
01:57:39,840 --> 01:57:42,240
And it can also happen.

1712
01:57:42,240 --> 01:57:45,880
It can also happen
even if you don't have variables.

1713
01:57:46,120 --> 01:57:47,600
Okay? Even If you don't have a variable.

1714
01:57:47,600 --> 01:57:50,400
So let's say, for example, you can have

1715
01:57:51,800 --> 01:57:54,320
we can have system lockout age,

1716
01:57:55,120 --> 01:57:57,600
you can use the plus sign in here

1717
01:57:58,080 --> 01:58:01,600
and double course
and then you can write anything in here.

1718
01:58:02,080 --> 01:58:09,720
Okay.

1719
01:58:09,720 --> 01:58:11,400
Like this, like this.

1720
01:58:11,400 --> 01:58:14,760
So inside those parentheses

1721
01:58:15,880 --> 01:58:18,240
or any type of variable,

1722
01:58:19,400 --> 01:58:22,320
then again, that plus sign

1723
01:58:22,320 --> 01:58:25,560
and then double course,
you can write anything, okay?

1724
01:58:26,160 --> 01:58:28,640
You can write anything in here. So now

1725
01:58:30,440 --> 01:58:33,600
so now if I had run

1726
01:58:34,240 --> 01:58:36,680
so again, I see 18 is

1727
01:58:36,680 --> 01:58:39,400
my age, 18 is my age, so

1728
01:58:40,760 --> 01:58:45,440
I can put string directly,
I can fast to store

1729
01:58:45,440 --> 01:58:48,760
as being inside a variable
and then I can use it.

1730
01:58:48,760 --> 01:58:52,040
It does not matter if I have one

1731
01:58:52,040 --> 01:58:54,600
part as strings.

1732
01:58:55,360 --> 01:58:57,400
The second part does not matter.

1733
01:58:57,960 --> 01:59:01,320
The plus operator will always concatenated

1734
01:59:01,360 --> 01:59:04,480
okay to it will always combine it
with the other value.

1735
01:59:04,480 --> 01:59:04,720
Okay.

1736
01:59:04,720 --> 01:59:08,600
It will not perform mathematical addition
or something like that.

1737
01:59:08,640 --> 01:59:10,800
Okay.
It will perform the contracting issue.

1738
01:59:11,120 --> 01:59:13,680
Okay. Are we get for the string first.

1739
01:59:13,880 --> 01:59:14,760
The other variable.

1740
01:59:14,760 --> 01:59:19,080
After that we can use the other variable
first and for the string after that.

1741
01:59:19,200 --> 01:59:19,720
Okay.

1742
01:59:20,120 --> 01:59:22,560
And we can use as many plus guys.

1743
01:59:22,560 --> 01:59:24,760
I can use as many plus lines. Okay.

1744
01:59:24,760 --> 01:59:28,000
I can again
put a plus sign, use double code,

1745
01:59:28,480 --> 01:59:34,080
maybe put spaces or, or anything else
again for another plus sign. Are

1746
01:59:35,080 --> 01:59:36,120
other double quotes.

1747
01:59:36,120 --> 01:59:37,920
Okay, I can put a number.

1748
01:59:37,920 --> 01:59:39,680
I can keep on doing this. Okay.

1749
01:59:39,680 --> 01:59:44,440
I can keep on doing this.

1750
01:59:44,440 --> 01:59:51,760
What is wrong?

1751
01:59:51,760 --> 01:59:56,040
So Cheri is so she said he or

1752
01:59:56,280 --> 01:59:59,280
she thought if I mispronounce your name,

1753
01:59:59,280 --> 02:00:01,960
you are trying to store

1754
02:00:02,760 --> 02:00:05,240
a string type of data

1755
02:00:05,240 --> 02:00:08,720
in a double word variable

1756
02:00:08,720 --> 02:00:09,720
doubles.

1757
02:00:09,720 --> 02:00:11,920
They cannot store things. So.

1758
02:00:11,920 --> 02:00:14,880
So remove those double quotes

1759
02:00:14,880 --> 02:00:17,040
from that 12.5.

1760
02:00:17,040 --> 02:00:19,200
Okay, so please remove those double quotes

1761
02:00:20,880 --> 02:00:25,480
and you can post these kind of issues
in this fortune.

1762
02:00:25,480 --> 02:00:26,160
Okay.

1763
02:00:28,640 --> 02:00:29,280
All right.

1764
02:00:29,280 --> 02:00:31,560
So this is how concatenation works.

1765
02:00:31,920 --> 02:00:35,480
So now you guys can again, right?

1766
02:00:35,480 --> 02:00:38,400
Much more better statements. Okay, I'm
printing out the value.

1767
02:00:38,400 --> 02:00:42,920
So so now you guys can write
something like this. So

1768
02:00:44,240 --> 02:00:48,320
my name is then space

1769
02:00:48,960 --> 02:00:51,680
and then plus sign
and then the name variable.

1770
02:00:51,840 --> 02:00:52,120
Okay,

1771
02:00:53,120 --> 02:00:56,040
then I write

1772
02:00:59,880 --> 02:01:01,280
this time out.

1773
02:01:01,280 --> 02:01:05,640
But until then, I knew

1774
02:01:10,520 --> 02:01:12,640
this address

1775
02:01:13,760 --> 02:01:17,760
and then plus sign and then backless.

1776
02:01:17,760 --> 02:01:18,480
Okay.

1777
02:01:20,880 --> 02:01:24,320
And I think I can write
now much more better.

1778
02:01:24,320 --> 02:01:27,640
Screencast differential right.

1779
02:01:27,720 --> 02:01:29,640
It is

1780
02:01:30,960 --> 02:01:52,240
your page.

1781
02:01:52,240 --> 02:01:53,400
Does it make sense. Right.

1782
02:01:53,400 --> 02:01:56,160
How how how distinct concatenation works.

1783
02:01:57,320 --> 02:01:59,760
So so string congratulation means simply

1784
02:02:00,040 --> 02:02:02,840
combining a string with any other data

1785
02:02:12,720 --> 02:02:20,160
is dependent on.

1786
02:02:20,160 --> 02:02:22,520
So I can use directly

1787
02:02:23,400 --> 02:02:26,880
the combination of letters
with double code I can print out.

1788
02:02:26,920 --> 02:02:28,960
I can combine two variables.

1789
02:02:29,320 --> 02:02:34,320
I can combine any type of variables
with this plus one variable.

1790
02:02:34,320 --> 02:02:38,400
It must be of type string.

1791
02:02:38,400 --> 02:02:44,360
Let's create a new class
that's creating new class.

1792
02:02:44,360 --> 02:02:46,680
So I right click on my package.

1793
02:02:48,080 --> 02:02:49,680
Then I see

1794
02:03:16,920 --> 02:03:20,200
I have a question
why something is not colored

1795
02:03:20,200 --> 02:03:24,440
when we write is,
but other data types are colored when.

1796
02:03:24,440 --> 02:03:26,640
We write them so tamannah.

1797
02:03:27,000 --> 02:03:30,480
The thing is in non
primitive data type, okay?

1798
02:03:31,000 --> 02:03:35,880
And non primitive data types are something
you can also create.

1799
02:03:36,200 --> 02:03:38,600
Okay. So Java does not know in advance.

1800
02:03:38,840 --> 02:03:43,880
Maybe you can call your data type
as string one, two, three or string 1245.

1801
02:03:44,520 --> 02:03:47,200
Does not know what kind of name
you're going to give your name.

1802
02:03:47,200 --> 02:03:48,960
So this is not a result.

1803
02:03:48,960 --> 02:03:52,800
Keyboard
and Java does not know that in advance,

1804
02:03:52,800 --> 02:03:57,760
but those primitive ones, they are defined
by Java guys and no one is allowed.

1805
02:03:57,760 --> 02:04:01,480
Could we find any other
a new primitive that

1806
02:04:01,520 --> 02:04:04,720
okay, that's
how Eclipse knows that they are primitive.

1807
02:04:04,720 --> 02:04:07,200
Perhaps that's
why you try to highlight them easily.

1808
02:04:07,680 --> 02:04:09,440
But the non primitive ones.

1809
02:04:09,440 --> 02:04:13,760
I can also create my own a non primitive
that you guys can create your own

1810
02:04:13,760 --> 02:04:15,160
non primitive prototype.

1811
02:04:15,160 --> 02:04:17,280
So only primitives are highlighted.

1812
02:04:17,280 --> 02:04:30,240
Not the non primitives.

1813
02:04:30,240 --> 02:04:33,920
Okay, let me show you one more example
before we move forward.

1814
02:04:34,200 --> 02:04:54,360
So let me create a new class.

1815
02:04:54,360 --> 02:04:56,200
Let's call it thing. Contract them.

1816
02:04:56,200 --> 02:04:57,480
Let me know what you want.

1817
02:04:57,480 --> 02:05:20,280
You guys have created this.

1818
02:05:20,280 --> 02:05:22,480
Okay, Let's declare three variables.

1819
02:05:22,480 --> 02:05:25,400
Okay, Let's use

1820
02:05:27,480 --> 02:05:33,480
Nobel Prize.

1821
02:05:33,480 --> 02:05:35,320
We're like a base.

1822
02:05:35,680 --> 02:05:52,240
Let's use a string.

1823
02:05:52,240 --> 02:05:54,600
Their fields

1824
02:06:00,880 --> 02:06:06,720
start assigning.

1825
02:06:06,720 --> 02:06:08,640
Let's try to use distinct recognition.

1826
02:06:08,640 --> 02:06:17,880
Okay.

1827
02:06:17,880 --> 02:06:20,600
So noble cause

1828
02:06:28,080 --> 02:06:30,960
then of course,

1829
02:06:30,960 --> 02:06:34,680
I write plus sign.

1830
02:06:34,680 --> 02:06:38,920
Then I add the variable name,

1831
02:06:38,920 --> 02:06:43,400
then another plus sign.

1832
02:06:43,400 --> 02:06:45,920
And then again double code

1833
02:06:46,960 --> 02:06:51,040
space.

1834
02:06:51,040 --> 02:06:53,360
And another plus sign.

1835
02:06:53,360 --> 02:06:57,120
Okay, Then we end the variable name

1836
02:06:58,640 --> 02:07:00,480
and another plus sign.

1837
02:07:00,480 --> 02:07:05,840
And then the simple.

1838
02:07:05,840 --> 02:07:09,200
So please staying full like Z.

1839
02:07:09,240 --> 02:07:09,920
What do you mean?

1840
02:07:09,920 --> 02:07:17,800
So string, pull.

1841
02:07:17,800 --> 02:07:19,800
So can you guys tell me the output?
What output?

1842
02:07:19,840 --> 02:07:33,720
I will get?

1843
02:07:33,720 --> 02:07:35,360
So if I write this line.

1844
02:07:35,360 --> 02:07:40,160
Yes. A prize of not
not is but .34 dollars.

1845
02:07:40,520 --> 02:07:43,680
So I am directly using a string

1846
02:07:44,800 --> 02:07:48,240
by using those double codes
inside that system, not out.

1847
02:07:48,240 --> 02:07:51,080
I am also using different variables like.

1848
02:07:52,080 --> 02:07:56,520
Like things like double.

1849
02:07:56,520 --> 02:07:59,000
So this is how string democratic nation
can help you

1850
02:08:03,000 --> 02:08:05,520
guys understand
why we are getting this output.

1851
02:08:05,520 --> 02:08:14,760
Is there anyone who don't understand this?

1852
02:08:14,760 --> 02:08:19,080
Okay, let's let's try to solve the task
from the slide.

1853
02:08:19,160 --> 02:08:19,560
Okay.

1854
02:08:19,560 --> 02:08:22,400
So you guys will help me
solve this problem.

1855
02:08:23,720 --> 02:08:26,640
So I have to create a Java program.

1856
02:08:26,920 --> 02:08:27,600
Okay.

1857
02:08:27,600 --> 02:08:30,200
So what is meant by Java Program Guide?

1858
02:08:30,200 --> 02:08:36,000
How can I created our program?

1859
02:08:36,000 --> 02:08:37,720
This class, right?

1860
02:08:37,720 --> 02:08:40,280
The class with the main method.

1861
02:08:40,800 --> 02:08:43,960
So I will create a class

1862
02:08:44,600 --> 02:08:49,080
and I have to give it a name
to give it a name variable.

1863
02:08:49,080 --> 02:08:52,320
Okay, So. So walk me through the steps.

1864
02:08:52,600 --> 02:08:52,960
We are.

1865
02:08:52,960 --> 02:09:03,320
Should I click to create that Java program
or that class?

1866
02:09:03,320 --> 02:09:08,160
So I c should I right
click on source as I see or on package

1867
02:09:14,480 --> 02:09:16,440
on package, not on source.

1868
02:09:16,440 --> 02:09:17,400
Right.

1869
02:09:17,640 --> 02:09:21,680
So I need to right click here then nil

1870
02:09:24,160 --> 02:09:26,160
right and nil and then work days

1871
02:09:26,160 --> 02:09:28,720
after right clicking on package
and what should I do next

1872
02:09:30,680 --> 02:09:33,280
class right from in this class.

1873
02:09:33,480 --> 02:09:34,080
Okay.

1874
02:09:34,680 --> 02:09:37,760
And the name of the program should be

1875
02:09:39,680 --> 02:09:46,240
variables right?

1876
02:09:46,240 --> 02:09:48,080
Like this? Yeah.

1877
02:09:48,080 --> 02:09:49,800
Then I can select this this option.

1878
02:09:49,800 --> 02:09:59,280
What will happen, guys,
if I check if I check this option,

1879
02:09:59,280 --> 02:10:02,760
it will create the main
method automatically for me.

1880
02:10:02,760 --> 02:10:03,360
Right?

1881
02:10:03,360 --> 02:10:14,280
With this class.

1882
02:10:14,280 --> 02:10:15,000
Okay.

1883
02:10:15,680 --> 02:10:20,720
Oh, in my program,

1884
02:10:20,720 --> 02:10:25,360
it says in your program, create
different type of variables

1885
02:10:25,360 --> 02:10:27,520
to store student information

1886
02:10:28,360 --> 02:10:31,120
and then bring values

1887
02:10:31,200 --> 02:10:39,120
of those variables.

1888
02:10:39,120 --> 02:10:44,040
So I have to create name last name
grade, city state phone number.

1889
02:10:44,040 --> 02:10:44,880
Okay.

1890
02:10:44,880 --> 02:10:51,320
So now let me put your
side by side, duplicate side.

1891
02:10:52,680 --> 02:10:55,480
So that is not, you know, help me help me

1892
02:10:55,800 --> 02:10:58,800
choose the right data type

1893
02:10:59,280 --> 02:11:03,320
for storing this info so far name
what should be

1894
02:11:03,320 --> 02:11:05,400
the what should be the data type
that I should

1895
02:11:07,160 --> 02:11:08,480
be strings right.

1896
02:11:08,480 --> 02:11:09,320
Why things?

1897
02:11:09,320 --> 02:11:14,320
Because strings can hold
multiple characters inside a variable.

1898
02:11:14,480 --> 02:11:17,280
Right? So I will say string, right.

1899
02:11:18,000 --> 02:11:19,000
String

1900
02:11:19,600 --> 02:11:21,320
name. Okay.

1901
02:11:21,320 --> 02:11:24,720
And let's, let's use

1902
02:11:25,800 --> 02:11:27,360
Omron as the example.

1903
02:11:27,360 --> 02:11:28,440
Okay.

1904
02:11:28,440 --> 02:11:32,080
So let's do them.

1905
02:11:32,080 --> 02:11:42,440
So I use double code and then I, I put the
semicolon over What about the last name

1906
02:11:43,960 --> 02:11:51,920
against string?

1907
02:11:51,920 --> 02:11:55,440
So I'm not what, what is your last name

1908
02:12:04,240 --> 02:12:04,960
though?

1909
02:12:05,160 --> 02:12:09,440
Percent said

1910
02:12:12,720 --> 02:12:16,520
like this.

1911
02:12:16,520 --> 02:12:18,320
Or what about the grades?

1912
02:12:18,320 --> 02:12:22,680
So grades are the values like A, B, c,
d, e, f, g,

1913
02:12:23,440 --> 02:12:27,520
so I can use it
can I use this thing as well guys?

1914
02:12:27,800 --> 02:12:29,040
Can I use the string as a

1915
02:12:31,240 --> 02:12:34,200
yes. Okay, I can use, but I can use both.

1916
02:12:34,840 --> 02:12:47,480
So let's use string grade. Why?

1917
02:12:47,480 --> 02:12:49,200
I'm getting an error guys.

1918
02:12:49,200 --> 02:12:52,080
I am getting an error on this line
number ten

1919
02:12:55,800 --> 02:12:56,840
double calls.

1920
02:12:56,840 --> 02:12:58,920
Right? With characters

1921
02:13:00,240 --> 02:13:03,880
I can only use

1922
02:13:04,560 --> 02:13:06,000
single quotes.

1923
02:13:06,000 --> 02:13:07,680
I'm going to remove the normal course.

1924
02:13:07,680 --> 02:13:10,040
I will replace it with simple course.

1925
02:13:11,040 --> 02:13:19,240
If. What about the city?

1926
02:13:19,240 --> 02:13:28,040
Right.

1927
02:13:28,040 --> 02:13:30,480
In this scenario,

1928
02:13:30,480 --> 02:13:33,600
let me and let me add
another variable from my side.

1929
02:13:33,600 --> 02:13:36,480
So let's let's use this edge as well.

1930
02:13:36,760 --> 02:13:40,600
So which type of box I should use to store

1931
02:13:40,600 --> 02:13:44,200
edge.

1932
02:13:44,200 --> 02:13:48,320
Now you can use by
I can use integer, but what should I use

1933
02:13:49,120 --> 02:13:52,400
if it comes to choosing
from byte or integer

1934
02:13:53,640 --> 02:13:55,800
I should always go with integer.

1935
02:13:56,080 --> 02:14:06,240
Okay.

1936
02:14:06,240 --> 02:14:26,520
And what about this database
again, string.

1937
02:14:26,520 --> 02:14:27,840
And the last.

1938
02:14:27,840 --> 02:14:37,360
What about the phone number?

1939
02:14:37,360 --> 02:14:41,320
Long integer difference. So

1940
02:14:42,280 --> 02:14:43,320
here, here is

1941
02:14:43,320 --> 02:14:47,040
dice it how you decide whether to type.

1942
02:14:47,200 --> 02:14:52,760
Okay, so with four numbers,
do we perform the calculations

1943
02:14:52,760 --> 02:14:57,000
like a nation subtraction, multiplication,
losing, perform this kind of operations

1944
02:14:57,000 --> 02:14:58,200
with phone numbers?

1945
02:14:58,200 --> 02:14:59,280
No. Right.

1946
02:14:59,280 --> 02:15:02,960
And phone numbers can also contain that
plus sign, right.

1947
02:15:03,240 --> 02:15:06,880
That plus sign up to represent
that country code.

1948
02:15:06,880 --> 02:15:10,320
So which data type can hold a plus sign
with a number

1949
02:15:14,680 --> 02:15:16,560
integers cannot hold that plus sign.

1950
02:15:16,560 --> 02:15:18,600
So those who are saying indeed, yes.

1951
02:15:18,720 --> 02:15:20,640
So if I say

1952
02:15:24,960 --> 02:15:25,720
if I say

1953
02:15:25,720 --> 02:15:30,960
+114, five, six, seven, I cannot do that.

1954
02:15:30,960 --> 02:15:31,640
Right.

1955
02:15:32,400 --> 02:15:33,640
Oh yes, I can do that.

1956
02:15:33,640 --> 02:15:35,760
But I'll be getting an issue.

1957
02:15:35,800 --> 02:15:41,640
So let's say, for example,
in this country, code is zero.

1958
02:15:41,640 --> 02:15:42,360
Okay.

1959
02:15:42,840 --> 02:15:45,120
So if the country code is zero for

1960
02:15:45,120 --> 02:15:47,640
some of the cases,
I will be getting the add it.

1961
02:15:48,200 --> 02:15:49,960
And one more thing.

1962
02:15:49,960 --> 02:15:52,320
Even if I put this
plus sign in here, guys,

1963
02:15:52,920 --> 02:15:56,760
if I try to print this out,
what do you guys think

1964
02:15:56,760 --> 02:16:02,960
when I get this
plus sign in the output as well?

1965
02:16:02,960 --> 02:16:05,280
So let's say B country code is non zero.

1966
02:16:05,280 --> 02:16:08,800
Okay, So I am I'm always using something
that is non zero.

1967
02:16:09,320 --> 02:16:17,920
But if I print this out.

1968
02:16:17,920 --> 02:16:20,600
I don't get that plus sign now. Okay.

1969
02:16:20,720 --> 02:16:22,520
I don't get that plus sign.

1970
02:16:22,520 --> 02:16:25,600
So two I cannot put two zeros.

1971
02:16:26,560 --> 02:16:27,400
Okay.

1972
02:16:27,480 --> 02:16:28,920
And I cannot predict that.

1973
02:16:28,920 --> 02:16:31,040
Plus on one more issue
guys. One more issue.

1974
02:16:31,280 --> 02:16:33,760
So if I put two zeros in here,

1975
02:16:34,760 --> 02:16:36,720
I cannot do that.

1976
02:16:37,320 --> 02:16:37,800
Okay?

1977
02:16:37,800 --> 02:16:40,440
I cannot put two zeros in the integers.

1978
02:16:40,520 --> 02:16:41,080
Okay.

1979
02:16:41,080 --> 02:16:44,680
So let's say if your number is
is something that contains

1980
02:16:44,680 --> 02:16:48,120
a zeros in front, you will again
get at us.

1981
02:16:48,560 --> 02:16:49,080
Okay.

1982
02:16:49,080 --> 02:16:53,440
Because when we put the zeros
in front of a number in Java, it is meant

1983
02:16:53,680 --> 02:16:56,640
Do you guys know about the number system?

1984
02:16:57,720 --> 02:17:01,480
There are other number systems
like hexadecimal, octal, binary.

1985
02:17:02,400 --> 02:17:04,480
How many of you know
about the number systems

1986
02:17:05,520 --> 02:17:08,400
like binary numbers of octal numbers,

1987
02:17:08,400 --> 02:17:11,000
hexadecimal numbers.

1988
02:17:11,480 --> 02:17:14,160
So the the number system that we use

1989
02:17:14,160 --> 02:17:18,080
in our daily life,
they are based on decimal numbers.

1990
02:17:18,120 --> 02:17:20,560
Okay. Decimal system. Decimal system.

1991
02:17:21,480 --> 02:17:24,360
So the decimal system after ten.

1992
02:17:25,000 --> 02:17:29,920
So so from 0 to 9 we have numbers
and after then the repetition starts.

1993
02:17:30,240 --> 02:17:36,360
We, we build all of the numbers using the
combination of the numbers from 0 to 9.

1994
02:17:36,680 --> 02:17:37,200
Okay.

1995
02:17:37,200 --> 02:17:41,200
In our call systems,
we have max eight unique numbers.

1996
02:17:41,200 --> 02:17:44,600
We build all of the other numbers
using those eight symbols.

1997
02:17:45,120 --> 02:17:47,600
In hexadecimal, we have 16 symbols.

1998
02:17:48,000 --> 02:17:49,360
We build all of the numbers.

1999
02:17:49,360 --> 02:17:52,880
So it's a completely different numbers
system.

2000
02:17:52,880 --> 02:17:55,120
Okay, In computers they are used.

2001
02:17:55,440 --> 02:18:02,240
So when we put zeros, now Java is thinking
of this number in an other octal system.

2002
02:18:02,240 --> 02:18:04,360
So that's why
it is also not allowed in here.

2003
02:18:04,360 --> 02:18:07,280
So for phone numbers
or something like that

2004
02:18:07,280 --> 02:18:09,480
in which you need to put zeros in front,

2005
02:18:10,320 --> 02:18:14,840
you need to put other signs
plus multiplication or things like that,

2006
02:18:15,840 --> 02:18:19,400
and you are not
doing the mathematical operations on that.

2007
02:18:19,440 --> 02:18:23,040
Numbers like addition, multiplication
always go with distinct,

2008
02:18:23,280 --> 02:18:26,120
okay, Always go with distinct.

2009
02:18:26,120 --> 02:18:28,600
Is is it clear, guys? Why?

2010
02:18:28,640 --> 02:18:34,920
Why I am using string in here.

2011
02:18:34,920 --> 02:18:37,080
So I should I should go with strings.

2012
02:18:38,080 --> 02:18:40,280
I'm getting error rate

2013
02:18:46,080 --> 02:18:47,160
for right?

2014
02:18:47,160 --> 02:18:49,920
I must be able to double pause

2015
02:18:51,480 --> 02:18:55,680
with strings.

2016
02:18:55,680 --> 02:19:02,320
So now if I execute my program,
I see that plus sign in here.

2017
02:19:02,640 --> 02:19:11,360
Okay, so let me remove it for now.

2018
02:19:11,360 --> 02:19:14,040
So I have to print out the values
of these variables.

2019
02:19:14,200 --> 02:19:15,960
Okay.

2020
02:19:15,960 --> 02:19:18,440
So I will say

2021
02:19:22,680 --> 02:19:23,840
name,

2022
02:19:24,760 --> 02:19:26,960
then a space.

2023
02:19:27,480 --> 02:19:30,080
And then remember, guys, one more thing.

2024
02:19:30,080 --> 02:19:33,240
If you put if you put spaces

2025
02:19:36,760 --> 02:19:40,080
in between the plus signs

2026
02:19:40,960 --> 02:19:43,440
in between the plus signs,

2027
02:19:43,440 --> 02:19:46,040
those spaces, they are not counted.

2028
02:19:46,200 --> 02:19:46,720
Okay.

2029
02:19:46,720 --> 02:19:53,680
So let's say, for example,

2030
02:19:53,680 --> 02:19:58,000
the spaces that I put inside
the double course, that will matter.

2031
02:19:58,040 --> 02:19:58,440
Okay?

2032
02:19:58,440 --> 02:20:00,840
And you will see
those spaces in the output.

2033
02:20:01,280 --> 02:20:04,080
But between the plus size
or between the variables.

2034
02:20:04,080 --> 02:20:07,080
So let's say if I say name

2035
02:20:07,640 --> 02:20:11,600
and before this plus sign and this name,
if I put, let's say

2036
02:20:11,600 --> 02:20:15,800
maybe ten spaces,
I will not see those spaces in my output.

2037
02:20:16,200 --> 02:20:19,760
Only the spaces which are inside

2038
02:20:20,280 --> 02:20:24,720
course matter
in Java ignores these spaces.

2039
02:20:24,760 --> 02:20:29,840
Okay, so if I print out this line
like this, and if I don't put

2040
02:20:29,840 --> 02:20:33,360
any squares inside the double force,
and if I, if I print this,

2041
02:20:35,120 --> 02:20:35,600
I will not

2042
02:20:35,600 --> 02:20:38,520
see any space between name
and the actual name.

2043
02:20:38,760 --> 02:20:42,120
Okay, So spaces,
they only matter inside the double box

2044
02:20:45,840 --> 02:20:46,640
like this.

2045
02:20:48,560 --> 02:20:51,480
So a name and then maybe let's see

2046
02:20:51,480 --> 02:20:53,760
if I want to print out

2047
02:20:55,920 --> 02:20:59,840
if I want to put any of the space

2048
02:21:00,560 --> 02:21:02,960
and order

2049
02:21:02,960 --> 02:21:04,240
and let's see what do you mean?

2050
02:21:04,240 --> 02:21:06,480
Or and then

2051
02:21:06,480 --> 02:21:12,080
double quotes, let's say edge

2052
02:21:13,240 --> 02:21:14,960
and other space

2053
02:21:15,480 --> 02:21:17,080
and plus sign.

2054
02:21:17,080 --> 02:21:18,360
Then H

2055
02:21:19,120 --> 02:21:21,280
So what I will see on my console both

2056
02:21:27,360 --> 02:21:31,160
so name with capital N then if space

2057
02:21:32,360 --> 02:21:36,680
then the name because I am using
this variable name in here.

2058
02:21:36,760 --> 02:21:37,440
Right?

2059
02:21:37,680 --> 02:21:40,200
So the actual name I'm wrong.

2060
02:21:40,560 --> 02:21:43,520
Okay, so name space I'm wrong

2061
02:21:44,480 --> 02:21:46,920
then and then other space

2062
02:21:46,920 --> 02:21:49,920
because I have a space in here then edge

2063
02:21:51,320 --> 02:21:53,840
and after that and other space

2064
02:21:54,200 --> 02:22:00,760
and then the actual edge.

2065
02:22:00,760 --> 02:22:08,040
Okay, so this is how it looks like.

2066
02:22:08,040 --> 02:22:08,760
Okay.

2067
02:22:10,080 --> 02:22:10,680
All right.

2068
02:22:10,680 --> 02:22:14,000
So second part of the task phase guys are

2069
02:22:15,800 --> 02:22:19,000
I have to change student city

2070
02:22:20,520 --> 02:22:25,240
spare phone number and grade,

2071
02:22:25,240 --> 02:22:28,960
and then I have to print out
the updated values.

2072
02:22:30,080 --> 02:22:33,920
So after this line in here,

2073
02:22:33,920 --> 02:22:37,480
first I have to change the student city.

2074
02:22:38,040 --> 02:22:40,080
Okay, So.

2075
02:22:41,520 --> 02:22:44,000
So how how can I.

2076
02:22:44,000 --> 02:23:02,040
Of the value of city guys,
what should I write?

2077
02:23:02,040 --> 02:23:08,080
So this time
I don't need to mention the data type.

2078
02:23:08,600 --> 02:23:09,280
Okay.

2079
02:23:09,280 --> 02:23:11,960
I only mention city.

2080
02:23:12,600 --> 02:23:15,480
Okay, only the variable name

2081
02:23:15,600 --> 02:23:17,800
then equal to sign.

2082
02:23:17,800 --> 02:23:20,160
And then I can say

2083
02:23:23,840 --> 02:23:25,760
the updated city.

2084
02:23:25,760 --> 02:23:28,120
I can store the updated city. Okay.

2085
02:23:29,160 --> 02:23:31,280
Like this.

2086
02:23:31,280 --> 02:23:34,480
So if if I try to left,

2087
02:23:34,520 --> 02:23:37,680
let me put the city in here.

2088
02:23:37,760 --> 02:23:39,880
Okay. Let me put the city in here as well.

2089
02:23:40,240 --> 02:23:41,520
So city then.

2090
02:23:41,520 --> 02:23:47,800
Space.

2091
02:23:47,800 --> 02:23:48,080
Okay.

2092
02:23:48,360 --> 02:23:51,880
And then plus sign and then city.

2093
02:23:52,160 --> 02:23:52,760
Okay.

2094
02:23:53,320 --> 02:23:57,480
So if I, if I, if I run into this

2095
02:23:59,080 --> 02:24:02,400
so I see
b I see the city as New York in here.

2096
02:24:02,400 --> 02:24:03,000
Okay.

2097
02:24:03,200 --> 02:24:06,120
But when I have updated

2098
02:24:06,120 --> 02:24:10,680
the value of city variable
and if I try to print

2099
02:24:11,040 --> 02:24:13,680
this same again, we like

2100
02:24:13,760 --> 02:24:16,200
will I see Chicago or the New York?

2101
02:24:17,040 --> 02:24:19,640
I am printing out the same values, same
variable names.

2102
02:24:19,640 --> 02:24:20,240
Okay,

2103
02:24:21,360 --> 02:24:24,360
so on line six

2104
02:24:24,360 --> 02:24:27,640
because I have updated
the value of a variable,

2105
02:24:27,760 --> 02:24:30,400
now I will see the updated output.

2106
02:24:31,600 --> 02:24:33,640
This I will see the object about four.

2107
02:24:33,640 --> 02:24:36,360
So run this and then

2108
02:24:36,360 --> 02:24:38,400
now I see the updated values.

2109
02:24:38,400 --> 02:24:40,320
Okay. Is it clear, guys?

2110
02:24:40,320 --> 02:24:43,280
Is anyone confused about about why

2111
02:24:43,400 --> 02:24:45,440
I am getting this updated outlook

2112
02:24:46,640 --> 02:24:48,440
or how to update the variable

2113
02:24:48,440 --> 02:24:53,640
values?

2114
02:24:53,640 --> 02:24:54,480
Okay.

2115
02:24:54,680 --> 02:24:59,520
So you guys can try to change the values
of other variables as well.

2116
02:24:59,520 --> 02:25:07,280
And then print them out.

2117
02:25:07,280 --> 02:25:10,960
So on this slide it's just another demo.

2118
02:25:11,040 --> 02:25:15,480
Okay, we have a name
and then we are using this plus operator

2119
02:25:16,200 --> 02:25:18,520
and the name last grade, blah blah.

2120
02:25:18,560 --> 02:25:20,880
Can you repeat the updated value?

2121
02:25:20,880 --> 02:25:23,760
Yes. You.

2122
02:25:23,760 --> 02:25:27,520
So the task says that you have to update

2123
02:25:27,760 --> 02:25:32,640
so you re assigned it s
I reassigned it so I a box.

2124
02:25:33,120 --> 02:25:36,240
Right. I had a box and inside that box

2125
02:25:37,920 --> 02:25:40,520
I had New York first.

2126
02:25:40,520 --> 02:25:41,160
Okay.

2127
02:25:41,400 --> 02:25:44,320
What I did on line

2128
02:25:44,360 --> 02:25:49,160
16, I opened in that box,
I extracted the city,

2129
02:25:49,440 --> 02:25:55,320
New York and, I placed a new city,
Chicago, inside that box.

2130
02:25:55,440 --> 02:25:58,680
And then just like as you do in your
in your normal life,

2131
02:25:59,160 --> 02:26:03,000
if if you have a paper box right here,
you can put multiple things.

2132
02:26:03,000 --> 02:26:05,960
You can put a you can
you can put something, you can

2133
02:26:07,000 --> 02:26:08,320
get that thing out.

2134
02:26:08,320 --> 02:26:11,400
You can put another new thing in that box
as your

2135
02:26:12,480 --> 02:26:13,520
needs, right?

2136
02:26:13,520 --> 02:26:18,480
So we can do the same with these boxes,
these variables, these containers.

2137
02:26:19,000 --> 02:26:21,120
We, we can update their values.

2138
02:26:21,360 --> 02:26:25,920
So our I will do whatever value
we have stored in them previously.

2139
02:26:26,920 --> 02:26:30,840
Dollar will discard about the value
and it will put updated

2140
02:26:30,840 --> 02:26:34,600
value inside them.

2141
02:26:34,600 --> 02:26:38,280
String is not required
before the re assignment. Yes.

2142
02:26:38,440 --> 02:26:40,640
So Maryam, if you try to put string

2143
02:26:42,040 --> 02:26:43,840
you will get then add it

2144
02:26:43,840 --> 02:26:46,880
because now you are trying to re
declare a variable.

2145
02:26:47,200 --> 02:26:47,920
Okay.

2146
02:26:48,360 --> 02:26:51,960
So you don't need
to put the string in here

2147
02:26:52,680 --> 02:26:55,000
if you are updating the content

2148
02:26:55,000 --> 02:26:58,400
of decorator variable.

2149
02:26:58,400 --> 02:27:00,120
Yes, I'm just updating the info.

2150
02:27:00,120 --> 02:27:03,840
I'm just so let's say
one student was living in a different city

2151
02:27:04,160 --> 02:27:06,520
then he or she moved to a different city.

2152
02:27:06,520 --> 02:27:10,280
Now we are updating that in that info,
right?

2153
02:27:10,440 --> 02:27:12,440
It's that simple.

2154
02:27:13,360 --> 02:27:16,240
And I said please
post issues in the sports channel.

2155
02:27:17,040 --> 02:27:19,240
I you are missing that plus sign.

2156
02:27:19,240 --> 02:27:22,440
That's why you are getting
you are missing this plus sign this

2157
02:27:22,440 --> 02:27:29,200
plus sign.

2158
02:27:29,200 --> 02:27:32,040
Is it clear guys the updating update part

2159
02:27:35,240 --> 02:27:37,400
so I can be other values

2160
02:27:37,400 --> 02:27:40,080
because now
you guys seemed a little confused.

2161
02:27:40,760 --> 02:27:43,720
So let me update the phone number.

2162
02:27:44,520 --> 02:27:45,760
Yes, the phone number

2163
02:27:47,000 --> 02:27:49,040
is +98,

2164
02:27:49,080 --> 02:27:55,800
maybe.

2165
02:27:55,800 --> 02:28:00,960
And then maybe I can update the age right.

2166
02:28:00,960 --> 02:28:03,920
So now it is

2167
02:28:04,440 --> 02:28:05,520
23, maybe.

2168
02:28:05,520 --> 02:28:06,160
Right.

2169
02:28:06,360 --> 02:28:08,480
So we can update those values. Why?

2170
02:28:08,480 --> 02:28:09,840
I'm getting an error in here.

2171
02:28:09,840 --> 02:28:16,480
So when I am trying to update the phone
number,

2172
02:28:16,480 --> 02:28:19,600
what is command thing whole?

2173
02:28:20,640 --> 02:28:23,600
Where is this thing command for?

2174
02:28:23,600 --> 02:28:27,600
I have not used this command
double code side.

2175
02:28:28,240 --> 02:28:29,240
So strings.

2176
02:28:29,240 --> 02:28:32,400
They required double codes

2177
02:28:33,880 --> 02:28:36,960
and they require double force.

2178
02:28:36,960 --> 02:28:38,280
Are you guys following me?

2179
02:28:38,280 --> 02:28:39,960
Are you able to follow me?

2180
02:28:39,960 --> 02:28:43,400
Your and pager

2181
02:28:43,640 --> 02:28:47,520
can be updated by same,
but if every variable right,

2182
02:28:47,520 --> 02:28:51,120
every variable
you can update any variable any with you

2183
02:28:52,440 --> 02:28:54,840
either existing integer boolean

2184
02:28:54,840 --> 02:28:58,800
job or type of you.

2185
02:28:58,800 --> 02:29:00,760
Here it's just like updating the info.

2186
02:29:00,760 --> 02:29:01,960
So we have stored and

2187
02:29:03,120 --> 02:29:05,040
and in force somewhere.

2188
02:29:05,040 --> 02:29:06,600
Okay. In the memory.

2189
02:29:06,600 --> 02:29:10,520
Now as time passes,
we might need to update that info.

2190
02:29:10,520 --> 02:29:15,400
We will replace
whatever stored in those boxes

2191
02:29:15,400 --> 02:29:18,960
previously
when we would put the new values.

2192
02:29:18,960 --> 02:29:27,680
So now if I execute this.

2193
02:29:27,680 --> 02:29:30,600
So instead of 22 now I see 23.

2194
02:29:31,960 --> 02:29:32,880
Yes, we do.

2195
02:29:32,880 --> 02:29:35,560
Please give us a little bit
time to catch you. Okay.

2196
02:29:35,600 --> 02:29:39,360
Just showed you guys can always stop me
and then I see the updated

2197
02:29:39,360 --> 02:29:49,920
city.

2198
02:29:49,920 --> 02:29:51,640
Yes, perfect

2199
02:29:55,080 --> 02:29:57,360
numbers and don't need quotation marks.

2200
02:29:57,720 --> 02:30:01,160
Yes, numbers
don't name quotation marks, only string

2201
02:30:01,680 --> 02:30:06,360
and characters because the task required
single core source

2202
02:30:06,680 --> 02:30:25,040
and this strings the required
double quotes.

2203
02:30:25,040 --> 02:30:26,280
Nicola

2204
02:30:26,920 --> 02:30:29,560
getting and adding edit

2205
02:30:37,720 --> 02:30:39,840
okay, so

2206
02:30:39,840 --> 02:30:43,080
Nicola the java is case sensitive.

2207
02:30:43,440 --> 02:30:47,840
Okay, so the variable city
that you have declared in here

2208
02:30:48,160 --> 02:30:53,400
you have declared is with Capital C,
but in here you are

2209
02:30:53,400 --> 02:30:56,800
trying to write lowercase C
okay, that's why you are getting

2210
02:30:56,800 --> 02:31:04,600
that kind.

2211
02:31:04,600 --> 02:31:09,240
Are there other students who are getting
issues or any other type of errors?

2212
02:31:09,240 --> 02:31:13,920
So in our future work,
is it related to update of information?

2213
02:31:13,920 --> 02:31:16,320
What would be the use of this in practice?

2214
02:31:16,920 --> 02:31:21,400
I am sure many uses, if you could
informally add those comments to

2215
02:31:22,560 --> 02:31:25,800
so about
the use information about the use cases.

2216
02:31:25,800 --> 02:31:29,160
Is that great variable?

2217
02:31:29,160 --> 02:31:32,280
So the name itself is variable.

2218
02:31:32,400 --> 02:31:33,840
Okay, it's a lot.

2219
02:31:33,840 --> 02:31:38,360
And then so it
something that keeps on changing.

2220
02:31:38,360 --> 02:31:41,240
So you are trying to store some info.

2221
02:31:41,280 --> 02:31:44,320
Let's assume that updating the info once

2222
02:31:44,320 --> 02:31:47,600
that info is stored
in a variable is not allowed in Java.

2223
02:31:47,600 --> 02:31:53,520
Okay, so what will happen
if we store something inside a variable?

2224
02:31:53,520 --> 02:31:56,000
Once that info will stay the same,

2225
02:31:56,600 --> 02:31:59,920
but in real life
things don't stay the same.

2226
02:32:00,000 --> 02:32:01,400
Things change.

2227
02:32:01,400 --> 02:32:05,960
Like, for example, take the example
of edge to the edge that you have today.

2228
02:32:05,960 --> 02:32:08,240
It will not be the same
as of tomorrow, right?

2229
02:32:08,560 --> 02:32:09,920
It will change.

2230
02:32:09,920 --> 02:32:12,960
So Java guys,
they have given you this flexibility

2231
02:32:12,960 --> 02:32:16,200
that you can change
the values of the variables as well.

2232
02:32:16,520 --> 02:32:20,160
If something changed over time,
you can obtain that value as well.

2233
02:32:20,360 --> 02:32:23,680
So that's why we
we can update the values of variables.

2234
02:32:24,000 --> 02:32:26,320
They are not fixed boxes, right?

2235
02:32:26,760 --> 02:32:30,680
They Are variable boxes
if later point of time,

2236
02:32:30,680 --> 02:32:34,280
if you want to update the contents
of a box, you can do that.

2237
02:32:34,360 --> 02:32:35,560
Think of the real life.

2238
02:32:35,560 --> 02:32:39,720
If you if have a box and you can never
change the contents of it.

2239
02:32:39,720 --> 02:32:42,720
Once you have stored something inside
that box, you can never change it.

2240
02:32:43,000 --> 02:32:45,920
It will be pretty much a useless

2241
02:32:45,920 --> 02:32:53,280
box right?

2242
02:32:53,280 --> 02:32:54,680
Forever. It's fine.

2243
02:32:54,680 --> 02:32:55,320
It's fine.

2244
02:32:55,320 --> 02:32:57,040
Please be patient with that. Yes.

2245
02:32:57,040 --> 02:32:58,720
I am not rushing.

2246
02:32:58,720 --> 02:32:59,440
I'm not rushing.

2247
02:32:59,440 --> 02:33:01,560
Don't worry. You can.
You guys can always stop me.

2248
02:33:01,560 --> 02:33:03,720
Ask questions. Okay.

2249
02:33:04,240 --> 02:33:05,800
If something is not clear.

2250
02:33:05,800 --> 02:33:10,160
So the other use
case of this, you guys will see.

2251
02:33:10,160 --> 02:33:10,960
I think

2252
02:33:13,200 --> 02:33:14,800
after two more classes.

2253
02:33:14,800 --> 02:33:15,840
Two or three classes.

2254
02:33:15,840 --> 02:33:18,320
Okay, then you guys will use loops.

2255
02:33:18,600 --> 02:33:23,120
Okay, Then you guys will use Java
to perform mathematical operations.

2256
02:33:23,280 --> 02:33:26,800
Okay, So then you will see the use of

2257
02:33:27,920 --> 02:33:30,120
and those are how we can update

2258
02:33:30,120 --> 02:33:44,360
the values of variables.

2259
02:33:44,360 --> 02:33:48,400
So let me know once
you have this code, once you have

2260
02:33:49,040 --> 02:33:51,640
understood this board,
if you guys need a break,

2261
02:33:51,640 --> 02:33:54,840
you can also tell me we can have a break
if need some time.

2262
02:33:54,840 --> 02:33:55,200
Goodbye.

2263
02:33:55,200 --> 02:34:06,360
Just the simple.

2264
02:34:06,360 --> 02:34:08,880
I think it's all about our homework

2265
02:34:08,880 --> 02:34:12,560
where we can do a lot of practice
and think on our own.

2266
02:34:12,720 --> 02:34:13,640
Yes, you guys will be.

2267
02:34:13,640 --> 02:34:18,400
Doing a lot of practice on that as well.

2268
02:34:18,400 --> 02:34:23,920
Okay, so you guys will be having around
250 plus triples.

2269
02:34:24,280 --> 02:34:27,440
So you guys will be having
a lot of practice other than repos

2270
02:34:27,880 --> 02:34:33,240
you will almost always you guys will be
typing writing code, dialog word.

2271
02:34:33,320 --> 02:34:34,080
Okay.

2272
02:34:34,400 --> 02:34:37,160
Till the very last class of this bootcamp.

2273
02:34:37,160 --> 02:34:39,440
After you get to your job
almost every day,

2274
02:34:39,440 --> 02:34:40,680
you guys are going to be writing code.

2275
02:34:40,680 --> 02:34:45,640
So every all of this stuff,
this variable declaration,

2276
02:34:45,640 --> 02:34:54,400
creating new classes,
it will be on your fingertips. Yes.

2277
02:34:54,400 --> 02:34:58,560
And you guys will be getting a lot
of scary dreams about the code as well.

2278
02:34:59,040 --> 02:35:01,320
So so when I when I was a developer,

2279
02:35:02,880 --> 02:35:04,200
I am busy with something.

2280
02:35:04,200 --> 02:35:05,520
That thing is not working.

2281
02:35:05,520 --> 02:35:06,960
I go to sleep that night.

2282
02:35:06,960 --> 02:35:08,680
All all night.

2283
02:35:08,680 --> 02:35:11,320
I see that for in my dreams.

2284
02:35:11,600 --> 02:35:14,640
Until that problem is solved
you are getting

2285
02:35:14,640 --> 02:35:17,280
you are getting some errors.
You are unable to figure it out.

2286
02:35:17,280 --> 02:35:20,040
Why you get tired of
you spend one hour, two or 3 hours.

2287
02:35:20,160 --> 02:35:21,240
You go to sleep.

2288
02:35:21,240 --> 02:35:29,320
It will be in your dreams.

2289
02:35:29,320 --> 02:35:31,440
Even if you are

2290
02:35:33,240 --> 02:35:35,520
anything
that you guys will be doing in your life.

2291
02:35:35,560 --> 02:35:38,600
Once you become coders,
it will always be inside

2292
02:35:38,600 --> 02:35:50,320
your mind.

2293
02:35:50,320 --> 02:35:51,160
Yes, I.

2294
02:35:51,160 --> 02:35:54,360
I still solve, but.

2295
02:35:54,360 --> 02:35:57,960
And the problems these days,
they are now a little different.

2296
02:35:57,960 --> 02:36:00,720
Actually, in my field, this is a

2297
02:36:01,560 --> 02:36:04,080
it requires
a lot of mathematics background

2298
02:36:05,160 --> 02:36:08,400
and and high skills in programing.

2299
02:36:08,400 --> 02:36:12,440
So these days
they are actually it's kind of same.

2300
02:36:12,440 --> 02:36:15,520
We are going to
the same. I'm also learning

2301
02:36:17,040 --> 02:36:19,320
very complex techniques on

2302
02:36:19,320 --> 02:36:22,200
coding
and then combining maths and all that.

2303
02:36:23,720 --> 02:36:26,760
Do You see the metrics
you see in the red tape

2304
02:36:28,440 --> 02:36:29,240
in your database.

2305
02:36:29,240 --> 02:36:31,320
Yes, I am continuing my education

2306
02:36:33,120 --> 02:36:34,760
dollar is very sensitive.

2307
02:36:34,760 --> 02:36:38,760
If we miss anything small,
it will be on our entire project.

2308
02:36:38,760 --> 02:36:41,400
Yes, that is correct.

2309
02:36:41,400 --> 02:36:45,000
Create and new programing languages
don't think so.

2310
02:36:45,000 --> 02:36:48,680
You should create new programing language
because I think there are more than

2311
02:36:50,240 --> 02:36:53,200
18,000 I guess programing language,

2312
02:36:53,200 --> 02:36:55,000
languages. This

2313
02:36:59,960 --> 02:37:00,760
there are already

2314
02:37:00,760 --> 02:37:14,600
so many programing languages,

2315
02:37:14,600 --> 02:37:17,800
approximately 9000

2316
02:37:17,800 --> 02:37:19,480
computer programing languages.

2317
02:37:19,480 --> 02:37:23,360
And are just learning one of them.

2318
02:37:23,360 --> 02:37:26,040
I see bugs every year.

2319
02:37:26,160 --> 02:37:29,880
Can you execute a security state
and phone number separately?

2320
02:37:29,880 --> 02:37:30,760
Yes, sure.

2321
02:37:31,480 --> 02:37:33,480
So this phone number

2322
02:37:34,240 --> 02:37:37,320
and the state lets by bill.

2323
02:37:37,960 --> 02:37:41,000
So by execute, I guess you mean

2324
02:37:41,520 --> 02:37:44,240
display the values
of those right so system

2325
02:37:48,040 --> 02:37:50,920
I see state

2326
02:37:52,080 --> 02:37:53,520
and then

2327
02:37:54,120 --> 02:37:55,680
I see

2328
02:37:58,560 --> 02:38:01,080
right like this

2329
02:38:04,640 --> 02:38:06,480
what is the phone number.

2330
02:38:06,480 --> 02:38:08,040
Not number six.

2331
02:38:08,040 --> 02:38:13,760
Phone number.

2332
02:38:13,760 --> 02:38:16,560
What was the first computer language.

2333
02:38:17,600 --> 02:38:21,720
The first languages
they start from that binary language.

2334
02:38:21,720 --> 02:38:23,680
Those those ones and zeros.

2335
02:38:23,680 --> 02:38:24,000
Okay.

2336
02:38:24,000 --> 02:38:30,240
So people in the early days, they used to
write combination of ones and zeros.

2337
02:38:30,240 --> 02:38:35,360
So this is how the binary language
looks like.

2338
02:38:35,360 --> 02:38:39,600
So you guys are very lucky
that you are born in 20th century

2339
02:38:40,000 --> 02:38:43,120
and you guys don't have to learn
those combinations of zeros.

2340
02:38:43,680 --> 02:38:46,400
Previously This is how

2341
02:38:46,400 --> 02:38:56,440
developers used to program.

2342
02:38:56,440 --> 02:38:59,880
So they used to have these

2343
02:39:05,160 --> 02:39:09,960
folks.

2344
02:39:09,960 --> 02:39:14,840
So right now in today
we write this character a nice

2345
02:39:15,280 --> 02:39:20,280
but be like people previously
they used to write if they have to write

2346
02:39:20,800 --> 02:39:26,480
it and be used right 1100010
and they have to memorize this as.

2347
02:39:26,480 --> 02:39:29,760
Well binary code,
this was the first computer

2348
02:39:29,760 --> 02:39:33,560
programing basic message
out of this binary.

2349
02:39:33,840 --> 02:39:36,720
Every language is born out of this binary.

2350
02:39:36,760 --> 02:39:43,080
After this binary, we have something
as the assembly language.

2351
02:39:43,080 --> 02:39:47,080
These developers, they were very
highly paid, they were very strong.

2352
02:39:47,520 --> 02:39:48,880
And after that.

2353
02:39:48,880 --> 02:39:52,600
So because it was very, very hard,
they developed something

2354
02:39:52,600 --> 02:39:59,600
called assembly language.

2355
02:39:59,600 --> 02:40:01,360
So then they developed
something like this.

2356
02:40:02,440 --> 02:40:04,640
c0106

2357
02:40:04,720 --> 02:40:07,720
84 B So
a combination of letters and numbers.

2358
02:40:07,720 --> 02:40:12,240
So previously only ones and zeros,
then combination of letters

2359
02:40:12,240 --> 02:40:16,080
and numbers,
Okay, assembly languages like this.

2360
02:40:16,440 --> 02:40:19,680
So move
and then R seven has zero, blah blah blah.

2361
02:40:19,680 --> 02:40:20,160
This,

2362
02:40:21,080 --> 02:40:25,480
I have learned this assembly language
as well in my Indian name.

2363
02:40:25,480 --> 02:40:28,200
And then they do at

2364
02:40:28,280 --> 02:40:31,560
high level languages
like Java and Python that we are learning

2365
02:40:31,560 --> 02:40:35,880
today. Yes.

2366
02:40:35,880 --> 02:40:40,440
The ones who are the first in any field
did they do a lot of

2367
02:40:41,760 --> 02:40:42,840
hard work?

2368
02:40:42,840 --> 02:40:45,800
They have to through a lot of the

2369
02:40:47,280 --> 02:40:47,760
already. Okay.

2370
02:40:47,760 --> 02:40:51,240
So do you guys need a break?

2371
02:40:51,240 --> 02:40:53,600
Can we take a break about 115?

2372
02:40:53,600 --> 02:40:54,000
Yes, sure.

2373
02:40:54,000 --> 02:40:55,640
Let's have a big

2374
02:40:55,960 --> 02:41:02,720
ceremony.

2375
02:41:02,720 --> 02:41:06,520
It's almost one, so please be

2376
02:41:06,560 --> 02:41:15,600
Oops, click.

2377
02:41:15,760 --> 02:41:16,600
Please be back.

2378
02:41:16,600 --> 02:41:21,160
Can we see you?

2379
02:41:21,160 --> 02:41:22,600
You mean me?

2380
02:41:22,760 --> 02:41:25,520
You guys don't see me. Screen is variable.

2381
02:41:26,880 --> 02:41:29,400
Can we take a break around

2382
02:41:30,240 --> 02:41:32,040
around 130

2383
02:41:32,040 --> 02:41:35,040
then? Buffy, I need break. Yes,

2384
02:41:36,120 --> 02:41:37,680
we can see other guys.

2385
02:41:37,680 --> 02:41:39,240
Remind me about the recording.

2386
02:41:39,240 --> 02:41:40,680
If I forget

2387
02:41:44,560 --> 02:41:47,400
moving always need to type space.

2388
02:41:48,160 --> 02:41:51,680
You'll get that on which line?

2389
02:41:51,680 --> 02:41:52,320
On which line?

2390
02:41:52,320 --> 02:41:54,840
You are asking that we need to type
the space

2391
02:41:56,720 --> 02:42:00,720
like any you know we can
we can write like I can.

2392
02:42:00,720 --> 02:42:03,840
I can do this as well so I can do.

2393
02:42:03,840 --> 02:42:06,000
Speaking here

2394
02:42:06,000 --> 02:42:07,960
is equal to without any space.

2395
02:42:07,960 --> 02:42:09,840
I can do this

2396
02:42:10,560 --> 02:42:12,600
eclipse variable screen

2397
02:42:17,600 --> 02:42:20,120
so you can do this as well
without any spaces.

2398
02:42:21,600 --> 02:42:24,360
I want to see eclipse variables

2399
02:42:25,720 --> 02:42:28,560
eclipse variable screen Illini.

2400
02:42:29,640 --> 02:42:32,720
You mean be variable screen
that appears when you are

2401
02:42:32,880 --> 02:42:34,920
debugging your program

2402
02:42:39,600 --> 02:42:44,840
that we did.

2403
02:42:44,840 --> 02:42:47,120
You mean the variables class.

2404
02:42:47,520 --> 02:42:49,800
Now this is the screen

2405
02:42:50,520 --> 02:42:52,920
that we are practicing

2406
02:42:52,920 --> 02:42:56,840
right now. So

2407
02:43:06,680 --> 02:43:09,360
yes I am not we had a break

2408
02:43:09,360 --> 02:43:11,600
so I am not doing anything.

2409
02:43:11,600 --> 02:43:12,680
We are on break.

2410
02:43:12,680 --> 02:43:15,880
If I was answering that question.

2411
02:43:16,560 --> 02:43:18,040
Okay, remind me about it.

2412
02:43:18,040 --> 02:43:23,160
Funny, we started recording

2413
02:43:28,640 --> 02:43:31,280
so I hope you guys created to class

2414
02:43:31,280 --> 02:43:35,200
with me
this beside a traumatic operations class.

2415
02:43:35,200 --> 02:43:43,960
Yeah.

2416
02:43:43,960 --> 02:43:44,600
Similar

2417
02:43:45,360 --> 02:43:51,800
to that.

2418
02:43:51,800 --> 02:43:54,600
So to perform different

2419
02:43:56,360 --> 02:43:58,960
operations, we the

2420
02:43:59,160 --> 02:44:02,520
we need to some time
do the mathematical operations as well

2421
02:44:02,560 --> 02:44:05,960
in order for let's say we are building

2422
02:44:05,960 --> 02:44:08,520
a website that calculates the interest

2423
02:44:09,000 --> 02:44:13,200
on maybe a website
that calculates the price of something.

2424
02:44:13,400 --> 02:44:17,000
So for those kind of things,
we need to have

2425
02:44:17,000 --> 02:44:19,680
something that can help us

2426
02:44:20,280 --> 02:44:23,040
do that math
and those mathematical operations as well.

2427
02:44:23,040 --> 02:44:23,280
Okay.

2428
02:44:23,280 --> 02:44:28,720
To solve real life problems, it's
very important that programing, language

2429
02:44:28,720 --> 02:44:31,760
support as many mathematical operations
as possible.

2430
02:44:32,480 --> 02:44:34,800
So today
we will learn about the five basic

2431
02:44:34,800 --> 02:44:38,440
mathematical operations
that we can do in Java.

2432
02:44:38,800 --> 02:44:42,920
And these are very simple, or
I hope all of you are familiar with this

2433
02:44:43,920 --> 02:44:45,600
other than this one.

2434
02:44:45,600 --> 02:44:50,760
So it's simply plus addition,
subtraction, multiplication and division.

2435
02:44:50,760 --> 02:44:51,200
Okay.

2436
02:44:51,400 --> 02:44:54,560
So we will learn about those now. So

2437
02:44:57,120 --> 02:44:58,320
it's very simple.

2438
02:44:58,320 --> 02:45:00,560
Most of the symbols are same.

2439
02:45:00,560 --> 02:45:03,320
You guys might you guys

2440
02:45:03,320 --> 02:45:06,120
might have seen them
already on calculators

2441
02:45:07,320 --> 02:45:11,760
this is same same
this multiplication symbol in programing.

2442
02:45:11,760 --> 02:45:13,720
We use this static site.

2443
02:45:13,720 --> 02:45:17,200
Okay it's on your
he number eight on your keyboard.

2444
02:45:17,720 --> 02:45:22,840
And then for our division,
we use this forward slash in programing.

2445
02:45:22,840 --> 02:45:27,720
If we want to divide two numbers,
we use this forward and this operator,

2446
02:45:27,720 --> 02:45:31,160
this modulus operator is actually to get

2447
02:45:31,160 --> 02:45:34,680
the remainder of that region.

2448
02:45:34,800 --> 02:45:39,040
So let's let's learn about this.

2449
02:45:39,040 --> 02:45:50,480
Let's say I have two numbers, okay?

2450
02:45:52,120 --> 02:45:55,680
And the numbers are off type in data.

2451
02:45:57,600 --> 02:45:59,160
So remember, guys, this

2452
02:45:59,160 --> 02:46:03,640
all of the operations
that I will be teaching you now, they can

2453
02:46:04,800 --> 02:46:06,200
they can differ.

2454
02:46:06,200 --> 02:46:08,680
If you are using a different data type.

2455
02:46:08,680 --> 02:46:12,160
So let's say if you are performing
these operations on integer type of data,

2456
02:46:12,520 --> 02:46:14,240
the results can be different.

2457
02:46:14,240 --> 02:46:17,200
If you are performing
these operations on a

2458
02:46:18,240 --> 02:46:20,520
Boolean type of data,
the results can different.

2459
02:46:20,920 --> 02:46:24,880
If you perform these on things that type,
the results can be different.

2460
02:46:24,880 --> 02:46:27,480
So we will learn
about all those differences as they they

2461
02:46:34,960 --> 02:46:40,320
I think I am already recording.

2462
02:46:40,320 --> 02:46:40,960
Okay,

2463
02:46:42,120 --> 02:46:44,520
so let's start this from the simplest one.

2464
02:46:44,840 --> 02:46:48,280
So the first one is
the integer type of get.

2465
02:46:48,280 --> 02:46:52,320
So let's see if I have two numbers.

2466
02:46:52,320 --> 02:46:57,120
One, I have been in here

2467
02:47:01,600 --> 02:47:03,480
and I have integer.

2468
02:47:03,480 --> 02:47:05,080
I'd like to

2469
02:47:08,400 --> 02:47:10,280
if I say

2470
02:47:14,720 --> 02:47:18,240
number one plus

2471
02:47:18,240 --> 02:47:19,200
number two.

2472
02:47:19,200 --> 02:47:22,240
So in real life, guys,
if we add two numbers

2473
02:47:22,440 --> 02:47:26,080
without the decimal places, look,
should we deserve that?

2474
02:47:26,080 --> 02:47:26,640
I should get

2475
02:47:30,240 --> 02:47:31,240
30. Right?

2476
02:47:31,240 --> 02:47:34,200
So we use the same sign, the same symbol

2477
02:47:34,200 --> 02:47:37,200
that we use on our calculator
to add two numbers.

2478
02:47:37,200 --> 02:47:42,280
Okay, So we write the first variable,
we write the second variable,

2479
02:47:42,360 --> 02:47:44,040
we write the plus operator,

2480
02:47:44,040 --> 02:47:48,400
and then Java, I will perform the addition
on those two variables.

2481
02:47:48,400 --> 02:47:48,920
Okay.

2482
02:47:49,120 --> 02:47:52,440
So I can see wrong

2483
02:47:52,720 --> 02:47:54,840
here and I get 30.

2484
02:47:54,840 --> 02:47:59,640
Okay, so this is how we perform addition
on into type of variables.

2485
02:47:59,680 --> 02:48:00,200
Okay.

2486
02:48:00,880 --> 02:48:04,320
And if I want to do the

2487
02:48:07,440 --> 02:48:09,960
if I want to do the subtraction,

2488
02:48:09,960 --> 02:48:12,360
I can use the negative sign.

2489
02:48:12,480 --> 02:48:13,240
Okay.

2490
02:48:13,600 --> 02:48:14,760
From my keyboard.

2491
02:48:14,760 --> 02:48:17,520
So now Java will perform this infection

2492
02:48:21,680 --> 02:48:22,680
minus ten, right?

2493
02:48:22,680 --> 02:48:25,480
Because I'm trying to subtract
a smaller number

2494
02:48:26,400 --> 02:48:28,960
and bigger number from a smaller number.

2495
02:48:28,960 --> 02:48:31,800
So if I change this to

2496
02:48:33,440 --> 02:48:35,400
number two

2497
02:48:35,760 --> 02:48:40,640
and then one, then I will get the results

2498
02:48:40,920 --> 02:48:47,200
as positive. Ten.

2499
02:48:47,200 --> 02:48:53,280
I hope this minus sign
is not bothering you.

2500
02:48:53,280 --> 02:48:57,400
And then if we have to perform
multiplication,

2501
02:48:58,960 --> 02:49:02,440
then for multiplication
we this star symbol

2502
02:49:03,160 --> 02:49:05,520
and we use this task.

2503
02:49:05,520 --> 02:49:10,560
So ten multiplied by 20 is 200.

2504
02:49:10,560 --> 02:49:12,960
So I get 200.

2505
02:49:13,360 --> 02:49:15,280
Now the results

2506
02:49:15,280 --> 02:49:20,040
for multiplication, addition
and subtraction, they are pretty much

2507
02:49:20,080 --> 02:49:24,960
same as you guys might have been doing
using a calculator as a simple math.

2508
02:49:26,000 --> 02:49:29,160
However, the results for division,
they work.

2509
02:49:29,320 --> 02:49:32,160
They are a little different
when it comes to integers.

2510
02:49:32,160 --> 02:49:38,720
So let's say for example,

2511
02:49:38,720 --> 02:49:41,720
if I say

2512
02:49:45,440 --> 02:49:48,400
if I see

2513
02:49:49,320 --> 02:49:53,440
number one divided by a number,
what answers should I get?

2514
02:49:53,440 --> 02:49:56,040
Goes?

2515
02:49:56,040 --> 02:50:00,360
If I divide number ten with number two?

2516
02:50:00,360 --> 02:50:08,200
But this is not the answer
that we get in real life.

2517
02:50:08,200 --> 02:50:10,320
I should be getting 0.5 right?

2518
02:50:11,560 --> 02:50:13,200
This is what I get in my real life.

2519
02:50:13,200 --> 02:50:14,800
If I am using a

2520
02:50:15,280 --> 02:50:17,560
calculator or something like that.

2521
02:50:17,560 --> 02:50:19,400
So what is going on in here? Okay.

2522
02:50:19,400 --> 02:50:25,080
If I try to execute this, I get zero.

2523
02:50:25,560 --> 02:50:26,880
Okay, I get zero.

2524
02:50:26,880 --> 02:50:30,200
So what? Why? I'm getting zero.

2525
02:50:30,200 --> 02:50:31,640
So remember, guys, get

2526
02:50:31,640 --> 02:50:34,360
an integer type variables.

2527
02:50:34,680 --> 02:50:39,680
Can they have decimal numbers?

2528
02:50:39,680 --> 02:50:41,240
No. Right.

2529
02:50:41,240 --> 02:50:46,200
So what is happening in here?

2530
02:50:46,200 --> 02:50:51,120
So from the rules of math,
we are trying to do something like this,

2531
02:50:52,120 --> 02:50:52,960
right?

2532
02:50:53,800 --> 02:50:56,880
So I cannot do ten with 20.

2533
02:50:56,880 --> 02:51:00,640
So I add is zero and decimal point.

2534
02:51:01,360 --> 02:51:03,680
I add a zero in here.

2535
02:51:03,680 --> 02:51:04,680
Right.

2536
02:51:04,680 --> 02:51:08,280
And then I try to divide it

2537
02:51:08,400 --> 02:51:12,120
like this.

2538
02:51:12,120 --> 02:51:15,240
What is the remainder in here? This

2539
02:51:21,200 --> 02:51:21,600
zero.

2540
02:51:21,600 --> 02:51:22,320
Right?

2541
02:51:22,440 --> 02:51:25,800
So in integers and integers,

2542
02:51:26,600 --> 02:51:29,400
as I cannot hold numbers

2543
02:51:30,360 --> 02:51:32,760
as I cannot have decimal places.

2544
02:51:33,440 --> 02:51:34,600
So this part

2545
02:51:36,840 --> 02:51:40,480
after this decimal point,

2546
02:51:40,480 --> 02:51:42,120
it has been ignored.

2547
02:51:42,120 --> 02:51:42,760
Okay?

2548
02:51:42,800 --> 02:51:45,640
It has been ignored because integers

2549
02:51:46,040 --> 02:51:50,160
they can only contain numbers
without decimal.

2550
02:51:50,440 --> 02:51:54,120
So java is only showing you this zero.

2551
02:51:54,120 --> 02:51:56,360
Okay, only showing you this zero.

2552
02:51:56,920 --> 02:52:00,480
So integers if I have entered data

2553
02:52:00,480 --> 02:52:04,360
type integrator
type cannot hold those in decimal numbers.

2554
02:52:04,360 --> 02:52:05,760
So what's java will do?

2555
02:52:05,760 --> 02:52:11,920
It will ignore the decimal part
and it will only show you the other part

2556
02:52:12,000 --> 02:52:15,840
if we about the decimal place.

2557
02:52:15,840 --> 02:52:18,520
So that's why we get to zero in here.

2558
02:52:19,320 --> 02:52:22,000
If I change my data, I

2559
02:52:24,480 --> 02:52:27,560
if I change my

2560
02:52:27,560 --> 02:52:29,280
data type

2561
02:52:43,240 --> 02:52:44,520
to double.

2562
02:52:44,520 --> 02:52:46,520
Okay. Can can double.

2563
02:52:46,560 --> 02:52:48,880
Can they hold the decimal part straight?

2564
02:52:50,760 --> 02:52:51,960
Yes. Right.

2565
02:52:51,960 --> 02:52:55,160
So in here, if I am

2566
02:52:57,360 --> 02:52:59,680
if I am saying

2567
02:53:00,600 --> 02:53:03,760
number three plus

2568
02:53:04,080 --> 02:53:07,160
before.

2569
02:53:07,160 --> 02:53:07,400
Yeah.

2570
02:53:10,560 --> 02:53:13,080
I will be getting 30.

2571
02:53:13,080 --> 02:53:17,600
If I say number
four minus number three minus number four

2572
02:53:17,840 --> 02:53:21,440
I will be getting minus ten

2573
02:53:22,000 --> 02:53:24,920
be multiplication.

2574
02:53:25,200 --> 02:53:27,200
I will get to 100.

2575
02:53:27,200 --> 02:53:29,560
But now I will see the difference.

2576
02:53:29,560 --> 02:53:34,520
Okay.

2577
02:53:34,520 --> 02:53:38,480
So if I try to divide in number

2578
02:53:39,600 --> 02:53:43,040
and if the data type is double,

2579
02:53:44,040 --> 02:53:48,080
if the data type is double,

2580
02:53:48,080 --> 02:53:51,120
then I will get 0.5.

2581
02:53:51,800 --> 02:53:54,840
Okay, then I really get 0.5.

2582
02:53:55,520 --> 02:53:58,040
So let me put paren open

2583
02:53:58,040 --> 02:54:05,920
here.

2584
02:54:05,920 --> 02:54:17,960
I'm looking at that.

2585
02:54:19,720 --> 02:54:22,000
So I see 0.5

2586
02:54:24,560 --> 02:54:27,800
are this printout

2587
02:54:29,640 --> 02:54:32,040
and I get two zero from this part.

2588
02:54:32,480 --> 02:54:37,520
So what do you guys understand
from this example that if you have to deal

2589
02:54:37,520 --> 02:54:47,240
with decimal places,
should you ever use the data type?

2590
02:54:47,240 --> 02:54:50,920
If you know that the your calculations

2591
02:54:51,160 --> 02:54:56,360
they can contain numbers
with the decimal point.

2592
02:54:56,760 --> 02:54:59,800
Never ever go with internet type.

2593
02:55:00,040 --> 02:55:00,840
Okay.

2594
02:55:00,920 --> 02:55:03,720
Always use double data type. Okay.

2595
02:55:03,960 --> 02:55:11,080
Otherwise you will not be getting
the expected visitors.

2596
02:55:11,080 --> 02:55:15,360
So you guys see how how the same operator.

2597
02:55:15,360 --> 02:55:16,720
So the operator, same guys.

2598
02:55:17,920 --> 02:55:19,800
The operator is same.

2599
02:55:20,160 --> 02:55:24,160
But on one data type
I am getting a different result.

2600
02:55:24,600 --> 02:55:29,280
But on another data type
I am getting a different result.

2601
02:55:29,280 --> 02:55:33,680
If we use one double and one integer,
it will be working.

2602
02:55:34,320 --> 02:55:38,600
Need to specify a decoder converter
type based on the requirements.

2603
02:55:38,600 --> 02:55:42,360
So Alex is saying if we use one double

2604
02:55:42,680 --> 02:55:46,320
and be one integer, will it work? So.

2605
02:55:46,720 --> 02:55:50,760
So Alexa, if you mean by by working,

2606
02:55:50,760 --> 02:55:53,280
if you mean
if you will be getting the same results.

2607
02:55:53,280 --> 02:55:57,040
So let me try to show you
different variation

2608
02:55:57,400 --> 02:56:11,720
so that it is clear what happens if you
if we change prototype.

2609
02:56:11,720 --> 02:56:14,760
So let's say

2610
02:56:15,120 --> 02:56:16,560
one is

2611
02:56:17,960 --> 02:56:18,840
an integer.

2612
02:56:18,840 --> 02:56:20,160
Okay then.

2613
02:56:20,160 --> 02:56:25,520
And I am trying to divide it by 20.5.

2614
02:56:25,640 --> 02:56:26,280
Right?

2615
02:56:26,800 --> 02:56:29,520
So one number is integer in here,

2616
02:56:30,520 --> 02:56:32,240
the other one is double.

2617
02:56:32,240 --> 02:56:33,120
So what do you guys think?

2618
02:56:33,120 --> 02:56:38,880
What would happen?

2619
02:56:38,880 --> 02:56:41,760
I should see

2620
02:56:41,760 --> 02:56:45,240
the decimals in my answer.

2621
02:56:45,240 --> 02:56:45,640
Okay.

2622
02:56:46,840 --> 02:56:49,000
So if one is integer

2623
02:56:49,600 --> 02:56:53,600
and the other one is double,
then the result will be double.

2624
02:56:53,920 --> 02:56:54,760
Okay.

2625
02:56:54,760 --> 02:56:57,520
But here is one more thing
guys get is one more thing.

2626
02:56:58,840 --> 02:57:02,440
Let's see.

2627
02:57:02,440 --> 02:57:06,000
Let's say you were storing the number,

2628
02:57:06,000 --> 02:57:15,920
you were storing the result.

2629
02:57:15,920 --> 02:57:19,080
So you are trying to store the result

2630
02:57:19,560 --> 02:57:22,280
in an integer now it will not work.

2631
02:57:22,360 --> 02:57:28,040
Okay, so Java knows that the result
of this calculation

2632
02:57:28,040 --> 02:57:32,520
that I am trying to perform,
it can result in a double.

2633
02:57:33,040 --> 02:57:38,480
Okay, so now Java will warn you
and I will give you an error that good.

2634
02:57:38,760 --> 02:57:43,440
I think that the results
can be in the form of a double.

2635
02:57:43,560 --> 02:57:44,280
Okay.

2636
02:57:44,320 --> 02:57:47,880
So please make sure
that you use the proper data type.

2637
02:57:47,960 --> 02:57:50,040
Okay.

2638
02:57:50,040 --> 02:57:53,560
And if I change this back,

2639
02:57:53,960 --> 02:57:59,040
if I change this back
to both of these two integers.

2640
02:57:59,160 --> 02:58:02,920
Okay, So now Java is saying, okay,

2641
02:58:03,920 --> 02:58:06,800
both of
the different types, they are integers.

2642
02:58:06,800 --> 02:58:09,240
Okay, so now I am not sure

2643
02:58:09,840 --> 02:58:13,080
you might get integer
as you might get double header.

2644
02:58:13,360 --> 02:58:17,880
So what I will do now
if the result is it double

2645
02:58:18,480 --> 02:58:21,480
if the result contains decimal places?

2646
02:58:21,560 --> 02:58:22,560
You know what?

2647
02:58:22,560 --> 02:58:25,240
I will ignore those decimal places.

2648
02:58:25,680 --> 02:58:30,560
I will only give you the part
B decimal places.

2649
02:58:30,800 --> 02:58:35,640
So that's why in here, when we were trying
to perform the calculations

2650
02:58:35,640 --> 02:58:39,440
and the result was 0.5,

2651
02:58:39,440 --> 02:58:42,360
Java ignored the B point five barred.

2652
02:58:42,840 --> 02:58:43,560
Okay.

2653
02:58:43,560 --> 02:58:46,440
Because both of the data types
were integers.

2654
02:58:46,800 --> 02:58:47,440
Okay.

2655
02:58:47,760 --> 02:58:50,880
But if use one of the data type as double.

2656
02:58:51,280 --> 02:58:52,000
Okay.

2657
02:58:52,120 --> 02:58:54,480
So now java knows their task. Good.

2658
02:58:54,480 --> 02:58:55,800
Obviously, you know what?

2659
02:58:55,800 --> 02:59:01,400
When you are using both the numbers as
integers, okay, so they are the results.

2660
02:59:01,400 --> 02:59:03,480
They can be integer or the double. Right.

2661
02:59:04,160 --> 02:59:06,560
But in here I know for sure

2662
02:59:06,560 --> 02:59:10,120
that one number is double
and you will ever get integer.

2663
02:59:10,240 --> 02:59:12,160
So I will give you an error.

2664
02:59:12,160 --> 02:59:16,360
So make sure guys,
if you are using a mix of data type first.

2665
02:59:16,360 --> 02:59:22,040
First thing it is never recommended,
never ever try to mix data type.

2666
02:59:22,560 --> 02:59:25,720
If you are
if you are performing some calculations

2667
02:59:25,720 --> 02:59:29,560
and you know the results will be double,
always use double.

2668
02:59:29,560 --> 02:59:32,080
Why use one integer and the other double?

2669
02:59:32,080 --> 02:59:35,080
And even if you have to use mix of data
types,

2670
02:59:35,640 --> 02:59:40,280
there is something called as casting
that we will learn in the future classes.

2671
02:59:40,800 --> 02:59:43,240
So once you guys learn about the casting,

2672
02:59:43,360 --> 02:59:46,560
then you guys can freely use the mix
of data types.

2673
02:59:46,800 --> 02:59:47,600
So right now

2674
02:59:49,600 --> 02:59:50,240
there are so

2675
02:59:50,240 --> 02:59:54,600
many rules for using a mix of data types
and that those rules,

2676
02:59:54,600 --> 02:59:56,160
they can confuse you.

2677
02:59:56,160 --> 02:59:59,680
So I will tell you about those rules
after we have learned

2678
02:59:59,680 --> 03:00:01,800
about the casting process.

2679
03:00:01,800 --> 03:00:05,560
Okay, Then we will be using the mixture
of data types so far.

2680
03:00:05,560 --> 03:00:08,080
Right now,
let's let's use the same data types.

2681
03:00:08,720 --> 03:00:13,040
How can we do less number after zero,
like two three numbers?

2682
03:00:13,320 --> 03:00:15,840
How can we do less number

2683
03:00:17,160 --> 03:00:20,120
after the zero, like two three numbers?

2684
03:00:20,600 --> 03:00:22,640
Alexa, can you rephrase the question?

2685
03:00:24,000 --> 03:00:24,320
Okay.

2686
03:00:24,320 --> 03:00:27,360
So you want a number like zero two,
three, four

2687
03:00:27,800 --> 03:00:31,560
not zero divided by three, 4 to 5.

2688
03:00:32,080 --> 03:00:34,400
So you can store that number in a double,

2689
03:00:36,120 --> 03:00:39,960
you can store that number in a double,
then you will be getting all the results.

2690
03:00:41,280 --> 03:00:44,280
So let's
say, for example, let's say, for example,

2691
03:00:44,280 --> 03:00:51,240
if you have this number five as double,

2692
03:00:51,240 --> 03:00:53,560
you can store this number like that.

2693
03:00:54,400 --> 03:00:58,040
I mean, after decimal place,

2694
03:00:58,040 --> 03:01:00,200
if yes, you can store after decimal place

2695
03:01:02,840 --> 03:01:05,880
or you want to round it off

2696
03:01:05,920 --> 03:01:07,520
all you want rounded off.

2697
03:01:07,520 --> 03:01:11,160
So the rounding off process,
it works a little different.

2698
03:01:11,160 --> 03:01:15,800
Okay, there is a concept of ceiling
and floating in programing that ceiling

2699
03:01:15,800 --> 03:01:21,920
and you guys will learn probably
in your six tweets I guess, or three.

2700
03:01:22,480 --> 03:01:24,680
Then I will teach you
how to deal with those numbers.

2701
03:01:25,080 --> 03:01:27,120
So let's go step by step. Okay.

2702
03:01:27,120 --> 03:01:32,320
Otherwise, a lot of you will be confused
if we try to jump here and there.

2703
03:01:32,320 --> 03:01:33,040
Yes, it is.

2704
03:01:33,040 --> 03:01:33,960
It's a different thing.

2705
03:01:33,960 --> 03:01:36,800
We will go step by step, step by step.

2706
03:01:38,360 --> 03:01:40,120
Why it is okay to assign

2707
03:01:40,120 --> 03:01:44,640
pen to table
and it is not giving out a here it is.

2708
03:01:45,280 --> 03:01:46,840
So I show

2709
03:01:47,200 --> 03:01:50,200
you guys must have learned

2710
03:01:51,440 --> 03:01:54,360
that can double is a bigger box.

2711
03:01:54,480 --> 03:01:56,000
Do you guys know?

2712
03:01:56,440 --> 03:01:58,920
Do you guys know the range?

2713
03:01:59,320 --> 03:02:02,160
So if it is an integer,

2714
03:02:02,400 --> 03:02:05,040
it is a bigger box.

2715
03:02:05,040 --> 03:02:07,640
So if I try to fit a smaller thing

2716
03:02:07,640 --> 03:02:10,560
in a bigger issue,
should I be worrying about anything?

2717
03:02:12,240 --> 03:02:13,640
No. Right.

2718
03:02:13,640 --> 03:02:17,680
Bigger box can hold easily,
but if I am trying to do the reverse,

2719
03:02:17,880 --> 03:02:21,400
if I am trying to fit a bigger thing
into something smaller,

2720
03:02:22,040 --> 03:02:23,920
then should be worrying. Right?

2721
03:02:23,920 --> 03:02:26,720
So when Java sees that you are trying
to fit

2722
03:02:26,720 --> 03:02:30,120
a smaller thing into something bigger,
never does not give you an edit.

2723
03:02:30,600 --> 03:02:31,200
Okay.

2724
03:02:31,240 --> 03:02:34,760
But if we are trying to do the reverse,
then there is a possibility of loss

2725
03:02:34,760 --> 03:02:35,840
of information.

2726
03:02:35,840 --> 03:02:39,200
Or you might be
you might break that variable.

2727
03:02:39,200 --> 03:02:40,720
Right? That container.

2728
03:02:40,720 --> 03:02:43,440
So that's why you got the error for that.

2729
03:02:44,360 --> 03:02:47,960
He is asking if the actual answer is
one point, blah blah blah.

2730
03:02:47,960 --> 03:02:50,760
How can we just forget we print out 1.43.

2731
03:02:50,760 --> 03:02:53,400
Yes, it is possible to only print.

2732
03:02:53,680 --> 03:02:56,760
Maybe numbers are still two decimal places

2733
03:02:57,200 --> 03:03:00,120
or three or four, but I will teach you it

2734
03:03:00,120 --> 03:03:10,640
later.

2735
03:03:10,640 --> 03:03:14,440
Okay, so let's try to let's try to

2736
03:03:16,840 --> 03:03:20,200
but let's try to apply these operations
on other data types.

2737
03:03:20,200 --> 03:03:22,800
Okay. So this is how it works with doubles
and integers.

2738
03:03:22,800 --> 03:03:26,520
Let's try to do it with a Boolean.

2739
03:03:26,520 --> 03:03:29,280
Let's start with check
if this is possible with Boolean.

2740
03:03:29,760 --> 03:03:32,360
Okay. So

2741
03:03:34,280 --> 03:03:37,200
variable one never say test proof

2742
03:03:40,560 --> 03:03:42,840
boolean variable to

2743
03:03:44,360 --> 03:03:46,080
say test

2744
03:03:48,000 --> 03:03:48,840
false

2745
03:03:56,360 --> 03:04:00,080
FISA law one plus bar two.

2746
03:04:01,800 --> 03:04:03,480
I get that one.

2747
03:04:03,480 --> 03:04:08,360
But why do we have to use double
instead of integers for Shareef?

2748
03:04:08,640 --> 03:04:11,080
If you want the complete answer,

2749
03:04:11,640 --> 03:04:14,840
if you don't want to lose information,
if you want the decimal part.

2750
03:04:15,240 --> 03:04:17,280
So Shareef, check this out here.

2751
03:04:17,960 --> 03:04:21,400
When I do not use the decimal, the answer

2752
03:04:21,400 --> 03:04:25,680
I got was zero
when I used the decimal double number.

2753
03:04:25,680 --> 03:04:29,480
Then I got the proper answer that
I get in my real life.

2754
03:04:29,600 --> 03:04:31,080
That's why you should be using double

2755
03:04:33,120 --> 03:04:33,840
player

2756
03:04:37,560 --> 03:04:37,960
because

2757
03:04:37,960 --> 03:04:40,760
integers, they cannot hold numbers
with decimal places.

2758
03:04:41,240 --> 03:04:43,760
So guys, I am getting an error

2759
03:04:43,760 --> 03:04:47,720
and that means I cannot perform addition

2760
03:04:48,440 --> 03:04:51,680
on two boolean type of variables.

2761
03:04:52,120 --> 03:04:54,520
It is not allowed in Java.

2762
03:04:54,520 --> 03:04:55,920
They not numerical.

2763
03:04:55,920 --> 03:04:58,560
We cannot calculated them. Yes.

2764
03:04:59,360 --> 03:04:59,960
Okay.

2765
03:04:59,960 --> 03:05:05,400
So it is not allowed.

2766
03:05:05,400 --> 03:05:10,160
It's not only be necessary
for little subtraction, not allowed.

2767
03:05:10,760 --> 03:05:12,640
Multiplication not allowed.

2768
03:05:12,640 --> 03:05:15,120
We would not allow. Okay.

2769
03:05:15,120 --> 03:05:17,280
So it is not allowed on

2770
03:05:27,880 --> 03:05:32,360
and let's try to do

2771
03:05:33,480 --> 03:05:35,920
with characters. Okay

2772
03:05:37,320 --> 03:05:38,880
Char, one

2773
03:05:40,440 --> 03:05:46,000
equal to one two

2774
03:05:47,440 --> 03:05:49,600
is equal to

2775
03:05:52,440 --> 03:05:53,040
or equal

2776
03:05:53,040 --> 03:05:59,160
to two.

2777
03:05:59,160 --> 03:06:02,040
Let's try to perform
the same with the card.

2778
03:06:02,040 --> 03:06:06,080
One plus two.

2779
03:06:06,080 --> 03:06:09,240
So if I do this addition, I

2780
03:06:09,240 --> 03:06:12,080
see I don't get any errors.

2781
03:06:12,480 --> 03:06:16,840
That means the
plus is allowed on characters.

2782
03:06:16,840 --> 03:06:19,440
Okay, so what do you guys think?
What output what I will get

2783
03:06:26,720 --> 03:06:29,600
1 to 1 to

2784
03:06:29,600 --> 03:06:34,800
try. I got 99.

2785
03:06:36,120 --> 03:06:38,160
What is going on, guys?

2786
03:06:38,160 --> 03:06:42,960
I got 99.

2787
03:06:42,960 --> 03:06:44,880
I want me to

2788
03:06:51,240 --> 03:06:52,680
alphabets.

2789
03:06:53,320 --> 03:06:56,160
So let me tell you what is going on.

2790
03:06:56,160 --> 03:07:00,480
Actually,
these characters, these characters

2791
03:07:01,200 --> 03:07:04,920
instead of characters, your computers,

2792
03:07:05,440 --> 03:07:08,080
their store numbers

2793
03:07:08,720 --> 03:07:13,400
behind, and every character
that we store in each job.

2794
03:07:13,520 --> 03:07:17,600
So let's say, for example, if I see e

2795
03:07:19,320 --> 03:07:22,120
and if Book B,

2796
03:07:22,120 --> 03:07:24,840
and if I, if I execute this,

2797
03:07:26,320 --> 03:07:28,960
I get 114 right.

2798
03:07:28,960 --> 03:07:30,280
What is going on?

2799
03:07:30,280 --> 03:07:32,640
If I say

2800
03:07:32,760 --> 03:07:34,800
A and B,

2801
03:07:36,000 --> 03:07:41,600
and if I, if I see, I get 131.

2802
03:07:41,720 --> 03:07:44,200
Okay, So this chart is parting.

2803
03:07:45,840 --> 03:07:46,960
Yes, the equivalent.

2804
03:07:46,960 --> 03:08:00,280
So to understand what is going on,
let me show you something.

2805
03:08:00,280 --> 03:08:02,960
So behind every character

2806
03:08:03,680 --> 03:08:05,960
that we store in a jar

2807
03:08:06,600 --> 03:08:10,840
actually, Java stores and number
behind that, remember guys,

2808
03:08:11,400 --> 03:08:14,640
your computers,
they don't understand alphabets.

2809
03:08:14,680 --> 03:08:16,320
They don't understand pictures.

2810
03:08:16,320 --> 03:08:17,920
They don't understand videos.

2811
03:08:17,920 --> 03:08:19,840
They don't understand audio.

2812
03:08:19,840 --> 03:08:23,240
The only thing they understand
are numbers.

2813
03:08:23,400 --> 03:08:26,160
Okay? Computer only understand numbers.

2814
03:08:26,640 --> 03:08:29,720
So what happens
is that everything that we do

2815
03:08:29,720 --> 03:08:33,640
on our computers,
it is actually converted to numbers.

2816
03:08:34,200 --> 03:08:37,320
And then your computer performs
the processing.

2817
03:08:37,560 --> 03:08:43,480
Okay, So in here,

2818
03:08:43,480 --> 03:09:03,320
if you guys can see this table.

2819
03:09:03,320 --> 03:09:06,560
So this, this character E

2820
03:09:07,920 --> 03:09:10,640
instead of E, what Java is doing in

2821
03:09:10,640 --> 03:09:16,240
Java is actually storing 65
instead of E, Okay.

2822
03:09:16,680 --> 03:09:19,440
Instead, do you guys see this table then?

2823
03:09:19,440 --> 03:09:23,680
You go see this table.

2824
03:09:23,680 --> 03:09:24,160
Okay.

2825
03:09:24,160 --> 03:09:26,160
If not, let me let me show you the link.

2826
03:09:26,920 --> 03:09:27,480
Okay.

2827
03:09:27,520 --> 03:09:30,960
So instead of here what Java is doing,

2828
03:09:30,960 --> 03:09:34,760
Java storing in number 65 behind it

2829
03:09:35,280 --> 03:09:39,480
instead of B,
Java is storing 66 behind it.

2830
03:09:39,720 --> 03:09:41,880
So what is 65 plus six?

2831
03:09:41,880 --> 03:09:46,520
Right?

2832
03:09:46,520 --> 03:09:48,760
Is 131.

2833
03:09:48,760 --> 03:09:50,760
So what the Java is doing?

2834
03:09:50,760 --> 03:09:55,400
Okay, Java don't know how to add A or
B, So Java, what is being

2835
03:09:55,400 --> 03:10:00,240
Java is converting it to 65, then B to 66,

2836
03:10:00,800 --> 03:10:04,600
then performing the calculation
and then showing you the results.

2837
03:10:04,920 --> 03:10:07,480
Okay, So each character. Okay.

2838
03:10:07,840 --> 03:10:11,320
And I think you can also
print emojis in here

2839
03:10:12,160 --> 03:10:14,800
if you know the proper behind emoji.

2840
03:10:15,000 --> 03:10:16,280
So all those emojis

2841
03:10:16,280 --> 03:10:17,760
that you guys see on your computers,

2842
03:10:17,760 --> 03:10:20,160
there are actually numbers
behind those emojis.

2843
03:10:20,440 --> 03:10:21,480
So if you know the numbers,

2844
03:10:21,480 --> 03:10:25,960
you can print out the emojis as well
your in your computer program. So

2845
03:10:27,440 --> 03:10:27,880
this is the

2846
03:10:27,880 --> 03:10:31,120
Oscar table that shows you
the actual numbers

2847
03:10:31,120 --> 03:10:35,040
that behind every character, the numbers
that are stored behind the characters.

2848
03:10:35,040 --> 03:10:37,440
Okay, so but don't get confused.

2849
03:10:38,040 --> 03:10:41,040
You guys don't need to memorize
these numbers.

2850
03:10:41,280 --> 03:10:44,400
You guys don't need to learn
about this mathematical operations.

2851
03:10:44,520 --> 03:10:47,400
You guys will never perform

2852
03:10:47,400 --> 03:10:48,400
a character

2853
03:10:48,400 --> 03:10:52,120
at a committee like adding two characters
or subtracting and things like that.

2854
03:10:52,120 --> 03:10:53,640
Okay,
so you guys don't need to worry about.

2855
03:10:53,640 --> 03:10:55,320
But sometimes

2856
03:10:55,680 --> 03:10:59,000
when you guys will be performing
some calculations, what happens

2857
03:10:59,000 --> 03:11:01,920
is that you guys might encounter
this issue

2858
03:11:01,920 --> 03:11:05,880
that you accidentally add a character
to a number of things.

2859
03:11:05,960 --> 03:11:08,640
Then you can get
some unexpected with this.

2860
03:11:09,040 --> 03:11:12,640
So I am just showing you
so that you guys don't get confused

2861
03:11:12,640 --> 03:11:17,760
or don't know, don't worry about this.

2862
03:11:17,760 --> 03:11:21,840
So let's let's try
to do the next try to do this

2863
03:11:23,640 --> 03:11:25,320
subtraction

2864
03:11:27,040 --> 03:11:28,400
and let's try

2865
03:11:28,400 --> 03:11:32,560
oops, strive

2866
03:11:32,560 --> 03:11:35,280
to do the oops

2867
03:11:37,160 --> 03:11:39,200
multiplication and then

2868
03:11:42,760 --> 03:11:55,160
if we separate out this one.

2869
03:11:55,160 --> 03:12:00,840
Okay, so I get 131 minus one 4290
and then zero

2870
03:12:01,600 --> 03:12:06,080
I get a different number
when I type small instead typically.

2871
03:12:06,240 --> 03:12:08,360
Okay. So now

2872
03:12:08,480 --> 03:12:10,600
if you focus on this ASCII table,

2873
03:12:11,840 --> 03:12:15,320
so far,
Java smaller, smaller is different.

2874
03:12:15,320 --> 03:12:19,240
The law,
it is different than the uppercase.

2875
03:12:19,680 --> 03:12:25,080
So if you focus in here this lowercase e,
it has a different number.

2876
03:12:25,080 --> 03:12:27,600
It has 97.

2877
03:12:27,600 --> 03:12:30,840
So lowercase is represented by 97,

2878
03:12:31,320 --> 03:12:34,680
uppercase is represented by a number 65.

2879
03:12:34,680 --> 03:12:37,240
That's why you get different results.

2880
03:12:37,240 --> 03:12:38,560
Is it clear

2881
03:12:46,000 --> 03:12:48,400
these are behind a hash symbol?

2882
03:12:48,400 --> 03:12:53,480
We have number 34 plus we have 43.

2883
03:12:53,480 --> 03:12:53,720
Okay.

2884
03:12:53,720 --> 03:12:58,240
So it shows zero after dividend
because it cannot store decimal bar.

2885
03:12:58,280 --> 03:13:00,200
Yes, it cannot support the decimal.

2886
03:13:00,200 --> 03:13:05,040
But you see behind every character
the numbers, they are integers.

2887
03:13:05,120 --> 03:13:05,440
Okay.

2888
03:13:05,440 --> 03:13:13,320
They are not decimals.

2889
03:13:13,320 --> 03:13:18,160
So we can perform automatic operations.

2890
03:13:18,160 --> 03:13:18,960
Okay.

2891
03:13:18,960 --> 03:13:23,040
On integers,
double characters and booleans.

2892
03:13:23,040 --> 03:13:26,040
Okay, let's
let's try to do the same with the strings

2893
03:13:27,240 --> 03:13:27,960
in next target.

2894
03:13:27,960 --> 03:13:35,080
All the same with strings.

2895
03:13:35,080 --> 03:13:37,680
Again, who is being

2896
03:13:41,800 --> 03:13:51,760
SDR one?

2897
03:13:51,760 --> 03:14:09,600
I see if we can

2898
03:14:10,680 --> 03:14:13,920
do the addition on

2899
03:14:14,680 --> 03:14:15,560
that spot.

2900
03:14:15,560 --> 03:14:15,960
Okay.

2901
03:14:16,560 --> 03:14:19,280
So yes, Javi's not giving me an answer.

2902
03:14:19,280 --> 03:14:20,640
Let me try to execute.

2903
03:14:20,640 --> 03:14:21,120
What answer?

2904
03:14:21,120 --> 03:14:23,960
I will get dice if I try to add

2905
03:14:24,320 --> 03:14:28,600
things.

2906
03:14:28,600 --> 03:14:30,680
The string concatenation, right?

2907
03:14:32,000 --> 03:14:35,400
Those things will be combined.

2908
03:14:35,400 --> 03:14:36,720
So I got by.

2909
03:14:36,720 --> 03:14:37,360
Right.

2910
03:14:37,680 --> 03:14:44,120
Let's let's try to check
if the subtraction is possible or not.

2911
03:14:44,120 --> 03:14:47,400
Okay. Yes.

2912
03:14:47,560 --> 03:14:52,960
So if I try to subtract two things,
I get an error.

2913
03:14:53,040 --> 03:14:53,520
Okay.

2914
03:14:53,520 --> 03:15:15,320
That means subtraction is not allowed.

2915
03:15:15,320 --> 03:15:21,920
Let's try to build multiplication.

2916
03:15:21,920 --> 03:15:23,640
It is also not allowed.

2917
03:15:23,640 --> 03:15:27,120
Yeah.

2918
03:15:27,120 --> 03:15:30,640
And the division is also not allowed

2919
03:15:32,880 --> 03:15:35,680
within slots.

2920
03:15:35,680 --> 03:15:39,040
So these are the four basic operations.

2921
03:15:39,120 --> 03:15:41,440
Nice that we can do

2922
03:15:44,360 --> 03:15:48,640
on these
primitive data types and the string.

2923
03:15:48,760 --> 03:15:49,200
Okay.

2924
03:15:49,320 --> 03:16:05,760
Are there any questions from this?

2925
03:16:05,760 --> 03:16:09,440
Let's try to understand
that fifth operation, that modulus

2926
03:16:09,440 --> 03:16:19,680
operation.

2927
03:16:19,680 --> 03:16:24,240
So if they are numbers and string,
it still would not do other

2928
03:16:24,240 --> 03:16:25,560
arithmetic operations?

2929
03:16:25,560 --> 03:16:29,160
Yes, it does not matter
what stored inside the string.

2930
03:16:30,040 --> 03:16:31,800
It does not care about that.

2931
03:16:31,800 --> 03:16:34,440
If something is not allowed,
then it means that

2932
03:16:34,440 --> 03:16:43,640
pink is not allowed.

2933
03:16:43,640 --> 03:16:45,360
So let's create one more class.

2934
03:16:45,360 --> 03:16:48,640
I could find that modulus operator

2935
03:17:01,600 --> 03:17:02,640
When I divide

2936
03:17:02,640 --> 03:17:05,520
r one with char two, I get zero.

2937
03:17:05,520 --> 03:17:06,680
Should I be getting there?

2938
03:17:06,680 --> 03:17:11,880
Yes, we should be getting zeros
because decimal parts are not allowed.

2939
03:17:11,880 --> 03:17:15,080
And don't worry about that
too much about that.

2940
03:17:16,760 --> 03:17:17,800
About the characters.

2941
03:17:17,800 --> 03:17:19,520
You guys will ever be performing this

2942
03:17:20,840 --> 03:17:21,480
this thing.

2943
03:17:21,480 --> 03:17:22,040
Okay.

2944
03:17:22,200 --> 03:17:26,400
Do the operations or characters
I just showed you so that you guys.

2945
03:17:26,720 --> 03:17:27,040
Yeah.

2946
03:17:27,040 --> 03:17:28,560
If at any point of time,

2947
03:17:28,560 --> 03:17:31,200
if you encounter
something like this, you are not confused,

2948
03:17:32,680 --> 03:17:35,400
are you going to share this note
with us? Yes.

2949
03:17:35,400 --> 03:17:39,000
I will be sharing all the notes,
all the code, everything that I am

2950
03:17:39,000 --> 03:17:42,200
showing, all slides, videos,
everything is available

2951
03:17:42,200 --> 03:17:48,880
to you.

2952
03:17:48,880 --> 03:17:51,760
Okay, let's let's understand the model.

2953
03:17:51,760 --> 03:17:53,880
So if I have a number

2954
03:17:59,000 --> 03:18:10,240
let's see,

2955
03:18:10,240 --> 03:18:13,680
do you guys know
the concept of remainder in mathematics

2956
03:18:14,040 --> 03:18:17,600
when we perform the division there is

2957
03:18:17,840 --> 03:18:21,520
one part is the answer of the division,
the other part is the remainder.

2958
03:18:21,520 --> 03:18:22,200
Right?

2959
03:18:22,320 --> 03:18:25,440
So if I say

2960
03:18:26,000 --> 03:18:30,600
if I try to do this,

2961
03:18:30,600 --> 03:18:33,320
so if I try to divide 20 with three

2962
03:18:33,840 --> 03:18:36,400
so I can say three, six are

2963
03:18:38,520 --> 03:18:40,520
18. Right.

2964
03:18:40,520 --> 03:18:42,680
What will be the remainder of this
calculation goes

2965
03:18:45,120 --> 03:18:46,800
to. Right.

2966
03:18:46,800 --> 03:18:52,000
So if you ever need to do this thing,
okay, if you ever need to do this thing,

2967
03:18:52,520 --> 03:18:56,040
then you can use this.

2968
03:18:56,040 --> 03:18:58,320
That is called modulus.

2969
03:18:58,320 --> 03:18:59,480
Operator.

2970
03:19:00,240 --> 03:19:04,680
If I say six out,

2971
03:19:04,680 --> 03:19:07,160
number one, modulus

2972
03:19:08,280 --> 03:19:16,200
number two.

2973
03:19:16,200 --> 03:19:19,440
Okay, I get this Commander.

2974
03:19:19,440 --> 03:19:22,480
So this modulus operator
actually gives you agreement.

2975
03:19:23,080 --> 03:19:24,560
It's that simple.

2976
03:19:24,560 --> 03:19:28,200
And anyone confused about this part
or maybe he or she don't know

2977
03:19:28,400 --> 03:19:33,080
what is the remainder
why we got the answer to all this.

2978
03:19:33,080 --> 03:19:46,600
Modulus is doing the same thing.

2979
03:19:46,600 --> 03:19:49,560
Oh, perfect.

2980
03:19:49,560 --> 03:19:55,080
So why doing percentage will get reminded.

2981
03:19:55,080 --> 03:19:57,600
Yes, percentage will be commander.
And I see.

2982
03:19:57,880 --> 03:19:58,800
Do you understand?

2983
03:19:58,800 --> 03:20:04,480
What are what are remainders
in mathematics?

2984
03:20:04,480 --> 03:20:09,640
So let me tell you in a different way.

2985
03:20:09,640 --> 03:20:15,320
So this, this, this or frontier sign
what it will try to do.

2986
03:20:15,360 --> 03:20:18,240
It will try to divide this number

2987
03:20:19,440 --> 03:20:23,240
in equal
parts and each part will be three.

2988
03:20:23,240 --> 03:20:27,960
So let's say, for example, if I change

2989
03:20:29,200 --> 03:20:33,040
this to five and then three, okay,

2990
03:20:34,160 --> 03:20:35,880
what if we reversed the variable?

2991
03:20:35,880 --> 03:20:37,640
I'm not I will tell you what happens if.

2992
03:20:37,640 --> 03:20:39,200
University variables.

2993
03:20:39,200 --> 03:20:41,000
Just give me one moment.

2994
03:20:41,000 --> 03:20:44,480
So if I change this 5 to 3,
what will be my remainder case?

2995
03:20:44,720 --> 03:20:47,240
The remainder again will be two.

2996
03:20:47,240 --> 03:20:50,440
Right?

2997
03:20:50,440 --> 03:20:52,640
So how this remainder is calculated.

2998
03:20:52,640 --> 03:20:56,400
So those who don't understand
this mathematical so are is doing

2999
03:20:56,400 --> 03:21:00,600
let's say these are these five numbers
of the one two, three, four, five.

3000
03:21:01,480 --> 03:21:04,960
So Java will try to combine these numbers

3001
03:21:05,160 --> 03:21:10,160
in the form of groups
and each group will three number.

3002
03:21:10,640 --> 03:21:14,920
So the five number represent is
represented by these five vertical lines.

3003
03:21:15,560 --> 03:21:18,360
So now I will pick first three lines.

3004
03:21:18,360 --> 03:21:20,880
It will create a group of it, okay.

3005
03:21:20,880 --> 03:21:23,640
It will create a group out of it in here.

3006
03:21:23,640 --> 03:21:26,160
And the if Java is unable

3007
03:21:26,160 --> 03:21:30,640
to create a group, the number of vertical
that are left behind,

3008
03:21:31,240 --> 03:21:35,040
it will it will give that as the answer.

3009
03:21:35,520 --> 03:21:36,120
Okay.

3010
03:21:36,360 --> 03:21:38,640
So this is how the
remember works. So let's say

3011
03:21:39,680 --> 03:21:40,320
you want

3012
03:21:40,320 --> 03:21:43,360
to divide something into equal parts,
okay?

3013
03:21:43,520 --> 03:21:45,600
You want to divide
something into equal parts.

3014
03:21:45,960 --> 03:21:49,000
And if something is on, is not

3015
03:21:49,000 --> 03:21:53,840
divide table in two equal parts,
okay, You are the remaining

3016
03:21:54,080 --> 03:21:56,760
of that calculation as your answer.

3017
03:21:57,000 --> 03:21:58,600
Then you can use the modulus.

3018
03:21:58,600 --> 03:22:01,840
So let's say, for example,
let me show you one more example.

3019
03:22:01,840 --> 03:22:03,960
Let's say if I change this

3020
03:22:07,560 --> 03:22:08,640
to nine,

3021
03:22:08,760 --> 03:22:11,760
what answer I will get now, guys.

3022
03:22:11,920 --> 03:22:14,000
Zero why I am getting zero?

3023
03:22:14,040 --> 03:22:15,280
Because

3024
03:22:21,600 --> 03:22:23,840
the Y I am getting zero

3025
03:22:23,840 --> 03:22:26,840
because now I have nine
vertical lines, one,

3026
03:22:27,120 --> 03:22:32,160
two, three, 419.

3027
03:22:32,160 --> 03:22:32,760
Right.

3028
03:22:32,960 --> 03:22:39,120
And Java is trying to group these
vertical lines into a group of three.

3029
03:22:39,120 --> 03:22:44,880
So Will creates one group
out of these three lines and another group

3030
03:22:44,880 --> 03:22:48,600
out of these three lines,
another group of alternatives.

3031
03:22:48,840 --> 03:22:51,400
Is there are there any lines left to guys

3032
03:22:53,360 --> 03:22:57,000
So three nine go three goes in to 911.

3033
03:22:57,000 --> 03:22:57,240
Right.

3034
03:22:57,240 --> 03:23:02,040
So no lines are left back a lot and that's
why you will be getting zero The answer

3035
03:23:02,640 --> 03:23:06,360
so you want to divide
something into equal parts.

3036
03:23:08,040 --> 03:23:10,320
If you want to divide
something in equal parts,

3037
03:23:11,120 --> 03:23:13,520
then you can use the modulus operator.

3038
03:23:13,520 --> 03:23:14,240
Okay?

3039
03:23:14,640 --> 03:23:19,000
And it will tell you if there are any left
or leftovers into number one.

3040
03:23:19,000 --> 03:23:22,040
Number two, one system number one.

3041
03:23:22,040 --> 03:23:24,360
Number two.

3042
03:23:24,360 --> 03:23:24,600
Okay.

3043
03:23:24,600 --> 03:23:30,200
Now, some of you are asking me,
what if they are the numbers?

3044
03:23:30,280 --> 03:23:32,360
If if we had reversed the numbers.

3045
03:23:32,400 --> 03:23:34,440
Okay If we reversed the numbers.

3046
03:23:34,440 --> 03:23:39,480
So if I am trying to take the models of a
smaller number with the greater number.

3047
03:23:39,880 --> 03:23:45,120
So if the number is smaller,
then the other number is greater,

3048
03:23:45,120 --> 03:23:48,440
you will always be getting
the smaller number as the answer.

3049
03:23:48,840 --> 03:23:52,560
Okay, so this is something
that is specific to programing.

3050
03:23:52,560 --> 03:23:54,240
So this is how modulus operator works.

3051
03:23:55,320 --> 03:23:57,320
So this is how it is defined.

3052
03:23:57,320 --> 03:23:57,960
Okay.

3053
03:23:58,040 --> 03:24:03,000
You will never ever be needing this
or you will never ever be doing this

3054
03:24:03,040 --> 03:24:07,680
because it does not make sense and
this is not how it works in mathematics.

3055
03:24:08,120 --> 03:24:11,920
So now but this is the behavior
that you will be getting.

3056
03:24:11,920 --> 03:24:14,920
Okay.

3057
03:24:14,920 --> 03:24:18,880
And so if I have someone
some of you were asking about one

3058
03:24:18,880 --> 03:24:23,360
and then one, then I will be okay.

3059
03:24:23,640 --> 03:24:25,800
You will get three. Okay.

3060
03:24:25,800 --> 03:24:31,040
So let me actually
let me put it in here for

3061
03:24:39,880 --> 03:24:43,720
so if I am trying to take the models
of a smaller number

3062
03:24:43,800 --> 03:24:48,520
with a bigger number,
I will always be getting the

3063
03:24:49,560 --> 03:24:55,480
smaller number as the body.

3064
03:24:55,800 --> 03:24:58,880
If I am taking

3065
03:24:58,880 --> 03:25:01,400
more or a

3066
03:25:01,440 --> 03:25:03,240
smaller

3067
03:25:05,160 --> 03:25:07,920
number with a

3068
03:25:07,920 --> 03:25:12,720
bigger number, I mean,

3069
03:25:14,360 --> 03:25:16,520
I will always get

3070
03:25:22,240 --> 03:25:27,120
smaller on

3071
03:25:39,480 --> 03:25:50,520
the as the.

3072
03:25:50,520 --> 03:25:56,640
So if I wanted the answer and
the remainder, how would I put into that?

3073
03:25:56,640 --> 03:25:59,280
Would I say percentage of size.

3074
03:26:00,080 --> 03:26:04,680
Okay so nice Let's say let's say you are,

3075
03:26:05,640 --> 03:26:09,120
you are
you want that mathematical operation.

3076
03:26:09,200 --> 03:26:09,680
Okay.

3077
03:26:09,840 --> 03:26:14,120
So you want this this behavior that I

3078
03:26:14,560 --> 03:26:18,800
if I divide this this 13 with five,

3079
03:26:20,320 --> 03:26:23,080
if I want this part

3080
03:26:24,200 --> 03:26:27,760
and this part bought so how can I get this

3081
03:26:29,320 --> 03:26:31,080
so far that

3082
03:26:31,240 --> 03:26:33,880
what you guys can do you can say

3083
03:26:36,600 --> 03:26:38,840
this out number one

3084
03:26:40,200 --> 03:26:44,360
divided by number to plug that answer part

3085
03:26:45,440 --> 03:26:48,920
and five repayment of arc

3086
03:26:49,440 --> 03:26:53,440
you can use the models. Okay

3087
03:27:00,360 --> 03:27:02,520
so now

3088
03:27:05,920 --> 03:27:08,600
this part I am getting in here

3089
03:27:10,200 --> 03:27:11,880
and this remainder

3090
03:27:11,880 --> 03:27:14,880
three, I am getting in here.

3091
03:27:15,000 --> 03:27:19,920
But remember I was percentage assigned
by division and getting the answer.

3092
03:27:19,920 --> 03:27:23,440
I use the division side, but again,

3093
03:27:23,440 --> 03:27:27,240
if the answer is decimal,
you will not get it unless you use double.

3094
03:27:27,360 --> 03:27:28,200
No Olga,

3095
03:27:29,400 --> 03:27:31,720
when you are using the

3096
03:27:33,720 --> 03:27:35,600
when you are using the in

3097
03:27:35,600 --> 03:27:37,920
integer type of calculations,

3098
03:27:38,800 --> 03:27:43,080
that decimal part,
it actually that remainder.

3099
03:27:43,280 --> 03:27:45,920
So let's say for example,

3100
03:27:47,560 --> 03:27:50,080
let's say for example, if I

3101
03:27:50,120 --> 03:27:54,360
if I wanted to
if I wanted to divide it completely.

3102
03:27:54,480 --> 03:27:55,120
Right.

3103
03:27:55,120 --> 03:27:58,760
So from the rules of mathematics,
this is what I will do.

3104
03:27:58,760 --> 03:28:00,840
I will do this right to

3105
03:28:02,320 --> 03:28:04,360
then then three

3106
03:28:04,440 --> 03:28:07,920
I will put a dot,
I will put a zero in here.

3107
03:28:07,920 --> 03:28:11,560
256 are 30.

3108
03:28:12,000 --> 03:28:14,640
This is how you will do it in mathematics,
right?

3109
03:28:15,120 --> 03:28:18,600
So yes, we are still getting that
that remainder part in here.

3110
03:28:18,880 --> 03:28:19,560
Right.

3111
03:28:19,680 --> 03:28:23,040
But we are now converting
that remainder part

3112
03:28:23,040 --> 03:28:27,120
actually in here to this three
with the help of this model.

3113
03:28:27,240 --> 03:28:27,920
Okay.

3114
03:28:27,960 --> 03:28:30,480
So it still works.

3115
03:28:30,480 --> 03:28:34,800
It's surrounded how get to 13 five, 2.6.

3116
03:28:35,040 --> 03:28:39,760
So Alexi has a question that
if I want to get 2.6, what should I do?

3117
03:28:39,760 --> 03:28:40,080
Right?

3118
03:28:40,080 --> 03:28:41,160
I don't want this.

3119
03:28:41,160 --> 03:28:43,280
Remember, I don't want this region.

3120
03:28:43,280 --> 03:28:45,440
I want that number.

3121
03:28:45,840 --> 03:28:48,360
I want the decimal part.

3122
03:28:48,360 --> 03:28:51,200
So if I have something like that,

3123
03:28:52,240 --> 03:28:53,280
if if these are the

3124
03:28:53,280 --> 03:28:55,680
requirements, I will change

3125
03:28:57,320 --> 03:29:01,080
my numbers to double.

3126
03:29:01,080 --> 03:29:03,400
Yeah. Okay.

3127
03:29:03,400 --> 03:29:08,160
And now if I execute my four.

3128
03:29:08,160 --> 03:29:08,480
Okay,

3129
03:29:09,360 --> 03:29:13,520
so now instead of two, I get 2.6.

3130
03:29:13,840 --> 03:29:14,440
Okay.

3131
03:29:14,560 --> 03:29:18,840
But I still get the remainder, same
as if I not the elementary integer.

3132
03:29:19,720 --> 03:29:22,760
Is this something
we will be using a lot in real world? Yes.

3133
03:29:22,880 --> 03:29:29,400
This modulus, it can solve
your very complex problem in minutes.

3134
03:29:29,760 --> 03:29:32,520
And there are so many interview questions.

3135
03:29:32,520 --> 03:29:36,440
There are so many testing interview
questions based on this modulus operator.

3136
03:29:36,560 --> 03:29:39,880
You guys will be using this modulus
operator a lot.

3137
03:29:40,640 --> 03:29:42,960
So try

3138
03:29:43,000 --> 03:29:44,880
ask me if there are any questions.

3139
03:29:44,880 --> 03:29:46,440
Ask me if something is not clear.

3140
03:29:46,440 --> 03:29:48,000
This modulus

3141
03:29:48,240 --> 03:29:50,040
woman interviewed for an interview.

3142
03:29:50,040 --> 03:29:52,080
Questions
are based on this modulus operator,

3143
03:29:52,720 --> 03:29:54,760
so make sure you guys understand it fully.

3144
03:29:56,040 --> 03:29:57,000
Is there anyone

3145
03:29:57,000 --> 03:29:59,880
don't understand this modulus operator
How it is working?

3146
03:29:59,880 --> 03:30:06,880
How does is related to mathematics?

3147
03:30:06,880 --> 03:30:10,000
Do you guys know about the even numbers
and the or numbers

3148
03:30:10,720 --> 03:30:14,640
or what are even numbers and or numbers?

3149
03:30:14,640 --> 03:30:19,360
So let's say if I have to find out
if a number is even then, but how can I

3150
03:30:19,560 --> 03:30:21,720
how can I find that

3151
03:30:29,480 --> 03:30:31,320
if that number

3152
03:30:31,320 --> 03:30:34,000
is completely divisible by two,

3153
03:30:35,080 --> 03:30:38,000
their number is even number right?

3154
03:30:38,000 --> 03:30:42,160
So how how can I find out if something
is completely divisible by two?

3155
03:30:43,920 --> 03:30:47,360
If the remainder of that number

3156
03:30:47,880 --> 03:30:53,040
with the two is zero, that means
that number is completely divisible.

3157
03:30:53,280 --> 03:30:56,280
So let's say, for example,
I have to find out

3158
03:30:56,760 --> 03:31:00,800
25 is an even number or number, right?

3159
03:31:01,320 --> 03:31:05,800
I will use a modulus, I will use to
and I will say that

3160
03:31:06,720 --> 03:31:11,360
I will say if I get the answer as zero,
the number is

3161
03:31:11,360 --> 03:31:15,160
even if I don't get the answer as zero,
the number is odd.

3162
03:31:15,240 --> 03:31:22,160
Okay,
so if I execute this, I get one right.

3163
03:31:22,480 --> 03:31:24,560
That means this is not an even number.

3164
03:31:25,200 --> 03:31:29,040
If a number is even,
I should get at the remainder as zero.

3165
03:31:29,280 --> 03:31:31,440
So six is an even number. Right?

3166
03:31:31,960 --> 03:31:38,000
If I take the one of six with two,
I get zero.

3167
03:31:38,120 --> 03:31:40,200
That means this number is even right.

3168
03:31:40,920 --> 03:31:43,040
I can I can test nine

3169
03:31:46,520 --> 03:31:46,920
again.

3170
03:31:46,920 --> 03:31:49,800
I get the answer when the number is 91.

3171
03:31:50,280 --> 03:31:53,240
So very complex problems
you can solve quickly

3172
03:31:53,240 --> 03:31:55,560
with this decimal back in mathematics.

3173
03:31:56,400 --> 03:31:58,920
You can find out
if a number is prime or not.

3174
03:31:59,320 --> 03:32:04,520
You can find out
many other different things.

3175
03:32:04,520 --> 03:32:05,040
All right.

3176
03:32:05,040 --> 03:32:07,120
The modulus operator is clear, right?

3177
03:32:07,760 --> 03:32:11,120
So we can use the modulus operator with

3178
03:32:11,840 --> 03:32:14,800
We would double
as we can use the modulus operator

3179
03:32:14,800 --> 03:32:16,360
with integers

3180
03:32:19,560 --> 03:32:22,080
nine divided by three equals to zero.

3181
03:32:22,080 --> 03:32:27,000
So Fahad, if you want to find out
if something is even

3182
03:32:27,080 --> 03:32:30,800
or even or you never divided by three,

3183
03:32:31,240 --> 03:32:33,640
you always divide it by two, okay?

3184
03:32:34,240 --> 03:32:35,480
That's how you find it.

3185
03:32:35,480 --> 03:32:38,680
You always do it with two, not three.

3186
03:32:38,680 --> 03:32:41,160
Yes, definitely nine divided by three
doesn't it.

3187
03:32:41,160 --> 03:32:42,320
Does not have any remainders.

3188
03:32:42,320 --> 03:32:52,440
You will be getting zero.

3189
03:32:52,440 --> 03:32:53,800
So do we move forward base

3190
03:32:58,120 --> 03:33:00,920
and next next year

3191
03:33:01,560 --> 03:33:21,200
and new class?

3192
03:33:21,200 --> 03:33:42,720
It would be next thing
that we need to learn is.

3193
03:33:42,720 --> 03:33:48,120
And so the next thing
is the increment operator.

3194
03:33:48,120 --> 03:33:51,280
So let's say, guys, I have a number,

3195
03:33:51,520 --> 03:33:54,120
I have this number as the number one,

3196
03:33:54,320 --> 03:34:03,320
right?

3197
03:34:03,320 --> 03:34:07,800
If I,
I want to increase this value by a one.

3198
03:34:09,080 --> 03:34:11,160
So right now this number

3199
03:34:11,160 --> 03:34:14,360
variable contains ten
I want to increase it by one.

3200
03:34:14,400 --> 03:34:22,600
How can I do that?

3201
03:34:22,600 --> 03:34:24,840
I can do that by

3202
03:34:26,080 --> 03:34:28,680
adding one to this value, right?

3203
03:34:28,960 --> 03:34:31,440
So what I can say, I will say a number.

3204
03:34:32,280 --> 03:34:34,920
Okay, I will say a number

3205
03:34:34,920 --> 03:34:37,320
is equal to

3206
03:34:37,320 --> 03:34:44,000
number plus one.

3207
03:34:44,000 --> 03:34:45,920
Make it number.

3208
03:34:46,280 --> 03:34:48,320
So number two, a number

3209
03:34:48,320 --> 03:34:53,600
plus one.

3210
03:34:53,600 --> 03:34:54,960
So what is going on in here?

3211
03:34:54,960 --> 03:35:01,160
If I execute this quote, I see 11.

3212
03:35:01,800 --> 03:35:08,600
How many of you don't understand
what what what am I doing in here?

3213
03:35:08,600 --> 03:35:16,680
Is there anyone who
don't understand this part? I

3214
03:35:18,800 --> 03:35:21,400
it's perfectly
fine If you don't understand.

3215
03:35:21,400 --> 03:35:22,760
Understand something.

3216
03:35:22,760 --> 03:35:23,200
Tell me.

3217
03:35:23,200 --> 03:35:26,680
If you don't understand anything, it's
perfectly fine.

3218
03:35:27,080 --> 03:35:29,760
Even if you have 5% doubt, tell me

3219
03:35:29,760 --> 03:35:31,760
that you don't understand that 5%.

3220
03:35:32,960 --> 03:35:35,120
I am just typing.

3221
03:35:35,640 --> 03:35:38,160
So, Mustafa, my is.

3222
03:35:38,680 --> 03:35:40,920
I have written this line in here.
Line number eight.

3223
03:35:41,040 --> 03:35:44,600
Do you guys understand
what this line number eight is doing

3224
03:35:45,000 --> 03:35:51,000
and how it is doing?

3225
03:35:51,000 --> 03:35:54,480
So let me let me let me tell you.

3226
03:35:54,480 --> 03:35:57,160
So I have this box

3227
03:35:58,760 --> 03:36:01,400
and I have given this box

3228
03:36:01,400 --> 03:36:07,440
and name and number.

3229
03:36:07,440 --> 03:36:08,160
Okay.

3230
03:36:08,280 --> 03:36:10,800
So this is the box inside the memory.
Okay.

3231
03:36:10,800 --> 03:36:11,760
I have this box.

3232
03:36:11,760 --> 03:36:14,760
And right now I have been

3233
03:36:15,440 --> 03:36:19,320
inside this box, right on this line.

3234
03:36:19,320 --> 03:36:22,240
What am I doing? I am saying
good job out there today. Allah,

3235
03:36:23,600 --> 03:36:25,440
give me whatever is stored

3236
03:36:25,440 --> 03:36:28,960
inside the box
so I can say okay, no issues.

3237
03:36:29,400 --> 03:36:31,440
It is this number ten.

3238
03:36:31,440 --> 03:36:35,440
This is what is stored inside this box.

3239
03:36:35,440 --> 03:36:40,400
Then I think that gave up
not only give me the number from that box,

3240
03:36:41,160 --> 03:36:45,560
but also add one to that value.

3241
03:36:45,560 --> 03:36:48,560
So number ten plus one

3242
03:36:49,680 --> 03:36:51,520
it is 11.

3243
03:36:51,520 --> 03:36:52,240
Okay.

3244
03:36:52,400 --> 03:36:56,880
The tired thing that I am saying,
I am saying, hey, Dollar store

3245
03:36:57,240 --> 03:37:03,280
this updated number 11 again
inside the same box.

3246
03:37:03,720 --> 03:37:09,480
So if you guys have understood
how about history.

3247
03:37:09,480 --> 03:37:13,440
So if you guys have understood
how the values

3248
03:37:13,440 --> 03:37:16,440
are replaced in variables,
this should be simple.

3249
03:37:16,840 --> 03:37:19,800
So I have broken it down into three box.

3250
03:37:20,040 --> 03:37:23,160
So whatever I write after

3251
03:37:23,160 --> 03:37:26,400
this equal to sign,
let's see if I am writing.

3252
03:37:27,480 --> 03:37:28,280
So let's see.

3253
03:37:28,280 --> 03:37:33,000
Next.

3254
03:37:33,000 --> 03:37:34,320
Just give me one.

3255
03:37:34,560 --> 03:37:36,840
So if I said this So

3256
03:37:37,760 --> 03:37:40,200
I am saying to you I like up.

3257
03:37:40,200 --> 03:37:42,640
Please add number ten

3258
03:37:44,040 --> 03:37:46,000
with the number one

3259
03:37:46,000 --> 03:37:48,480
and whatever are the reserves

3260
03:37:48,480 --> 03:37:52,240
store those reserves inside this number
variable.

3261
03:37:52,560 --> 03:37:53,240
Okay.

3262
03:37:53,520 --> 03:37:55,920
But what I can also do

3263
03:37:55,920 --> 03:38:01,120
is that instead of directly
having that number,

3264
03:38:01,120 --> 03:38:05,040
my calculation,
I can use the variable instead.

3265
03:38:05,160 --> 03:38:05,800
Okay.

3266
03:38:06,000 --> 03:38:08,840
I can see number in here.

3267
03:38:09,480 --> 03:38:14,880
Now, whatever is stored that number
Java will now pick up that number.

3268
03:38:15,240 --> 03:38:17,400
It will do the calculations

3269
03:38:17,400 --> 03:38:23,040
and then it will store the reserves again
inside the same variable.

3270
03:38:23,400 --> 03:38:26,080
Okay, inside the same variable.

3271
03:38:26,080 --> 03:38:30,480
So that's why when I put in this number

3272
03:38:32,640 --> 03:38:35,240
before I have done these calculations,

3273
03:38:36,360 --> 03:38:38,680
I get the result. Then

3274
03:38:39,840 --> 03:38:43,320
once I have done this calculation,
I get results.

3275
03:38:43,320 --> 03:38:44,880
11 Okay.

3276
03:38:44,880 --> 03:38:47,920
Reassign
p value on the existing variable. Yes.

3277
03:38:48,360 --> 03:38:53,440
So speaking something from the box,

3278
03:38:53,440 --> 03:38:56,520
doing some kind of calculations
on the value

3279
03:38:57,280 --> 03:39:00,600
and then storing the
results back inside that box,

3280
03:39:01,800 --> 03:39:04,640
that is
how yes, the calculator is created.

3281
03:39:04,640 --> 03:39:06,680
Can we put a number plus number?

3282
03:39:06,680 --> 03:39:08,920
Yes, we can also do that.

3283
03:39:08,920 --> 03:39:11,520
So let's see now

3284
03:39:12,960 --> 03:39:15,840
I want to say

3285
03:39:16,120 --> 03:39:17,040
oops.

3286
03:39:17,040 --> 03:39:22,200
I want to say oops.

3287
03:39:22,200 --> 03:39:24,240
The number plus number. Right.

3288
03:39:24,240 --> 03:39:27,240
So what is stored
inside the numbers, Olga?

3289
03:39:27,560 --> 03:39:29,840
What is stored
inside the number online? Ten?

3290
03:39:31,760 --> 03:39:32,840
No, no, no.

3291
03:39:33,120 --> 03:39:35,280
I have updated the content.

3292
03:39:35,560 --> 03:39:38,080
I have updated the content on line number
nine.

3293
03:39:38,560 --> 03:39:41,600
After Java, execute line number nine,

3294
03:39:42,000 --> 03:39:45,000
I will have 11 instead of ten.

3295
03:39:46,440 --> 03:39:50,880
And if I do 11 plus 11,
what will be the answer?

3296
03:39:51,120 --> 03:39:53,400
It will be 22. Right?

3297
03:39:53,400 --> 03:39:55,680
So now

3298
03:39:57,120 --> 03:39:59,400
I will see. 22.

3299
03:39:59,400 --> 03:40:00,920
Okay, I will see 22.

3300
03:40:00,920 --> 03:40:07,800
Is it clear, guys,
how the calculations are working in here?

3301
03:40:07,800 --> 03:40:09,960
So to achieve this same thing,

3302
03:40:09,960 --> 03:40:13,920
it's kind of a longer
B, okay, it's kind of a longer double.

3303
03:40:13,920 --> 03:40:16,480
Guys have created something smaller.

3304
03:40:16,800 --> 03:40:20,640
Okay, You guys have
created something smaller. So

3305
03:40:22,440 --> 03:40:24,200
instead of writing number

3306
03:40:24,200 --> 03:40:28,720
is equal to a number plus one Java guys,
Java guys have done this.

3307
03:40:28,720 --> 03:40:32,240
So I say is if you only say

3308
03:40:33,040 --> 03:40:35,400
number plus plus.

3309
03:40:35,400 --> 03:40:38,920
So if you write the variable name
and then two plus signs,

3310
03:40:39,600 --> 03:40:44,280
then automatically one
the value of number.

3311
03:40:44,960 --> 03:40:49,320
Okay, whatever we have stored inside
number, it will be incremented by.

3312
03:40:50,000 --> 03:40:50,600
Okay.

3313
03:40:50,600 --> 03:40:55,320
It will have been selected by one.

3314
03:40:55,320 --> 03:40:58,320
But what was the value of number on line
11 guys?

3315
03:40:59,720 --> 03:41:01,800
Yes, it can be of

3316
03:41:01,800 --> 03:41:06,520
it can be addition, it can be
multiplication, it can be divided.

3317
03:41:07,040 --> 03:41:09,680
So if I increment it
number 22 by one, what?

3318
03:41:09,680 --> 03:41:11,280
Until I will get

3319
03:41:14,360 --> 03:41:18,360
I get it eight.

3320
03:41:18,360 --> 03:41:21,360
So I get quantity, so a variable name

3321
03:41:22,240 --> 03:41:24,360
and then two plus signs.

3322
03:41:24,360 --> 03:41:28,320
Okay, we will call it
the shorthand operator, the plus operator.

3323
03:41:28,720 --> 03:41:33,120
This operator, it increases
the value of a variable by one.

3324
03:41:33,800 --> 03:41:34,680
Is it clear guys?

3325
03:41:34,680 --> 03:41:49,840
Is there anyone who is confused?

3326
03:41:49,840 --> 03:41:56,200
So let's try to understand
other calculations.

3327
03:41:56,600 --> 03:42:02,480
Let's try to understand
other calculations.

3328
03:42:02,480 --> 03:42:06,600
So let's try how it became 23.

3329
03:42:07,080 --> 03:42:07,800
Okay.

3330
03:42:07,800 --> 03:42:11,040
How many of don't understand
how it became 23?

3331
03:42:11,160 --> 03:42:12,480
So, Mustafa, what do you think?

3332
03:42:12,480 --> 03:42:14,400
What should we d value instead?

3333
03:42:14,400 --> 03:42:16,000
Instead of going to three,
what do you think?

3334
03:42:16,000 --> 03:42:19,720
What should be the value in here?

3335
03:42:19,720 --> 03:42:23,640
Mine became two L Maryam,
you must be doing something about

3336
03:42:27,600 --> 03:42:29,800
number ten. Yes.

3337
03:42:29,800 --> 03:42:32,400
So. Mustafa Originally the number was ten,

3338
03:42:33,800 --> 03:42:35,640
then on line number. Line.

3339
03:42:35,640 --> 03:42:38,960
What did we do with the number
ten on line number nine?

3340
03:42:38,960 --> 03:42:44,480
What did we do with the number ten?

3341
03:42:44,480 --> 03:42:47,120
We incremented by one. Right.

3342
03:42:47,640 --> 03:42:52,320
So now the number n that we stored

3343
03:42:52,480 --> 03:42:56,880
initially has been changed to number 11.

3344
03:42:57,400 --> 03:42:58,080
Okay.

3345
03:42:58,240 --> 03:43:02,200
But 11 and after that after back

3346
03:43:03,200 --> 03:43:05,320
we performed another calculation.

3347
03:43:06,040 --> 03:43:09,360
We added number plus number.

3348
03:43:09,480 --> 03:43:11,680
What is stored inside the number?

3349
03:43:11,680 --> 03:43:13,320
It's now? 11.

3350
03:43:13,320 --> 03:43:16,200
So 11 plus another 11.

3351
03:43:16,280 --> 03:43:18,880
It's now 23, right?

3352
03:43:19,760 --> 03:43:22,640
So after line ten,

3353
03:43:22,640 --> 03:43:27,040
when I printed the value of number,
I got this 22.

3354
03:43:27,720 --> 03:43:28,360
Okay.

3355
03:43:28,560 --> 03:43:30,840
Then I changed it again.

3356
03:43:30,840 --> 03:43:34,800
This time I told the job that, Hey, Java,
can you please increment

3357
03:43:35,280 --> 03:43:39,840
whatever is stored inside that number box
any place incremented by one.

3358
03:43:40,520 --> 03:43:43,840
So previously there was 22 inside the box.

3359
03:43:43,960 --> 03:43:44,400
Right

3360
03:43:45,760 --> 03:43:48,560
now it has been incremented to 23.

3361
03:43:49,240 --> 03:44:02,360
Is it clear now?

3362
03:44:02,360 --> 03:44:05,280
So you'll get the

3363
03:44:05,280 --> 03:44:07,160
on line number nine.

3364
03:44:07,160 --> 03:44:09,760
You are trying to use a box number.

3365
03:44:09,960 --> 03:44:10,640
What do you do.

3366
03:44:10,640 --> 03:44:15,200
You you never declared that box number.

3367
03:44:15,200 --> 03:44:18,160
So so Java Java is confused Java thing.
I don't know.

3368
03:44:18,160 --> 03:44:20,920
What do you mean by number box

3369
03:44:20,920 --> 03:44:27,040
because you never declared it.

3370
03:44:27,040 --> 03:44:30,200
How did you increment to 23.

3371
03:44:30,480 --> 03:44:32,040
So you didn't use you.

3372
03:44:32,040 --> 03:44:37,200
You go see these two, these two
plus plus times these two plus signs.

3373
03:44:38,200 --> 03:44:39,480
That's how I tell you.

3374
03:44:39,480 --> 03:44:41,840
Java two incremented by one.

3375
03:44:41,840 --> 03:44:44,160
That's how I tell Java to increment it
by one.

3376
03:44:44,720 --> 03:44:50,160
So let's say, for example,

3377
03:44:50,160 --> 03:44:54,200
if I store them again in here.

3378
03:44:54,960 --> 03:44:55,640
Okay.

3379
03:44:57,120 --> 03:44:58,120
Yes. Not number.

3380
03:44:58,120 --> 03:45:01,360
Just just plus plus twice and

3381
03:45:01,400 --> 03:45:08,760
and it will incremented by one.

3382
03:45:08,760 --> 03:45:16,120
So let's say.

3383
03:45:16,120 --> 03:45:18,600
Yes, the minus minus eight also laughs.

3384
03:45:18,600 --> 03:45:20,200
I will teach you all of that.

3385
03:45:21,240 --> 03:45:23,280
Let's let's go step by step.

3386
03:45:23,280 --> 03:45:23,520
Okay.

3387
03:45:23,520 --> 03:45:28,080
Next step by step.

3388
03:45:28,080 --> 03:45:30,840
Maybe we need needed math lesson first.

3389
03:45:31,680 --> 03:45:35,200
I do not think we are using that much hard
math.

3390
03:45:35,400 --> 03:45:37,680
It's a simple addition.

3391
03:45:37,680 --> 03:45:39,960
Can we use four plus signs?

3392
03:45:39,960 --> 03:45:42,200
No, we cannot use four plus signs,

3393
03:45:43,440 --> 03:45:44,760
so I don't think so.

3394
03:45:44,760 --> 03:45:46,280
We can use four plus.

3395
03:45:46,280 --> 03:45:47,880
You will be getting into the.

3396
03:45:47,880 --> 03:45:50,160
There is no such thing as four plus signs.

3397
03:45:50,960 --> 03:45:51,240
Okay.

3398
03:45:51,240 --> 03:45:56,160
Only two things. Yes.

3399
03:45:56,160 --> 03:46:01,080
So number
plus plus it actually means number

3400
03:46:01,840 --> 03:46:04,800
is equal to number plus one. Okay.

3401
03:46:04,800 --> 03:46:09,640
So when we write number
plus plus, actually, we are doing this.

3402
03:46:10,320 --> 03:46:21,240
Actually, we are doing this.

3403
03:46:21,240 --> 03:46:23,640
So I am saying number plus plus.

3404
03:46:23,680 --> 03:46:25,960
So I stored number ten

3405
03:46:26,680 --> 03:46:29,640
inside the number box.

3406
03:46:29,640 --> 03:46:30,400
Okay.

3407
03:46:30,600 --> 03:46:33,400
And then I am saying number plus plus.

3408
03:46:34,360 --> 03:46:36,040
So what what output I will get

3409
03:46:36,040 --> 03:46:41,640
if I print this value in here guys.

3410
03:46:41,640 --> 03:46:43,000
11. Right.

3411
03:46:43,000 --> 03:46:48,360
So ten if we increment the ten by one,
we get 11 right.

3412
03:46:48,360 --> 03:46:52,560
It's simple.

3413
03:46:52,560 --> 03:47:03,520
So I get 11, I get 11.

3414
03:47:03,520 --> 03:47:25,720
Let's let's create one more class
and let's create one more class.

3415
03:47:25,720 --> 03:47:30,520
Let me know once you guys have this code
and you are ready to when you are ready

3416
03:47:30,520 --> 03:47:57,560
to create a new class, okay

3417
03:47:58,640 --> 03:48:03,840
So let's try to understand what kind of
other operations I can perform.

3418
03:48:03,840 --> 03:48:04,200
Okay?

3419
03:48:04,200 --> 03:48:10,680
So if I have an integer number, then okay,

3420
03:48:10,680 --> 03:48:13,520
so now you guys help me understand
how everything is working.

3421
03:48:14,160 --> 03:48:17,360
So if I say number

3422
03:48:18,360 --> 03:48:21,280
is equal to number

3423
03:48:21,600 --> 03:48:32,640
plus number plus some,

3424
03:48:32,640 --> 03:48:34,720
and if I say number,

3425
03:48:35,640 --> 03:48:38,440
what output
I will guys, what answer I will get

3426
03:48:39,800 --> 03:48:41,080
40, right?

3427
03:48:41,080 --> 03:48:46,400
So what I am doing,
I am saying, hey, Java, whatever is stored

3428
03:48:46,400 --> 03:48:53,080
inside the number box, add it to again
whatever is stored in the box number.

3429
03:48:53,520 --> 03:48:56,760
Then again, do the same, then again
do the same right.

3430
03:48:56,760 --> 03:49:00,560
So and then finally I am saying store

3431
03:49:00,560 --> 03:49:05,040
the results back to number variable.

3432
03:49:05,200 --> 03:49:08,840
If I do this right, if I do this in number

3433
03:49:10,640 --> 03:49:13,120
number two, well, what answer
I will get now

3434
03:49:29,200 --> 03:49:31,560
to think about advice.

3435
03:49:32,280 --> 03:49:34,240
Don't don't don't make guesses.

3436
03:49:34,240 --> 03:49:36,480
Think about this.

3437
03:49:36,480 --> 03:49:39,600
What I am saying on line number
eight to Java.

3438
03:49:40,360 --> 03:49:44,600
What am I saying online Number eight I am
I am saying Java.

3439
03:49:45,200 --> 03:49:47,480
Give me a box okay.

3440
03:49:47,680 --> 03:49:52,680
And let's call that box number and store
ten inside that box

3441
03:49:53,840 --> 03:49:55,800
on line number nine, I am saying,

3442
03:49:55,800 --> 03:49:59,160
hey, give me the value from that box

3443
03:50:01,600 --> 03:50:02,040
again.

3444
03:50:02,040 --> 03:50:04,240
I am saying give me the value
from that box.

3445
03:50:04,600 --> 03:50:06,560
Add these two.

3446
03:50:06,560 --> 03:50:08,880
Then again, add the result

3447
03:50:08,880 --> 03:50:11,400
with again with the same box and again

3448
03:50:11,400 --> 03:50:14,160
with the same box and store preserves

3449
03:50:14,920 --> 03:50:17,160
inside number two box.

3450
03:50:18,280 --> 03:50:18,920
Right.

3451
03:50:18,960 --> 03:50:23,200
But in here I am asking
Java to put into the value of number.

3452
03:50:23,600 --> 03:50:27,160
Have I ever change the content of number?

3453
03:50:27,600 --> 03:50:31,680
Did I ever updated
the value of variable number?

3454
03:50:31,760 --> 03:50:34,440
I didn't update that value ever. Right.

3455
03:50:35,080 --> 03:50:39,360
So if it had ten previously,
it still it has ten,

3456
03:50:39,480 --> 03:50:42,200
but still it has been

3457
03:50:45,120 --> 03:50:48,600
because I never updated the variable.

3458
03:50:48,600 --> 03:50:51,480
So I never updated this variable.

3459
03:50:51,920 --> 03:50:56,840
The calculation that I am doing in here
I am storing in a new variable,

3460
03:50:57,000 --> 03:50:59,240
and the name of that variable
is number two.

3461
03:51:00,040 --> 03:51:03,840
I never change,
I never updated the value in here.

3462
03:51:05,160 --> 03:51:05,640
Yes, I

3463
03:51:05,640 --> 03:51:07,920
created a new value, write a new variable.

3464
03:51:08,920 --> 03:51:10,040
So that's why.

3465
03:51:10,040 --> 03:51:12,120
Is there
anyone who still don't understand?

3466
03:51:12,120 --> 03:51:21,200
Why I am getting ten in here.

3467
03:51:21,200 --> 03:51:24,960
Okay, so if I change

3468
03:51:26,560 --> 03:51:29,280
this to number,

3469
03:51:29,920 --> 03:51:36,040
I get 40.

3470
03:51:36,040 --> 03:51:41,040
All right, so what if, guys if I say

3471
03:51:43,320 --> 03:51:46,040
number is equal to number

3472
03:51:47,400 --> 03:51:49,000
plus one

3473
03:51:51,560 --> 03:51:52,800
plus ten

3474
03:51:53,280 --> 03:51:55,200
plus 20,

3475
03:51:55,760 --> 03:51:57,200
which truncate

3476
03:51:57,920 --> 03:51:59,960
and then I try to devalue

3477
03:52:03,920 --> 03:52:04,680
new value

3478
03:52:04,680 --> 03:52:17,320
does not print.

3479
03:52:17,320 --> 03:52:20,800
If it has updated the value
birds fly, we see

3480
03:52:23,920 --> 03:52:25,320
we see 90.

3481
03:52:25,320 --> 03:52:25,920
Okay.

3482
03:52:26,040 --> 03:52:29,200
So Obama was saying 6000.

3483
03:52:30,600 --> 03:52:33,880
Why is it clear why you are getting 90?

3484
03:52:34,000 --> 03:52:35,120
No, no, not 60.

3485
03:52:35,120 --> 03:52:37,560
Is it clear now
or do you want me to explain it?

3486
03:52:38,640 --> 03:52:41,280
Actually,
we have taken the number in here as well.

3487
03:52:41,520 --> 03:52:47,120
Again, why after this line,
the value is 40, not ten.

3488
03:52:47,440 --> 03:52:48,880
Okay. Looking okay.

3489
03:52:50,880 --> 03:52:53,640
All right, guys So you guys understand

3490
03:52:53,640 --> 03:53:00,720
how variables, values can be updated.

3491
03:53:00,720 --> 03:53:02,840
So let me store of books.

3492
03:53:03,000 --> 03:53:05,280
Let me call back.

3493
03:53:05,280 --> 03:53:09,440
Be well, you've been invaded
and this time let me say

3494
03:53:09,440 --> 03:53:12,000
a number is equal to number

3495
03:53:13,280 --> 03:53:15,200
minus number.

3496
03:53:15,200 --> 03:53:18,360
Okay.

3497
03:53:18,360 --> 03:53:22,800
And then let me print out today.

3498
03:53:22,800 --> 03:53:26,560
So what answer I will get nowadays.

3499
03:53:26,560 --> 03:53:27,960
Zero. Right?

3500
03:53:27,960 --> 03:53:30,960
So ten minus ten is zero, right?

3501
03:53:31,080 --> 03:53:37,280
Then -20 zero.

3502
03:53:37,280 --> 03:53:39,480
Okay, Stop me. Stop me right there.

3503
03:53:39,480 --> 03:53:43,400
If anyone of you is confused
about these things,

3504
03:53:43,840 --> 03:53:47,520
you will be using them a lot
throughout your getting it okay.

3505
03:53:48,440 --> 03:53:49,840
Heavily in loops.

3506
03:53:49,840 --> 03:53:54,120
Loops are very widely used.

3507
03:53:54,120 --> 03:53:57,960
Okay, let me store number ten

3508
03:53:58,040 --> 03:54:02,720
back in here.

3509
03:54:02,720 --> 03:54:03,240
Okay.

3510
03:54:03,800 --> 03:54:06,920
And this time let me do

3511
03:54:07,120 --> 03:54:10,360
number is equal to number

3512
03:54:11,680 --> 03:54:15,040
multiplied by.

3513
03:54:15,040 --> 03:54:15,840
So we're doing guys thing.

3514
03:54:15,840 --> 03:54:21,080
What will be the answer in here
if I say number again,

3515
03:54:21,080 --> 03:54:27,680
it's under track.

3516
03:54:27,680 --> 03:54:31,920
And if I say individual
word answer, I will get

3517
03:54:35,320 --> 03:54:36,200
excellent,

3518
03:54:36,200 --> 03:54:54,120
super simple.

3519
03:54:54,120 --> 03:54:57,120
Let me score number

3520
03:54:57,120 --> 03:54:59,080
then back in here.

3521
03:54:59,080 --> 03:55:02,360
So as we have again, we go a little slow.

3522
03:55:02,360 --> 03:55:04,560
I cannot catch you. Yes, I see.

3523
03:55:04,800 --> 03:55:06,640
You guys can always stop me.

3524
03:55:06,640 --> 03:55:08,760
Let me know when you have time to score.

3525
03:55:09,000 --> 03:55:11,040
It's very important.

3526
03:55:11,040 --> 03:55:14,320
I know a normal human can not type

3527
03:55:14,320 --> 03:55:18,280
and then listen and can understand
all of that in the same time.

3528
03:55:18,360 --> 03:55:24,240
So you guys can always talk me.

3529
03:55:24,240 --> 03:55:27,160
We can't catch you at all. Even me.

3530
03:55:27,160 --> 03:55:28,600
It does not stop you.

3531
03:55:28,600 --> 03:55:31,680
It slows you. So guys.

3532
03:55:31,680 --> 03:55:34,480
So you guys have to tell me if I am going
fast, right?

3533
03:55:34,560 --> 03:55:35,640
Otherwise, I will not.

3534
03:55:35,640 --> 03:55:39,520
I will never know
if you guys are unable to catch me.

3535
03:55:39,520 --> 03:55:49,800
You guys have to stop.

3536
03:55:49,800 --> 03:55:52,200
So Alex is saying don't go slower.

3537
03:55:53,520 --> 03:55:53,920
Okay?

3538
03:55:53,920 --> 03:55:56,680
Maybe things are boring for Alex

3539
03:56:12,840 --> 03:56:16,160
ten times rapidly.

3540
03:56:16,160 --> 03:56:22,240
It's too much.

3541
03:56:22,240 --> 03:56:26,400
So ten times repeated it's too much.

3542
03:56:26,760 --> 03:56:29,520
Okay, so, Alex, maybe do you have

3543
03:56:29,520 --> 03:56:33,480
some programing background.

3544
03:56:33,480 --> 03:56:35,880
Pretty much we doing math

3545
03:56:35,960 --> 03:56:40,160
with the value of variable, which is in
this case is a representative.

3546
03:56:40,160 --> 03:56:41,720
But then

3547
03:56:42,280 --> 03:56:44,000
okay, then maybe, maybe you are good

3548
03:56:44,000 --> 03:56:47,040
with computers and programing and

3549
03:56:47,040 --> 03:56:49,680
if you do, that's also good.

3550
03:56:50,040 --> 03:56:54,480
So guys, if you have time
and you can spend like

3551
03:56:55,400 --> 03:56:59,280
10 to 15 minutes,
maybe you should try to use YouTube

3552
03:56:59,280 --> 03:57:02,400
or Google or other sources to to learn

3553
03:57:02,400 --> 03:57:06,840
about programing.

3554
03:57:06,840 --> 03:57:10,520
It will help you a lot because

3555
03:57:11,200 --> 03:57:12,920
let me tell you this, 80

3556
03:57:12,920 --> 03:57:15,720
to 90% of the times on

3557
03:57:16,080 --> 03:57:18,440
on your jobs while doing programing,

3558
03:57:18,880 --> 03:57:22,040
you guys will be using StackOverflow
or Google

3559
03:57:22,280 --> 03:57:27,640
to find out solutions to find out
about the issues that you will be facing.

3560
03:57:27,840 --> 03:57:30,000
So it's a very important technique.

3561
03:57:30,000 --> 03:57:33,360
It's a very important tool
to have in your toolbox.

3562
03:57:33,360 --> 03:57:36,360
Okay, who knows how to search

3563
03:57:36,360 --> 03:57:39,800
material on Google
or how to find resources online.

3564
03:57:39,800 --> 03:57:41,520
It will help you a lot.

3565
03:57:41,520 --> 03:57:43,680
We can also discuss it with each other.

3566
03:57:43,680 --> 03:57:45,840
Yes, definitely. Guys try to have

3567
03:57:46,920 --> 03:57:49,360
groups,
try to create groups with each other.

3568
03:57:49,360 --> 03:57:51,600
Try to discuss things with each other.

3569
03:57:52,160 --> 03:57:53,480
And let me tell you this.

3570
03:57:53,480 --> 03:57:56,560
This network of

3571
03:57:56,560 --> 03:57:58,800
videos is it can be

3572
03:58:00,040 --> 03:58:02,080
very beneficial for you in future.

3573
03:58:02,600 --> 03:58:05,400
So let's say, for example,

3574
03:58:05,400 --> 03:58:08,920
some of you get good jobs in in Google,

3575
03:58:08,920 --> 03:58:12,400
Amazon or Tesla
or in some other companies.

3576
03:58:12,400 --> 03:58:13,120
Right.

3577
03:58:13,280 --> 03:58:16,200
And let's say
if they have some kind of openings

3578
03:58:16,600 --> 03:58:19,840
and if you guys are if guys

3579
03:58:22,120 --> 03:58:23,520
have friends,

3580
03:58:23,520 --> 03:58:27,200
so maybe you can recommend each other
for good positions.

3581
03:58:27,200 --> 03:58:27,720
Right?

3582
03:58:27,720 --> 03:58:30,560
So let's say some of you get a degree

3583
03:58:30,600 --> 03:58:34,080
and and some of you will be getting 120.

3584
03:58:34,560 --> 03:58:38,560
And if you guys have this relationship
with each other,

3585
03:58:38,560 --> 03:58:42,240
if you guys are friends of each other,
you can always read for each other.

3586
03:58:42,240 --> 03:58:42,960
Right?

3587
03:58:43,080 --> 03:58:46,880
It will really boost your career.

3588
03:58:46,880 --> 03:58:49,320
Ask how to do your name seven times.

3589
03:58:49,320 --> 03:58:50,680
It's not really normal.

3590
03:58:51,960 --> 03:58:54,120
So, Alexa, think about me.

3591
03:58:54,120 --> 03:58:56,640
If you are on my position, I know.

3592
03:58:56,640 --> 03:58:58,200
What will you do with these students?

3593
03:58:58,200 --> 03:59:02,960
If they are asking you to seven times to.

3594
03:59:02,960 --> 03:59:03,800
To tell.

3595
03:59:03,800 --> 03:59:06,240
To tell them how to rename something.

3596
03:59:07,320 --> 03:59:07,800
Please.

3597
03:59:07,800 --> 03:59:12,960
If anyone get a job in Tesla,
you out from class,

3598
03:59:14,000 --> 03:59:18,120
please refer to me.

3599
03:59:18,120 --> 03:59:21,000
Why I cannot in

3600
03:59:21,000 --> 03:59:52,000
the last line.

3601
03:59:52,000 --> 03:59:55,680
So Mustafa, try to write, click

3602
03:59:56,000 --> 03:59:59,200
and then click on Daniel code
and then shared a screenshot.

3603
03:59:59,400 --> 04:00:01,920
You should be getting the last line
as the output

3604
04:00:15,080 --> 04:00:19,040
or you are printing on the same line

3605
04:00:23,160 --> 04:00:24,200
ten years later.

3606
04:00:24,200 --> 04:00:24,960
Hello. Who?

3607
04:00:24,960 --> 04:00:25,640
I am sorry.

3608
04:00:25,640 --> 04:00:29,840
We're doing it from Orlando.

3609
04:00:29,840 --> 04:00:33,000
So let's let's, let's move forward.

3610
04:00:35,000 --> 04:00:37,520
So as we have that

3611
04:00:37,520 --> 04:00:40,640
plus plus operator that increment

3612
04:00:40,680 --> 04:00:45,920
the value of a variable via one,
we also have that decrement.

3613
04:00:45,920 --> 04:00:48,360
Operator. We also have a decrement.

3614
04:00:48,360 --> 04:00:54,920
So let's say if we have a number ten
and if I want to decrement value by a one,

3615
04:00:54,920 --> 04:00:57,880
then I will write two minus signs

3616
04:00:58,280 --> 04:01:02,040
after that number.

3617
04:01:02,040 --> 04:01:05,440
And then if I say yes, I'll

3618
04:01:07,680 --> 04:01:10,240
then I will get

3619
04:01:13,480 --> 04:01:17,520
nine because ten DICLEMENTE
two by one is nine.

3620
04:01:17,960 --> 04:01:20,880
Okay, So same as plus

3621
04:01:20,880 --> 04:01:23,520
plus that increments the value by one.

3622
04:01:24,160 --> 04:01:26,640
It decrements devalue the minus minus

3623
04:01:26,880 --> 04:01:30,880
DiClemente material.

3624
04:01:30,880 --> 04:01:35,600
And let's try to check
if we have multiplication.

3625
04:01:35,600 --> 04:01:37,360
Multiplication. Operator Okay.

3626
04:01:37,360 --> 04:01:40,400
So as soon as have less plus, minus,

3627
04:01:40,400 --> 04:01:43,400
minus, let's, let's check
if we have multiply multiply.

3628
04:01:44,280 --> 04:01:48,840
So if I say multiply multiply,
I get then add it.

3629
04:01:49,200 --> 04:01:52,400
Okay,
That means it is not supported by Java.

3630
04:01:52,680 --> 04:01:53,520
Okay, Multiply.

3631
04:01:53,520 --> 04:01:57,080
Multiply is not supported by Java

3632
04:02:04,240 --> 04:02:07,600
and then left by total number.

3633
04:02:08,400 --> 04:02:10,720
Divide. Divide number. Division. Division.

3634
04:02:11,120 --> 04:02:13,720
Okay. Yeah. It is also not possible.

3635
04:02:14,200 --> 04:02:23,560
It's also not possible.

3636
04:02:23,560 --> 04:02:27,240
And if we see modulus modulus, okay.

3637
04:02:27,360 --> 04:02:30,240
Or even a single modulus, it is also not

3638
04:02:30,240 --> 04:02:37,600
allowed.

3639
04:02:37,600 --> 04:02:38,160
Not allowed.

3640
04:02:39,120 --> 04:02:42,360
Yes. Only plus and only increment

3641
04:02:42,760 --> 04:02:51,600
only decrement.

3642
04:02:51,600 --> 04:02:52,440
All right.

3643
04:02:53,120 --> 04:02:53,720
Any questions?

3644
04:02:53,720 --> 04:03:01,160
Right.

3645
04:03:01,160 --> 04:03:03,360
Next, let's learn something new.

3646
04:03:04,840 --> 04:03:36,240
Let's create one more class.

3647
04:03:36,240 --> 04:03:39,960
So let's declare again they and be able

3648
04:03:40,040 --> 04:03:41,440
volunteer

3649
04:03:45,520 --> 04:03:48,760
in their store and in here.

3650
04:03:48,760 --> 04:03:51,240
So we learned that

3651
04:03:51,240 --> 04:03:55,480
when we do, number is equal to number

3652
04:03:55,920 --> 04:04:00,240
plus one,

3653
04:04:00,240 --> 04:04:03,720
why can't increment
plus one when you do number

3654
04:04:03,720 --> 04:04:06,360
plus number plus number plus plus plus.

3655
04:04:08,160 --> 04:04:10,920
So do you mean you are to give me one?

3656
04:04:11,840 --> 04:04:14,320
Remind me after this example,
I will explain this to you.

3657
04:04:15,000 --> 04:04:19,520
So if I am doing something,
if I, if I doing this

3658
04:04:19,680 --> 04:04:22,600
and if I am doing this,

3659
04:04:22,600 --> 04:04:24,200
am I doing the same things or

3660
04:04:24,200 --> 04:04:45,600
am I doing different things?

3661
04:04:45,600 --> 04:04:49,400
So this thing that I
am doing in here, I am saying

3662
04:04:50,640 --> 04:04:52,920
whatever value is stored,

3663
04:04:52,920 --> 04:04:58,200
add one to it
and updated contents of number.

3664
04:04:58,200 --> 04:04:59,000
Right?

3665
04:04:59,400 --> 04:05:03,240
And the second thing I am again
saying increment the value by one.

3666
04:05:04,120 --> 04:05:04,840
Right?

3667
04:05:05,200 --> 04:05:08,080
So they are same in here.

3668
04:05:08,080 --> 04:05:11,280
Value will be maintained
by one in here as well.

3669
04:05:11,280 --> 04:05:13,400
The value will be implemented by one.

3670
04:05:13,400 --> 04:05:14,280
Right.

3671
04:05:15,040 --> 04:05:20,200
So if I,

3672
04:05:20,200 --> 04:05:22,560
if I printout it

3673
04:05:25,080 --> 04:05:27,440
and if I bring this out of course

3674
04:05:27,480 --> 04:05:28,680
in here

3675
04:05:34,080 --> 04:05:35,400
again, same address

3676
04:05:35,400 --> 04:05:38,280
then incrementing by 1 to 11,

3677
04:05:39,120 --> 04:05:42,240
then incremented by 1 to 12.

3678
04:05:42,360 --> 04:05:44,200
Okay, so they are same thing.

3679
04:05:44,200 --> 04:05:47,320
So this this number plus plus.

3680
04:05:48,320 --> 04:05:50,520
So you can't do both at once.

3681
04:05:52,080 --> 04:05:54,720
Give me we can do both at once as well.

3682
04:05:54,840 --> 04:05:55,360
Okay.

3683
04:05:55,360 --> 04:05:56,640
But there actually are a loss.

3684
04:05:56,640 --> 04:05:58,440
I don't want to confuse you.

3685
04:05:58,440 --> 04:06:02,960
There is a there is a concept of pre
increment and post increment.

3686
04:06:03,600 --> 04:06:07,200
So you are right now trying to use that
in your in that example.

3687
04:06:07,320 --> 04:06:10,760
I will actually show you
it on, on the review class.

3688
04:06:10,960 --> 04:06:15,040
Think that's why I'm not discussing it
with you the step by step.

3689
04:06:15,040 --> 04:06:15,640
Okay.

3690
04:06:15,680 --> 04:06:17,400
But if I forget to remind me.

3691
04:06:17,400 --> 04:06:18,800
Okay, I will definitely tell you.

3692
04:06:20,280 --> 04:06:22,760
So guys they are actually same things.

3693
04:06:23,280 --> 04:06:24,800
This plus plus operator.

3694
04:06:24,800 --> 04:06:30,480
It's actually a short divergence
of achieving same result when we do this.

3695
04:06:30,920 --> 04:06:31,560
Okay.

3696
04:06:31,560 --> 04:06:34,160
So that's why they are called
shorthand operators.

3697
04:06:34,400 --> 04:06:41,200
But in here, if I say plus two

3698
04:06:41,360 --> 04:06:50,120
instead of plus one, if I say plus two,
am I still doing the same thing? No.

3699
04:06:50,160 --> 04:06:53,800
Right.
So now I am not doing the same thing.

3700
04:06:53,800 --> 04:06:58,360
In this example,
I Am incrementing the value by two

3701
04:06:59,400 --> 04:07:02,960
in here
I am incrementing the value by like,

3702
04:07:03,040 --> 04:07:05,520
okay, so this

3703
04:07:11,280 --> 04:07:14,800
so this is actually a shorthand of

3704
04:07:17,600 --> 04:07:19,080
this is actually

3705
04:07:19,080 --> 04:07:22,120
a little shorter way of

3706
04:07:23,320 --> 04:07:24,480
doing this.

3707
04:07:24,480 --> 04:07:28,200
I can look right this.

3708
04:07:28,200 --> 04:07:31,240
So this plus plus is actually a shorter

3709
04:07:31,240 --> 04:07:34,200
way of doing a number is equal to number
plus one.

3710
04:07:34,280 --> 04:07:35,000
Okay.

3711
04:07:35,560 --> 04:07:40,040
Now if I am in incrementing the value
of a variable

3712
04:07:40,320 --> 04:07:43,200
by number two or three

3713
04:07:43,200 --> 04:07:47,160
or four or any other number
other than one, then you run it

3714
04:07:47,160 --> 04:07:55,120
with to see what happens, you should. So

3715
04:07:56,080 --> 04:07:58,360
ten was incremented to 12.

3716
04:07:58,360 --> 04:08:00,440
It was incremented by two.

3717
04:08:00,440 --> 04:08:02,680
Then we incremented it by one. Okay.

3718
04:08:02,760 --> 04:08:05,280
So in one case
we are incrementing it by two.

3719
04:08:05,760 --> 04:08:08,360
In the other case
we are implementing it only by one.

3720
04:08:08,440 --> 04:08:10,520
Okay. So then they are different.

3721
04:08:10,520 --> 04:08:16,720
It is clear. Yes.

3722
04:08:16,720 --> 04:08:28,800
Plus plus only increments by one. Yes.

3723
04:08:28,960 --> 04:08:29,560
When we will.

3724
04:08:29,560 --> 04:08:32,880
Oh I am coming to that point
which is like number two.

3725
04:08:33,440 --> 04:08:37,280
So if I am doing something like this

3726
04:08:41,320 --> 04:08:44,120
if I am incrementing the value.

3727
04:08:44,680 --> 04:08:47,160
So let's say I stored ten in here

3728
04:08:49,760 --> 04:08:52,640
and if I say number is equal to number

3729
04:08:52,920 --> 04:08:55,400
plus, let's say I may be 30, Right.

3730
04:08:56,160 --> 04:09:01,080
So is it also possible that we have
some kind of shortcut for this?

3731
04:09:01,320 --> 04:09:02,000
Okay.

3732
04:09:02,000 --> 04:09:05,280
So yes, as we have this shortcut

3733
04:09:06,240 --> 04:09:07,040
to achieve the

3734
04:09:07,040 --> 04:09:09,480
same result, but in a shorter syntax,

3735
04:09:10,280 --> 04:09:12,400
we have a shortcut

3736
04:09:12,720 --> 04:09:15,840
to achieve this in a shorter syntax
as well.

3737
04:09:16,040 --> 04:09:16,520
Right.

3738
04:09:16,680 --> 04:09:19,200
And that shorter syntax is number

3739
04:09:19,600 --> 04:09:22,560
plus equal to 30.

3740
04:09:23,680 --> 04:09:26,160
It's the same

3741
04:09:26,320 --> 04:09:28,480
as doing this.

3742
04:09:28,480 --> 04:09:31,320
It's the same as playing this. Okay.

3743
04:09:31,840 --> 04:09:34,000
This is called plus equal to operator.

3744
04:09:35,040 --> 04:09:37,720
So if you are only implementing the value

3745
04:09:37,720 --> 04:09:40,200
by one, you can use this sort of syntax.

3746
04:09:40,800 --> 04:09:43,760
If you are ending the value
by some bigger number,

3747
04:09:44,160 --> 04:09:46,520
maybe 1 to 10000 million,

3748
04:09:46,960 --> 04:09:49,680
you can use the shorter syntax,

3749
04:09:49,680 --> 04:09:54,320
but this time instead of
plus plus you will say plus

3750
04:09:54,960 --> 04:10:00,160
equal to and the number by which
you want to increment your variable.

3751
04:10:00,560 --> 04:10:01,160
Okay.

3752
04:10:01,160 --> 04:10:05,440
So in here by how much
I am incrementing my variable dice

3753
04:10:07,720 --> 04:10:08,520
initially, how

3754
04:10:08,520 --> 04:10:12,560
I had been by
how much I incremented the value in here

3755
04:10:14,360 --> 04:10:18,280
part B so then incrementing by 30 will be

3756
04:10:20,720 --> 04:10:25,200
40, right? 40.

3757
04:10:25,200 --> 04:10:29,400
And if I implement the 40 again

3758
04:10:29,600 --> 04:10:34,280
by 30 using this shorter syntax,
what answer

3759
04:10:34,320 --> 04:10:35,840
I will get. Now

3760
04:10:38,960 --> 04:10:46,160
78. So I get 70.

3761
04:10:46,560 --> 04:10:49,840
So they are just shorter
ways of doing the same things,

3762
04:10:50,040 --> 04:10:53,000
get shorter ways of doing the same thing.

3763
04:10:53,000 --> 04:10:57,840
When I say number plus number 30,
instead of writing the longer syntax,

3764
04:10:57,840 --> 04:11:03,120
I can see a number plus equal to 30
short of syntax of doing the same thing.

3765
04:11:03,960 --> 04:11:06,480
Is it confusing guys, or is it easy

3766
04:11:06,480 --> 04:11:14,800
to understand?

3767
04:11:14,800 --> 04:11:15,840
Easy right?

3768
04:11:15,840 --> 04:11:18,960
When I say plus plus, increment
the value by one.

3769
04:11:19,440 --> 04:11:22,880
When I say plus equal to
and then I specify

3770
04:11:22,880 --> 04:11:27,080
a number, increment
the value of that variable by that number

3771
04:11:28,440 --> 04:11:30,360
mine is 72.

3772
04:11:30,360 --> 04:11:32,880
Can you share the screenshot

3773
04:11:34,080 --> 04:11:35,640
also in the sports channel?

3774
04:11:35,640 --> 04:11:39,000
Sheeba, I will help you out.

3775
04:11:39,000 --> 04:11:39,760
All right.

3776
04:11:39,800 --> 04:11:43,080
Now, now let's try to understand

3777
04:11:43,360 --> 04:11:49,400
when you don't make the instructions
system, don't out print.

3778
04:11:49,400 --> 04:11:53,040
It will not show,
but the instruction is stored in Java.

3779
04:11:53,040 --> 04:11:53,880
Right?

3780
04:11:54,040 --> 04:11:59,480
Is there any instance where you are
would not need to print a line?

3781
04:11:59,520 --> 04:12:00,480
Yes, certainly not.

3782
04:12:00,480 --> 04:12:03,880
There will be a lot of instances
when you will not be printing a value,

3783
04:12:04,960 --> 04:12:06,960
but you will still be doing
the calculations

3784
04:12:08,840 --> 04:12:09,840
you guys will learn about.

3785
04:12:09,840 --> 04:12:13,160
Just just wait for the,
I guess, next class.

3786
04:12:13,160 --> 04:12:17,240
Also, you will learn about that.

3787
04:12:17,240 --> 04:12:17,640
Okay.

3788
04:12:17,640 --> 04:12:20,600
So guys, with this plus plus

3789
04:12:21,880 --> 04:12:25,320
incrementing the value
by one, incrementing the value by one,

3790
04:12:25,320 --> 04:12:29,840
it was possible,
but multiplying the value by one or two

3791
04:12:29,880 --> 04:12:33,840
in dividing the value by one,
it was not possible using that plus plus.

3792
04:12:33,840 --> 04:12:34,600
Right.

3793
04:12:34,800 --> 04:12:36,200
Using that plus plus.

3794
04:12:36,200 --> 04:12:39,120
So I cannot say number multiply. Multiply.

3795
04:12:39,160 --> 04:12:41,400
I cannot say number.
Divide, divide. Right.

3796
04:12:41,800 --> 04:12:44,160
So in here somewhere I show you

3797
04:12:44,880 --> 04:12:48,080
in the last example, I guess

3798
04:12:50,920 --> 04:12:54,040
we do that example here.

3799
04:12:54,040 --> 04:12:57,320
So number multiply, multiply not allowed,

3800
04:12:57,360 --> 04:13:00,160
number divide by let's try to out

3801
04:13:00,760 --> 04:13:06,120
if we have something for this shorter
margin in here as that so far

3802
04:13:06,160 --> 04:13:12,560
this operator plus plus and minus
I cannot do multiply multiply and divide

3803
04:13:12,560 --> 04:13:17,160
to at least by to check
if I can do this ten in the multiplication

3804
04:13:17,160 --> 04:13:22,720
and division.

3805
04:13:22,720 --> 04:13:25,760
So let me store number ten back

3806
04:13:27,360 --> 04:13:29,520
and let me try to do number

3807
04:13:30,320 --> 04:13:35,160
minus equal to fight.

3808
04:13:35,160 --> 04:13:37,800
So tell me the output base
what output I will get

3809
04:13:42,880 --> 04:13:44,440
like five right?

3810
04:13:44,440 --> 04:13:48,760
I am saying decrement
the value of this number by five.

3811
04:13:48,920 --> 04:13:52,720
Right.

3812
04:13:52,720 --> 04:13:55,600
So I am left with five.

3813
04:13:55,600 --> 04:13:59,640
Let me check
if it is if it is possible to do the same.

3814
04:14:00,120 --> 04:14:03,520
But instead of minus
instead of subtraction,

3815
04:14:03,960 --> 04:14:07,040
let me check if it is possible
to do the multiplication.

3816
04:14:07,560 --> 04:14:11,920
So I store number ten back.

3817
04:14:11,920 --> 04:14:13,400
I say in number

3818
04:14:14,520 --> 04:14:19,480
multiply equal to five.

3819
04:14:19,480 --> 04:14:21,880
I am not getting any errors.

3820
04:14:21,880 --> 04:14:23,880
That means it is allowed. Right.

3821
04:14:24,480 --> 04:14:26,520
But let's see what output I will get.

3822
04:14:27,000 --> 04:14:31,240
I will get three results as 50.

3823
04:14:31,360 --> 04:14:31,800
Right.

3824
04:14:31,800 --> 04:14:38,160
Then multiply it by 5055.

3825
04:14:38,880 --> 04:14:42,840
Let's try to do the same file division.

3826
04:14:43,440 --> 04:14:46,480
If it is allowed for the same 50

3827
04:14:46,480 --> 04:14:48,720
so and

3828
04:14:48,720 --> 04:14:51,240
divide by five.

3829
04:14:51,600 --> 04:14:56,040
So what answer I will get right.

3830
04:14:56,040 --> 04:15:00,520
So right.

3831
04:15:00,520 --> 04:15:02,680
So I get two. Okay.

3832
04:15:02,680 --> 04:15:06,080
So it is allowed with the multiplication.

3833
04:15:06,080 --> 04:15:11,360
It is also allowed for division and it is
also allowed for subtraction addition,

3834
04:15:11,760 --> 04:15:17,040
but incrementing by one and discriminating
by one using plus plus minus minus.

3835
04:15:17,040 --> 04:15:20,480
It is only allowed with minus
and plus not with multiply.

3836
04:15:20,480 --> 04:15:21,480
And do we

3837
04:15:23,360 --> 04:15:26,000
are there any question this

3838
04:15:26,760 --> 04:15:28,200
or I would think is clear

3839
04:15:28,200 --> 04:15:45,720
you guys just need practice.

3840
04:15:45,720 --> 04:15:46,320
All right.

3841
04:15:46,320 --> 04:15:52,600
Let's let's let me check
if we are missing something. So

3842
04:15:53,600 --> 04:15:54,760
all we have

3843
04:15:54,760 --> 04:15:57,520
we have forgot about the remainder.

3844
04:15:57,520 --> 04:16:01,400
Next, try to build the remainder as the

3845
04:16:09,560 --> 04:16:11,080
quote answer.

3846
04:16:11,080 --> 04:16:14,880
I will get two days for the remainder. One

3847
04:16:15,520 --> 04:16:16,280
zero.

3848
04:16:16,280 --> 04:16:17,000
Right.

3849
04:16:17,000 --> 04:16:20,600
Easy peasy.

3850
04:16:20,600 --> 04:16:26,760
So I can do this with the maintenance.

3851
04:16:26,760 --> 04:16:30,400
So a shorthand operator is a shorter way

3852
04:16:30,400 --> 04:16:33,680
to express something
that is already available in.

3853
04:16:33,680 --> 04:16:34,640
Java programing.

3854
04:16:34,640 --> 04:16:38,760
Okay, so you clear,
but give us five minute to copy the code.

3855
04:16:39,120 --> 04:16:40,160
Yes, sure.

3856
04:16:40,440 --> 04:16:43,880
So let me name

3857
04:16:46,040 --> 04:16:48,280
this.

3858
04:16:48,280 --> 04:16:48,680
Yeah.

3859
04:16:49,080 --> 04:17:51,880
And let me know what
you guys have copied it.

3860
04:17:51,920 --> 04:18:07,160
We know once you guys are done
writing this,

3861
04:18:07,160 --> 04:18:10,320
then let's go to slide.

3862
04:18:10,640 --> 04:18:14,080
And guys, when I am painting something,

3863
04:18:15,480 --> 04:18:18,720
don't focus on typing that with me, okay?

3864
04:18:19,080 --> 04:18:24,000
Always focus on what I am saying
because you can get all of this code

3865
04:18:24,000 --> 04:18:28,040
from canvas, you can get all the notes
from canvas, you will have recordings,

3866
04:18:28,360 --> 04:18:31,960
but if you miss some contact concepts,
then that's important.

3867
04:18:32,200 --> 04:18:35,760
If some if you are unable to type
something, if you are unable to follow me,

3868
04:18:35,760 --> 04:18:37,840
just leave it there, okay? No issues.

3869
04:18:37,840 --> 04:18:39,320
You can practice it later.

3870
04:18:39,320 --> 04:18:40,720
You can fold it up.

3871
04:18:40,720 --> 04:18:43,080
But focus on how much.

3872
04:18:43,160 --> 04:18:44,280
Focus on what I am saying.

3873
04:18:44,280 --> 04:18:46,880
How do you create this
second window in the case?

3874
04:18:47,640 --> 04:18:51,320
Okay,
so if you want to create multiple windows

3875
04:18:53,200 --> 04:18:54,000
in here,

3876
04:18:54,000 --> 04:18:56,480
so let's
say you have two classes opened in here

3877
04:18:57,120 --> 04:19:00,120
and you want to split the day view,
you can just drag it

3878
04:19:02,200 --> 04:19:04,440
and you can place it

3879
04:19:04,440 --> 04:19:11,160
in the second window like this.

3880
04:19:11,160 --> 04:19:12,960
That's how you split it.

3881
04:19:12,960 --> 04:19:17,560
So let's check if we are missing
something from this slide.

3882
04:19:17,560 --> 04:19:20,960
So a shorthand operator is a shortcut way
to express

3883
04:19:20,960 --> 04:19:24,040
something
that is already available in upload on me.

3884
04:19:24,160 --> 04:19:26,880
If you are you,
you can already do something

3885
04:19:27,960 --> 04:19:30,440
in the longer, longer way.

3886
04:19:30,440 --> 04:19:30,960
Right.

3887
04:19:30,960 --> 04:19:35,560
So guys have created some shortcuts
for you that you can use there.

3888
04:19:35,640 --> 04:19:39,480
They are called shorthand.

3889
04:19:39,480 --> 04:19:40,760
Shorthand operations.

3890
04:19:40,760 --> 04:19:44,480
Do not any feed add
any feature to Java programing language.

3891
04:19:44,480 --> 04:19:44,920
Look at them.

3892
04:19:44,920 --> 04:19:48,200
They are just making your life
a little easier by introducing this

3893
04:19:48,200 --> 04:19:54,800
shorter operator.

3894
04:19:54,800 --> 04:19:55,880
All right. So

3895
04:19:56,880 --> 04:19:57,440
with your

3896
04:19:57,440 --> 04:20:03,000
wrappers, you will
also be getting direct homework from me.

3897
04:20:03,000 --> 04:20:08,360
Okay, so I will be posting these homeworks
in the course on our Smart Channel

3898
04:20:08,800 --> 04:20:13,520
and I want you to complete these
before coming to the next class.

3899
04:20:13,520 --> 04:20:14,160
Okay?

3900
04:20:14,320 --> 04:20:15,960
And then in the next class.

3901
04:20:15,960 --> 04:20:19,800
First, I will revise all of the concepts
that I have taught

3902
04:20:20,480 --> 04:20:25,120
and then I will solve
these homeworks for you so that you guys

3903
04:20:25,120 --> 04:20:30,080
can compare your solutions with mine
and you can find out if you have done it

3904
04:20:30,880 --> 04:20:33,960
in the proper way
or not yet before tomorrow.

3905
04:20:35,640 --> 04:20:36,720
So don't worry.

3906
04:20:36,720 --> 04:20:39,320
If you are unable to solve
some of the homeworks,

3907
04:20:41,000 --> 04:20:41,600
it's fine.

3908
04:20:41,600 --> 04:20:43,000
And one more thing guys.

3909
04:20:43,000 --> 04:20:45,840
Let's say, for example,

3910
04:20:45,840 --> 04:20:47,880
the instructions are not clear.

3911
04:20:47,880 --> 04:20:50,640
So you are trying to read something
and it is not making sense.

3912
04:20:50,640 --> 04:20:52,920
You are unable to understand what to do.

3913
04:20:53,520 --> 04:20:56,280
Are you updated
the due date for the homework?

3914
04:20:57,000 --> 04:20:59,920
No, I will be updating them later on.

3915
04:21:00,240 --> 04:21:01,720
Okay. So don't worry about that.

3916
04:21:03,480 --> 04:21:04,280
Who is going to be

3917
04:21:04,280 --> 04:21:07,280
instructor tomorrow as is?

3918
04:21:07,280 --> 04:21:10,880
Yes, she has got the code
I just confirmed with her.

3919
04:21:11,480 --> 04:21:16,440
And even though I guess he was vaccinated,
but each day she's

3920
04:21:16,760 --> 04:21:19,640
she is saying that she is getting
some kind of new symptoms.

3921
04:21:19,640 --> 04:21:21,120
So I don't know.

3922
04:21:21,120 --> 04:21:23,600
I'll bear discoveries.

3923
04:21:23,600 --> 04:21:26,560
I will just say, you guys, please be safe.

3924
04:21:26,560 --> 04:21:27,000
Okay?

3925
04:21:27,000 --> 04:21:29,640
Don't get that clever thing you should do.

3926
04:21:29,640 --> 04:21:30,920
She is getting new symptoms.

3927
04:21:30,920 --> 04:21:36,360
I think she will need an extra
one more week to get until to recover.

3928
04:21:36,360 --> 04:21:39,240
So please try to stay at cold.

3929
04:21:39,360 --> 04:21:41,040
Try to be safe.

3930
04:21:41,040 --> 04:21:41,640
All right, guys.

3931
04:21:41,640 --> 04:21:43,320
So I was saying,

3932
04:21:44,080 --> 04:21:46,160
if something if

3933
04:21:46,160 --> 04:21:48,920
if there is a confusion,
if something is not clear,

3934
04:21:49,680 --> 04:21:52,480
you can send you can write it
in this syntax for channel.

3935
04:21:52,480 --> 04:21:55,320
Maybe you you can say their task
that I don't understand.

3936
04:21:55,320 --> 04:21:56,360
What do you mean?

3937
04:21:56,360 --> 04:21:57,600
Write a Java program?

3938
04:21:57,600 --> 04:22:00,000
I don't understand
what is meant by Java program.

3939
04:22:00,000 --> 04:22:02,240
Can you please clarify that? Okay.

3940
04:22:02,240 --> 04:22:06,240
So if statement is not clear,
if there is any ambiguity in that,

3941
04:22:06,240 --> 04:22:10,560
you can always post in this
and try to complete them before class.

3942
04:22:11,520 --> 04:22:16,280
Is it possible to get the media files
from this class when I will be available?

3943
04:22:16,480 --> 04:22:20,760
Yes. The video files are already available
on the canvas.

3944
04:22:20,880 --> 04:22:21,320
Sandy.

3945
04:22:22,440 --> 04:22:24,760
The PDF files The North Beach

3946
04:22:24,760 --> 04:22:27,480
Java Code recording
Everything is available.

3947
04:22:29,040 --> 04:22:30,480
Where do we post homework?

3948
04:22:30,480 --> 04:22:35,120
So Alona, you post your homeworks
in the syntax student channel.

3949
04:22:35,120 --> 04:22:37,480
Then I will go to those homeworks.

3950
04:22:37,480 --> 04:22:40,720
Then I will solve those homeworks again
during the class

3951
04:22:40,840 --> 04:22:46,040
and then you guys
can compare your situation with mine.

3952
04:22:46,040 --> 04:23:28,080
So let me post work in the course
and answer questions.

3953
04:23:28,080 --> 04:23:29,040
Okay,

3954
04:23:30,120 --> 04:23:32,560
So spin class

3955
04:23:32,680 --> 04:23:35,880
string concatenation arithmetic operators.

3956
04:23:35,880 --> 04:23:39,120
Okay, There is one more thing
that I want to show you that is important

3957
04:23:41,880 --> 04:23:44,240
and that can also confuse you.

3958
04:23:44,240 --> 04:23:59,840
So. So those tell me

3959
04:24:03,040 --> 04:24:04,520
if I do this.

3960
04:24:04,520 --> 04:24:06,600
And plus, then

3961
04:24:07,680 --> 04:24:08,760
first

3962
04:24:12,880 --> 04:24:15,320
and I'll put out what I mean that

3963
04:24:17,760 --> 04:24:20,040
yes, you guys have to post in export

3964
04:24:20,040 --> 04:24:21,040
earnings that

3965
04:24:41,880 --> 04:24:43,360
what about the second line

3966
04:24:43,360 --> 04:24:53,560
but what output will again
the same output for both lines.

3967
04:24:53,560 --> 04:24:57,600
I mean I mean will
it always add ten into ten

3968
04:24:57,600 --> 04:25:05,040
and then it will concatenate it or what
what what will happen.

3969
04:25:05,040 --> 04:25:07,560
So let me let me surprise you a little bit

3970
04:25:19,080 --> 04:25:19,680
so far.

3971
04:25:19,680 --> 04:25:21,360
The first one

3972
04:25:22,840 --> 04:25:24,320
the first one

3973
04:25:24,960 --> 04:25:29,760
goes, So Java

3974
04:25:29,760 --> 04:25:33,360
code executes from top to bottom

3975
04:25:34,640 --> 04:25:38,240
and from left to right,
okay, from left to right.

3976
04:25:39,120 --> 04:25:42,720
And the Java performs
one operation at a time.

3977
04:25:43,200 --> 04:25:45,360
Okay? One operation at a time.

3978
04:25:45,360 --> 04:25:50,320
So Java executes
the start execution from here to here.

3979
04:25:50,400 --> 04:25:52,200
It sees this line.

3980
04:25:52,200 --> 04:25:54,960
Java will pick these two numbers

3981
04:25:56,040 --> 04:25:58,600
and it will try to perform this operation.

3982
04:25:58,600 --> 04:26:00,840
So ten plus ten is equal to 20.

3983
04:26:01,560 --> 04:26:04,680
Then it sees another operator,
the plus operator,

3984
04:26:05,400 --> 04:26:07,480
then it picks the next operation.

3985
04:26:07,480 --> 04:26:09,360
It can continue as it would be.

3986
04:26:09,360 --> 04:26:12,520
Hello.

3987
04:26:12,520 --> 04:26:16,520
Okay, so I see this result 20 plus.

3988
04:26:16,520 --> 04:26:17,240
Hello.

3989
04:26:17,400 --> 04:26:23,400
Because first two numbers
were both integers when we when the both

3990
04:26:23,400 --> 04:26:26,960
numbers are integers is what happens
and the work numbers are integers.

3991
04:26:26,960 --> 04:26:30,880
And if I'm using the plus operator,
the addition

3992
04:26:30,880 --> 04:26:33,200
happens as in the mathematics, right.

3993
04:26:34,040 --> 04:26:36,840
So once I have ten plus, then I get 20,

3994
04:26:37,640 --> 04:26:42,600
then I have 21 integer
and other one as the string.

3995
04:26:42,960 --> 04:26:46,160
Now I am trying to add
a string with a number.

3996
04:26:46,240 --> 04:26:53,760
So will it perform the addition
or the concatenation?

3997
04:26:53,760 --> 04:26:55,760
Concatenation. Right.

3998
04:26:55,760 --> 04:26:58,960
Whenever I have a string with a number

3999
04:26:58,960 --> 04:27:01,920
and I am using the plus operator happens.

4000
04:27:02,400 --> 04:27:05,520
That's
why I see 20 concatenated with hello.

4001
04:27:05,920 --> 04:27:08,440
But in here I have this.

4002
04:27:08,440 --> 04:27:09,480
Hello.

4003
04:27:09,560 --> 04:27:11,880
And then this plus. And then the stent.

4004
04:27:11,960 --> 04:27:12,920
So what will happen?

4005
04:27:12,920 --> 04:27:16,320
Will it do the
addition or be concatenation

4006
04:27:22,560 --> 04:27:23,120
again.

4007
04:27:23,120 --> 04:27:24,640
Concatenation. Right.

4008
04:27:24,640 --> 04:27:28,200
So hello.

4009
04:27:28,200 --> 04:27:31,360
Last bend will be

4010
04:27:33,160 --> 04:27:34,320
Peloton.

4011
04:27:34,720 --> 04:27:36,480
Is is this. Hello.

4012
04:27:36,480 --> 04:27:42,040
Is it a string or a number.

4013
04:27:42,040 --> 04:27:44,200
If something in a string right,

4014
04:27:44,200 --> 04:27:47,560
then continuation operation
always gives you a string.

4015
04:27:48,160 --> 04:27:52,880
So again I have this result of alternation
and then I am doing ten.

4016
04:27:53,280 --> 04:28:00,600
So again will do the kind of attention
or the addition.

4017
04:28:00,600 --> 04:28:02,440
Again, concatenation. Okay.

4018
04:28:02,440 --> 04:28:07,560
That's why I get Hello, ten, ten, five,
this and 20.

4019
04:28:07,560 --> 04:28:08,840
Hello for this.

4020
04:28:08,840 --> 04:28:12,200
So if you guys want to avoid this

4021
04:28:12,480 --> 04:28:14,520
you can use in PCs.

4022
04:28:15,520 --> 04:28:18,920
That is what happens when
when we use parentheses in mathematics.

4023
04:28:20,600 --> 04:28:24,840
If I am doing a lot of calculations
on the same line in mathematics,

4024
04:28:24,840 --> 04:28:28,160
multiplication and addition,
and if I put parenthesis

4025
04:28:29,280 --> 04:28:32,920
it prioritize it right,
it gives it priority.

4026
04:28:33,800 --> 04:28:36,600
So now on this line,

4027
04:28:36,800 --> 04:28:38,880
before anything can happen,

4028
04:28:39,680 --> 04:28:42,240
this ten will be added with ten.

4029
04:28:42,240 --> 04:28:47,400
First it gives it the priority
and then we can get will happen.

4030
04:28:47,400 --> 04:28:49,200
So Now I will get

4031
04:28:51,880 --> 04:28:53,960
20. Hello and help 20.

4032
04:28:53,960 --> 04:28:56,440
Okay. Yes, that rule of mathematics.

4033
04:28:56,960 --> 04:28:59,640
BMD Yes, thank.

4034
04:28:59,880 --> 04:29:02,720
Okay. So we can use that in here.

4035
04:29:03,280 --> 04:29:04,160
All right.

4036
04:29:04,520 --> 04:29:07,640
So let's call it a day day.

4037
04:29:08,120 --> 04:29:08,880
Okay?

4038
04:29:09,000 --> 04:29:12,600
If you guys have any questions,
can post in the syntax support

4039
04:29:12,600 --> 04:29:17,600
can always post in the syntax board
so that everyone can benefit from that.

4040
04:29:17,600 --> 04:29:21,480
Let's say
maybe you are encountering facing some.

4041
04:29:21,480 --> 04:29:24,840
It is quite possible
that other class fellows,

4042
04:29:25,400 --> 04:29:27,480
they will also be facing the same issue.

4043
04:29:28,200 --> 04:29:32,000
So instead of sending direct messages,
always posting this Porcello

4044
04:29:33,120 --> 04:29:33,680
Go ignore it.

4045
04:29:33,680 --> 04:29:37,440
We covered two classes today,
one for today and one for missing one.

4046
04:29:38,640 --> 04:29:42,440
It was a bit overwhelming.

4047
04:29:42,440 --> 04:29:49,640
No, we didn't cover two classes.

4048
04:29:49,640 --> 04:29:51,120
We covered only the class.

4049
04:29:51,120 --> 04:29:54,520
Number two. Today, it was only one

4050
04:29:55,600 --> 04:29:58,440
tomorrow will cover the typecasting.

4051
04:29:58,440 --> 04:30:00,600
If statements and if statements

4052
04:30:02,200 --> 04:30:07,520
copy.

4053
04:30:07,520 --> 04:30:09,360
So no, no.

4054
04:30:09,360 --> 04:30:11,760
There are wrappers for today as well. So

4055
04:30:15,240 --> 04:30:17,800
you see this string concatenation.

4056
04:30:18,240 --> 04:30:22,680
Now you guys should be able
to solve this thing configuration.

4057
04:30:22,880 --> 04:30:25,920
All this, that automatic arithmetic,
blah, blah, blah.

4058
04:30:25,920 --> 04:30:28,400
So you guys

4059
04:30:28,400 --> 04:30:30,840
should be able to file wrappers.

4060
04:30:30,880 --> 04:30:35,480
Bill number 70
and you go back to create sequences.

4061
04:30:35,600 --> 04:30:36,360
Yeah, sure.

4062
04:30:36,360 --> 04:30:40,360
So guys try to now solve the
that both bill number 70.

4063
04:30:40,920 --> 04:30:45,360
Okay And also

4064
04:30:45,360 --> 04:30:49,240
you have the homeworks
plus I will be sharing the slides

4065
04:30:49,240 --> 04:30:52,320
for tomorrow's class introduce you have
that as well

4066
04:30:53,560 --> 04:30:55,400
and a 5 to 10 minutes video

4067
04:30:55,400 --> 04:30:58,440
so a lot of our quality what to look

4068
04:30:59,160 --> 04:31:02,680
at all of this is due to model

4069
04:31:02,680 --> 04:31:05,160
nerdy wrappers not the wrappers

4070
04:31:06,120 --> 04:31:06,840
this homework

4071
04:31:06,840 --> 04:31:11,160
that I have posted the course
and all sports channel that is only due

4072
04:31:11,560 --> 04:31:12,720
by tomorrow

4073
04:31:14,280 --> 04:31:16,920
and you please
upload notes from today's class.

4074
04:31:16,920 --> 04:31:21,560
Yes, I will upload it right away
after this class already take some rest.

4075
04:31:22,440 --> 04:31:24,920
Okay.

4076
04:31:24,920 --> 04:31:27,360
And let's meet tomorrow.

4077
04:31:27,480 --> 04:31:28,200
Bye Bye.

4078
04:31:28,200 --> 04:31:31,320
Thank you. Take it.
